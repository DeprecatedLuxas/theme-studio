{"file":"{\n  defaultIcon: { name: 'file' },\n  icons: [\n    { name: 'html', fileExtensions: ['htm', 'xhtml', 'html_vm', 'asp'] },\n    {\n      name: 'pug',\n      fileExtensions: ['jade', 'pug'],\n      fileNames: ['.pug-lintrc', '.pug-lintrc.js', '.pug-lintrc.json'],\n    },\n    {\n      name: 'markdown',\n      fileExtensions: ['md', 'markdown', 'rst'],\n    },\n    { name: 'blink', fileExtensions: ['blink'], light: true },\n    { name: 'css', fileExtensions: ['css'] },\n    { name: 'sass', fileExtensions: ['scss', 'sass'] },\n    { name: 'less', fileExtensions: ['less'] },\n    {\n      name: 'json',\n      fileExtensions: ['json', 'tsbuildinfo', 'json5', 'jsonl', 'ndjson'],\n      fileNames: [\n        '.jscsrc',\n        '.jshintrc',\n        'composer.lock',\n        '.jsbeautifyrc',\n        '.esformatter',\n        'cdp.pid',\n        '.lintstagedrc',\n      ],\n    },\n    {\n      name: 'jinja',\n      fileExtensions: ['jinja', 'jinja2', 'j2', 'jinja-html'],\n      light: true,\n    },\n    {\n      name: 'proto',\n      fileExtensions: ['proto'],\n    },\n    {\n      name: 'playwright',\n      fileNames: ['playwright.config.js', 'playwright.config.ts'],\n    },\n    {\n      name: 'sublime',\n      fileExtensions: ['sublime-project', 'sublime-workspace'],\n    },\n    { name: 'twine', fileExtensions: ['tw', 'twee'] },\n    {\n      name: 'yaml',\n      fileExtensions: [\n        'yml',\n        'yaml',\n        'yml.dist',\n        'yaml.dist',\n        'YAML-tmLanguage',\n      ],\n    },\n    {\n      name: 'xml',\n      fileExtensions: [\n        'xml',\n        'plist',\n        'xsd',\n        'dtd',\n        'xsl',\n        'xslt',\n        'resx',\n        'iml',\n        'xquery',\n        'tmLanguage',\n        'manifest',\n        'project',\n        'xml.dist',\n        'xml.dist.sample',\n        'dmn',\n      ],\n      fileNames: ['.htaccess'],\n    },\n    {\n      name: 'image',\n      fileExtensions: [\n        'png',\n        'jpeg',\n        'jpg',\n        'gif',\n        'ico',\n        'tif',\n        'tiff',\n        'psd',\n        'psb',\n        'ami',\n        'apx',\n        'bmp',\n        'bpg',\n        'brk',\n        'cur',\n        'dds',\n        'dng',\n        'exr',\n        'fpx',\n        'gbr',\n        'img',\n        'jbig2',\n        'jb2',\n        'jng',\n        'jxr',\n        'pgf',\n        'pic',\n        'raw',\n        'webp',\n        'eps',\n        'afphoto',\n        'ase',\n        'aseprite',\n        'clip',\n        'cpt',\n        'heif',\n        'heic',\n        'kra',\n        'mdp',\n        'ora',\n        'pdn',\n        'reb',\n        'sai',\n        'tga',\n        'xcf',\n        'jfif',\n        'ppm',\n        'pbm',\n        'pgm',\n        'pnm',\n      ],\n    },\n    { name: 'javascript', fileExtensions: ['esx', 'mjs'] },\n    { name: 'react', fileExtensions: ['jsx'] },\n    { name: 'react_ts', fileExtensions: ['tsx'] },\n    {\n      name: 'routing',\n      fileExtensions: [\n        'routing.ts',\n        'routing.tsx',\n        'routing.js',\n        'routing.jsx',\n        'routes.ts',\n        'routes.tsx',\n        'routes.js',\n        'routes.jsx',\n      ],\n      fileNames: [\n        'router.js',\n        'router.jsx',\n        'router.ts',\n        'router.tsx',\n        'routes.js',\n        'routes.jsx',\n        'routes.ts',\n        'routes.tsx',\n      ],\n      enabledFor: [\n        \"angular\",\n        \"angular_ngrx\",\n        \"react\",\n        \"react_redux\",\n        \"vue\",\n        \"vue_vuex\",\n      ],\n    },\n    {\n      name: 'redux-action',\n      fileExtensions: ['action.js', 'actions.js', 'action.ts', 'actions.ts'],\n      fileNames: ['action.js', 'actions.js', 'action.ts', 'actions.ts'],\n      enabledFor: [\"react_redux\"],\n    },\n    {\n      name: 'redux-reducer',\n      fileExtensions: [\n        'reducer.js',\n        'reducers.js',\n        'reducer.ts',\n        'reducers.ts',\n      ],\n      fileNames: ['reducer.js', 'reducers.js', 'reducer.ts', 'reducers.ts'],\n      enabledFor: [\"react_redux\"],\n    },\n    {\n      name: 'redux-selector',\n      fileExtensions: [\n        'selector.js',\n        'selectors.js',\n        'selector.ts',\n        'selectors.ts',\n      ],\n      fileNames: ['selector.js', 'selectors.js', 'selector.ts', 'selectors.ts'],\n      enabledFor: [\"react_redux\"],\n    },\n    {\n      name: 'redux-store',\n      fileExtensions: ['store.js', 'store.ts'],\n      fileNames: ['store.js', 'store.ts'],\n      enabledFor: [\"react_redux\"],\n    },\n    {\n      name: 'settings',\n      fileExtensions: [\n        'ini',\n        'dlc',\n        'dll',\n        'config',\n        'conf',\n        'properties',\n        'prop',\n        'settings',\n        'option',\n        'props',\n        'toml',\n        'prefs',\n        'sln.dotsettings',\n        'sln.dotsettings.user',\n        'cfg',\n      ],\n      fileNames: [\n        '.jshintignore',\n        '.buildignore',\n        '.mrconfig',\n        '.yardopts',\n        'manifest.mf',\n        '.clang-format',\n        '.clang-tidy',\n      ],\n    },\n    { name: 'typescript-def', fileExtensions: ['d.ts'] },\n    { name: 'markojs', fileExtensions: ['marko'] },\n    {\n      name: 'astro',\n      fileExtensions: ['astro'],\n      fileNames: ['astro.config.js', 'astro.config.mjs', 'astro.config.cjs'],\n    },\n    { name: 'pdf', fileExtensions: ['pdf'] },\n    { name: 'table', fileExtensions: ['xlsx', 'xls', 'csv', 'tsv'] },\n    {\n      name: 'vscode',\n      fileExtensions: [\n        'vscodeignore',\n        'vsixmanifest',\n        'vsix',\n        'code-workplace',\n      ],\n    },\n    {\n      name: 'visualstudio',\n      fileExtensions: [\n        'csproj',\n        'ruleset',\n        'sln',\n        'suo',\n        'vb',\n        'vbs',\n        'vcxitems',\n        'vcxitems.filters',\n        'vcxproj',\n        'vcxproj.filters',\n      ],\n    },\n    {\n      name: 'database',\n      fileExtensions: [\n        'pdb',\n        'sql',\n        'pks',\n        'pkb',\n        'accdb',\n        'mdb',\n        'sqlite',\n        'sqlite3',\n        'pgsql',\n        'postgres',\n        'psql',\n        'db',\n        'db3',\n      ],\n    },\n    { name: 'kusto', fileExtensions: ['kql'] },\n    { name: 'csharp', fileExtensions: ['cs', 'csx'] },\n    { name: 'qsharp', fileExtensions: ['qs'] },\n    {\n      name: 'zip',\n      fileExtensions: [\n        'zip',\n        'tar',\n        'gz',\n        'xz',\n        'br',\n        'bzip2',\n        'gzip',\n        'brotli',\n        '7z',\n        'rar',\n        'tgz',\n      ],\n    },\n    { name: 'vala', fileExtensions: ['vala'] },\n    { name: 'zig', fileExtensions: ['zig'] },\n    { name: 'exe', fileExtensions: ['exe', 'msi'] },\n    { name: 'hex', fileExtensions: ['dat', 'bin', 'hex'] },\n    { name: 'java', fileExtensions: ['java', 'jsp'] },\n    { name: 'jar', fileExtensions: ['jar'] },\n    { name: 'javaclass', fileExtensions: ['class'] },\n    { name: 'c', fileExtensions: ['c', 'i', 'mi'] },\n    { name: 'h', fileExtensions: ['h'] },\n    {\n      name: 'cpp',\n      fileExtensions: ['cc', 'cpp', 'cxx', 'c++', 'cp', 'mm', 'mii', 'ii'],\n    },\n    {\n      name: 'hpp',\n      fileExtensions: ['hh', 'hpp', 'hxx', 'h++', 'hp', 'tcc', 'inl'],\n    },\n    { name: 'go', fileExtensions: ['go'] },\n    { name: 'go-mod', fileNames: ['go.mod', 'go.sum', 'go.work'] },\n    { name: 'python', fileExtensions: ['py'] },\n    {\n      name: 'python-misc',\n      fileExtensions: ['pyc', 'whl'],\n      fileNames: [\n        'requirements.txt',\n        'pipfile',\n        '.python-version',\n        'manifest.in',\n        'pylintrc',\n        '.pylintrc',\n      ],\n    },\n    { name: 'url', fileExtensions: ['url'] },\n    {\n      name: 'console',\n      fileExtensions: [\n        'sh',\n        'ksh',\n        'csh',\n        'tcsh',\n        'zsh',\n        'bash',\n        'bat',\n        'cmd',\n        'awk',\n        'fish',\n        'exp',\n      ],\n      fileNames: ['pre-commit', 'pre-push', 'post-merge'],\n    },\n    {\n      name: 'powershell',\n      fileExtensions: ['ps1', 'psm1', 'psd1', 'ps1xml', 'psc1', 'pssc'],\n    },\n    {\n      name: 'gradle',\n      fileExtensions: ['gradle'],\n      fileNames: ['gradle.properties', 'gradlew', 'gradle-wrapper.properties'],\n    },\n    { name: 'word', fileExtensions: ['doc', 'docx', 'rtf'] },\n    {\n      name: 'certificate',\n      fileExtensions: ['cer', 'cert', 'crt'],\n      fileNames: [\n        'copying',\n        'copying.md',\n        'copying.txt',\n        'copyright',\n        'copyright.txt',\n        'copyright.md',\n        'license',\n        'license.md',\n        'license.txt',\n        'licence',\n        'licence.md',\n        'licence.txt',\n      ],\n    },\n    {\n      name: 'key',\n      fileExtensions: ['pub', 'key', 'pem', 'asc', 'gpg', 'passwd'],\n      fileNames: ['.htpasswd'],\n    },\n    {\n      name: 'font',\n      fileExtensions: [\n        'woff',\n        'woff2',\n        'ttf',\n        'eot',\n        'suit',\n        'otf',\n        'bmap',\n        'fnt',\n        'odttf',\n        'ttc',\n        'font',\n        'fonts',\n        'sui',\n        'ntf',\n        'mrf',\n      ],\n    },\n    { name: 'lib', fileExtensions: ['lib', 'bib'] },\n    { name: 'ruby', fileExtensions: ['rb', 'erb'] },\n    { name: 'gemfile', fileNames: ['gemfile'] },\n    {\n      name: 'rubocop',\n      fileNames: ['.rubocop.yml', '.rubocop-todo.yml', '.rubocop_todo.yml'],\n      light: true,\n    },\n    { name: 'fsharp', fileExtensions: ['fs', 'fsx', 'fsi', 'fsproj'] },\n    { name: 'swift', fileExtensions: ['swift'] },\n    { name: 'arduino', fileExtensions: ['ino'] },\n    {\n      name: 'docker',\n      fileExtensions: ['dockerignore', 'dockerfile'],\n      fileNames: [\n        'dockerfile',\n        'dockerfile.prod',\n        'dockerfile.production',\n        'dockerfile.alpha',\n        'dockerfile.beta',\n        'dockerfile.stage',\n        'dockerfile.staging',\n        'dockerfile.dev',\n        'dockerfile.development',\n        'dockerfile.local',\n        'dockerfile.test',\n        'dockerfile.testing',\n        'dockerfile.ci',\n        'dockerfile.web',\n        'dockerfile.worker',\n\n        'docker-compose.yml',\n        'docker-compose.override.yml',\n        'docker-compose.prod.yml',\n        'docker-compose.production.yml',\n        'docker-compose.alpha.yml',\n        'docker-compose.beta.yml',\n        'docker-compose.stage.yml',\n        'docker-compose.staging.yml',\n        'docker-compose.dev.yml',\n        'docker-compose.development.yml',\n        'docker-compose.local.yml',\n        'docker-compose.test.yml',\n        'docker-compose.testing.yml',\n        'docker-compose.ci.yml',\n        'docker-compose.web.yml',\n        'docker-compose.worker.yml',\n\n        'docker-compose.yaml',\n        'docker-compose.override.yaml',\n        'docker-compose.prod.yaml',\n        'docker-compose.production.yaml',\n        'docker-compose.alpha.yaml',\n        'docker-compose.beta.yaml',\n        'docker-compose.stage.yaml',\n        'docker-compose.staging.yaml',\n        'docker-compose.dev.yaml',\n        'docker-compose.development.yaml',\n        'docker-compose.local.yaml',\n        'docker-compose.test.yaml',\n        'docker-compose.testing.yaml',\n        'docker-compose.ci.yaml',\n        'docker-compose.web.yaml',\n        'docker-compose.worker.yaml',\n      ],\n    },\n    { name: 'tex', fileExtensions: ['tex', 'sty', 'dtx', 'ltx'] },\n    {\n      name: 'powerpoint',\n      fileExtensions: [\n        'pptx',\n        'ppt',\n        'pptm',\n        'potx',\n        'potm',\n        'ppsx',\n        'ppsm',\n        'pps',\n        'ppam',\n        'ppa',\n      ],\n    },\n    {\n      name: 'video',\n      fileExtensions: [\n        'webm',\n        'mkv',\n        'flv',\n        'vob',\n        'ogv',\n        'ogg',\n        'gifv',\n        'avi',\n        'mov',\n        'qt',\n        'wmv',\n        'yuv',\n        'rm',\n        'rmvb',\n        'mp4',\n        'm4v',\n        'mpg',\n        'mp2',\n        'mpeg',\n        'mpe',\n        'mpv',\n        'm2v',\n      ],\n    },\n    { name: 'virtual', fileExtensions: ['vdi', 'vbox', 'vbox-prev'] },\n    { name: 'email', fileExtensions: ['ics'], fileNames: ['.mailmap'] },\n    {\n      name: 'audio',\n      fileExtensions: ['mp3', 'flac', 'm4a', 'wma', 'aiff', 'wav'],\n    },\n    { name: 'coffee', fileExtensions: ['coffee', 'cson', 'iced'] },\n    { name: 'document', fileExtensions: ['txt'] },\n    {\n      name: 'graphql',\n      fileExtensions: ['graphql', 'gql'],\n      fileNames: [\n        '.graphqlconfig',\n        '.graphqlrc',\n        '.graphqlrc.json',\n        '.graphqlrc.js',\n        '.graphqlrc.ts',\n        '.graphqlrc.toml',\n        '.graphqlrc.yaml',\n        '.graphqlrc.yml',\n        'graphql.config.json',\n        'graphql.config.js',\n        'graphql.config.ts',\n        'graphql.config.toml',\n        'graphql.config.yaml',\n        'graphql.config.yml',\n      ],\n    },\n    { name: 'rust', fileExtensions: ['rs'] },\n    { name: 'raml', fileExtensions: ['raml'] },\n    { name: 'xaml', fileExtensions: ['xaml'] },\n    { name: 'haskell', fileExtensions: ['hs'] },\n    { name: 'kotlin', fileExtensions: ['kt', 'kts'] },\n    {\n      name: 'git',\n      fileExtensions: ['patch'],\n      fileNames: [\n        '.gitignore',\n        '.gitignore_global',\n        '.gitconfig',\n        '.gitattributes',\n        '.gitmodules',\n        '.gitkeep',\n        '.gitinclude',\n        'git-history',\n      ],\n    },\n    { name: 'lua', fileExtensions: ['lua'], fileNames: ['.luacheckrc'] },\n    { name: 'clojure', fileExtensions: ['clj', 'cljs', 'cljc'] },\n    { name: 'groovy', fileExtensions: ['groovy'] },\n    { name: 'r', fileExtensions: ['r', 'rmd'], fileNames: ['.Rhistory'] },\n    { name: 'dart', fileExtensions: ['dart'], fileNames: ['.pubignore'] },\n    { name: 'actionscript', fileExtensions: ['as'] },\n    { name: 'mxml', fileExtensions: ['mxml'] },\n    { name: 'autohotkey', fileExtensions: ['ahk'] },\n    { name: 'flash', fileExtensions: ['swf'] },\n    { name: 'swc', fileExtensions: ['swc'] },\n    {\n      name: 'cmake',\n      fileExtensions: ['cmake'],\n      fileNames: ['cmakelists.txt', 'cmakecache.txt'],\n    },\n    {\n      name: 'assembly',\n      fileExtensions: [\n        'asm',\n        'a51',\n        'inc',\n        'nasm',\n        's',\n        'ms',\n        'agc',\n        'ags',\n        'aea',\n        'argus',\n        'mitigus',\n        'binsource',\n      ],\n    },\n    { name: 'vue', fileExtensions: ['vue'] },\n    {\n      name: 'vue-config',\n      fileNames: [\n        'vue.config.js',\n        'vue.config.ts',\n        'vetur.config.js',\n        'vetur.config.ts',\n      ],\n    },\n    {\n      name: 'vuex-store',\n      fileExtensions: ['store.js', 'store.ts'],\n      fileNames: ['store.js', 'store.ts'],\n      enabledFor: [\"vue_vuex\"],\n    },\n    {\n      name: 'nuxt',\n      fileNames: ['nuxt.config.js', 'nuxt.config.ts'],\n      light: true,\n    },\n    { name: 'ocaml', fileExtensions: ['ml', 'mli', 'cmx'] },\n    { name: 'odin', fileExtensions: ['odin'] },\n    {\n      name: 'javascript-map',\n      fileExtensions: ['js.map', 'mjs.map', 'cjs.map'],\n    },\n    { name: 'css-map', fileExtensions: ['css.map'] },\n    {\n      name: 'lock',\n      fileExtensions: ['lock'],\n      fileNames: ['security.md', 'security.txt', 'security'],\n    },\n    { name: 'handlebars', fileExtensions: ['hbs', 'mustache'] },\n    { name: 'perl', fileExtensions: ['pm', 'raku'] },\n    { name: 'haxe', fileExtensions: ['hx'] },\n    {\n      name: 'test-ts',\n      fileExtensions: ['spec.ts', 'e2e-spec.ts', 'test.ts', 'ts.snap'],\n    },\n    {\n      name: 'test-jsx',\n      fileExtensions: [\n        'spec.tsx',\n        'test.tsx',\n        'tsx.snap',\n        'spec.jsx',\n        'test.jsx',\n        'jsx.snap',\n      ],\n    },\n    {\n      name: 'test-js',\n      fileExtensions: [\n        'spec.js',\n        'spec.cjs',\n        'spec.mjs',\n        'e2e-spec.js',\n        'e2e-spec.cjs',\n        'e2e-spec.mjs',\n        'test.js',\n        'test.cjs',\n        'test.mjs',\n        'js.snap',\n      ],\n    },\n    {\n      name: 'angular',\n      fileExtensions: ['module.ts', 'module.js', 'ng-template'],\n      fileNames: ['angular-cli.json', '.angular-cli.json', 'angular.json'],\n      enabledFor: [\"angular\", \"angular_ngrx\"],\n    },\n    {\n      name: 'angular-component',\n      fileExtensions: ['component.ts', 'component.js'],\n      enabledFor: [\"angular\", \"angular_ngrx\"],\n    },\n    {\n      name: 'angular-guard',\n      fileExtensions: ['guard.ts', 'guard.js'],\n      enabledFor: [\"angular\", \"angular_ngrx\"],\n    },\n    {\n      name: 'angular-service',\n      fileExtensions: ['service.ts', 'service.js'],\n      enabledFor: [\"angular\", \"angular_ngrx\"],\n    },\n    {\n      name: 'angular-pipe',\n      fileExtensions: ['pipe.ts', 'pipe.js', 'filter.js'],\n      enabledFor: [\"angular\", \"angular_ngrx\"],\n    },\n    {\n      name: 'angular-directive',\n      fileExtensions: ['directive.ts', 'directive.js'],\n      enabledFor: [\"angular\", \"angular_ngrx\"],\n    },\n    {\n      name: 'angular-resolver',\n      fileExtensions: ['resolver.ts', 'resolver.js'],\n      enabledFor: [\"angular\", \"angular_ngrx\"],\n    },\n    { name: 'puppet', fileExtensions: ['pp'] },\n    { name: 'elixir', fileExtensions: ['ex', 'exs', 'eex', 'leex', 'heex'] },\n    { name: 'livescript', fileExtensions: ['ls'] },\n    { name: 'erlang', fileExtensions: ['erl'] },\n    { name: 'twig', fileExtensions: ['twig'] },\n    { name: 'julia', fileExtensions: ['jl'] },\n    { name: 'elm', fileExtensions: ['elm'] },\n    { name: 'purescript', fileExtensions: ['pure', 'purs'] },\n    { name: 'smarty', fileExtensions: ['tpl'] },\n    { name: 'stylus', fileExtensions: ['styl'] },\n    { name: 'reason', fileExtensions: ['re', 'rei'] },\n    { name: 'bucklescript', fileExtensions: ['cmj'] },\n    { name: 'merlin', fileExtensions: ['merlin'] },\n    { name: 'verilog', fileExtensions: ['vhd', 'sv', 'svh'] },\n    { name: 'mathematica', fileExtensions: ['nb'] },\n    { name: 'wolframlanguage', fileExtensions: ['wl', 'wls'] },\n    { name: 'nunjucks', fileExtensions: ['njk', 'nunjucks'] },\n    { name: 'robot', fileExtensions: ['robot'] },\n    { name: 'solidity', fileExtensions: ['sol'] },\n    { name: 'autoit', fileExtensions: ['au3'] },\n    { name: 'haml', fileExtensions: ['haml'] },\n    { name: 'yang', fileExtensions: ['yang'] },\n    {\n      name: 'mjml',\n      fileExtensions: ['mjml'],\n      fileNames: ['.mjmlconfig'],\n    },\n    {\n      name: 'vercel',\n      fileNames: ['vercel.json', '.vercelignore', 'now.json', '.nowignore'],\n      light: true,\n    },\n    {\n      name: 'next',\n      fileNames: ['next.config.js', 'next.config.ts', 'next.config.mjs'],\n      light: true,\n    },\n    {\n      name: 'remix',\n      fileNames: ['remix.config.js', 'remix.config.ts'],\n      light: true,\n    },\n    {\n      name: 'terraform',\n      fileExtensions: ['tf', 'tf.json', 'tfvars', 'tfstate'],\n    },\n    {\n      name: 'laravel',\n      fileExtensions: ['blade.php', 'inky.php'],\n      fileNames: ['artisan'],\n    },\n    { name: 'applescript', fileExtensions: ['applescript', 'ipa'] },\n    { name: 'cake', fileExtensions: ['cake'] },\n    { name: 'cucumber', fileExtensions: ['feature', 'features'] },\n    { name: 'nim', fileExtensions: ['nim', 'nimble'] },\n    { name: 'apiblueprint', fileExtensions: ['apib', 'apiblueprint'] },\n    { name: 'riot', fileExtensions: ['riot', 'tag'] },\n    { name: 'vfl', fileExtensions: ['vfl'], fileNames: ['.vfl'] },\n    { name: 'kl', fileExtensions: ['kl'], fileNames: ['.kl'] },\n    {\n      name: 'postcss',\n      fileExtensions: ['pcss', 'sss'],\n      fileNames: [\n        'postcss.config.js',\n        'postcss.config.cjs',\n        '.postcssrc.js',\n        '.postcssrc',\n        '.postcssrc.json',\n        '.postcssrc.yml',\n      ],\n    },\n    {\n      name: 'posthtml',\n      fileNames: [\n        'posthtml.config.js',\n        '.posthtmlrc.js',\n        '.posthtmlrc',\n        '.posthtmlrc.json',\n        '.posthtmlrc.yml',\n      ],\n    },\n    { name: 'todo', fileExtensions: ['todo'] },\n    { name: 'coldfusion', fileExtensions: ['cfml', 'cfc', 'lucee', 'cfm'] },\n    {\n      name: 'cabal',\n      fileExtensions: ['cabal'],\n      fileNames: [\n        'cabal.project',\n        'cabal.project.freeze',\n        'cabal.project.local',\n      ],\n    },\n    { name: 'nix', fileExtensions: ['nix'] },\n    { name: 'slim', fileExtensions: ['slim'] },\n    { name: 'http', fileExtensions: ['http', 'rest'], fileNames: ['CNAME'] },\n    { name: 'restql', fileExtensions: ['rql', 'restql'] },\n    { name: 'kivy', fileExtensions: ['kv'] },\n    {\n      name: 'graphcool',\n      fileExtensions: ['graphcool'],\n      fileNames: ['project.graphcool'],\n    },\n    { name: 'sbt', fileExtensions: ['sbt'] },\n    {\n      name: 'webpack',\n      fileNames: [\n        'webpack.js',\n        'webpack.cjs',\n        'webpack.ts',\n        'webpack.base.js',\n        'webpack.base.cjs',\n        'webpack.base.ts',\n        'webpack.config.js',\n        'webpack.config.cjs',\n        'webpack.config.ts',\n        'webpack.common.js',\n        'webpack.common.cjs',\n        'webpack.common.ts',\n        'webpack.config.common.js',\n        'webpack.config.common.cjs',\n        'webpack.config.common.ts',\n        'webpack.config.common.babel.js',\n        'webpack.config.common.babel.ts',\n        'webpack.dev.js',\n        'webpack.dev.cjs',\n        'webpack.dev.ts',\n        'webpack.development.js',\n        'webpack.development.cjs',\n        'webpack.development.ts',\n        'webpack.config.dev.js',\n        'webpack.config.dev.cjs',\n        'webpack.config.dev.ts',\n        'webpack.config.dev.babel.js',\n        'webpack.config.dev.babel.ts',\n        'webpack.mix.js',\n        'webpack.mix.cjs',\n        'webpack.prod.js',\n        'webpack.prod.cjs',\n        'webpack.prod.config.js',\n        'webpack.prod.config.cjs',\n        'webpack.prod.ts',\n        'webpack.production.js',\n        'webpack.production.cjs',\n        'webpack.production.ts',\n        'webpack.server.js',\n        'webpack.server.cjs',\n        'webpack.server.ts',\n        'webpack.client.js',\n        'webpack.client.cjs',\n        'webpack.client.ts',\n        'webpack.config.server.js',\n        'webpack.config.server.cjs',\n        'webpack.config.server.ts',\n        'webpack.config.client.js',\n        'webpack.config.client.cjs',\n        'webpack.config.client.ts',\n        'webpack.config.production.babel.js',\n        'webpack.config.production.babel.ts',\n        'webpack.config.prod.babel.js',\n        'webpack.config.prod.babel.cjs',\n        'webpack.config.prod.babel.ts',\n        'webpack.config.prod.js',\n        'webpack.config.prod.cjs',\n        'webpack.config.prod.ts',\n        'webpack.config.production.js',\n        'webpack.config.production.cjs',\n        'webpack.config.production.ts',\n        'webpack.config.staging.js',\n        'webpack.config.staging.cjs',\n        'webpack.config.staging.ts',\n        'webpack.config.babel.js',\n        'webpack.config.babel.ts',\n        'webpack.config.base.babel.js',\n        'webpack.config.base.babel.ts',\n        'webpack.config.base.js',\n        'webpack.config.base.cjs',\n        'webpack.config.base.ts',\n        'webpack.config.staging.babel.js',\n        'webpack.config.staging.babel.ts',\n        'webpack.config.coffee',\n        'webpack.config.test.js',\n        'webpack.config.test.cjs',\n        'webpack.config.test.ts',\n        'webpack.config.vendor.js',\n        'webpack.config.vendor.cjs',\n        'webpack.config.vendor.ts',\n        'webpack.config.vendor.production.js',\n        'webpack.config.vendor.production.cjs',\n        'webpack.config.vendor.production.ts',\n        'webpack.test.js',\n        'webpack.test.cjs',\n        'webpack.test.ts',\n        'webpack.dist.js',\n        'webpack.dist.cjs',\n        'webpack.dist.ts',\n        'webpackfile.js',\n        'webpackfile.cjs',\n        'webpackfile.ts',\n      ],\n    },\n    { name: 'ionic', fileNames: ['ionic.config.json', '.io-config.json'] },\n    {\n      name: 'gulp',\n      fileNames: [\n        'gulpfile.js',\n        'gulpfile.mjs',\n        'gulpfile.ts',\n        'gulpfile.babel.js',\n      ],\n    },\n    {\n      name: 'nodejs',\n      fileNames: [\n        'package.json',\n        'package-lock.json',\n        '.nvmrc',\n        '.esmrc',\n        '.node-version',\n      ],\n    },\n    { name: 'npm', fileNames: ['.npmignore', '.npmrc'] },\n    {\n      name: 'yarn',\n      fileNames: [\n        '.yarnrc',\n        'yarn.lock',\n        '.yarnclean',\n        '.yarn-integrity',\n        'yarn-error.log',\n        '.yarnrc.yml',\n        '.yarnrc.yaml',\n      ],\n    },\n    {\n      name: 'android',\n      fileNames: ['androidmanifest.xml'],\n      fileExtensions: ['apk', 'smali', 'dex'],\n    },\n    {\n      name: 'tune',\n      fileExtensions: ['env'],\n      fileNames: [\n        '.env.defaults',\n        '.env.example',\n        '.env.sample',\n        '.env.template',\n        '.env.schema',\n        '.env.local',\n        '.env.dev',\n        '.env.development',\n        '.env.qa',\n        '.env.dist',\n        '.env.prod',\n        '.env.production',\n        '.env.stage',\n        '.env.staging',\n        '.env.preview',\n        '.env.test',\n        '.env.testing',\n        '.env.development.local',\n        '.env.qa.local',\n        '.env.production.local',\n        '.env.staging.local',\n        '.env.test.local',\n      ],\n    },\n    {\n      name: 'babel',\n      fileNames: [\n        '.babelrc',\n        '.babelrc.cjs',\n        '.babelrc.js',\n        '.babelrc.mjs',\n        '.babelrc.json',\n        'babel.config.cjs',\n        'babel.config.js',\n        'babel.config.mjs',\n        'babel.config.json',\n        'babel-transform.js',\n        '.babel-plugin-macrosrc',\n        '.babel-plugin-macrosrc.json',\n        '.babel-plugin-macrosrc.yaml',\n        '.babel-plugin-macrosrc.yml',\n        '.babel-plugin-macrosrc.js',\n        'babel-plugin-macros.config.js',\n      ],\n    },\n    {\n      name: 'blitz',\n      fileNames: [\n        'blitz.config.js',\n        'blitz.config.ts',\n        '.blitz.config.compiled.js',\n      ],\n    },\n    {\n      name: 'contributing',\n      fileNames: ['contributing.md'],\n    },\n    { name: 'readme', fileNames: ['readme.md', 'readme.txt', 'readme'] },\n    {\n      name: 'changelog',\n      fileNames: [\n        'changelog',\n        'changelog.md',\n        'changelog.txt',\n        'changes',\n        'changes.md',\n        'changes.txt',\n      ],\n    },\n    {\n      name: 'credits',\n      fileNames: ['credits', 'credits.txt', 'credits.md'],\n    },\n    {\n      name: 'authors',\n      fileNames: ['authors', 'authors.md', 'authors.txt'],\n    },\n    { name: 'flow', fileNames: ['.flowconfig'] },\n    { name: 'favicon', fileNames: ['favicon.ico'] },\n    {\n      name: 'karma',\n      fileNames: [\n        'karma.conf.js',\n        'karma.conf.ts',\n        'karma.conf.coffee',\n        'karma.config.js',\n        'karma.config.ts',\n        'karma-main.js',\n        'karma-main.ts',\n      ],\n    },\n    { name: 'bithound', fileNames: ['.bithoundrc'] },\n    { name: 'svgo', fileNames: ['svgo.config.js'] },\n    { name: 'appveyor', fileNames: ['.appveyor.yml', 'appveyor.yml'] },\n    { name: 'travis', fileNames: ['.travis.yml'] },\n    { name: 'codecov', fileNames: ['.codecov.yml', 'codecov.yml'] },\n    {\n      name: 'protractor',\n      fileNames: [\n        'protractor.conf.js',\n        'protractor.conf.ts',\n        'protractor.conf.coffee',\n        'protractor.config.js',\n        'protractor.config.ts',\n      ],\n    },\n    { name: 'fusebox', fileNames: ['fuse.js'] },\n    { name: 'heroku', fileNames: ['procfile', 'procfile.windows'] },\n    { name: 'editorconfig', fileNames: ['.editorconfig'] },\n    { name: 'gitlab', fileExtensions: ['gitlab-ci.yml'] },\n    { name: 'bower', fileNames: ['.bowerrc', 'bower.json'] },\n    {\n      name: 'eslint',\n      fileNames: [\n        '.eslintrc.js',\n        '.eslintrc.cjs',\n        '.eslintrc.yaml',\n        '.eslintrc.yml',\n        '.eslintrc.json',\n        '.eslintrc-md.js',\n        '.eslintrc-jsdoc.js',\n        '.eslintrc',\n        '.eslintignore',\n        '.eslintcache',\n      ],\n    },\n    {\n      name: 'conduct',\n      fileNames: ['code_of_conduct.md', 'code_of_conduct.txt'],\n    },\n    { name: 'watchman', fileNames: ['.watchmanconfig'] },\n    { name: 'aurelia', fileNames: ['aurelia.json'] },\n    {\n      name: 'mocha',\n      fileNames: [\n        'mocha.opts',\n        '.mocharc.yml',\n        '.mocharc.yaml',\n        '.mocharc.js',\n        '.mocharc.json',\n        '.mocharc.jsonc',\n      ],\n    },\n    {\n      name: 'jenkins',\n      fileNames: ['jenkinsfile'],\n      fileExtensions: ['jenkinsfile', 'jenkins'],\n    },\n    {\n      name: 'firebase',\n      fileNames: [\n        'firebase.json',\n        '.firebaserc',\n        'firestore.rules',\n        'firestore.indexes.json',\n      ],\n    },\n    {\n      name: 'figma',\n      fileExtensions: ['fig'],\n    },\n    {\n      name: 'rollup',\n      fileNames: [\n        'rollup.config.js',\n        'rollup.config.ts',\n        'rollup-config.js',\n        'rollup-config.ts',\n        'rollup.config.common.js',\n        'rollup.config.common.ts',\n        'rollup.config.base.js',\n        'rollup.config.base.ts',\n        'rollup.config.prod.js',\n        'rollup.config.prod.ts',\n        'rollup.config.dev.js',\n        'rollup.config.dev.ts',\n        'rollup.config.prod.vendor.js',\n        'rollup.config.prod.vendor.ts',\n      ],\n    },\n    { name: 'hack', fileNames: ['.hhconfig'] },\n    {\n      name: 'stylelint',\n      fileNames: [\n        '.stylelintrc',\n        'stylelint.config.js',\n        'stylelint.config.cjs',\n        '.stylelintrc.json',\n        '.stylelintrc.yaml',\n        '.stylelintrc.yml',\n        '.stylelintrc.js',\n        '.stylelintrc.cjs',\n        '.stylelintignore',\n      ],\n      light: true,\n    },\n    { name: 'code-climate', fileNames: ['.codeclimate.yml'], light: true },\n    {\n      name: 'prettier',\n      fileNames: [\n        '.prettierrc',\n        'prettier.config.js',\n        'prettier.config.cjs',\n        '.prettierrc.js',\n        '.prettierrc.cjs',\n        '.prettierrc.json',\n        '.prettierrc.json5',\n        '.prettierrc.yaml',\n        '.prettierrc.yml',\n        '.prettierignore',\n        '.prettierrc.toml',\n      ],\n    },\n    {\n      name: 'renovate',\n      fileNames: [\n        '.renovaterc',\n        '.renovaterc.json',\n        'renovate-config.json',\n        'renovate.json',\n        'renovate.json5',\n      ],\n    },\n    { name: 'apollo', fileNames: ['apollo.config.js'] },\n    { name: 'nodemon', fileNames: ['nodemon.json', 'nodemon-debug.json'] },\n    {\n      name: 'ngrx-reducer',\n      fileExtensions: ['reducer.ts', 'rootReducer.ts'],\n      enabledFor: [\"angular_ngrx\"],\n    },\n    {\n      name: 'ngrx-state',\n      fileExtensions: ['state.ts'],\n      enabledFor: [\"angular_ngrx\"],\n    },\n    {\n      name: 'ngrx-actions',\n      fileExtensions: ['actions.ts'],\n      enabledFor: [\"angular_ngrx\"],\n    },\n    {\n      name: 'ngrx-effects',\n      fileExtensions: ['effects.ts'],\n      enabledFor: [\"angular_ngrx\"],\n    },\n    {\n      name: 'ngrx-entity',\n      fileNames: ['.entity'],\n      enabledFor: [\"angular_ngrx\"],\n    },\n    {\n      name: 'ngrx-selectors',\n      fileExtensions: ['selectors.ts'],\n      enabledFor: [\"angular_ngrx\"],\n    },\n    { name: 'webhint', fileNames: ['.hintrc'] },\n    {\n      name: 'browserlist',\n      fileNames: ['browserslist', '.browserslistrc'],\n      light: true,\n    },\n    { name: 'crystal', fileExtensions: ['cr', 'ecr'], light: true },\n    { name: 'snyk', fileNames: ['.snyk'] },\n    {\n      name: 'drone',\n      fileExtensions: ['drone.yml'],\n      fileNames: ['.drone.yml'],\n      light: true,\n    },\n    { name: 'cuda', fileExtensions: ['cu', 'cuh'] },\n    { name: 'log', fileExtensions: ['log'] },\n    { name: 'dotjs', fileExtensions: ['def', 'dot', 'jst'] },\n    { name: 'ejs', fileExtensions: ['ejs'] },\n    { name: 'sequelize', fileNames: ['.sequelizerc'] },\n    {\n      name: 'gatsby',\n      fileNames: [\n        'gatsby.config.js',\n        'gatsby-config.js',\n        'gatsby-node.js',\n        'gatsby-browser.js',\n        'gatsby-ssr.js',\n      ],\n    },\n    {\n      name: 'wakatime',\n      fileNames: ['.wakatime-project'],\n      fileExtensions: ['.wakatime-project'],\n      light: true,\n    },\n    { name: 'circleci', fileNames: ['circle.yml'], light: true },\n    { name: 'cloudfoundry', fileNames: ['.cfignore'] },\n    {\n      name: 'grunt',\n      fileNames: [\n        'gruntfile.js',\n        'gruntfile.ts',\n        'gruntfile.coffee',\n        'gruntfile.babel.js',\n        'gruntfile.babel.ts',\n        'gruntfile.babel.coffee',\n      ],\n    },\n    {\n      name: 'jest',\n      fileNames: [\n        'jest.config.js',\n        'jest.config.ts',\n        'jest.config.cjs',\n        'jest.config.mjs',\n        'jest.config.json',\n        'jest.e2e.config.js',\n        'jest.e2e.config.ts',\n        'jest.e2e.config.cjs',\n        'jest.e2e.config.mjs',\n        'jest.e2e.config.json',\n        'jest.e2e.json',\n        'jest-unit.config.js',\n        'jest-e2e.config.js',\n        'jest-e2e.config.ts',\n        'jest-e2e.config.cjs',\n        'jest-e2e.config.mjs',\n        'jest-e2e.config.json',\n        'jest-e2e.json',\n        'jest-github-actions-reporter.js',\n        'jest.setup.js',\n        'jest.setup.ts',\n        'jest.json',\n        '.jestrc',\n        '.jestrc.js',\n        '.jestrc.json',\n        'jest.teardown.js',\n      ],\n    },\n    { name: 'processing', fileExtensions: ['pde'], light: true },\n    {\n      name: 'storybook',\n      fileExtensions: [\n        'stories.js',\n        'stories.jsx',\n        'stories.mdx',\n        'story.js',\n        'story.jsx',\n        'stories.ts',\n        'stories.tsx',\n        'story.ts',\n        'story.tsx',\n        'stories.svelte',\n        'story.mdx',\n      ],\n    },\n    { name: 'wepy', fileExtensions: ['wpy'] },\n    { name: 'fastlane', fileNames: ['fastfile', 'appfile'] },\n    { name: 'hcl', fileExtensions: ['hcl'], light: true },\n    { name: 'helm', fileNames: ['.helmignore'] },\n    { name: 'san', fileExtensions: ['san'] },\n    { name: 'wallaby', fileNames: ['wallaby.js', 'wallaby.conf.js'] },\n    { name: 'django', fileExtensions: ['djt'] },\n    { name: 'stencil', fileNames: ['stencil.config.js', 'stencil.config.ts'] },\n    { name: 'red', fileExtensions: ['red'] },\n    {\n      name: 'makefile',\n      fileExtensions: ['mk'],\n      fileNames: ['makefile', 'gnumakefile', 'kbuild'],\n    },\n    { name: 'foxpro', fileExtensions: ['fxp', 'prg'] },\n    { name: 'i18n', fileExtensions: ['pot', 'po', 'mo'] },\n    { name: 'webassembly', fileExtensions: ['wat', 'wasm'] },\n    {\n      name: 'semantic-release',\n      light: true,\n      fileNames: [\n        '.releaserc',\n        '.releaserc.yaml',\n        '.releaserc.yml',\n        '.releaserc.json',\n        '.releaserc.js',\n        'release.config.js',\n      ],\n    },\n    {\n      name: 'bitbucket',\n      fileNames: ['bitbucket-pipelines.yaml', 'bitbucket-pipelines.yml'],\n    },\n    { name: 'jupyter', fileExtensions: ['ipynb'] },\n    { name: 'd', fileExtensions: ['d'] },\n    { name: 'mdx', fileExtensions: ['mdx'] },\n    { name: 'ballerina', fileExtensions: ['bal', 'balx'] },\n    { name: 'racket', fileExtensions: ['rkt'] },\n    {\n      name: 'bazel',\n      fileExtensions: ['bzl', 'bazel'],\n      fileNames: ['.bazelignore', '.bazelrc', '.bazelversion'],\n    },\n    { name: 'mint', fileExtensions: ['mint'] },\n    { name: 'velocity', fileExtensions: ['vm', 'fhtml', 'vtl'] },\n    { name: 'godot', fileExtensions: ['gd'] },\n    { name: 'godot-assets', fileExtensions: ['godot', 'tres', 'tscn'] },\n    {\n      name: 'azure-pipelines',\n      fileNames: ['azure-pipelines.yml', 'azure-pipelines.yaml'],\n      fileExtensions: ['azure-pipelines.yml', 'azure-pipelines.yaml'],\n    },\n    { name: 'azure', fileExtensions: ['azcli'] },\n    {\n      name: 'vagrant',\n      fileNames: ['vagrantfile'],\n      fileExtensions: ['vagrantfile'],\n    },\n    { name: 'prisma', fileNames: ['prisma.yml'], fileExtensions: ['prisma'] },\n    { name: 'razor', fileExtensions: ['cshtml', 'vbhtml'] },\n    { name: 'abc', fileExtensions: ['abc'] },\n    { name: 'asciidoc', fileExtensions: ['ad', 'adoc', 'asciidoc'] },\n    { name: 'istanbul', fileNames: ['.nycrc', '.nycrc.json'] },\n    { name: 'edge', fileExtensions: ['edge'] },\n    { name: 'scheme', fileExtensions: ['ss', 'scm'] },\n    { name: 'lisp', fileExtensions: ['lisp', 'lsp', 'cl', 'fast'] },\n    {\n      name: 'tailwindcss',\n      fileNames: [\n        'tailwind.js',\n        'tailwind.ts',\n        'tailwind.config.js',\n        'tailwind.config.ts',\n        'tailwind.config.cjs',\n      ],\n    },\n    {\n      name: '3d',\n      fileExtensions: [\n        'stl',\n        'obj',\n        'ac',\n        'blend',\n        'mesh',\n        'mqo',\n        'pmd',\n        'pmx',\n        'skp',\n        'vac',\n        'vdp',\n        'vox',\n      ],\n    },\n    { name: 'buildkite', fileNames: ['buildkite.yml', 'buildkite.yaml'] },\n    {\n      name: 'netlify',\n      fileNames: [\n        'netlify.json',\n        'netlify.yml',\n        'netlify.yaml',\n        'netlify.toml',\n      ],\n    },\n    { name: 'svg', fileExtensions: ['svg'] },\n    {\n      name: 'svelte',\n      fileExtensions: ['svelte'],\n      fileNames: ['svelte.config.js', 'svelte.config.cjs'],\n    },\n    {\n      name: 'vim',\n      fileExtensions: ['vimrc', 'gvimrc', 'exrc', 'vim', 'viminfo'],\n    },\n    {\n      name: 'nest',\n      fileNames: [\n        'nest-cli.json',\n        '.nest-cli.json',\n        'nestconfig.json',\n        '.nestconfig.json',\n      ],\n    },\n    {\n      name: 'nest-controller',\n      fileExtensions: ['controller.ts', 'controller.js'],\n      enabledFor: [\"nest\"],\n    },\n    {\n      name: 'nest-middleware',\n      fileExtensions: ['middleware.ts', 'middleware.js'],\n      enabledFor: [\"nest\"],\n    },\n    {\n      name: 'nest-module',\n      fileExtensions: ['module.ts', 'module.js'],\n      enabledFor: [\"nest\"],\n    },\n    {\n      name: 'nest-service',\n      fileExtensions: ['service.ts', 'service.js'],\n      enabledFor: [\"nest\"],\n    },\n    {\n      name: 'nest-decorator',\n      fileExtensions: ['decorator.ts', 'decorator.js'],\n      enabledFor: [\"nest\"],\n    },\n    {\n      name: 'nest-pipe',\n      fileExtensions: ['pipe.ts', 'pipe.js'],\n      enabledFor: [\"nest\"],\n    },\n    {\n      name: 'nest-filter',\n      fileExtensions: ['filter.ts', 'filter.js'],\n      enabledFor: [\"nest\"],\n    },\n    {\n      name: 'nest-gateway',\n      fileExtensions: ['gateway.ts', 'gateway.js'],\n      enabledFor: [\"nest\"],\n    },\n    {\n      name: 'nest-guard',\n      fileExtensions: ['guard.ts', 'guard.js'],\n      enabledFor: [\"nest\"],\n    },\n    {\n      name: 'nest-resolver',\n      fileExtensions: ['resolver.ts', 'resolver.js'],\n      enabledFor: [\"nest\"],\n    },\n    { name: 'moonscript', fileExtensions: ['moon'] },\n    { name: 'percy', fileNames: ['.percy.yml'] },\n    { name: 'gitpod', fileNames: ['.gitpod.yml'] },\n    { name: 'advpl_prw', fileExtensions: ['prw', 'prx'] },\n    { name: 'advpl_ptm', fileExtensions: ['ptm'] },\n    { name: 'advpl_tlpp', fileExtensions: ['tlpp'] },\n    { name: 'advpl_include', fileExtensions: ['ch'] },\n    { name: 'codeowners', fileNames: ['codeowners'] },\n    { name: 'gcp', fileNames: ['.gcloudignore'] },\n    { name: 'disc', fileExtensions: ['iso'] },\n    {\n      name: 'fortran',\n      fileExtensions: ['f', 'f77', 'f90', 'f95', 'f03', 'f08'],\n    },\n    { name: 'tcl', fileExtensions: ['tcl'] },\n    { name: 'liquid', fileExtensions: ['liquid'] },\n    { name: 'prolog', fileExtensions: ['p', 'pro', 'pl'] },\n    {\n      name: 'husky',\n      fileNames: [\n        '.huskyrc',\n        'husky.config.js',\n        '.huskyrc.json',\n        '.huskyrc.js',\n        '.huskyrc.yaml',\n        '.huskyrc.yml',\n      ],\n    },\n    { name: 'coconut', fileExtensions: ['coco'] },\n    { name: 'tilt', fileNames: ['tiltfile'] },\n    {\n      name: 'capacitor',\n      fileNames: ['capacitor.config.json', 'capacitor.config.ts'],\n    },\n    { name: 'sketch', fileExtensions: ['sketch'] },\n    { name: 'pawn', fileExtensions: ['pwn', 'amx'] },\n    { name: 'adonis', fileNames: ['.adonisrc.json', 'ace'] },\n    { name: 'forth', fileExtensions: ['4th', 'fth', 'frt'] },\n    {\n      name: 'uml',\n      fileExtensions: ['iuml', 'pu', 'puml', 'plantuml', 'wsd'],\n      light: true,\n    },\n    {\n      name: 'meson',\n      fileNames: ['meson.build', 'meson_options.txt'],\n      fileExtensions: ['wrap'],\n    },\n    {\n      name: 'commitlint',\n      fileNames: [\n        '.commitlintrc',\n        '.commitlintrc.js',\n        'commitlint.config.js',\n        '.commitlintrc.json',\n        '.commitlint.yaml',\n        '.commitlint.yml',\n        '.commitlintrc.yaml',\n        '.commitlintrc.yml',\n        'commitlint.config.cjs',\n        'commitlint.config.ts',\n        '.commitlintrc.ts',\n        '.commitlintrc.cjs',\n      ],\n    },\n    { name: 'buck', fileNames: ['.buckconfig'] },\n    { name: 'dhall', fileExtensions: ['dhall', 'dhallb'] },\n    {\n      name: 'sml',\n      fileExtensions: [\n        'sml',\n        'mlton',\n        'mlb',\n        'sig',\n        'fun',\n        'cm',\n        'lex',\n        'use',\n        'grm',\n      ],\n    },\n    { name: 'nrwl', fileNames: ['nx.json', '.nxignore'] },\n    { name: 'opam', fileExtensions: ['opam'] },\n    {\n      name: 'dune',\n      fileNames: [\n        'dune',\n        'dune-project',\n        'dune-workspace',\n        'dune-workspace.dev',\n      ],\n    },\n    { name: 'imba', fileExtensions: ['imba'] },\n    { name: 'drawio', fileExtensions: ['drawio', 'dio'] },\n    { name: 'pascal', fileExtensions: ['pas'] },\n    { name: 'shaderlab', fileExtensions: ['unity'] },\n    {\n      name: 'roadmap',\n      fileNames: [\n        'roadmap.md',\n        'roadmap.txt',\n        'timeline.md',\n        'timeline.txt',\n        'milestones.md',\n        'milestones.txt',\n      ],\n    },\n    {\n      name: 'sas',\n      fileExtensions: ['sas', 'sas7bdat', 'sashdat', 'astore', 'ast', 'sast'],\n    },\n    {\n      name: 'nuget',\n      fileNames: ['nuget.config', '.nuspec', 'nuget.exe'],\n      fileExtensions: ['nupkg'],\n    },\n    { name: 'command', fileExtensions: ['command'] },\n    { name: 'stryker', fileNames: ['stryker.conf.js', 'stryker.conf.json'] },\n    { name: 'denizenscript', fileExtensions: ['dsc'] },\n    {\n      name: 'modernizr',\n      fileNames: ['.modernizrrc', '.modernizrrc.js', '.modernizrrc.json'],\n    },\n    { name: 'slug', fileNames: ['.slugignore'] },\n    { name: 'search', fileExtensions: ['code-search'] },\n    {\n      name: 'stitches',\n      fileNames: ['stitches.config.js', 'stitches.config.ts'],\n      light: true,\n    },\n    { name: 'nginx', fileNames: ['nginx.conf'] },\n    {\n      name: 'minecraft',\n      fileExtensions: [\n        'mcfunction',\n        'mcmeta',\n        'mcr',\n        'mca',\n        'mcgame',\n        'mclevel',\n        'mcworld',\n        'mine',\n        'mus',\n      ],\n    },\n    { name: 'replit', fileNames: ['.replit'] },\n    { name: 'rescript', fileExtensions: ['res', 'resi'] },\n    {\n      name: 'snowpack',\n      fileNames: [\n        'snowpack.config.cjs',\n        'snowpack.config.js',\n        'snowpack.config.mjs',\n        'snowpack.deps.json',\n        'snowpack.config.ts',\n        'snowpack.config.json',\n      ],\n      light: true,\n    },\n    { name: 'brainfuck', fileExtensions: ['b', 'bf'] },\n    { name: 'bicep', fileExtensions: ['bicep'] },\n    { name: 'cobol', fileExtensions: ['cob', 'cbl'] },\n    { name: 'grain', fileExtensions: ['gr'] },\n    { name: 'lolcode', fileExtensions: ['lol'] },\n    { name: 'idris', fileExtensions: ['idr', 'ibc'] },\n    { name: 'quasar', fileNames: ['quasar.conf.js'] },\n    { name: 'dependabot', fileNames: ['dependabot.yml'] },\n    { name: 'pipeline', fileExtensions: ['pipeline'] },\n    {\n      name: 'vite',\n      fileNames: [\n        'vite.config.js',\n        'vite.config.mjs',\n        'vite.config.cjs',\n        'vite.config.ts',\n      ],\n    },\n    { name: 'opa', fileExtensions: ['rego'] },\n    { name: 'lerna', fileNames: ['lerna.json'] },\n    {\n      name: 'windicss',\n      fileNames: [\n        'windi.config.js',\n        'windi.config.ts',\n        'windi.config.cjs',\n        'windi.config.json',\n      ],\n      fileExtensions: ['windi'],\n    },\n    {\n      name: 'textlint',\n      fileNames: ['.textlintrc'],\n    },\n    { name: 'scala', fileExtensions: ['scala', 'sc'] },\n    { name: 'lilypond', fileExtensions: ['ly'] },\n    { name: 'vlang', fileExtensions: ['v'], fileNames: ['vpkg.json', 'v.mod'] },\n    { name: 'chess', fileExtensions: ['pgn', 'fen'], light: true },\n    { name: 'gemini', fileExtensions: ['gmi', 'gemini'] },\n    { name: 'sentry', fileNames: ['.sentryclirc'] },\n    {\n      name: 'phpunit',\n      fileNames: [\n        '.phpunit.result.cache',\n        '.phpunit-watcher.yml',\n        'phpunit.xml',\n        'phpunit.xml.dist',\n        'phpunit-watcher.yml',\n        'phpunit-watcher.yml.dist',\n      ],\n    },\n    {\n      name: 'php-cs-fixer',\n      fileNames: [\n        '.php_cs',\n        '.php_cs.dist',\n        '.php_cs.php',\n        '.php_cs.dist.php',\n        '.php-cs-fixer.php',\n        '.php-cs-fixer.dist.php',\n      ],\n    },\n    { name: 'robots', fileNames: ['robots.txt'] },\n    {\n      name: 'tsconfig',\n      fileNames: [\n        'tsconfig.json',\n        'tsconfig.app.json',\n        'tsconfig.editor.json',\n        'tsconfig.spec.json',\n        'tsconfig.base.json',\n        'tsconfig.build.json',\n        'tsconfig.eslint.json',\n        'tsconfig.lib.json',\n      ],\n      fileExtensions: ['tsconfig.json'],\n    },\n    {\n      name: 'tauri',\n      fileNames: [\n        'tauri.config.json',\n        'tauri.linux.conf.json',\n        'tauri.windows.conf.json',\n        'tauri.macos.conf.json',\n      ],\n      fileExtensions: ['tauri'],\n    },\n    {\n      name: 'jsconfig',\n      fileNames: ['jsconfig.json'],\n      fileExtensions: ['jsconfig.json'],\n    },\n    {\n      name: 'maven',\n      fileNames: ['maven.config', 'jvm.config', 'pom.xml'],\n    },\n    { name: 'ada', fileExtensions: ['ada', 'adb', 'ads', 'ali'] },\n    { name: 'serverless', fileNames: ['serverless.yml'] },\n    {\n      name: 'ember',\n      fileNames: ['.ember-cli', '.ember-cli.js', 'ember-cli-builds.js'],\n    },\n    {\n      name: 'horusec',\n      fileNames: ['horusec-config.json'],\n      fileExtensions: ['horusec-config.json'],\n    },\n    { name: 'coala', fileExtensions: ['coarc', 'coafile'] },\n    {\n      name: 'dinophp',\n      fileExtensions: ['bubble', 'html.bubble', 'php.bubble'],\n    },\n    { name: 'teal', fileExtensions: ['tl'] },\n    { name: 'template', fileExtensions: ['template'] },\n    { name: 'astyle', fileNames: ['.astylerc'] },\n    {\n      name: 'lighthouse',\n      fileNames: [\n        '.lighthouserc.js',\n        'lighthouserc.js',\n        '.lighthouserc.json',\n        'lighthouserc.json',\n        '.lighthouserc.yml',\n        'lighthouserc.yml',\n        '.lighthouserc.yaml',\n        'lighthouserc.yaml',\n      ],\n    },\n    {\n      name: 'svgr',\n      fileNames: [\n        '.svgrrc',\n        'svgr.config.js',\n        '.svgrrc.js',\n        '.svgrrc.yaml',\n        '.svgrrc.yml',\n        '.svgrrc.json',\n      ],\n    },\n    { name: 'rome', fileNames: ['rome.json'] },\n    { name: 'cypress', fileNames: ['cypress.json', 'cypress.env.json'] },\n    { name: 'siyuan', fileExtensions: ['sy'] },\n    { name: 'ndst', fileExtensions: ['ndst.yml', 'ndst.yaml', 'ndst.json'] },\n    { name: 'tobi', fileExtensions: ['tobi'] },\n    { name: 'tobimake', fileNames: ['.tobimake'] },\n    {\n      name: 'pnpm',\n      light: true,\n      fileNames: ['pnpm-lock.yaml', 'pnpm-workspace.yaml', '.pnpmfile.cjs'],\n    },\n    {\n      name: 'gridsome',\n      fileNames: ['gridsome.config.js', 'gridsome.server.js'],\n    },\n  ],\n};\n"}