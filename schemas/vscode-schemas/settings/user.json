{
  "properties": {
    "editor.tabSize": {
      "type": "number",
      "default": 4,
      "minimum": 1,
      "markdownDescription": "The number of spaces a tab is equal to. This setting is overridden based on the file contents when `#editor.detectIndentation#` is on.",
      "defaultDefaultValue": 4,
      "scope": 5,
      "restricted": false
    },
    "editor.insertSpaces": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Insert spaces when pressing `Tab`. This setting is overridden based on the file contents when `#editor.detectIndentation#` is on.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.detectIndentation": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Controls whether `#editor.tabSize#` and `#editor.insertSpaces#` will be automatically detected when a file is opened based on the file contents.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.trimAutoWhitespace": {
      "type": "boolean",
      "default": true,
      "description": "Remove trailing auto inserted whitespace.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.largeFileOptimizations": {
      "type": "boolean",
      "default": true,
      "description": "Special handling for large files to disable certain memory intensive features.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.wordBasedSuggestions": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether completions should be computed based on words in the document.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.wordBasedSuggestionsMode": {
      "enum": [
        "currentDocument",
        "matchingDocuments",
        "allDocuments"
      ],
      "default": "matchingDocuments",
      "enumDescriptions": [
        "Only suggest words from the active document.",
        "Suggest words from all open documents of the same language.",
        "Suggest words from all open documents."
      ],
      "description": "Controls from which documents word based completions are computed.",
      "defaultDefaultValue": "matchingDocuments",
      "scope": 5,
      "restricted": false
    },
    "editor.semanticHighlighting.enabled": {
      "enum": [
        true,
        false,
        "configuredByTheme"
      ],
      "enumDescriptions": [
        "Semantic highlighting enabled for all color themes.",
        "Semantic highlighting disabled for all color themes.",
        "Semantic highlighting is configured by the current color theme's `semanticHighlighting` setting."
      ],
      "default": "configuredByTheme",
      "description": "Controls whether the semanticHighlighting is shown for the languages that support it.",
      "defaultDefaultValue": "configuredByTheme",
      "scope": 5,
      "restricted": false
    },
    "editor.stablePeek": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Keep peek editors open even when double clicking their content or when hitting `Escape`.",
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.maxTokenizationLineLength": {
      "type": "integer",
      "default": 20000,
      "description": "Lines above this length will not be tokenized for performance reasons",
      "defaultDefaultValue": 20000,
      "scope": 5,
      "restricted": false
    },
    "editor.language.brackets": {
      "type": "array",
      "default": false,
      "description": "Defines the bracket symbols that increase or decrease the indentation.",
      "items": {
        "type": "array",
        "items": [
          {
            "type": "string",
            "description": "The opening bracket character or string sequence."
          },
          {
            "type": "string",
            "description": "The closing bracket character or string sequence."
          }
        ]
      },
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.language.colorizedBracketPairs": {
      "type": "array",
      "default": false,
      "description": "Defines the bracket pairs that are colorized by their nesting level if bracket pair colorization is enabled.",
      "items": {
        "type": "array",
        "items": [
          {
            "type": "string",
            "description": "The opening bracket character or string sequence."
          },
          {
            "type": "string",
            "description": "The closing bracket character or string sequence."
          }
        ]
      },
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "diffEditor.maxComputationTime": {
      "type": "number",
      "default": 5000,
      "description": "Timeout in milliseconds after which diff computation is cancelled. Use 0 for no timeout.",
      "defaultDefaultValue": 5000,
      "scope": 5,
      "restricted": false
    },
    "diffEditor.maxFileSize": {
      "type": "number",
      "default": 50,
      "description": "Maximum file size in MB for which to compute diffs. Use 0 for no limit.",
      "defaultDefaultValue": 50,
      "scope": 5,
      "restricted": false
    },
    "diffEditor.renderSideBySide": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether the diff editor shows the diff side by side or inline.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "diffEditor.ignoreTrimWhitespace": {
      "type": "boolean",
      "default": true,
      "description": "When enabled, the diff editor ignores changes in leading or trailing whitespace.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "diffEditor.renderIndicators": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether the diff editor shows +/- indicators for added/removed changes.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "diffEditor.codeLens": {
      "type": "boolean",
      "default": false,
      "description": "Controls whether the editor shows CodeLens.",
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "diffEditor.wordWrap": {
      "type": "string",
      "enum": [
        "off",
        "on",
        "inherit"
      ],
      "default": "inherit",
      "markdownEnumDescriptions": [
        "Lines will never wrap.",
        "Lines will wrap at the viewport width.",
        "Lines will wrap according to the `#editor.wordWrap#` setting."
      ],
      "defaultDefaultValue": "inherit",
      "scope": 5,
      "restricted": false
    },
    "editor.acceptSuggestionOnCommitCharacter": {
      "markdownDescription": "Controls whether suggestions should be accepted on commit characters. For example, in JavaScript, the semi-colon (`;`) can be a commit character that accepts a suggestion and types that character.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.acceptSuggestionOnEnter": {
      "markdownEnumDescriptions": [
        "",
        "Only accept a suggestion with `Enter` when it makes a textual change.",
        ""
      ],
      "markdownDescription": "Controls whether suggestions should be accepted on `Enter`, in addition to `Tab`. Helps to avoid ambiguity between inserting new lines or accepting suggestions.",
      "type": "string",
      "enum": [
        "on",
        "smart",
        "off"
      ],
      "default": "on",
      "defaultDefaultValue": "on",
      "scope": 5,
      "restricted": false
    },
    "editor.accessibilitySupport": {
      "type": "string",
      "enum": [
        "auto",
        "on",
        "off"
      ],
      "enumDescriptions": [
        "The editor will use platform APIs to detect when a Screen Reader is attached.",
        "The editor will be permanently optimized for usage with a Screen Reader. Word wrapping will be disabled.",
        "The editor will never be optimized for usage with a Screen Reader."
      ],
      "default": "auto",
      "description": "Controls whether the editor should run in a mode where it is optimized for screen readers. Setting to on will disable word wrapping.",
      "defaultDefaultValue": "auto",
      "scope": 5,
      "restricted": false
    },
    "editor.accessibilityPageSize": {
      "description": "Controls the number of lines in the editor that can be read out by a screen reader at once. When we detect a screen reader we automatically set the default to be 500. Warning: this has a performance implication for numbers larger than the default.",
      "type": "integer",
      "default": 10,
      "minimum": 1,
      "maximum": 1073741824,
      "defaultDefaultValue": 10,
      "scope": 5,
      "restricted": false
    },
    "editor.autoClosingBrackets": {
      "enumDescriptions": [
        "",
        "Use language configurations to determine when to autoclose brackets.",
        "Autoclose brackets only when the cursor is to the left of whitespace.",
        ""
      ],
      "description": "Controls whether the editor should automatically close brackets after the user adds an opening bracket.",
      "type": "string",
      "enum": [
        "always",
        "languageDefined",
        "beforeWhitespace",
        "never"
      ],
      "default": "languageDefined",
      "defaultDefaultValue": "languageDefined",
      "scope": 5,
      "restricted": false
    },
    "editor.autoClosingDelete": {
      "enumDescriptions": [
        "",
        "Remove adjacent closing quotes or brackets only if they were automatically inserted.",
        ""
      ],
      "description": "Controls whether the editor should remove adjacent closing quotes or brackets when deleting.",
      "type": "string",
      "enum": [
        "always",
        "auto",
        "never"
      ],
      "default": "auto",
      "defaultDefaultValue": "auto",
      "scope": 5,
      "restricted": false
    },
    "editor.autoClosingOvertype": {
      "enumDescriptions": [
        "",
        "Type over closing quotes or brackets only if they were automatically inserted.",
        ""
      ],
      "description": "Controls whether the editor should type over closing quotes or brackets.",
      "type": "string",
      "enum": [
        "always",
        "auto",
        "never"
      ],
      "default": "auto",
      "defaultDefaultValue": "auto",
      "scope": 5,
      "restricted": false
    },
    "editor.autoClosingQuotes": {
      "enumDescriptions": [
        "",
        "Use language configurations to determine when to autoclose quotes.",
        "Autoclose quotes only when the cursor is to the left of whitespace.",
        ""
      ],
      "description": "Controls whether the editor should automatically close quotes after the user adds an opening quote.",
      "type": "string",
      "enum": [
        "always",
        "languageDefined",
        "beforeWhitespace",
        "never"
      ],
      "default": "languageDefined",
      "defaultDefaultValue": "languageDefined",
      "scope": 5,
      "restricted": false
    },
    "editor.autoIndent": {
      "enumDescriptions": [
        "The editor will not insert indentation automatically.",
        "The editor will keep the current line's indentation.",
        "The editor will keep the current line's indentation and honor language defined brackets.",
        "The editor will keep the current line's indentation, honor language defined brackets and invoke special onEnterRules defined by languages.",
        "The editor will keep the current line's indentation, honor language defined brackets, invoke special onEnterRules defined by languages, and honor indentationRules defined by languages."
      ],
      "description": "Controls whether the editor should automatically adjust the indentation when users type, paste, move or indent lines.",
      "type": "string",
      "enum": [
        "none",
        "keep",
        "brackets",
        "advanced",
        "full"
      ],
      "default": "full",
      "defaultDefaultValue": "full",
      "scope": 5,
      "restricted": false
    },
    "editor.autoSurround": {
      "enumDescriptions": [
        "Use language configurations to determine when to automatically surround selections.",
        "Surround with quotes but not brackets.",
        "Surround with brackets but not quotes.",
        ""
      ],
      "description": "Controls whether the editor should automatically surround selections when typing quotes or brackets.",
      "type": "string",
      "enum": [
        "languageDefined",
        "quotes",
        "brackets",
        "never"
      ],
      "default": "languageDefined",
      "defaultDefaultValue": "languageDefined",
      "scope": 5,
      "restricted": false
    },
    "editor.bracketPairColorization.enabled": {
      "type": "boolean",
      "default": false,
      "description": "Controls whether bracket pair colorization is enabled or not. Use 'workbench.colorCustomizations' to override the bracket highlight colors.",
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.guides.bracketPairs": {
      "type": [
        "boolean",
        "string"
      ],
      "enum": [
        true,
        "active",
        false
      ],
      "enumDescriptions": [
        "Enables bracket pair guides.",
        "Enables bracket pair guides only for the active bracket pair.",
        "Disables bracket pair guides."
      ],
      "default": false,
      "description": "Controls whether bracket pair guides are enabled or not.",
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.guides.bracketPairsHorizontal": {
      "type": [
        "boolean",
        "string"
      ],
      "enum": [
        true,
        "active",
        false
      ],
      "enumDescriptions": [
        "Enables horizontal guides as addition to vertical bracket pair guides.",
        "Enables horizontal guides only for the active bracket pair.",
        "Disables horizontal bracket pair guides."
      ],
      "default": "active",
      "description": "Controls whether horizontal bracket pair guides are enabled or not.",
      "defaultDefaultValue": "active",
      "scope": 5,
      "restricted": false
    },
    "editor.guides.highlightActiveBracketPair": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether the editor should highlight the active bracket pair.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.guides.indentation": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether the editor should render indent guides.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.guides.highlightActiveIndentation": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether the editor should highlight the active indent guide.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.codeLens": {
      "description": "Controls whether the editor shows CodeLens.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.codeLensFontFamily": {
      "description": "Controls the font family for CodeLens.",
      "type": "string",
      "default": "",
      "defaultDefaultValue": "",
      "scope": 5,
      "restricted": false
    },
    "editor.codeLensFontSize": {
      "type": "integer",
      "default": 0,
      "minimum": 0,
      "maximum": 100,
      "markdownDescription": "Controls the font size in pixels for CodeLens. When set to `0`, 90% of `#editor.fontSize#` is used.",
      "defaultDefaultValue": 0,
      "scope": 5,
      "restricted": false
    },
    "editor.colorDecorators": {
      "description": "Controls whether the editor should render the inline color decorators and color picker.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.columnSelection": {
      "description": "Enable that the selection with the mouse and keys is doing column selection.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.comments.insertSpace": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether a space character is inserted when commenting.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.comments.ignoreEmptyLines": {
      "type": "boolean",
      "default": true,
      "description": "Controls if empty lines should be ignored with toggle, add or remove actions for line comments.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.copyWithSyntaxHighlighting": {
      "description": "Controls whether syntax highlighting should be copied into the clipboard.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.cursorBlinking": {
      "description": "Control the cursor animation style.",
      "type": "string",
      "enum": [
        "blink",
        "smooth",
        "phase",
        "expand",
        "solid"
      ],
      "default": "blink",
      "defaultDefaultValue": "blink",
      "scope": 5,
      "restricted": false
    },
    "editor.cursorSmoothCaretAnimation": {
      "description": "Controls whether the smooth caret animation should be enabled.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.cursorStyle": {
      "description": "Controls the cursor style.",
      "type": "string",
      "enum": [
        "line",
        "block",
        "underline",
        "line-thin",
        "block-outline",
        "underline-thin"
      ],
      "default": "line",
      "defaultDefaultValue": "line",
      "scope": 5,
      "restricted": false
    },
    "editor.cursorSurroundingLines": {
      "description": "Controls the minimal number of visible leading and trailing lines surrounding the cursor. Known as 'scrollOff' or 'scrollOffset' in some other editors.",
      "type": "integer",
      "default": 0,
      "minimum": 0,
      "maximum": 1073741824,
      "defaultDefaultValue": 0,
      "scope": 5,
      "restricted": false
    },
    "editor.cursorSurroundingLinesStyle": {
      "enumDescriptions": [
        "`cursorSurroundingLines` is enforced only when triggered via the keyboard or API.",
        "`cursorSurroundingLines` is enforced always."
      ],
      "description": "Controls when `cursorSurroundingLines` should be enforced.",
      "type": "string",
      "enum": [
        "default",
        "all"
      ],
      "default": "default",
      "defaultDefaultValue": "default",
      "scope": 5,
      "restricted": false
    },
    "editor.cursorWidth": {
      "markdownDescription": "Controls the width of the cursor when `#editor.cursorStyle#` is set to `line`.",
      "type": "integer",
      "default": 0,
      "minimum": 0,
      "maximum": 1073741824,
      "defaultDefaultValue": 0,
      "scope": 5,
      "restricted": false
    },
    "editor.dragAndDrop": {
      "description": "Controls whether the editor should allow moving selections via drag and drop.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.emptySelectionClipboard": {
      "description": "Controls whether copying without a selection copies the current line.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.fastScrollSensitivity": {
      "markdownDescription": "Scrolling speed multiplier when pressing `Alt`.",
      "type": "number",
      "default": 5,
      "defaultDefaultValue": 5,
      "scope": 5,
      "restricted": false
    },
    "editor.find.cursorMoveOnType": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether the cursor should jump to find matches while typing.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.find.seedSearchStringFromSelection": {
      "type": "string",
      "enum": [
        "never",
        "always",
        "selection"
      ],
      "default": "always",
      "enumDescriptions": [
        "Never seed search string from the editor selection.",
        "Always seed search string from the editor selection, including word at cursor position.",
        "Only seed search string from the editor selection."
      ],
      "description": "Controls whether the search string in the Find Widget is seeded from the editor selection.",
      "defaultDefaultValue": "always",
      "scope": 5,
      "restricted": false
    },
    "editor.find.autoFindInSelection": {
      "type": "string",
      "enum": [
        "never",
        "always",
        "multiline"
      ],
      "default": "never",
      "enumDescriptions": [
        "Never turn on Find in Selection automatically (default).",
        "Always turn on Find in Selection automatically.",
        "Turn on Find in Selection automatically when multiple lines of content are selected."
      ],
      "description": "Controls the condition for turning on Find in Selection automatically.",
      "defaultDefaultValue": "never",
      "scope": 5,
      "restricted": false
    },
    "editor.find.addExtraSpaceOnTop": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether the Find Widget should add extra lines on top of the editor. When true, you can scroll beyond the first line when the Find Widget is visible.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.find.loop": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether the search automatically restarts from the beginning (or the end) when no further matches can be found.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.folding": {
      "description": "Controls whether the editor has code folding enabled.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.foldingStrategy": {
      "enumDescriptions": [
        "Use a language-specific folding strategy if available, else the indentation-based one.",
        "Use the indentation-based folding strategy."
      ],
      "description": "Controls the strategy for computing folding ranges.",
      "type": "string",
      "enum": [
        "auto",
        "indentation"
      ],
      "default": "auto",
      "defaultDefaultValue": "auto",
      "scope": 5,
      "restricted": false
    },
    "editor.foldingHighlight": {
      "description": "Controls whether the editor should highlight folded ranges.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.foldingImportsByDefault": {
      "description": "Controls whether the editor automatically collapses import ranges.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.foldingMaximumRegions": {
      "description": "The maximum number of foldable regions. Increasing this value may result in the editor becoming less responsive when the current source has a large number of foldable regions.",
      "type": "integer",
      "default": 5000,
      "minimum": 10,
      "maximum": 65000,
      "defaultDefaultValue": 5000,
      "scope": 5,
      "restricted": false
    },
    "editor.unfoldOnClickAfterEndOfLine": {
      "description": "Controls whether clicking on the empty content after a folded line will unfold the line.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.fontFamily": {
      "description": "Controls the font family.",
      "type": "string",
      "default": "Consolas, 'Courier New', monospace",
      "defaultDefaultValue": "Consolas, 'Courier New', monospace",
      "scope": 5,
      "restricted": false
    },
    "editor.fontLigatures": {
      "anyOf": [
        {
          "type": "boolean",
          "description": "Enables/Disables font ligatures ('calt' and 'liga' font features). Change this to a string for fine-grained control of the 'font-feature-settings' CSS property."
        },
        {
          "type": "string",
          "description": "Explicit 'font-feature-settings' CSS property. A boolean can be passed instead if one only needs to turn on/off ligatures."
        }
      ],
      "description": "Configures font ligatures or font features. Can be either a boolean to enable/disable ligatures or a string for the value of the CSS 'font-feature-settings' property.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.fontSize": {
      "type": "number",
      "minimum": 6,
      "maximum": 100,
      "default": 14,
      "description": "Controls the font size in pixels.",
      "defaultDefaultValue": 14,
      "scope": 5,
      "restricted": false
    },
    "editor.fontWeight": {
      "anyOf": [
        {
          "type": "number",
          "minimum": 1,
          "maximum": 1000,
          "errorMessage": "Only \"normal\" and \"bold\" keywords or numbers between 1 and 1000 are allowed."
        },
        {
          "type": "string",
          "pattern": "^(normal|bold|1000|[1-9][0-9]{0,2})$"
        },
        {
          "enum": [
            "normal",
            "bold",
            "100",
            "200",
            "300",
            "400",
            "500",
            "600",
            "700",
            "800",
            "900"
          ]
        }
      ],
      "default": "normal",
      "description": "Controls the font weight. Accepts \"normal\" and \"bold\" keywords or numbers between 1 and 1000.",
      "defaultDefaultValue": "normal",
      "scope": 5,
      "restricted": false
    },
    "editor.formatOnPaste": {
      "description": "Controls whether the editor should automatically format the pasted content. A formatter must be available and the formatter should be able to format a range in a document.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.formatOnType": {
      "description": "Controls whether the editor should automatically format the line after typing.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.glyphMargin": {
      "description": "Controls whether the editor should render the vertical glyph margin. Glyph margin is mostly used for debugging.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.gotoLocation.multiple": {
      "deprecationMessage": "This setting is deprecated, please use separate settings like 'editor.editor.gotoLocation.multipleDefinitions' or 'editor.editor.gotoLocation.multipleImplementations' instead.",
      "default": null,
      "scope": 5,
      "restricted": false
    },
    "editor.gotoLocation.multipleDefinitions": {
      "description": "Controls the behavior the 'Go to Definition'-command when multiple target locations exist.",
      "type": "string",
      "enum": [
        "peek",
        "gotoAndPeek",
        "goto"
      ],
      "default": "peek",
      "enumDescriptions": [
        "Show peek view of the results (default)",
        "Go to the primary result and show a peek view",
        "Go to the primary result and enable peek-less navigation to others"
      ],
      "defaultDefaultValue": "peek",
      "scope": 5,
      "restricted": false
    },
    "editor.gotoLocation.multipleTypeDefinitions": {
      "description": "Controls the behavior the 'Go to Type Definition'-command when multiple target locations exist.",
      "type": "string",
      "enum": [
        "peek",
        "gotoAndPeek",
        "goto"
      ],
      "default": "peek",
      "enumDescriptions": [
        "Show peek view of the results (default)",
        "Go to the primary result and show a peek view",
        "Go to the primary result and enable peek-less navigation to others"
      ],
      "defaultDefaultValue": "peek",
      "scope": 5,
      "restricted": false
    },
    "editor.gotoLocation.multipleDeclarations": {
      "description": "Controls the behavior the 'Go to Declaration'-command when multiple target locations exist.",
      "type": "string",
      "enum": [
        "peek",
        "gotoAndPeek",
        "goto"
      ],
      "default": "peek",
      "enumDescriptions": [
        "Show peek view of the results (default)",
        "Go to the primary result and show a peek view",
        "Go to the primary result and enable peek-less navigation to others"
      ],
      "defaultDefaultValue": "peek",
      "scope": 5,
      "restricted": false
    },
    "editor.gotoLocation.multipleImplementations": {
      "description": "Controls the behavior the 'Go to Implementations'-command when multiple target locations exist.",
      "type": "string",
      "enum": [
        "peek",
        "gotoAndPeek",
        "goto"
      ],
      "default": "peek",
      "enumDescriptions": [
        "Show peek view of the results (default)",
        "Go to the primary result and show a peek view",
        "Go to the primary result and enable peek-less navigation to others"
      ],
      "defaultDefaultValue": "peek",
      "scope": 5,
      "restricted": false
    },
    "editor.gotoLocation.multipleReferences": {
      "description": "Controls the behavior the 'Go to References'-command when multiple target locations exist.",
      "type": "string",
      "enum": [
        "peek",
        "gotoAndPeek",
        "goto"
      ],
      "default": "peek",
      "enumDescriptions": [
        "Show peek view of the results (default)",
        "Go to the primary result and show a peek view",
        "Go to the primary result and enable peek-less navigation to others"
      ],
      "defaultDefaultValue": "peek",
      "scope": 5,
      "restricted": false
    },
    "editor.gotoLocation.alternativeDefinitionCommand": {
      "type": "string",
      "default": "editor.action.goToReferences",
      "enum": [
        "",
        "editor.action.referenceSearch.trigger",
        "editor.action.goToReferences",
        "editor.action.peekImplementation",
        "editor.action.goToImplementation",
        "editor.action.peekTypeDefinition",
        "editor.action.goToTypeDefinition",
        "editor.action.peekDeclaration",
        "editor.action.revealDeclaration",
        "editor.action.peekDefinition",
        "editor.action.revealDefinitionAside",
        "editor.action.revealDefinition"
      ],
      "description": "Alternative command id that is being executed when the result of 'Go to Definition' is the current location.",
      "defaultDefaultValue": "editor.action.goToReferences",
      "scope": 5,
      "restricted": false
    },
    "editor.gotoLocation.alternativeTypeDefinitionCommand": {
      "type": "string",
      "default": "editor.action.goToReferences",
      "enum": [
        "",
        "editor.action.referenceSearch.trigger",
        "editor.action.goToReferences",
        "editor.action.peekImplementation",
        "editor.action.goToImplementation",
        "editor.action.peekTypeDefinition",
        "editor.action.goToTypeDefinition",
        "editor.action.peekDeclaration",
        "editor.action.revealDeclaration",
        "editor.action.peekDefinition",
        "editor.action.revealDefinitionAside",
        "editor.action.revealDefinition"
      ],
      "description": "Alternative command id that is being executed when the result of 'Go to Type Definition' is the current location.",
      "defaultDefaultValue": "editor.action.goToReferences",
      "scope": 5,
      "restricted": false
    },
    "editor.gotoLocation.alternativeDeclarationCommand": {
      "type": "string",
      "default": "editor.action.goToReferences",
      "enum": [
        "",
        "editor.action.referenceSearch.trigger",
        "editor.action.goToReferences",
        "editor.action.peekImplementation",
        "editor.action.goToImplementation",
        "editor.action.peekTypeDefinition",
        "editor.action.goToTypeDefinition",
        "editor.action.peekDeclaration",
        "editor.action.revealDeclaration",
        "editor.action.peekDefinition",
        "editor.action.revealDefinitionAside",
        "editor.action.revealDefinition"
      ],
      "description": "Alternative command id that is being executed when the result of 'Go to Declaration' is the current location.",
      "defaultDefaultValue": "editor.action.goToReferences",
      "scope": 5,
      "restricted": false
    },
    "editor.gotoLocation.alternativeImplementationCommand": {
      "type": "string",
      "default": "",
      "enum": [
        "",
        "editor.action.referenceSearch.trigger",
        "editor.action.goToReferences",
        "editor.action.peekImplementation",
        "editor.action.goToImplementation",
        "editor.action.peekTypeDefinition",
        "editor.action.goToTypeDefinition",
        "editor.action.peekDeclaration",
        "editor.action.revealDeclaration",
        "editor.action.peekDefinition",
        "editor.action.revealDefinitionAside",
        "editor.action.revealDefinition"
      ],
      "description": "Alternative command id that is being executed when the result of 'Go to Implementation' is the current location.",
      "defaultDefaultValue": "",
      "scope": 5,
      "restricted": false
    },
    "editor.gotoLocation.alternativeReferenceCommand": {
      "type": "string",
      "default": "",
      "enum": [
        "",
        "editor.action.referenceSearch.trigger",
        "editor.action.goToReferences",
        "editor.action.peekImplementation",
        "editor.action.goToImplementation",
        "editor.action.peekTypeDefinition",
        "editor.action.goToTypeDefinition",
        "editor.action.peekDeclaration",
        "editor.action.revealDeclaration",
        "editor.action.peekDefinition",
        "editor.action.revealDefinitionAside",
        "editor.action.revealDefinition"
      ],
      "description": "Alternative command id that is being executed when the result of 'Go to Reference' is the current location.",
      "defaultDefaultValue": "",
      "scope": 5,
      "restricted": false
    },
    "editor.hideCursorInOverviewRuler": {
      "description": "Controls whether the cursor should be hidden in the overview ruler.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.hover.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether the hover is shown.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.hover.delay": {
      "type": "number",
      "default": 300,
      "minimum": 0,
      "maximum": 10000,
      "description": "Controls the delay in milliseconds after which the hover is shown.",
      "defaultDefaultValue": 300,
      "scope": 5,
      "restricted": false
    },
    "editor.hover.sticky": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether the hover should remain visible when mouse is moved over it.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.hover.above": {
      "type": "boolean",
      "default": true,
      "description": "Prefer showing hovers above the line, if there's space.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.inlineSuggest.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether to automatically show inline suggestions in the editor.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.letterSpacing": {
      "description": "Controls the letter spacing in pixels.",
      "type": "number",
      "default": 0,
      "defaultDefaultValue": 0,
      "scope": 5,
      "restricted": false
    },
    "editor.lightbulb.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Enables the code action lightbulb in the editor.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.lineHeight": {
      "markdownDescription": "Controls the line height. \n - Use 0 to automatically compute the line height from the font size.\n - Values between 0 and 8 will be used as a multiplier with the font size.\n - Values greater than or equal to 8 will be used as effective values.",
      "type": "number",
      "default": 0,
      "defaultDefaultValue": 0,
      "scope": 5,
      "restricted": false
    },
    "editor.lineNumbers": {
      "type": "string",
      "enum": [
        "off",
        "on",
        "relative",
        "interval"
      ],
      "enumDescriptions": [
        "Line numbers are not rendered.",
        "Line numbers are rendered as absolute number.",
        "Line numbers are rendered as distance in lines to cursor position.",
        "Line numbers are rendered every 10 lines."
      ],
      "default": "on",
      "description": "Controls the display of line numbers.",
      "defaultDefaultValue": "on",
      "scope": 5,
      "restricted": false
    },
    "editor.linkedEditing": {
      "description": "Controls whether the editor has linked editing enabled. Depending on the language, related symbols, e.g. HTML tags, are updated while editing.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.links": {
      "description": "Controls whether the editor should detect links and make them clickable.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.matchBrackets": {
      "description": "Highlight matching brackets.",
      "type": "string",
      "enum": [
        "always",
        "near",
        "never"
      ],
      "default": "always",
      "defaultDefaultValue": "always",
      "scope": 5,
      "restricted": false
    },
    "editor.minimap.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether the minimap is shown.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.minimap.size": {
      "type": "string",
      "enum": [
        "proportional",
        "fill",
        "fit"
      ],
      "enumDescriptions": [
        "The minimap has the same size as the editor contents (and might scroll).",
        "The minimap will stretch or shrink as necessary to fill the height of the editor (no scrolling).",
        "The minimap will shrink as necessary to never be larger than the editor (no scrolling)."
      ],
      "default": "proportional",
      "description": "Controls the size of the minimap.",
      "defaultDefaultValue": "proportional",
      "scope": 5,
      "restricted": false
    },
    "editor.minimap.side": {
      "type": "string",
      "enum": [
        "left",
        "right"
      ],
      "default": "right",
      "description": "Controls the side where to render the minimap.",
      "defaultDefaultValue": "right",
      "scope": 5,
      "restricted": false
    },
    "editor.minimap.showSlider": {
      "type": "string",
      "enum": [
        "always",
        "mouseover"
      ],
      "default": "mouseover",
      "description": "Controls when the minimap slider is shown.",
      "defaultDefaultValue": "mouseover",
      "scope": 5,
      "restricted": false
    },
    "editor.minimap.scale": {
      "type": "number",
      "default": 1,
      "minimum": 1,
      "maximum": 3,
      "enum": [
        1,
        2,
        3
      ],
      "description": "Scale of content drawn in the minimap: 1, 2 or 3.",
      "defaultDefaultValue": 1,
      "scope": 5,
      "restricted": false
    },
    "editor.minimap.renderCharacters": {
      "type": "boolean",
      "default": true,
      "description": "Render the actual characters on a line as opposed to color blocks.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.minimap.maxColumn": {
      "type": "number",
      "default": 120,
      "description": "Limit the width of the minimap to render at most a certain number of columns.",
      "defaultDefaultValue": 120,
      "scope": 5,
      "restricted": false
    },
    "editor.mouseWheelScrollSensitivity": {
      "markdownDescription": "A multiplier to be used on the `deltaX` and `deltaY` of mouse wheel scroll events.",
      "type": "number",
      "default": 1,
      "defaultDefaultValue": 1,
      "scope": 5,
      "restricted": false
    },
    "editor.mouseWheelZoom": {
      "markdownDescription": "Zoom the font of the editor when using mouse wheel and holding `Ctrl`.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.multiCursorMergeOverlapping": {
      "description": "Merge multiple cursors when they are overlapping.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.multiCursorModifier": {
      "markdownEnumDescriptions": [
        "Maps to `Control` on Windows and Linux and to `Command` on macOS.",
        "Maps to `Alt` on Windows and Linux and to `Option` on macOS."
      ],
      "markdownDescription": "The modifier to be used to add multiple cursors with the mouse. The Go to Definition and Open Link mouse gestures will adapt such that they do not conflict with the multicursor modifier. [Read more](https://code.visualstudio.com/docs/editor/codebasics#_multicursor-modifier).",
      "type": "string",
      "enum": [
        "ctrlCmd",
        "alt"
      ],
      "default": "alt",
      "defaultDefaultValue": "alt",
      "scope": 5,
      "restricted": false
    },
    "editor.multiCursorPaste": {
      "markdownEnumDescriptions": [
        "Each cursor pastes a single line of the text.",
        "Each cursor pastes the full text."
      ],
      "markdownDescription": "Controls pasting when the line count of the pasted text matches the cursor count.",
      "type": "string",
      "enum": [
        "spread",
        "full"
      ],
      "default": "spread",
      "defaultDefaultValue": "spread",
      "scope": 5,
      "restricted": false
    },
    "editor.occurrencesHighlight": {
      "description": "Controls whether the editor should highlight semantic symbol occurrences.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.overviewRulerBorder": {
      "description": "Controls whether a border should be drawn around the overview ruler.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.padding.top": {
      "type": "number",
      "default": 0,
      "minimum": 0,
      "maximum": 1000,
      "description": "Controls the amount of space between the top edge of the editor and the first line.",
      "defaultDefaultValue": 0,
      "scope": 5,
      "restricted": false
    },
    "editor.padding.bottom": {
      "type": "number",
      "default": 0,
      "minimum": 0,
      "maximum": 1000,
      "description": "Controls the amount of space between the bottom edge of the editor and the last line.",
      "defaultDefaultValue": 0,
      "scope": 5,
      "restricted": false
    },
    "editor.parameterHints.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Enables a pop-up that shows parameter documentation and type information as you type.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.parameterHints.cycle": {
      "type": "boolean",
      "default": false,
      "description": "Controls whether the parameter hints menu cycles or closes when reaching the end of the list.",
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.peekWidgetDefaultFocus": {
      "enumDescriptions": [
        "Focus the tree when opening peek",
        "Focus the editor when opening peek"
      ],
      "description": "Controls whether to focus the inline editor or the tree in the peek widget.",
      "type": "string",
      "enum": [
        "tree",
        "editor"
      ],
      "default": "tree",
      "defaultDefaultValue": "tree",
      "scope": 5,
      "restricted": false
    },
    "editor.definitionLinkOpensInPeek": {
      "description": "Controls whether the Go to Definition mouse gesture always opens the peek widget.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.quickSuggestions": {
      "anyOf": [
        {
          "type": "boolean"
        },
        {
          "type": "object",
          "properties": {
            "strings": {
              "type": "boolean",
              "default": false,
              "description": "Enable quick suggestions inside strings."
            },
            "comments": {
              "type": "boolean",
              "default": false,
              "description": "Enable quick suggestions inside comments."
            },
            "other": {
              "type": "boolean",
              "default": true,
              "description": "Enable quick suggestions outside of strings and comments."
            }
          }
        }
      ],
      "default": {
        "other": true,
        "comments": false,
        "strings": false
      },
      "description": "Controls whether suggestions should automatically show up while typing.",
      "defaultDefaultValue": {
        "other": true,
        "comments": false,
        "strings": false
      },
      "scope": 5,
      "restricted": false
    },
    "editor.quickSuggestionsDelay": {
      "description": "Controls the delay in milliseconds after which quick suggestions will show up.",
      "type": "integer",
      "default": 10,
      "minimum": 0,
      "maximum": 1073741824,
      "defaultDefaultValue": 10,
      "scope": 5,
      "restricted": false
    },
    "editor.renameOnType": {
      "description": "Controls whether the editor auto renames on type.",
      "markdownDeprecationMessage": "Deprecated, use `editor.linkedEditing` instead.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false,
      "deprecationMessage": "Deprecated, use `editor.linkedEditing` instead."
    },
    "editor.renderControlCharacters": {
      "description": "Controls whether the editor should render control characters.",
      "restricted": true,
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5
    },
    "editor.renderFinalNewline": {
      "description": "Render last line number when the file ends with a newline.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.renderLineHighlight": {
      "enumDescriptions": [
        "",
        "",
        "",
        "Highlights both the gutter and the current line."
      ],
      "description": "Controls how the editor should render the current line highlight.",
      "type": "string",
      "enum": [
        "none",
        "gutter",
        "line",
        "all"
      ],
      "default": "line",
      "defaultDefaultValue": "line",
      "scope": 5,
      "restricted": false
    },
    "editor.renderLineHighlightOnlyWhenFocus": {
      "description": "Controls if the editor should render the current line highlight only when the editor is focused.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.renderWhitespace": {
      "enumDescriptions": [
        "",
        "Render whitespace characters except for single spaces between words.",
        "Render whitespace characters only on selected text.",
        "Render only trailing whitespace characters.",
        ""
      ],
      "description": "Controls how the editor should render whitespace characters.",
      "type": "string",
      "enum": [
        "none",
        "boundary",
        "selection",
        "trailing",
        "all"
      ],
      "default": "selection",
      "defaultDefaultValue": "selection",
      "scope": 5,
      "restricted": false
    },
    "editor.roundedSelection": {
      "description": "Controls whether selections should have rounded corners.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.rulers": {
      "type": "array",
      "items": {
        "anyOf": [
          {
            "type": "number",
            "description": "Number of monospace characters at which this editor ruler will render."
          },
          {
            "type": [
              "object"
            ],
            "properties": {
              "column": {
                "type": "number",
                "description": "Number of monospace characters at which this editor ruler will render."
              },
              "color": {
                "type": "string",
                "description": "Color of this editor ruler.",
                "format": "color-hex"
              }
            }
          }
        ]
      },
      "default": [],
      "description": "Render vertical rulers after a certain number of monospace characters. Use multiple values for multiple rulers. No rulers are drawn if array is empty.",
      "defaultDefaultValue": [],
      "scope": 5,
      "restricted": false
    },
    "editor.scrollbar.vertical": {
      "type": "string",
      "enum": [
        "auto",
        "visible",
        "hidden"
      ],
      "enumDescriptions": [
        "The vertical scrollbar will be visible only when necessary.",
        "The vertical scrollbar will always be visible.",
        "The vertical scrollbar will always be hidden."
      ],
      "default": "auto",
      "description": "Controls the visibility of the vertical scrollbar.",
      "defaultDefaultValue": "auto",
      "scope": 5,
      "restricted": false
    },
    "editor.scrollbar.horizontal": {
      "type": "string",
      "enum": [
        "auto",
        "visible",
        "hidden"
      ],
      "enumDescriptions": [
        "The horizontal scrollbar will be visible only when necessary.",
        "The horizontal scrollbar will always be visible.",
        "The horizontal scrollbar will always be hidden."
      ],
      "default": "auto",
      "description": "Controls the visibility of the horizontal scrollbar.",
      "defaultDefaultValue": "auto",
      "scope": 5,
      "restricted": false
    },
    "editor.scrollbar.verticalScrollbarSize": {
      "type": "number",
      "default": 14,
      "description": "The width of the vertical scrollbar.",
      "defaultDefaultValue": 14,
      "scope": 5,
      "restricted": false
    },
    "editor.scrollbar.horizontalScrollbarSize": {
      "type": "number",
      "default": 12,
      "description": "The height of the horizontal scrollbar.",
      "defaultDefaultValue": 12,
      "scope": 5,
      "restricted": false
    },
    "editor.scrollbar.scrollByPage": {
      "type": "boolean",
      "default": false,
      "description": "Controls whether clicks scroll by page or jump to click position.",
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.scrollBeyondLastColumn": {
      "description": "Controls the number of extra characters beyond which the editor will scroll horizontally.",
      "type": "integer",
      "default": 5,
      "minimum": 0,
      "maximum": 1073741824,
      "defaultDefaultValue": 5,
      "scope": 5,
      "restricted": false
    },
    "editor.scrollBeyondLastLine": {
      "description": "Controls whether the editor will scroll beyond the last line.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.scrollPredominantAxis": {
      "description": "Scroll only along the predominant axis when scrolling both vertically and horizontally at the same time. Prevents horizontal drift when scrolling vertically on a trackpad.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.selectionHighlight": {
      "description": "Controls whether the editor should highlight matches similar to the selection.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.showFoldingControls": {
      "enumDescriptions": [
        "Always show the folding controls.",
        "Only show the folding controls when the mouse is over the gutter."
      ],
      "description": "Controls when the folding controls on the gutter are shown.",
      "type": "string",
      "enum": [
        "always",
        "mouseover"
      ],
      "default": "mouseover",
      "defaultDefaultValue": "mouseover",
      "scope": 5,
      "restricted": false
    },
    "editor.showUnused": {
      "description": "Controls fading out of unused code.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.snippetSuggestions": {
      "enumDescriptions": [
        "Show snippet suggestions on top of other suggestions.",
        "Show snippet suggestions below other suggestions.",
        "Show snippets suggestions with other suggestions.",
        "Do not show snippet suggestions."
      ],
      "description": "Controls whether snippets are shown with other suggestions and how they are sorted.",
      "type": "string",
      "enum": [
        "top",
        "bottom",
        "inline",
        "none"
      ],
      "default": "inline",
      "defaultDefaultValue": "inline",
      "scope": 5,
      "restricted": false
    },
    "editor.smartSelect.selectLeadingAndTrailingWhitespace": {
      "description": "Whether leading and trailing whitespace should always be selected.",
      "default": true,
      "type": "boolean",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.smoothScrolling": {
      "description": "Controls whether the editor will scroll using an animation.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.stickyTabStops": {
      "description": "Emulate selection behavior of tab characters when using spaces for indentation. Selection will stick to tab stops.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.insertMode": {
      "type": "string",
      "enum": [
        "insert",
        "replace"
      ],
      "enumDescriptions": [
        "Insert suggestion without overwriting text right of the cursor.",
        "Insert suggestion and overwrite text right of the cursor."
      ],
      "default": "insert",
      "description": "Controls whether words are overwritten when accepting completions. Note that this depends on extensions opting into this feature.",
      "defaultDefaultValue": "insert",
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.filterGraceful": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether filtering and sorting suggestions accounts for small typos.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.localityBonus": {
      "type": "boolean",
      "default": false,
      "description": "Controls whether sorting favors words that appear close to the cursor.",
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.shareSuggestSelections": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Controls whether remembered suggestion selections are shared between multiple workspaces and windows (needs `#editor.suggestSelection#`).",
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.snippetsPreventQuickSuggestions": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether an active snippet prevents quick suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showIcons": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether to show or hide icons in suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showStatusBar": {
      "type": "boolean",
      "default": false,
      "description": "Controls the visibility of the status bar at the bottom of the suggest widget.",
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.preview": {
      "type": "boolean",
      "default": false,
      "description": "Controls whether to preview the suggestion outcome in the editor.",
      "defaultDefaultValue": false,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showInlineDetails": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether suggest details show inline with the label or only in the details widget",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.maxVisibleSuggestions": {
      "type": "number",
      "deprecationMessage": "This setting is deprecated. The suggest widget can now be resized.",
      "default": 0,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.filteredTypes": {
      "type": "object",
      "deprecationMessage": "This setting is deprecated, please use separate settings like 'editor.suggest.showKeywords' or 'editor.suggest.showSnippets' instead.",
      "default": {},
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showMethods": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `method`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showFunctions": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `function`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showConstructors": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `constructor`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showDeprecated": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `deprecated`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showFields": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `field`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showVariables": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `variable`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showClasses": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `class`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showStructs": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `struct`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showInterfaces": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `interface`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showModules": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `module`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showProperties": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `property`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showEvents": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `event`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showOperators": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `operator`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showUnits": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `unit`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showValues": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `value`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showConstants": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `constant`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showEnums": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `enum`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showEnumMembers": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `enumMember`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showKeywords": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `keyword`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showWords": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `text`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showColors": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `color`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showFiles": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `file`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showReferences": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `reference`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showCustomcolors": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `customcolor`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showFolders": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `folder`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showTypeParameters": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `typeParameter`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showSnippets": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `snippet`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showUsers": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `user`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggest.showIssues": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled IntelliSense shows `issues`-suggestions.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggestFontSize": {
      "markdownDescription": "Font size for the suggest widget. When set to `0`, the value of `#editor.fontSize#` is used.",
      "type": "integer",
      "default": 0,
      "minimum": 0,
      "maximum": 1000,
      "defaultDefaultValue": 0,
      "scope": 5,
      "restricted": false
    },
    "editor.suggestLineHeight": {
      "markdownDescription": "Line height for the suggest widget. When set to `0`, the value of `#editor.lineHeight#` is used. The minimum value is 8.",
      "type": "integer",
      "default": 0,
      "minimum": 0,
      "maximum": 1000,
      "defaultDefaultValue": 0,
      "scope": 5,
      "restricted": false
    },
    "editor.suggestOnTriggerCharacters": {
      "description": "Controls whether suggestions should automatically show up when typing trigger characters.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.suggestSelection": {
      "markdownEnumDescriptions": [
        "Always select the first suggestion.",
        "Select recent suggestions unless further typing selects one, e.g. `console.| -> console.log` because `log` has been completed recently.",
        "Select suggestions based on previous prefixes that have completed those suggestions, e.g. `co -> console` and `con -> const`."
      ],
      "description": "Controls how suggestions are pre-selected when showing the suggest list.",
      "type": "string",
      "enum": [
        "first",
        "recentlyUsed",
        "recentlyUsedByPrefix"
      ],
      "default": "first",
      "defaultDefaultValue": "first",
      "scope": 5,
      "restricted": false
    },
    "editor.tabCompletion": {
      "enumDescriptions": [
        "Tab complete will insert the best matching suggestion when pressing tab.",
        "Disable tab completions.",
        "Tab complete snippets when their prefix match. Works best when 'quickSuggestions' aren't enabled."
      ],
      "description": "Enables tab completions.",
      "type": "string",
      "enum": [
        "on",
        "off",
        "onlySnippets"
      ],
      "default": "off",
      "defaultDefaultValue": "off",
      "scope": 5,
      "restricted": false
    },
    "editor.unicodeHighlight.nonBasicASCII": {
      "restricted": true,
      "type": [
        "boolean",
        "string"
      ],
      "enum": [
        true,
        false,
        "inUntrustedWorkspace"
      ],
      "default": "inUntrustedWorkspace",
      "description": "Controls whether all non-basic ASCII characters are highlighted. Only characters between U+0020 and U+007E, tab, line-feed and carriage-return are considered basic ASCII.",
      "defaultDefaultValue": "inUntrustedWorkspace",
      "scope": 5
    },
    "editor.unicodeHighlight.invisibleCharacters": {
      "restricted": true,
      "type": "boolean",
      "default": true,
      "description": "Controls whether characters that just reserve space or have no width at all are highlighted.",
      "defaultDefaultValue": true,
      "scope": 5
    },
    "editor.unicodeHighlight.ambiguousCharacters": {
      "restricted": true,
      "type": "boolean",
      "default": true,
      "description": "Controls whether characters are highlighted that can be confused with basic ASCII characters, except those that are common in the current user locale.",
      "defaultDefaultValue": true,
      "scope": 5
    },
    "editor.unicodeHighlight.includeComments": {
      "restricted": true,
      "type": [
        "boolean",
        "string"
      ],
      "enum": [
        true,
        false,
        "inUntrustedWorkspace"
      ],
      "default": "inUntrustedWorkspace",
      "description": "Controls whether characters in comments should also be subject to unicode highlighting.",
      "defaultDefaultValue": "inUntrustedWorkspace",
      "scope": 5
    },
    "editor.unicodeHighlight.includeStrings": {
      "restricted": true,
      "type": [
        "boolean",
        "string"
      ],
      "enum": [
        true,
        false,
        "inUntrustedWorkspace"
      ],
      "default": true,
      "description": "Controls whether characters in strings should also be subject to unicode highlighting.",
      "defaultDefaultValue": true,
      "scope": 5
    },
    "editor.unicodeHighlight.allowedCharacters": {
      "restricted": true,
      "type": "object",
      "default": {},
      "description": "Defines allowed characters that are not being highlighted.",
      "additionalProperties": {
        "type": "boolean"
      },
      "defaultDefaultValue": {},
      "scope": 5
    },
    "editor.unicodeHighlight.allowedLocales": {
      "restricted": true,
      "type": "object",
      "additionalProperties": {
        "type": "boolean"
      },
      "default": {
        "_os": true,
        "_vscode": true
      },
      "description": "Unicode characters that are common in allowed locales are not being highlighted.",
      "defaultDefaultValue": {
        "_os": true,
        "_vscode": true
      },
      "scope": 5
    },
    "editor.unusualLineTerminators": {
      "enumDescriptions": [
        "Unusual line terminators are automatically removed.",
        "Unusual line terminators are ignored.",
        "Unusual line terminators prompt to be removed."
      ],
      "description": "Remove unusual line terminators that might cause problems.",
      "type": "string",
      "enum": [
        "auto",
        "off",
        "prompt"
      ],
      "default": "prompt",
      "defaultDefaultValue": "prompt",
      "scope": 5,
      "restricted": false
    },
    "editor.useTabStops": {
      "description": "Inserting and deleting whitespace follows tab stops.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.wordSeparators": {
      "description": "Characters that will be used as word separators when doing word related navigations or operations.",
      "type": "string",
      "default": "`~!@#$%^&*()-=+[{]}\\|;:'\",.<>/?",
      "defaultDefaultValue": "`~!@#$%^&*()-=+[{]}\\|;:'\",.<>/?",
      "scope": 5,
      "restricted": false
    },
    "editor.wordWrap": {
      "markdownEnumDescriptions": [
        "Lines will never wrap.",
        "Lines will wrap at the viewport width.",
        "Lines will wrap at `#editor.wordWrapColumn#`.",
        "Lines will wrap at the minimum of viewport and `#editor.wordWrapColumn#`."
      ],
      "description": "Controls how lines should wrap.",
      "type": "string",
      "enum": [
        "off",
        "on",
        "wordWrapColumn",
        "bounded"
      ],
      "default": "off",
      "defaultDefaultValue": "off",
      "scope": 5,
      "restricted": false
    },
    "editor.wordWrapColumn": {
      "markdownDescription": "Controls the wrapping column of the editor when `#editor.wordWrap#` is `wordWrapColumn` or `bounded`.",
      "type": "integer",
      "default": 80,
      "minimum": 1,
      "maximum": 1073741824,
      "defaultDefaultValue": 80,
      "scope": 5,
      "restricted": false
    },
    "editor.wrappingIndent": {
      "enumDescriptions": [
        "No indentation. Wrapped lines begin at column 1.",
        "Wrapped lines get the same indentation as the parent.",
        "Wrapped lines get +1 indentation toward the parent.",
        "Wrapped lines get +2 indentation toward the parent."
      ],
      "description": "Controls the indentation of wrapped lines.",
      "type": "string",
      "enum": [
        "none",
        "same",
        "indent",
        "deepIndent"
      ],
      "default": "same",
      "defaultDefaultValue": "same",
      "scope": 5,
      "restricted": false
    },
    "editor.wrappingStrategy": {
      "enumDescriptions": [
        "Assumes that all characters are of the same width. This is a fast algorithm that works correctly for monospace fonts and certain scripts (like Latin characters) where glyphs are of equal width.",
        "Delegates wrapping points computation to the browser. This is a slow algorithm, that might cause freezes for large files, but it works correctly in all cases."
      ],
      "description": "Controls the algorithm that computes wrapping points.",
      "type": "string",
      "enum": [
        "simple",
        "advanced"
      ],
      "default": "simple",
      "defaultDefaultValue": "simple",
      "scope": 5,
      "restricted": false
    },
    "editor.showDeprecated": {
      "description": "Controls strikethrough deprecated variables.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.inlayHints.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Enables the inlay hints in the editor.",
      "defaultDefaultValue": true,
      "scope": 5,
      "restricted": false
    },
    "editor.inlayHints.fontSize": {
      "type": "number",
      "default": 0,
      "markdownDescription": "Controls font size of inlay hints in the editor. A default of 90% of `#editor.fontSize#` is used when the configured value is less than `5` or greater than the editor font size.",
      "defaultDefaultValue": 0,
      "scope": 5,
      "restricted": false
    },
    "editor.inlayHints.fontFamily": {
      "type": "string",
      "default": "",
      "markdownDescription": "Controls font family of inlay hints in the editor. When set to empty, the `#editor.fontFamily#` is used.",
      "defaultDefaultValue": "",
      "scope": 5,
      "restricted": false
    },
    "[plaintext]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "editor.unicodeHighlight.ambiguousCharacters": false,
        "editor.unicodeHighlight.invisibleCharacters": false
      }
    },
    "http.proxy": {
      "type": "string",
      "pattern": "^https?://([^:]*(:[^@]*)?@)?([^:]+|\\[[:0-9a-fA-F]+\\])(:\\d+)?/?$|^$",
      "markdownDescription": "The proxy setting to use. If not set, will be inherited from the `http_proxy` and `https_proxy` environment variables.",
      "restricted": true,
      "default": "",
      "scope": 2
    },
    "http.proxyStrictSSL": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether the proxy server certificate should be verified against the list of supplied CAs.",
      "restricted": true,
      "defaultDefaultValue": true,
      "scope": 2
    },
    "http.proxyAuthorization": {
      "type": [
        "null",
        "string"
      ],
      "default": null,
      "markdownDescription": "The value to send as the `Proxy-Authorization` header for every network request.",
      "restricted": true,
      "defaultDefaultValue": null,
      "scope": 2
    },
    "http.proxySupport": {
      "type": "string",
      "enum": [
        "off",
        "on",
        "fallback",
        "override"
      ],
      "enumDescriptions": [
        "Disable proxy support for extensions.",
        "Enable proxy support for extensions.",
        "Enable proxy support for extensions, fall back to request options, when no proxy found.",
        "Enable proxy support for extensions, override request options."
      ],
      "default": "override",
      "description": "Use the proxy support for extensions.",
      "restricted": true,
      "defaultDefaultValue": "override",
      "scope": 2
    },
    "http.systemCertificates": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether CA certificates should be loaded from the OS. (On Windows and macOS, a reload of the window is required after turning this off.)",
      "restricted": true,
      "defaultDefaultValue": true,
      "scope": 2
    },
    "telemetry.telemetryLevel": {
      "type": "string",
      "enum": [
        "all",
        "error",
        "crash",
        "off"
      ],
      "enumDescriptions": [
        "Sends usage data, errors, and crash reports.",
        "Sends general error telemetry and crash reports.",
        "Sends OS level crash reports.",
        "Disables all product telemetry."
      ],
      "markdownDescription": "\nControls all core and first party extension telemetry. This helps us to better understand how Visual Studio Code is performing, where improvements need to be made, and how features are being used. Read more about the [data we collect](https://aka.ms/vscode-telemetry) and our [privacy statement](https://go.microsoft.com/fwlink/?LinkId=786907). A full restart of the application is necessary for crash reporting changes to take effect.\n\n&nbsp;\n\nThe following table outlines the data sent with each setting:\n\n|       | Crash Reports | Error Telemetry | Usage Data |\n|:------|:---------------------:|:---------------:|:--------------:|\n| all   |            ✓          |        ✓        |        ✓       |\n| error |            ✓          |        ✓        |        -       |\n| crash |            ✓          |        -        |        -       |\n| off   |            -          |        -        |        -       |\n\n\n&nbsp;\n\n****Note:*** If this setting is 'off', no telemetry will be sent regardless of other telemetry settings. If this setting is set to anything except 'off' and telemetry is disabled with deprecated settings, no telemetry will be sent.*\n",
      "default": "all",
      "restricted": true,
      "scope": 1,
      "tags": [
        "usesOnlineServices",
        "telemetry"
      ],
      "defaultDefaultValue": "all"
    },
    "telemetry.enableTelemetry": {
      "type": "boolean",
      "markdownDescription": "Enable diagnostic data to be collected. This helps us to better understand how Visual Studio Code is performing and where improvements need to be made. [Read more](https://go.microsoft.com/fwlink/?LinkId=786907) about what we collect and our privacy statement.",
      "default": true,
      "restricted": true,
      "markdownDeprecationMessage": "If this setting is false, no telemetry will be sent regardless of the new setting's value. Deprecated in favor of the `#telemetry.telemetryLevel#` setting.",
      "scope": 1,
      "tags": [
        "usesOnlineServices",
        "telemetry"
      ],
      "defaultDefaultValue": true,
      "deprecationMessage": "If this setting is false, no telemetry will be sent regardless of the new setting's value. Deprecated in favor of the `#telemetry.telemetryLevel#` setting."
    },
    "editor.rename.enablePreview": {
      "scope": 5,
      "description": "Enable/disable the ability to preview changes before renaming",
      "default": true,
      "type": "boolean",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "workbench.list.multiSelectModifier": {
      "type": "string",
      "enum": [
        "ctrlCmd",
        "alt"
      ],
      "enumDescriptions": [
        "Maps to `Control` on Windows and Linux and to `Command` on macOS.",
        "Maps to `Alt` on Windows and Linux and to `Option` on macOS."
      ],
      "default": "ctrlCmd",
      "description": "The modifier to be used to add an item in trees and lists to a multi-selection with the mouse (for example in the explorer, open editors and scm view). The 'Open to Side' mouse gestures - if supported - will adapt such that they do not conflict with the multiselect modifier.",
      "defaultDefaultValue": "ctrlCmd",
      "scope": 3,
      "restricted": false
    },
    "workbench.list.openMode": {
      "type": "string",
      "enum": [
        "singleClick",
        "doubleClick"
      ],
      "default": "singleClick",
      "description": "Controls how to open items in trees and lists using the mouse (if supported). Note that some trees and lists might choose to ignore this setting if it is not applicable.",
      "defaultDefaultValue": "singleClick",
      "scope": 3,
      "restricted": false
    },
    "workbench.list.horizontalScrolling": {
      "type": "boolean",
      "default": false,
      "description": "Controls whether lists and trees support horizontal scrolling in the workbench. Warning: turning on this setting has a performance implication.",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.tree.indent": {
      "type": "number",
      "default": 8,
      "minimum": 4,
      "maximum": 40,
      "description": "Controls tree indentation in pixels.",
      "defaultDefaultValue": 8,
      "scope": 3,
      "restricted": false
    },
    "workbench.tree.renderIndentGuides": {
      "type": "string",
      "enum": [
        "none",
        "onHover",
        "always"
      ],
      "default": "onHover",
      "description": "Controls whether the tree should render indent guides.",
      "defaultDefaultValue": "onHover",
      "scope": 3,
      "restricted": false
    },
    "workbench.list.smoothScrolling": {
      "type": "boolean",
      "default": false,
      "description": "Controls whether lists and trees have smooth scrolling.",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.list.mouseWheelScrollSensitivity": {
      "type": "number",
      "default": 1,
      "description": "A multiplier to be used on the `deltaX` and `deltaY` of mouse wheel scroll events.",
      "defaultDefaultValue": 1,
      "scope": 3,
      "restricted": false
    },
    "workbench.list.fastScrollSensitivity": {
      "type": "number",
      "default": 5,
      "description": "Scrolling speed multiplier when pressing `Alt`.",
      "defaultDefaultValue": 5,
      "scope": 3,
      "restricted": false
    },
    "workbench.list.keyboardNavigation": {
      "type": "string",
      "enum": [
        "simple",
        "highlight",
        "filter"
      ],
      "enumDescriptions": [
        "Simple keyboard navigation focuses elements which match the keyboard input. Matching is done only on prefixes.",
        "Highlight keyboard navigation highlights elements which match the keyboard input. Further up and down navigation will traverse only the highlighted elements.",
        "Filter keyboard navigation will filter out and hide all the elements which do not match the keyboard input."
      ],
      "default": "highlight",
      "description": "Controls the keyboard navigation style for lists and trees in the workbench. Can be simple, highlight and filter.",
      "defaultDefaultValue": "highlight",
      "scope": 3,
      "restricted": false
    },
    "workbench.list.automaticKeyboardNavigation": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Controls whether keyboard navigation in lists and trees is automatically triggered simply by typing. If set to `false`, keyboard navigation is only triggered when executing the `list.toggleKeyboardNavigation` command, for which you can assign a keyboard shortcut.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "workbench.tree.expandMode": {
      "type": "string",
      "enum": [
        "singleClick",
        "doubleClick"
      ],
      "default": "singleClick",
      "description": "Controls how tree folders are expanded when clicking the folder names. Note that some trees and lists might choose to ignore this setting if it is not applicable.",
      "defaultDefaultValue": "singleClick",
      "scope": 3,
      "restricted": false
    },
    "update.mode": {
      "type": "string",
      "enum": [
        "none",
        "manual",
        "start",
        "default"
      ],
      "default": "default",
      "scope": 1,
      "description": "Configure whether you receive automatic updates. Requires a restart after change. The updates are fetched from a Microsoft online service.",
      "tags": [
        "usesOnlineServices"
      ],
      "enumDescriptions": [
        "Disable updates.",
        "Disable automatic background update checks. Updates will be available if you manually check for updates.",
        "Check for updates only on startup. Disable automatic background update checks.",
        "Enable automatic update checks. Code will check for updates automatically and periodically."
      ],
      "defaultDefaultValue": "default",
      "restricted": false
    },
    "update.channel": {
      "type": "string",
      "default": "default",
      "scope": 1,
      "description": "Configure whether you receive automatic updates. Requires a restart after change. The updates are fetched from a Microsoft online service.",
      "deprecationMessage": "This setting is deprecated, please use 'update.mode' instead.",
      "defaultDefaultValue": "default",
      "restricted": false
    },
    "update.enableWindowsBackgroundUpdates": {
      "type": "boolean",
      "default": true,
      "scope": 1,
      "title": "Enable Background Updates on Windows",
      "description": "Enable to download and install new VS Code versions in the background on Windows.",
      "included": true,
      "defaultDefaultValue": true,
      "restricted": false
    },
    "update.showReleaseNotes": {
      "type": "boolean",
      "default": true,
      "scope": 1,
      "description": "Show Release Notes after an update. The Release Notes are fetched from a Microsoft online service.",
      "tags": [
        "usesOnlineServices"
      ],
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.enabled": {
      "description": "Enable/disable navigation breadcrumbs.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "breadcrumbs.filePath": {
      "description": "Controls whether and how file paths are shown in the breadcrumbs view.",
      "type": "string",
      "default": "on",
      "enum": [
        "on",
        "off",
        "last"
      ],
      "enumDescriptions": [
        "Show the file path in the breadcrumbs view.",
        "Do not show the file path in the breadcrumbs view.",
        "Only show the last element of the file path in the breadcrumbs view."
      ],
      "defaultDefaultValue": "on",
      "scope": 3,
      "restricted": false
    },
    "breadcrumbs.symbolPath": {
      "description": "Controls whether and how symbols are shown in the breadcrumbs view.",
      "type": "string",
      "default": "on",
      "enum": [
        "on",
        "off",
        "last"
      ],
      "enumDescriptions": [
        "Show all symbols in the breadcrumbs view.",
        "Do not show symbols in the breadcrumbs view.",
        "Only show the current symbol in the breadcrumbs view."
      ],
      "defaultDefaultValue": "on",
      "scope": 3,
      "restricted": false
    },
    "breadcrumbs.symbolSortOrder": {
      "description": "Controls how symbols are sorted in the breadcrumbs outline view.",
      "type": "string",
      "default": "position",
      "scope": 5,
      "enum": [
        "position",
        "name",
        "type"
      ],
      "enumDescriptions": [
        "Show symbol outline in file position order.",
        "Show symbol outline in alphabetical order.",
        "Show symbol outline in symbol type order."
      ],
      "defaultDefaultValue": "position",
      "restricted": false
    },
    "breadcrumbs.icons": {
      "description": "Render breadcrumb items with icons.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "breadcrumbs.showFiles": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `file`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showModules": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `module`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showNamespaces": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `namespace`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showPackages": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `package`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showClasses": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `class`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showMethods": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `method`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showProperties": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `property`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showFields": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `field`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showConstructors": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `constructor`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showEnums": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `enum`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showInterfaces": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `interface`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showFunctions": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `function`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showVariables": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `variable`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showConstants": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `constant`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showStrings": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `string`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showNumbers": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `number`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showBooleans": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `boolean`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showArrays": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `array`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showObjects": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `object`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showKeys": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `key`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showNull": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `null`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showEnumMembers": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `enumMember`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showStructs": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `struct`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showEvents": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `event`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showOperators": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `operator`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "breadcrumbs.showTypeParameters": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled breadcrumbs show `typeParameter`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "workbench.editor.titleScrollbarSizing": {
      "type": "string",
      "enum": [
        "default",
        "large"
      ],
      "enumDescriptions": [
        "The default size.",
        "Increases the size, so it can be grabbed more easily with the mouse."
      ],
      "description": "Controls the height of the scrollbars used for tabs and breadcrumbs in the editor title area.",
      "default": "default",
      "defaultDefaultValue": "default",
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.showTabs": {
      "type": "boolean",
      "description": "Controls whether opened editors should show in tabs or not.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.wrapTabs": {
      "type": "boolean",
      "markdownDescription": "Controls whether tabs should be wrapped over multiple lines when exceeding available space or whether a scrollbar should appear instead. This value is ignored when `#workbench.editor.showTabs#` is disabled.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.scrollToSwitchTabs": {
      "type": "boolean",
      "markdownDescription": "Controls whether scrolling over tabs will open them or not. By default tabs will only reveal upon scrolling, but not open. You can press and hold the Shift-key while scrolling to change this behavior for that duration. This value is ignored when `#workbench.editor.showTabs#` is disabled.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.highlightModifiedTabs": {
      "type": "boolean",
      "markdownDescription": "Controls whether a top border is drawn on tabs for editors that have unsaved changes. This value is ignored when `#workbench.editor.showTabs#` is disabled.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.decorations.badges": {
      "type": "boolean",
      "markdownDescription": "Controls whether editor file decorations should use badges.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.decorations.colors": {
      "type": "boolean",
      "markdownDescription": "Controls whether editor file decorations should use colors.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.labelFormat": {
      "type": "string",
      "enum": [
        "default",
        "short",
        "medium",
        "long"
      ],
      "enumDescriptions": [
        "Show the name of the file. When tabs are enabled and two files have the same name in one group the distinguishing sections of each file's path are added. When tabs are disabled, the path relative to the workspace folder is shown if the editor is active.",
        "Show the name of the file followed by its directory name.",
        "Show the name of the file followed by its path relative to the workspace folder.",
        "Show the name of the file followed by its absolute path."
      ],
      "default": "default",
      "description": "Controls the format of the label for an editor.",
      "defaultDefaultValue": "default",
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.untitled.labelFormat": {
      "type": "string",
      "enum": [
        "content",
        "name"
      ],
      "enumDescriptions": [
        "The name of the untitled file is derived from the contents of its first line unless it has an associated file path. It will fallback to the name in case the line is empty or contains no word characters.",
        "The name of the untitled file is not derived from the contents of the file."
      ],
      "default": "content",
      "description": "Controls the format of the label for an untitled editor.",
      "defaultDefaultValue": "content",
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.untitled.hint": {
      "type": "string",
      "enum": [
        "text",
        "hidden"
      ],
      "default": "text",
      "markdownDescription": "Controls if the untitled hint should be inline text in the editor or a floating button or hidden.",
      "defaultDefaultValue": "text",
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.languageDetection": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether the language in a text editor is automatically detected unless the language has been explicitly set by the language picker. This can also be scoped by language so you can specify which languages you do not want to be switched off of. This is useful for languages like Markdown that often contain other languages that might trick language detection into thinking it's the embedded language and not Markdown.",
      "scope": 5,
      "defaultDefaultValue": true,
      "restricted": false
    },
    "workbench.editor.historyBasedLanguageDetection": {
      "type": "boolean",
      "default": false,
      "description": "Enables use of editor history in language detection. This causes automatic language detection to favor languages that have been recently opened and allows for automatic language detection to operate with smaller inputs.",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.tabCloseButton": {
      "type": "string",
      "enum": [
        "left",
        "right",
        "off"
      ],
      "default": "right",
      "markdownDescription": "Controls the position of the editor's tabs close buttons, or disables them when set to 'off'. This value is ignored when `#workbench.editor.showTabs#` is disabled.",
      "defaultDefaultValue": "right",
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.tabSizing": {
      "type": "string",
      "enum": [
        "fit",
        "shrink"
      ],
      "default": "fit",
      "enumDescriptions": [
        "Always keep tabs large enough to show the full editor label.",
        "Allow tabs to get smaller when the available space is not enough to show all tabs at once."
      ],
      "markdownDescription": "Controls the sizing of editor tabs. This value is ignored when `#workbench.editor.showTabs#` is disabled.",
      "defaultDefaultValue": "fit",
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.pinnedTabSizing": {
      "type": "string",
      "enum": [
        "normal",
        "compact",
        "shrink"
      ],
      "default": "normal",
      "enumDescriptions": [
        "A pinned tab inherits the look of non pinned tabs.",
        "A pinned tab will show in a compact form with only icon or first letter of the editor name.",
        "A pinned tab shrinks to a compact fixed size showing parts of the editor name."
      ],
      "markdownDescription": "Controls the sizing of pinned editor tabs. Pinned tabs are sorted to the beginning of all opened tabs and typically do not close until unpinned. This value is ignored when `#workbench.editor.showTabs#` is disabled.",
      "defaultDefaultValue": "normal",
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.splitSizing": {
      "type": "string",
      "enum": [
        "distribute",
        "split"
      ],
      "default": "distribute",
      "enumDescriptions": [
        "Splits all the editor groups to equal parts.",
        "Splits the active editor group to equal parts."
      ],
      "description": "Controls the sizing of editor groups when splitting them.",
      "defaultDefaultValue": "distribute",
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.splitOnDragAndDrop": {
      "type": "boolean",
      "default": true,
      "description": "Controls if editor groups can be split from drag and drop operations by dropping an editor or file on the edges of the editor area.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.focusRecentEditorAfterClose": {
      "type": "boolean",
      "description": "Controls whether tabs are closed in most recently used order or from left to right.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.showIcons": {
      "type": "boolean",
      "description": "Controls whether opened editors should show with an icon or not. This requires a file icon theme to be enabled as well.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.enablePreview": {
      "type": "boolean",
      "description": "Controls whether opened editors show as preview editors. Preview editors do not stay open, are reused until explicitly set to be kept open (e.g. via double click or editing), and show file names in italics.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.enablePreviewFromQuickOpen": {
      "type": "boolean",
      "markdownDescription": "Controls whether editors opened from Quick Open show as preview editors. Preview editors do not stay open, and are reused until explicitly set to be kept open (e.g. via double click or editing). This value is ignored when `#workbench.editor.enablePreview#` is disabled.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.enablePreviewFromCodeNavigation": {
      "type": "boolean",
      "markdownDescription": "Controls whether editors remain in preview when a code navigation is started from them. Preview editors do not stay open, and are reused until explicitly set to be kept open (e.g. via double click or editing). This value is ignored when `#workbench.editor.enablePreview#` is disabled.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.closeOnFileDelete": {
      "type": "boolean",
      "description": "Controls whether editors showing a file that was opened during the session should close automatically when getting deleted or renamed by some other process. Disabling this will keep the editor open  on such an event. Note that deleting from within the application will always close the editor and that editors with unsaved changes will never close to preserve your data.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.openPositioning": {
      "type": "string",
      "enum": [
        "left",
        "right",
        "first",
        "last"
      ],
      "default": "right",
      "markdownDescription": "Controls where editors open. Select `left` or `right` to open editors to the left or right of the currently active one. Select `first` or `last` to open editors independently from the currently active one.",
      "defaultDefaultValue": "right",
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.openSideBySideDirection": {
      "type": "string",
      "enum": [
        "right",
        "down"
      ],
      "default": "right",
      "markdownDescription": "Controls the default direction of editors that are opened side by side (for example, from the Explorer). By default, editors will open on the right hand side of the currently active one. If changed to `down`, the editors will open below the currently active one.",
      "defaultDefaultValue": "right",
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.closeEmptyGroups": {
      "type": "boolean",
      "description": "Controls the behavior of empty editor groups when the last tab in the group is closed. When enabled, empty groups will automatically close. When disabled, empty groups will remain part of the grid.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.revealIfOpen": {
      "type": "boolean",
      "description": "Controls whether an editor is revealed in any of the visible groups if opened. If disabled, an editor will prefer to open in the currently active editor group. If enabled, an already opened editor will be revealed instead of opened again in the currently active editor group. Note that there are some cases where this setting is ignored, e.g. when forcing an editor to open in a specific group or to the side of the currently active group.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.mouseBackForwardToNavigate": {
      "type": "boolean",
      "description": "Enables the use of mouse buttons four and five for commands 'Go Back' and 'Go Forward'.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.navigationScope": {
      "type": "string",
      "enum": [
        "default",
        "editorGroup",
        "editor"
      ],
      "default": "default",
      "markdownDescription": "Controls the scope of history navigation in editors for commands such as 'Go Back' and 'Go Forward'.",
      "enumDescriptions": [
        "Navigate across all opened editors and editor groups.",
        "Navigate only in editors of the active editor group.",
        "Navigate only in the active editor."
      ],
      "defaultDefaultValue": "default",
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.restoreViewState": {
      "type": "boolean",
      "markdownDescription": "Restores the last editor view state (e.g. scroll position) when re-opening editors after they have been closed. Editor view state is stored per editor group and discarded when a group closes. Use the `#workbench.editor.sharedViewState#` setting to use the last known view state across all editor groups in case no previous view state was found for a editor group.",
      "default": true,
      "scope": 5,
      "defaultDefaultValue": true,
      "restricted": false
    },
    "workbench.editor.sharedViewState": {
      "type": "boolean",
      "description": "Preserves the most recent editor view state (e.g. scroll position) across all editor groups and restores that if no specific editor view state is found for the editor group.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.splitInGroupLayout": {
      "type": "string",
      "enum": [
        "vertical",
        "horizontal"
      ],
      "default": "horizontal",
      "markdownDescription": "Controls the layout for when an editor is split in an editor group to be either vertical or horizontal.",
      "enumDescriptions": [
        "Editors are positioned from top to bottom.",
        "Editors are positioned from left to right."
      ],
      "defaultDefaultValue": "horizontal",
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.centeredLayoutAutoResize": {
      "type": "boolean",
      "default": true,
      "description": "Controls if the centered layout should automatically resize to maximum width when more than one group is open. Once only one group is open it will resize back to the original centered width.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.limit.enabled": {
      "type": "boolean",
      "default": false,
      "description": "Controls if the number of opened editors should be limited or not. When enabled, less recently used editors will close to make space for newly opening editors.",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.limit.value": {
      "type": "number",
      "default": 10,
      "exclusiveMinimum": 0,
      "markdownDescription": "Controls the maximum number of opened editors. Use the `#workbench.editor.limit.perEditorGroup#` setting to control this limit per editor group or across all groups.",
      "defaultDefaultValue": 10,
      "scope": 3,
      "restricted": false
    },
    "workbench.editor.limit.perEditorGroup": {
      "type": "boolean",
      "default": false,
      "description": "Controls if the limit of maximum opened editors should apply per editor group or across all editor groups.",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.commandPalette.history": {
      "type": "number",
      "description": "Controls the number of recently used commands to keep in history for the command palette. Set to 0 to disable command history.",
      "default": 50,
      "defaultDefaultValue": 50,
      "scope": 3,
      "restricted": false
    },
    "workbench.commandPalette.preserveInput": {
      "type": "boolean",
      "description": "Controls whether the last typed input to the command palette should be restored when opening it the next time.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.quickOpen.closeOnFocusLost": {
      "type": "boolean",
      "description": "Controls whether Quick Open should close automatically once it loses focus.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "workbench.quickOpen.preserveInput": {
      "type": "boolean",
      "description": "Controls whether the last typed input to Quick Open should be restored when opening it the next time.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.settings.openDefaultSettings": {
      "type": "boolean",
      "description": "Controls whether opening settings also opens an editor showing all default settings.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.settings.useSplitJSON": {
      "type": "boolean",
      "markdownDescription": "Controls whether to use the split JSON editor when editing settings as JSON.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.settings.openDefaultKeybindings": {
      "type": "boolean",
      "description": "Controls whether opening keybinding settings also opens an editor showing all default keybindings.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.sideBar.location": {
      "type": "string",
      "enum": [
        "left",
        "right"
      ],
      "default": "left",
      "description": "Controls the location of the sidebar and activity bar. They can either show on the left or right of the workbench.",
      "defaultDefaultValue": "left",
      "scope": 3,
      "restricted": false
    },
    "workbench.panel.defaultLocation": {
      "type": "string",
      "enum": [
        "left",
        "bottom",
        "right"
      ],
      "default": "bottom",
      "description": "Controls the default location of the panel (terminal, debug console, output, problems) in a new workspace. It can either show at the bottom, right, or left of the editor area.",
      "defaultDefaultValue": "bottom",
      "scope": 3,
      "restricted": false
    },
    "workbench.panel.opensMaximized": {
      "type": "string",
      "enum": [
        "always",
        "never",
        "preserve"
      ],
      "default": "preserve",
      "description": "Controls whether the panel opens maximized. It can either always open maximized, never open maximized, or open to the last state it was in before being closed.",
      "enumDescriptions": [
        "Always maximize the panel when opening it.",
        "Never maximize the panel when opening it. The panel will open un-maximized.",
        "Open the panel to the state that it was in, before it was closed."
      ],
      "defaultDefaultValue": "preserve",
      "scope": 3,
      "restricted": false
    },
    "workbench.statusBar.visible": {
      "type": "boolean",
      "default": true,
      "description": "Controls the visibility of the status bar at the bottom of the workbench.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "workbench.activityBar.visible": {
      "type": "boolean",
      "default": true,
      "description": "Controls the visibility of the activity bar in the workbench.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "workbench.activityBar.iconClickBehavior": {
      "type": "string",
      "enum": [
        "toggle",
        "focus"
      ],
      "default": "toggle",
      "description": "Controls the behavior of clicking an activity bar icon in the workbench.",
      "enumDescriptions": [
        "Hide the side bar if the clicked item is already visible.",
        "Focus side bar if the clicked item is already visible."
      ],
      "defaultDefaultValue": "toggle",
      "scope": 3,
      "restricted": false
    },
    "workbench.view.alwaysShowHeaderActions": {
      "type": "boolean",
      "default": false,
      "description": "Controls the visibility of view header actions. View header actions may either be always visible, or only visible when that view is focused or hovered over.",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.settings.editor": {
      "type": "string",
      "enum": [
        "ui",
        "json"
      ],
      "enumDescriptions": [
        "Use the settings UI editor.",
        "Use the JSON file editor."
      ],
      "description": "Determines which settings editor to use by default.",
      "default": "ui",
      "scope": 3,
      "defaultDefaultValue": "ui",
      "restricted": false
    },
    "workbench.hover.delay": {
      "type": "number",
      "description": "Controls the delay in milliseconds after which the hover is shown for workbench items (ex. some extension provided tree view items). Already visible items may require a refresh before reflecting this setting change.",
      "default": 500,
      "defaultDefaultValue": 500,
      "scope": 3,
      "restricted": false
    },
    "workbench.experimental.layoutControl.enabled": {
      "type": "boolean",
      "tags": [
        "experimental"
      ],
      "default": true,
      "markdownDescription": "Controls whether the layout controls in the custom title bar is enabled via `#window.titleBarStyle#`.",
      "defaultDefaultValue": false,
      "defaultValueSource": "Experiments",
      "scope": 3,
      "restricted": false
    },
    "workbench.experimental.layoutControl.type": {
      "type": "string",
      "enum": [
        "menu",
        "toggles",
        "both"
      ],
      "enumDescriptions": [
        "Shows a single button with a dropdown of layout options.",
        "Shows several buttons for toggling the visibility of the panels and side bar.",
        "Shows both the dropdown and toggle buttons."
      ],
      "tags": [
        "experimental"
      ],
      "default": "menu",
      "description": "Controls whether the layout control in the custom title bar is displayed as a single menu button or with multiple UI toggles.",
      "defaultDefaultValue": "menu",
      "scope": 3,
      "restricted": false
    },
    "window.title": {
      "type": "string",
      "default": "${dirty}${activeEditorShort}${separator}${rootName}${separator}${appName}",
      "markdownDescription": "Controls the window title based on the active editor. Variables are substituted based on the context:\n- `${activeEditorShort}`: the file name (e.g. myFile.txt).\n- `${activeEditorMedium}`: the path of the file relative to the workspace folder (e.g. myFolder/myFileFolder/myFile.txt).\n- `${activeEditorLong}`: the full path of the file (e.g. /Users/Development/myFolder/myFileFolder/myFile.txt).\n- `${activeFolderShort}`: the name of the folder the file is contained in (e.g. myFileFolder).\n- `${activeFolderMedium}`: the path of the folder the file is contained in, relative to the workspace folder (e.g. myFolder/myFileFolder).\n- `${activeFolderLong}`: the full path of the folder the file is contained in (e.g. /Users/Development/myFolder/myFileFolder).\n- `${folderName}`: name of the workspace folder the file is contained in (e.g. myFolder).\n- `${folderPath}`: file path of the workspace folder the file is contained in (e.g. /Users/Development/myFolder).\n- `${rootName}`: name of the opened workspace or folder (e.g. myFolder or myWorkspace).\n- `${rootPath}`: file path of the opened workspace or folder (e.g. /Users/Development/myWorkspace).\n- `${appName}`: e.g. VS Code.\n- `${remoteName}`: e.g. SSH\n- `${dirty}`: an indicator for when the active editor has unsaved changes.\n- `${separator}`: a conditional separator (\" - \") that only shows when surrounded by variables with values or static text.",
      "defaultDefaultValue": "${dirty}${activeEditorShort}${separator}${rootName}${separator}${appName}",
      "scope": 3,
      "restricted": false
    },
    "window.titleSeparator": {
      "type": "string",
      "default": " - ",
      "markdownDescription": "Separator used by `window.title`.",
      "defaultDefaultValue": " - ",
      "scope": 3,
      "restricted": false
    },
    "window.menuBarVisibility": {
      "type": "string",
      "enum": [
        "classic",
        "visible",
        "toggle",
        "hidden",
        "compact"
      ],
      "markdownEnumDescriptions": [
        "Menu is displayed at the top of the window and only hidden in full screen mode.",
        "Menu is always visible at the top of the window even in full screen mode.",
        "Menu is hidden but can be displayed at the top of the window via the Alt key.",
        "Menu is always hidden.",
        "Menu is displayed as a compact button in the sidebar. This value is ignored when `#window.titleBarStyle#` is `native`."
      ],
      "default": "classic",
      "scope": 1,
      "markdownDescription": "Control the visibility of the menu bar. A setting of 'toggle' means that the menu bar is hidden and a single press of the Alt key will show it. A setting of 'compact' will move the menu into the sidebar.",
      "included": true,
      "defaultDefaultValue": "classic",
      "restricted": false
    },
    "window.enableMenuBarMnemonics": {
      "type": "boolean",
      "default": true,
      "scope": 1,
      "description": "Controls whether the main menus can be opened via Alt-key shortcuts. Disabling mnemonics allows to bind these Alt-key shortcuts to editor commands instead.",
      "included": true,
      "defaultDefaultValue": true,
      "restricted": false
    },
    "window.customMenuBarAltFocus": {
      "type": "boolean",
      "default": true,
      "scope": 1,
      "markdownDescription": "Controls whether the menu bar will be focused by pressing the Alt-key. This setting has no effect on toggling the menu bar with the Alt-key.",
      "included": true,
      "defaultDefaultValue": true,
      "restricted": false
    },
    "window.openFilesInNewWindow": {
      "type": "string",
      "enum": [
        "on",
        "off",
        "default"
      ],
      "enumDescriptions": [
        "Files will open in a new window.",
        "Files will open in the window with the files' folder open or the last active window.",
        "Files will open in a new window unless picked from within the application (e.g. via the File menu)."
      ],
      "default": "off",
      "scope": 1,
      "markdownDescription": "Controls whether files should open in a new window.\nNote that there can still be cases where this setting is ignored (e.g. when using the `--new-window` or `--reuse-window` command line option).",
      "defaultDefaultValue": "off",
      "restricted": false
    },
    "window.openFoldersInNewWindow": {
      "type": "string",
      "enum": [
        "on",
        "off",
        "default"
      ],
      "enumDescriptions": [
        "Folders will open in a new window.",
        "Folders will replace the last active window.",
        "Folders will open in a new window unless a folder is picked from within the application (e.g. via the File menu)."
      ],
      "default": "default",
      "scope": 1,
      "markdownDescription": "Controls whether folders should open in a new window or replace the last active window.\nNote that there can still be cases where this setting is ignored (e.g. when using the `--new-window` or `--reuse-window` command line option).",
      "defaultDefaultValue": "default",
      "restricted": false
    },
    "zenMode.fullScreen": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether turning on Zen Mode also puts the workbench into full screen mode.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "zenMode.centerLayout": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether turning on Zen Mode also centers the layout.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "zenMode.hideTabs": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether turning on Zen Mode also hides workbench tabs.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "zenMode.hideStatusBar": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether turning on Zen Mode also hides the status bar at the bottom of the workbench.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "zenMode.hideActivityBar": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether turning on Zen Mode also hides the activity bar either at the left or right of the workbench.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "zenMode.hideLineNumbers": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether turning on Zen Mode also hides the editor line numbers.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "zenMode.restore": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether a window should restore to zen mode if it was exited in zen mode.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "zenMode.silentNotifications": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether notifications are shown while in zen mode. If true, only error notifications will pop out.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "workbench.editorAssociations": {
      "type": "object",
      "markdownDescription": "Configure glob patterns to editors (e.g. `\"*.hex\": \"hexEditor.hexEdit\"`). These have precedence over the default behavior.",
      "additionalProperties": {
        "type": "string"
      },
      "default": {},
      "scope": 3,
      "restricted": false
    },
    "notebook.navigation.allowNavigateToSurroundingCells": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled cursor can navigate to the next/previous cell when the current cursor in the cell editor is at the first/last line.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "notebook.lineNumbers": {
      "type": "string",
      "enum": [
        "off",
        "on"
      ],
      "default": "off",
      "markdownDescription": "Controls the display of line numbers in the cell editor.",
      "defaultDefaultValue": "off",
      "scope": 3,
      "restricted": false
    },
    "editor.codeActionsOnSave": {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "source.fixAll": {
              "type": "boolean",
              "description": "Controls whether auto fix action should be run on file save."
            }
          },
          "additionalProperties": {
            "type": "boolean"
          }
        },
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      ],
      "default": {},
      "description": "Code action kinds to be run on save.",
      "scope": 5,
      "defaultDefaultValue": {},
      "restricted": false,
      "properties": {
        "source.fixAll": {
          "type": "boolean",
          "description": "Controls whether auto fix action should be run on file save."
        },
        "source.organizeImports": {
          "type": "boolean",
          "description": "Controls whether 'Organize imports' actions should be run on file save."
        }
      }
    },
    "editor.defaultFormatter": {
      "description": "Defines a default formatter which takes precedence over all other formatter settings. Must be the identifier of an extension contributing a formatter.",
      "type": [
        "string",
        "null"
      ],
      "default": null,
      "enum": [
        null,
        "formulahendry.auto-rename-tag",
        "vscode.css-language-features",
        "golang.go",
        "vscode.html-language-features",
        "vscode.json-language-features",
        "ms-toolsai.jupyter",
        "yzhang.markdown-all-in-one",
        "vscode.markdown-language-features",
        "vscode.php-language-features",
        "esbenp.prettier-vscode",
        "Prisma.prisma",
        "ms-python.python",
        "donjayamanne.python-environment-manager",
        "ms-vscode.references-view",
        "ms-vscode-remote.remote-ssh-edit",
        "rebornix.ruby",
        "matklad.rust-analyzer",
        "vscode.search-result",
        "foxundermoon.shell-format",
        "svelte.svelte-vscode",
        "jock.svg",
        "vscode.typescript-language-features",
        "uctakeoff.vscode-counter",
        "ms-azuretools.vscode-docker",
        "dbaeumer.vscode-eslint",
        "vscjava.vscode-gradle",
        "ms-python.vscode-pylance",
        "DotJoshJohnson.xml",
        "vscode.configuration-editing",
        "GitHub.copilot",
        "vscode.debug-auto-launch",
        "vscode.debug-server-ready",
        "icrawl.discord-vscode",
        "vscode.emmet",
        "usernamehw.errorlens",
        "dsznajder.es7-react-js-snippets",
        "vscode.extension-editing",
        "vsls-contrib.gistfs",
        "vscode.git",
        "vscode.git-base",
        "vscode.github",
        "vscode.github-authentication",
        "eamodio.gitlens",
        "vscode.grunt",
        "vscode.gulp",
        "ms-vscode.hexeditor",
        "vscode.image-preview",
        "vscode.ipynb",
        "vscode.jake",
        "ms-vscode.js-debug",
        "ms-vscode.js-debug-companion",
        "ms-toolsai.jupyter-renderers",
        "ms-vscode.live-server",
        "lucasnorgaard.live-server-qr",
        "vscode.markdown-math",
        "PKief.material-icon-theme",
        "zhuangtongfa.material-theme",
        "vscode.merge-conflict",
        "vscode.microsoft-authentication",
        "vscode.npm",
        "christian-kohler.npm-intellisense",
        "quicktype.quicktype",
        "ms-vscode-remote.remote-containers",
        "ms-vscode-remote.remote-ssh",
        "ms-vscode-remote.remote-wsl",
        "ms-vscode-remote.remote-wsl-recommender",
        "vscode.simple-browser",
        "sleistner.vscode-fileutils",
        "vscode-icons-team.vscode-icons",
        "ms-vscode.vscode-js-profile-table",
        "eg2.vscode-npm-script",
        "GitHub.vscode-pull-request-github",
        "cssho.vscode-svgviewer",
        "bradlc.vscode-tailwindcss",
        "lucasnorgaard.vscode-theme-studio",
        "WakaTime.vscode-wakatime",
        "ms-vsliveshare.vsliveshare"
      ],
      "enumItemLabels": [
        "None",
        "Auto Rename Tag",
        "CSS Language Features",
        "Go",
        "HTML Language Features",
        "JSON Language Features",
        "Jupyter",
        "Markdown All in One",
        "Markdown Language Features",
        "PHP Language Features",
        "Prettier - Code formatter",
        "Prisma",
        "Python",
        "Python Environment Manager",
        "Reference Search View",
        "Remote - SSH: Editing Configuration Files",
        "Ruby",
        "rust-analyzer",
        "Search Result",
        "shell-format",
        "Svelte for VS Code",
        "SVG",
        "TypeScript and JavaScript Language Features",
        "VS Code Counter",
        "Docker",
        "ESLint",
        "Gradle for Java",
        "Pylance",
        "XML Tools",
        "Configuration Editing",
        "GitHub Copilot",
        "Node Debug Auto-attach",
        "Server Ready Action",
        "Discord Presence",
        "Emmet",
        "Error Lens",
        "ES7+ React/Redux/React-Native snippets",
        "Extension Authoring",
        "GistPad",
        "Git",
        "Git Base",
        "GitHub",
        "GitHub Authentication",
        "GitLens — Git supercharged",
        "Grunt support for VS Code",
        "Gulp support for VSCode",
        "Hex Editor",
        "Image Preview",
        ".ipynb support",
        "Jake support for VS Code",
        "JavaScript Debugger",
        "JavaScript Debugger Companion Extension",
        "Jupyter Notebook Renderers",
        "Live Preview",
        "Live Server QR",
        "Markdown Math",
        "Material Icon Theme",
        "One Dark Pro",
        "Merge Conflict",
        "Microsoft Account",
        "NPM support for VS Code",
        "npm Intellisense",
        "Paste JSON as Code",
        "Remote - Containers",
        "Remote - SSH",
        "Remote - WSL",
        "Remote - WSL: Recommender",
        "Simple Browser",
        "File Utils",
        "vscode-icons",
        "",
        "npm",
        "GitHub Pull Requests and Issues",
        "SVG Viewer",
        "Tailwind CSS IntelliSense",
        "Theme Studio",
        "WakaTime",
        "Live Share"
      ],
      "markdownEnumDescriptions": [
        "None",
        "Auto rename paired HTML/XML tag",
        "Provides rich language support for CSS, LESS and SCSS files.",
        "Rich Go language support for Visual Studio Code",
        "Provides rich language support for HTML and Handlebar files",
        "Provides rich language support for JSON files.",
        "Jupyter notebook support, interactive programming and computing that supports Intellisense, debugging and more.",
        "All you need to write Markdown (keyboard shortcuts, table of contents, auto preview and more)",
        "Provides rich language support for Markdown.",
        "Provides rich language support for PHP files.",
        "Code formatter using prettier",
        "Adds syntax highlighting, formatting, auto-completion, jump-to-definition and linting for .prisma files.",
        "IntelliSense (Pylance), Linting, Debugging (multi-threaded, remote), Jupyter Notebooks, code formatting, refactoring, unit tests, and more.",
        "View and manage Python environments & pacakges.",
        "Reference Search results as separate, stable view in the sidebar",
        "Edit SSH configuration files",
        "Ruby language support and debugging for Visual Studio Code",
        "An alternative rust language server to the RLS",
        "Provides syntax highlighting and language features for tabbed search results.",
        "shellscript、Dockerfile、properties、gitignore、dotenv、hosts、jvmoptions... DocumentFormat",
        "Svelte language support for VS Code",
        "SVG Coding, Minify, Pretty, Preview All-In-One",
        "Provides rich language support for JavaScript and TypeScript.",
        "Count lines of code in many programming languages.",
        "Makes it easy to create, manage, and debug containerized applications.",
        "Integrates ESLint JavaScript into VS Code.",
        "Manage Gradle Projects, run Gradle tasks and provide better Gradle file authoring experience in VS Code",
        "A performant, feature-rich language server for Python in VS Code",
        "XML Formatting, XQuery, and XPath Tools for Visual Studio Code",
        "Provides capabilities (advanced IntelliSense, auto-fixing) in configuration files like settings, launch, and extension recommendation files.",
        "Your AI pair programmer",
        "Helper for auto-attach feature when node-debug extensions are not active.",
        "Open URI in browser if server under debugging is ready.",
        "Update your discord status with a rich presence.",
        "Emmet support for VS Code",
        "Improve highlighting of errors, warnings and other language diagnostics.",
        "Extensions for React, React-Native and Redux in JS/TS with ES7+ syntax. Customizable. Built-in integration with prettier.",
        "Provides linting capabilities for authoring extensions.",
        "Manage your code snippets and developer notes using GitHub Gists and repositories.",
        "Git SCM Integration",
        "Git static contributions and pickers.",
        "GitHub features for VS Code",
        "GitHub Authentication Provider",
        "Supercharge Git within VS Code — Visualize code authorship at a glance via Git blame annotations and CodeLens, seamlessly navigate and explore Git repositories, gain valuable insights via rich visualizations and powerful comparison commands, and so much more",
        "Extension to add Grunt capabilities to VS Code.",
        "Extension to add Gulp capabilities to VSCode.",
        "Allows viewing and editing files in a hex editor",
        "Provides VS Code's built-in image preview",
        "Provides basic support for opening and reading Jupyter's .ipynb notebook files",
        "Extension to add Jake capabilities to VS Code.",
        "An extension for debugging Node.js programs and Chrome.",
        "Companion extension to js-debug that provides capability for remote debugging",
        "Renderers for Jupyter Notebooks (with plotly, vega, gif, png, svg, jpeg and other such outputs)",
        "Hosts a local server in your workspace for you to preview your webpages on.",
        "Scan a QR Code to open your live server up in your mobile browser.",
        "Adds math support to Markdown in notebooks.",
        "Material Design Icons for Visual Studio Code",
        "Atom‘s iconic One Dark theme for Visual Studio Code",
        "Highlighting and commands for inline merge conflicts.",
        "Microsoft authentication provider",
        "Extension to add task support for npm scripts.",
        "Visual Studio Code plugin that autocompletes npm modules in import statements",
        "Copy JSON, paste as Go, TypeScript, C#, C++ and more.",
        "Open any folder or repository inside a Docker container and take advantage of Visual Studio Code's full feature set.",
        "Open any folder on a remote machine using SSH and take advantage of VS Code's full feature set.",
        "Open any folder in the Windows Subsystem for Linux (WSL) and take advantage of Visual Studio Code's full feature set.",
        "Recommends using the Windows Subsystem for Linux (WSL) and the Remote WSL extension.",
        "A very basic built-in webview for displaying web content.",
        "A convenient way of creating, duplicating, moving, renaming and deleting files and directories.",
        "Icons for Visual Studio Code",
        "Text visualizer for profiles taken from the JavaScript debugger",
        "npm support for VS Code",
        "Pull Request and Issue Provider for GitHub",
        "SVG Viewer for Visual Studio Code.",
        "Intelligent Tailwind CSS tooling for VS Code",
        "Adds features for Theme Studio",
        "Metrics, insights, and time tracking automatically generated from your programming activity.",
        "Real-time collaborative development from the comfort of your favorite tools."
      ],
      "defaultDefaultValue": null,
      "scope": 5,
      "restricted": false
    },
    "problems.decorations.enabled": {
      "description": "Show Errors & Warnings on files and folder.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "workbench.sash.size": {
      "type": "number",
      "default": 4,
      "minimum": 1,
      "maximum": 20,
      "description": "Controls the feedback area size in pixels of the dragging area in between views/editors. Set it to a larger value if you feel it's hard to resize views using the mouse.",
      "defaultDefaultValue": 4,
      "scope": 3,
      "restricted": false
    },
    "workbench.sash.hoverDelay": {
      "type": "number",
      "default": 300,
      "minimum": 0,
      "maximum": 2000,
      "description": "Controls the hover feedback delay in milliseconds of the dragging area in between views/editors.",
      "defaultDefaultValue": 300,
      "scope": 3,
      "restricted": false
    },
    "window.openWithoutArgumentsInNewWindow": {
      "type": "string",
      "enum": [
        "on",
        "off"
      ],
      "enumDescriptions": [
        "Open a new empty window.",
        "Focus the last active running instance."
      ],
      "default": "on",
      "scope": 1,
      "markdownDescription": "Controls whether a new empty window should open when starting a second instance without arguments or if the last running instance should get focus.\nNote that there can still be cases where this setting is ignored (e.g. when using the `--new-window` or `--reuse-window` command line option).",
      "defaultDefaultValue": "on",
      "restricted": false
    },
    "window.restoreWindows": {
      "type": "string",
      "enum": [
        "preserve",
        "all",
        "folders",
        "one",
        "none"
      ],
      "enumDescriptions": [
        "Always reopen all windows. If a folder or workspace is opened (e.g. from the command line) it opens as a new window unless it was opened before. If files are opened they will open in one of the restored windows.",
        "Reopen all windows unless a folder, workspace or file is opened (e.g. from the command line).",
        "Reopen all windows that had folders or workspaces opened unless a folder, workspace or file is opened (e.g. from the command line).",
        "Reopen the last active window unless a folder, workspace or file is opened (e.g. from the command line).",
        "Never reopen a window. Unless a folder or workspace is opened (e.g. from the command line), an empty window will appear."
      ],
      "default": "all",
      "scope": 1,
      "description": "Controls how windows are being reopened after starting for the first time. This setting has no effect when the application is already running.",
      "defaultDefaultValue": "all",
      "restricted": false
    },
    "window.restoreFullscreen": {
      "type": "boolean",
      "default": false,
      "scope": 1,
      "description": "Controls whether a window should restore to full screen mode if it was exited in full screen mode.",
      "defaultDefaultValue": false,
      "restricted": false
    },
    "window.zoomLevel": {
      "type": "number",
      "default": 0,
      "description": "Adjust the zoom level of the window. The original size is 0 and each increment above (e.g. 1) or below (e.g. -1) represents zooming 20% larger or smaller. You can also enter decimals to adjust the zoom level with a finer granularity.",
      "ignoreSync": true,
      "defaultDefaultValue": 0,
      "scope": 3,
      "restricted": false
    },
    "window.newWindowDimensions": {
      "type": "string",
      "enum": [
        "default",
        "inherit",
        "offset",
        "maximized",
        "fullscreen"
      ],
      "enumDescriptions": [
        "Open new windows in the center of the screen.",
        "Open new windows with same dimension as last active one.",
        "Open new windows with same dimension as last active one with an offset position.",
        "Open new windows maximized.",
        "Open new windows in full screen mode."
      ],
      "default": "default",
      "scope": 1,
      "description": "Controls the dimensions of opening a new window when at least one window is already opened. Note that this setting does not have an impact on the first window that is opened. The first window will always restore the size and location as you left it before closing.",
      "defaultDefaultValue": "default",
      "restricted": false
    },
    "window.closeWhenEmpty": {
      "type": "boolean",
      "default": false,
      "description": "Controls whether closing the last editor should also close the window. This setting only applies for windows that do not show folders.",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "window.doubleClickIconToClose": {
      "type": "boolean",
      "default": false,
      "scope": 1,
      "markdownDescription": "If enabled, double clicking the application icon in the title bar will close the window and the window cannot be dragged by the icon. This setting only has an effect when `#window.titleBarStyle#` is set to `custom`.",
      "defaultDefaultValue": false,
      "restricted": false
    },
    "window.titleBarStyle": {
      "type": "string",
      "enum": [
        "native",
        "custom"
      ],
      "default": "custom",
      "scope": 1,
      "description": "Adjust the appearance of the window title bar. On Linux and Windows, this setting also affects the application and context menu appearances. Changes require a full restart to apply.",
      "defaultDefaultValue": "custom",
      "restricted": false
    },
    "window.dialogStyle": {
      "type": "string",
      "enum": [
        "native",
        "custom"
      ],
      "default": "native",
      "scope": 1,
      "description": "Adjust the appearance of dialog windows.",
      "defaultDefaultValue": "native",
      "restricted": false
    },
    "telemetry.enableCrashReporter": {
      "type": "boolean",
      "description": "Enable crash reports to be collected. This helps us improve stability. \nThis option requires restart to take effect.",
      "default": true,
      "tags": [
        "usesOnlineServices",
        "telemetry"
      ],
      "markdownDeprecationMessage": "If this setting is false, no telemetry will be sent regardless of the new setting's value. Deprecated due to being combined into the `#telemetry.telemetryLevel#` setting.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false,
      "deprecationMessage": "If this setting is false, no telemetry will be sent regardless of the new setting's value. Deprecated due to being combined into the `#telemetry.telemetryLevel#` setting."
    },
    "notebook.outline.showCodeCells": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "When enabled notebook outline shows code cells.",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "notebook.breadcrumbs.showCodeCells": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled notebook breadcrumbs contain code cells.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "audioCues.enabled": {
      "markdownDeprecationMessage": "Deprecated. Use the specific setting for each audio cue instead (`audioCues.*`).",
      "default": null,
      "scope": 3,
      "restricted": false,
      "deprecationMessage": "Deprecated. Use the specific setting for each audio cue instead (`audioCues.*`)."
    },
    "audioCues.lineHasBreakpoint": {
      "description": "Plays a sound when the active line has a breakpoint.",
      "type": "string",
      "enum": [
        "auto",
        "on",
        "off"
      ],
      "default": "auto",
      "enumDescriptions": [
        "Enable audio cue when a screen reader is attached.",
        "Enable audio cue.",
        "Disable audio cue."
      ],
      "defaultDefaultValue": "auto",
      "scope": 3,
      "restricted": false
    },
    "audioCues.lineHasInlineSuggestion": {
      "description": "Plays a sound when the active line has an inline suggestion.",
      "type": "string",
      "enum": [
        "auto",
        "on",
        "off"
      ],
      "default": "auto",
      "enumDescriptions": [
        "Enable audio cue when a screen reader is attached.",
        "Enable audio cue.",
        "Disable audio cue."
      ],
      "defaultDefaultValue": "auto",
      "scope": 3,
      "restricted": false
    },
    "audioCues.lineHasError": {
      "description": "Plays a sound when the active line has an error.",
      "type": "string",
      "enum": [
        "auto",
        "on",
        "off"
      ],
      "default": "auto",
      "enumDescriptions": [
        "Enable audio cue when a screen reader is attached.",
        "Enable audio cue.",
        "Disable audio cue."
      ],
      "defaultDefaultValue": "auto",
      "scope": 3,
      "restricted": false
    },
    "audioCues.lineHasFoldedArea": {
      "description": "Plays a sound when the active line has a folded area that can be unfolded.",
      "type": "string",
      "enum": [
        "auto",
        "on",
        "off"
      ],
      "default": "auto",
      "enumDescriptions": [
        "Enable audio cue when a screen reader is attached.",
        "Enable audio cue.",
        "Disable audio cue."
      ],
      "defaultDefaultValue": "auto",
      "scope": 3,
      "restricted": false
    },
    "audioCues.lineHasWarning": {
      "description": "Plays a sound when the active line has a warning.",
      "type": "string",
      "enum": [
        "auto",
        "on",
        "off"
      ],
      "default": "off",
      "enumDescriptions": [
        "Enable audio cue when a screen reader is attached.",
        "Enable audio cue.",
        "Disable audio cue."
      ],
      "defaultDefaultValue": "off",
      "scope": 3,
      "restricted": false
    },
    "audioCues.onDebugBreak": {
      "description": "Plays a sound when the debugger stopped on a breakpoint.",
      "type": "string",
      "enum": [
        "auto",
        "on",
        "off"
      ],
      "default": "auto",
      "enumDescriptions": [
        "Enable audio cue when a screen reader is attached.",
        "Enable audio cue.",
        "Disable audio cue."
      ],
      "defaultDefaultValue": "auto",
      "scope": 3,
      "restricted": false
    },
    "audioCues.noInlayHints": {
      "description": "Plays a sound when trying to read a line with inlay hints that has no inlay hints.",
      "type": "string",
      "enum": [
        "auto",
        "on",
        "off"
      ],
      "default": "auto",
      "enumDescriptions": [
        "Enable audio cue when a screen reader is attached.",
        "Enable audio cue.",
        "Disable audio cue."
      ],
      "defaultDefaultValue": "auto",
      "scope": 3,
      "restricted": false
    },
    "workbench.externalUriOpeners": {
      "type": "object",
      "markdownDescription": "Configure the opener to use for external URIs (http, https).",
      "defaultSnippets": [
        {
          "body": {
            "example.com": "$1"
          }
        }
      ],
      "additionalProperties": {
        "anyOf": [
          {
            "type": "string",
            "markdownDescription": "Map URI pattern to an opener id.\nExample patterns: \n\n- `https://microsoft.com`: Matches this specific domain using https\n- `https://microsoft.com:8080`: Matches this specific domain on this port using https\n- `https://microsoft.com:*`: Matches this specific domain on any port using https\n- `https://microsoft.com/foo`: Matches `https://microsoft.com/foo` and `https://microsoft.com/foo/bar`, but not `https://microsoft.com/foobar` or `https://microsoft.com/bar`\n- `https://*.microsoft.com`: Match all domains ending in `microsoft.com` using https\n- `microsoft.com`: Match this specific domain using either http or https\n- `*.microsoft.com`: Match all domains ending in `microsoft.com` using either http or https\n- `http://192.168.0.1`: Matches this specific IP using http\n- `http://192.168.0.*`: Matches all IP's with this prefix using http\n- `*`: Match all domains using either http or https"
          },
          {
            "type": "string",
            "markdownDescription": "Map URI pattern to an opener id.\nExample patterns: \n\n- `https://microsoft.com`: Matches this specific domain using https\n- `https://microsoft.com:8080`: Matches this specific domain on this port using https\n- `https://microsoft.com:*`: Matches this specific domain on any port using https\n- `https://microsoft.com/foo`: Matches `https://microsoft.com/foo` and `https://microsoft.com/foo/bar`, but not `https://microsoft.com/foobar` or `https://microsoft.com/bar`\n- `https://*.microsoft.com`: Match all domains ending in `microsoft.com` using https\n- `microsoft.com`: Match this specific domain using either http or https\n- `*.microsoft.com`: Match all domains ending in `microsoft.com` using either http or https\n- `http://192.168.0.1`: Matches this specific IP using http\n- `http://192.168.0.*`: Matches all IP's with this prefix using http\n- `*`: Match all domains using either http or https",
            "enum": [
              "default"
            ],
            "enumDescriptions": [
              "Open using VS Code's standard opener."
            ]
          },
          {
            "type": "string",
            "enum": [
              "simpleBrowser.open"
            ],
            "enumDescriptions": [
              "vscode.simple-browser"
            ]
          }
        ]
      },
      "default": {},
      "scope": 3,
      "restricted": false
    },
    "remote.extensionKind": {
      "type": "object",
      "markdownDescription": "Override the kind of an extension. `ui` extensions are installed and run on the local machine while `workspace` extensions are run on the remote. By overriding an extension's default kind using this setting, you specify if that extension should be installed and enabled locally or remotely.",
      "patternProperties": {
        "([a-z0-9A-Z][a-z0-9-A-Z]*)\\.([a-z0-9A-Z][a-z0-9-A-Z]*)$": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ui",
                  "workspace"
                ],
                "enumDescriptions": [
                  "UI extension kind. In a remote window, such extensions are enabled only when available on the local machine.",
                  "Workspace extension kind. In a remote window, such extensions are enabled only when available on the remote."
                ]
              }
            },
            {
              "type": "string",
              "enum": [
                "ui",
                "workspace"
              ],
              "enumDescriptions": [
                "UI extension kind. In a remote window, such extensions are enabled only when available on the local machine.",
                "Workspace extension kind. In a remote window, such extensions are enabled only when available on the remote."
              ]
            }
          ],
          "default": [
            "ui"
          ]
        }
      },
      "default": {
        "pub.name": [
          "ui"
        ]
      },
      "defaultDefaultValue": {
        "pub.name": [
          "ui"
        ]
      },
      "scope": 3,
      "restricted": false
    },
    "remote.restoreForwardedPorts": {
      "type": "boolean",
      "markdownDescription": "Restores the ports you forwarded in a workspace.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "remote.autoForwardPorts": {
      "type": "boolean",
      "markdownDescription": "When enabled, new running processes are detected and ports that they listen on are automatically forwarded. Disabling this setting will not prevent all ports from being forwarded. Even when disabled, extensions will still be able to cause ports to be forwarded, and opening some URLs will still cause ports to forwarded.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "remote.autoForwardPortsSource": {
      "type": "string",
      "markdownDescription": "Sets the source from which ports are automatically forwarded when `remote.autoForwardPorts` is true. On Windows and Mac remotes, the `process` option has no effect and `output` will be used. Requires a reload to take effect.",
      "enum": [
        "process",
        "output"
      ],
      "enumDescriptions": [
        "Ports will be automatically forwarded when discovered by watching for processes that are started and include a port.",
        "Ports will be automatically forwarded when discovered by reading terminal and debug output. Not all processes that use ports will print to the integrated terminal or debug console, so some ports will be missed. Ports forwarded based on output will not be \"un-forwarded\" until reload or until the port is closed by the user in the Ports view."
      ],
      "default": "process",
      "defaultDefaultValue": "process",
      "scope": 3,
      "restricted": false
    },
    "remote.portsAttributes": {
      "type": "object",
      "patternProperties": {
        "(^\\d+(-\\d+)?$)|(.+)": {
          "type": "object",
          "description": "A port, range of ports (ex. \"40000-55000\"), host and port (ex. \"db:1234\"), or regular expression (ex. \".+\\\\/server.js\").  For a port number or range, the attributes will apply to that port number or range of port numbers. Attributes which use a regular expression will apply to ports whose associated process command line matches the expression.",
          "properties": {
            "onAutoForward": {
              "type": "string",
              "enum": [
                "notify",
                "openBrowser",
                "openBrowserOnce",
                "openPreview",
                "silent",
                "ignore"
              ],
              "enumDescriptions": [
                "Shows a notification when a port is automatically forwarded.",
                "Opens the browser when the port is automatically forwarded. Depending on your settings, this could open an embedded browser.",
                "Opens the browser when the port is automatically forwarded, but only the first time the port is forward during a session. Depending on your settings, this could open an embedded browser.",
                "Opens a preview in the same window when the port is automatically forwarded.",
                "Shows no notification and takes no action when this port is automatically forwarded.",
                "This port will not be automatically forwarded."
              ],
              "description": "Defines the action that occurs when the port is discovered for automatic forwarding",
              "default": "notify"
            },
            "elevateIfNeeded": {
              "type": "boolean",
              "description": "Automatically prompt for elevation (if needed) when this port is forwarded. Elevate is required if the local port is a privileged port.",
              "default": false
            },
            "label": {
              "type": "string",
              "description": "Label that will be shown in the UI for this port.",
              "default": "Application"
            },
            "requireLocalPort": {
              "type": "boolean",
              "markdownDescription": "When true, a modal dialog will show if the chosen local port isn't used for forwarding.",
              "default": false
            },
            "protocol": {
              "type": "string",
              "enum": [
                "http",
                "https"
              ],
              "description": "The protocol to use when forwarding this port."
            }
          },
          "default": {
            "label": "Application",
            "onAutoForward": "notify"
          }
        }
      },
      "markdownDescription": "Set properties that are applied when a specific port number is forwarded. For example:\n\n```\n\"3000\": {\n  \"label\": \"Application\"\n},\n\"40000-55000\": {\n  \"onAutoForward\": \"ignore\"\n},\n\".+\\\\/server.js\": {\n \"onAutoForward\": \"openPreview\"\n}\n```",
      "defaultSnippets": [
        {
          "body": {
            "${1:3000}": {
              "label": "${2:Application}",
              "onAutoForward": "openPreview"
            }
          }
        }
      ],
      "errorMessage": "Must be a port number, range of port numbers, or regular expression.",
      "additionalProperties": false,
      "default": {
        "443": {
          "protocol": "https"
        },
        "8443": {
          "protocol": "https"
        }
      },
      "defaultDefaultValue": {
        "443": {
          "protocol": "https"
        },
        "8443": {
          "protocol": "https"
        }
      },
      "scope": 3,
      "restricted": false
    },
    "remote.otherPortsAttributes": {
      "type": "object",
      "properties": {
        "onAutoForward": {
          "type": "string",
          "enum": [
            "notify",
            "openBrowser",
            "openPreview",
            "silent",
            "ignore"
          ],
          "enumDescriptions": [
            "Shows a notification when a port is automatically forwarded.",
            "Opens the browser when the port is automatically forwarded. Depending on your settings, this could open an embedded browser.",
            "Opens a preview in the same window when the port is automatically forwarded.",
            "Shows no notification and takes no action when this port is automatically forwarded.",
            "This port will not be automatically forwarded."
          ],
          "description": "Defines the action that occurs when the port is discovered for automatic forwarding",
          "default": "notify"
        },
        "elevateIfNeeded": {
          "type": "boolean",
          "description": "Automatically prompt for elevation (if needed) when this port is forwarded. Elevate is required if the local port is a privileged port.",
          "default": false
        },
        "label": {
          "type": "string",
          "description": "Label that will be shown in the UI for this port.",
          "default": "Application"
        },
        "requireLocalPort": {
          "type": "boolean",
          "markdownDescription": "When true, a modal dialog will show if the chosen local port isn't used for forwarding.",
          "default": false
        },
        "protocol": {
          "type": "string",
          "enum": [
            "http",
            "https"
          ],
          "description": "The protocol to use when forwarding this port."
        }
      },
      "defaultSnippets": [
        {
          "body": {
            "onAutoForward": "ignore"
          }
        }
      ],
      "markdownDescription": "Set default properties that are applied to all ports that don't get properties from the setting `remote.portsAttributes`. For example:\n\n```\n{\n  \"onAutoForward\": \"ignore\"\n}\n```",
      "additionalProperties": false,
      "default": {},
      "scope": 3,
      "restricted": false
    },
    "remote.localPortHost": {
      "type": "string",
      "enum": [
        "localhost",
        "allInterfaces"
      ],
      "default": "localhost",
      "description": "Specifies the local host name that will be used for port forwarding.",
      "defaultDefaultValue": "localhost",
      "scope": 3,
      "restricted": false
    },
    "remote.downloadExtensionsLocally": {
      "type": "boolean",
      "markdownDescription": "When enabled extensions are downloaded locally and installed on remote.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.enableExperiments": {
      "type": "boolean",
      "description": "Fetches experiments to run from a Microsoft online service.",
      "default": true,
      "scope": 1,
      "restricted": true,
      "tags": [
        "usesOnlineServices"
      ],
      "defaultDefaultValue": true
    },
    "comments.openPanel": {
      "enum": [
        "neverOpen",
        "openOnSessionStart",
        "openOnSessionStartWithComments"
      ],
      "default": "openOnSessionStartWithComments",
      "description": "Controls when the comments panel should open.",
      "restricted": false,
      "defaultDefaultValue": "openOnSessionStartWithComments",
      "scope": 3
    },
    "comments.useRelativeTime": {
      "type": "boolean",
      "default": true,
      "description": "Determines if relative time will be used in comment timestamps (ex. '1 day ago').",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "task.problemMatchers.neverPrompt": {
      "markdownDescription": "Configures whether to show the problem matcher prompt when running a task. Set to `true` to never prompt, or use a dictionary of task types to turn off prompting only for specific task types.",
      "oneOf": [
        {
          "type": "boolean",
          "markdownDescription": "Sets problem matcher prompting behavior for all tasks."
        },
        {
          "type": "object",
          "patternProperties": {
            ".*": {
              "type": "boolean"
            }
          },
          "markdownDescription": "An object containing task type-boolean pairs to never prompt for problem matchers on.",
          "default": {
            "shell": true
          }
        }
      ],
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "task.autoDetect": {
      "markdownDescription": "Controls enablement of `provideTasks` for all task provider extension. If the Tasks: Run Task command is slow, disabling auto detect for task providers may help. Individual extensions may also provide settings that disable auto detection.",
      "type": "string",
      "enum": [
        "on",
        "off"
      ],
      "default": "on",
      "defaultDefaultValue": "on",
      "scope": 3,
      "restricted": false
    },
    "task.slowProviderWarning": {
      "markdownDescription": "Configures whether a warning is shown when a provider is slow",
      "oneOf": [
        {
          "type": "boolean",
          "markdownDescription": "Sets the slow provider warning for all tasks."
        },
        {
          "type": "array",
          "items": {
            "type": "string",
            "markdownDescription": "An array of task types to never show the slow provider warning."
          }
        }
      ],
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "task.quickOpen.history": {
      "markdownDescription": "Controls the number of recent items tracked in task quick open dialog.",
      "type": "number",
      "default": 30,
      "minimum": 0,
      "maximum": 30,
      "defaultDefaultValue": 30,
      "scope": 3,
      "restricted": false
    },
    "task.quickOpen.detail": {
      "markdownDescription": "Controls whether to show the task detail for tasks that have a detail in task quick picks, such as Run Task.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "task.quickOpen.skip": {
      "type": "boolean",
      "description": "Controls whether the task quick pick is skipped when there is only one task to pick from.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "task.quickOpen.showAll": {
      "type": "boolean",
      "description": "Causes the Tasks: Run Task command to use the slower \"show all\" behavior instead of the faster two level picker where tasks are grouped by provider.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "task.saveBeforeRun": {
      "markdownDescription": "Save all dirty editors before running a task.",
      "type": "string",
      "enum": [
        "always",
        "never",
        "prompt"
      ],
      "enumDescriptions": [
        "Always saves all editors before running.",
        "Never saves editors before running.",
        "Prompts whether to save editors before running."
      ],
      "default": "always",
      "defaultDefaultValue": "always",
      "scope": 3,
      "restricted": false
    },
    "workbench.trustedDomains.promptInTrustedWorkspace": {
      "scope": 1,
      "type": "boolean",
      "default": false,
      "description": "When enabled, trusted domain prompts will appear when opening links in trusted workspaces.",
      "defaultDefaultValue": false,
      "restricted": false
    },
    "workbench.colorTheme": {
      "type": "string",
      "description": "Specifies the color theme used in the workbench.",
      "default": "Default Dark+",
      "enum": [
        "Abyss",
        "Default Dark+",
        "Default Light+",
        "Visual Studio Dark",
        "Visual Studio Light",
        "Default High Contrast",
        "Light High Contrast",
        "Kimbie Dark",
        "Monokai",
        "Monokai Dimmed",
        "Quiet Light",
        "Red",
        "Solarized Dark",
        "Solarized Light",
        "Tomorrow Night Blue",
        "One Dark Pro",
        "One Dark Pro Flat",
        "One Dark Pro Darker"
      ],
      "enumDescriptions": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "enumItemLabels": [
        "Abyss",
        "Dark+ (default dark)",
        "Light+ (default light)",
        "Dark (Visual Studio)",
        "Light (Visual Studio)",
        "Dark High Contrast",
        "Light High Contrast (Experimental)",
        "Kimbie Dark",
        "Monokai",
        "Monokai Dimmed",
        "Quiet Light",
        "Red",
        "Solarized Dark",
        "Solarized Light",
        "Tomorrow Night Blue",
        "One Dark Pro",
        "One Dark Pro Flat",
        "One Dark Pro Darker"
      ],
      "errorMessage": "Theme is unknown or not installed.",
      "defaultDefaultValue": "Default Dark+",
      "scope": 3,
      "restricted": false
    },
    "workbench.preferredDarkColorTheme": {
      "type": "string",
      "markdownDescription": "Specifies the preferred color theme for dark OS appearance when `#window.autoDetectColorScheme#` is enabled.",
      "default": "Default Dark+",
      "enum": [
        "Abyss",
        "Default Dark+",
        "Default Light+",
        "Visual Studio Dark",
        "Visual Studio Light",
        "Default High Contrast",
        "Light High Contrast",
        "Kimbie Dark",
        "Monokai",
        "Monokai Dimmed",
        "Quiet Light",
        "Red",
        "Solarized Dark",
        "Solarized Light",
        "Tomorrow Night Blue",
        "One Dark Pro",
        "One Dark Pro Flat",
        "One Dark Pro Darker"
      ],
      "enumDescriptions": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "enumItemLabels": [
        "Abyss",
        "Dark+ (default dark)",
        "Light+ (default light)",
        "Dark (Visual Studio)",
        "Light (Visual Studio)",
        "Dark High Contrast",
        "Light High Contrast (Experimental)",
        "Kimbie Dark",
        "Monokai",
        "Monokai Dimmed",
        "Quiet Light",
        "Red",
        "Solarized Dark",
        "Solarized Light",
        "Tomorrow Night Blue",
        "One Dark Pro",
        "One Dark Pro Flat",
        "One Dark Pro Darker"
      ],
      "errorMessage": "Theme is unknown or not installed.",
      "defaultDefaultValue": "Default Dark+",
      "scope": 3,
      "restricted": false
    },
    "workbench.preferredLightColorTheme": {
      "type": "string",
      "markdownDescription": "Specifies the preferred color theme for light OS appearance when `#window.autoDetectColorScheme#` is enabled.",
      "default": "Default Light+",
      "enum": [
        "Abyss",
        "Default Dark+",
        "Default Light+",
        "Visual Studio Dark",
        "Visual Studio Light",
        "Default High Contrast",
        "Light High Contrast",
        "Kimbie Dark",
        "Monokai",
        "Monokai Dimmed",
        "Quiet Light",
        "Red",
        "Solarized Dark",
        "Solarized Light",
        "Tomorrow Night Blue",
        "One Dark Pro",
        "One Dark Pro Flat",
        "One Dark Pro Darker"
      ],
      "enumDescriptions": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "enumItemLabels": [
        "Abyss",
        "Dark+ (default dark)",
        "Light+ (default light)",
        "Dark (Visual Studio)",
        "Light (Visual Studio)",
        "Dark High Contrast",
        "Light High Contrast (Experimental)",
        "Kimbie Dark",
        "Monokai",
        "Monokai Dimmed",
        "Quiet Light",
        "Red",
        "Solarized Dark",
        "Solarized Light",
        "Tomorrow Night Blue",
        "One Dark Pro",
        "One Dark Pro Flat",
        "One Dark Pro Darker"
      ],
      "errorMessage": "Theme is unknown or not installed.",
      "defaultDefaultValue": "Default Light+",
      "scope": 3,
      "restricted": false
    },
    "workbench.preferredHighContrastColorTheme": {
      "type": "string",
      "markdownDescription": "Specifies the preferred color theme used in high contrast mode when `#window.autoDetectHighContrast#` is enabled.",
      "default": "Default High Contrast",
      "enum": [
        "Abyss",
        "Default Dark+",
        "Default Light+",
        "Visual Studio Dark",
        "Visual Studio Light",
        "Default High Contrast",
        "Light High Contrast",
        "Kimbie Dark",
        "Monokai",
        "Monokai Dimmed",
        "Quiet Light",
        "Red",
        "Solarized Dark",
        "Solarized Light",
        "Tomorrow Night Blue",
        "One Dark Pro",
        "One Dark Pro Flat",
        "One Dark Pro Darker"
      ],
      "enumDescriptions": [
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ],
      "enumItemLabels": [
        "Abyss",
        "Dark+ (default dark)",
        "Light+ (default light)",
        "Dark (Visual Studio)",
        "Light (Visual Studio)",
        "Dark High Contrast",
        "Light High Contrast (Experimental)",
        "Kimbie Dark",
        "Monokai",
        "Monokai Dimmed",
        "Quiet Light",
        "Red",
        "Solarized Dark",
        "Solarized Light",
        "Tomorrow Night Blue",
        "One Dark Pro",
        "One Dark Pro Flat",
        "One Dark Pro Darker"
      ],
      "included": true,
      "errorMessage": "Theme is unknown or not installed.",
      "defaultDefaultValue": "Default High Contrast",
      "scope": 3,
      "restricted": false
    },
    "workbench.iconTheme": {
      "type": [
        "string",
        "null"
      ],
      "default": "vs-seti",
      "description": "Specifies the file icon theme used in the workbench or 'null' to not show any file icons.",
      "enum": [
        null,
        "vs-minimal",
        "vs-seti",
        "material-icon-theme",
        "vscode-icons"
      ],
      "enumItemLabels": [
        "None",
        "Minimal (Visual Studio Code)",
        "Seti (Visual Studio Code)",
        "Material Icon Theme",
        "VSCode Icons"
      ],
      "enumDescriptions": [
        "No file icons",
        "",
        "",
        "",
        ""
      ],
      "errorMessage": "File icon theme is unknown or not installed.",
      "defaultDefaultValue": "vs-seti",
      "scope": 3,
      "restricted": false
    },
    "workbench.colorCustomizations": {
      "type": "object",
      "description": "Overrides colors from the currently selected color theme.",
      "allOf": [
        {
          "$ref": "vscode://schemas/workbench-colors"
        },
        {
          "properties": {
            "[Abyss]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Default Dark+]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Default Light+]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Visual Studio Dark]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Visual Studio Light]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Default High Contrast]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Light High Contrast]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Kimbie Dark]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Monokai]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Monokai Dimmed]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Quiet Light]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Red]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Solarized Dark]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Solarized Light]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[Tomorrow Night Blue]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[One Dark Pro]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[One Dark Pro Flat]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            },
            "[One Dark Pro Darker]": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            }
          },
          "patternProperties": {
            "^\\[[^\\]]*(\\]\\s*\\[[^\\]]*)*\\]$": {
              "$ref": "vscode://schemas/workbench-colors",
              "additionalProperties": false
            }
          }
        }
      ],
      "default": {},
      "defaultSnippets": [
        {
          "body": {}
        }
      ],
      "defaultDefaultValue": {},
      "scope": 3,
      "restricted": false
    },
    "workbench.productIconTheme": {
      "type": [
        "string",
        "null"
      ],
      "default": "Default",
      "description": "Specifies the product icon theme used.",
      "enum": [
        "Default"
      ],
      "enumItemLabels": [
        "Default"
      ],
      "enumDescriptions": [
        "Default"
      ],
      "errorMessage": "Product icon theme is unknown or not installed.",
      "defaultDefaultValue": "Default",
      "scope": 3,
      "restricted": false
    },
    "window.autoDetectHighContrast": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "If enabled, will automatically change to high contrast theme if the OS is using a high contrast theme. The high contrast theme to use is specified by `#workbench.preferredHighContrastColorTheme#`",
      "scope": 1,
      "defaultDefaultValue": true,
      "restricted": false
    },
    "window.autoDetectColorScheme": {
      "type": "boolean",
      "markdownDescription": "If set, automatically switch to the preferred color theme based on the OS appearance. If the OS appearance is dark, the theme specified at `#workbench.preferredDarkColorTheme#` is used, for light `#workbench.preferredLightColorTheme#`.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "editor.tokenColorCustomizations": {
      "description": "Overrides editor syntax colors and font style from the currently selected color theme.",
      "default": {},
      "allOf": [
        {
          "type": "object",
          "properties": {
            "comments": {
              "description": "Sets the colors and styles for comments",
              "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
            },
            "strings": {
              "description": "Sets the colors and styles for strings literals.",
              "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
            },
            "keywords": {
              "description": "Sets the colors and styles for keywords.",
              "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
            },
            "numbers": {
              "description": "Sets the colors and styles for number literals.",
              "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
            },
            "types": {
              "description": "Sets the colors and styles for type declarations and references.",
              "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
            },
            "functions": {
              "description": "Sets the colors and styles for functions declarations and references.",
              "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
            },
            "variables": {
              "description": "Sets the colors and styles for variables declarations and references.",
              "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
            },
            "textMateRules": {
              "description": "Sets colors and styles using textmate theming rules (advanced).",
              "$ref": "vscode://schemas/textmate-colors"
            },
            "semanticHighlighting": {
              "description": "Whether semantic highlighting should be enabled for this theme.",
              "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
              "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
              "type": "boolean"
            }
          },
          "additionalProperties": false,
          "patternProperties": {
            "^\\[": {}
          }
        },
        {
          "properties": {
            "[Abyss]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Default Dark+]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Default Light+]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Visual Studio Dark]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Visual Studio Light]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Default High Contrast]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Light High Contrast]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Kimbie Dark]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Monokai]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Monokai Dimmed]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Quiet Light]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Red]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Solarized Dark]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Solarized Light]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[Tomorrow Night Blue]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[One Dark Pro]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[One Dark Pro Flat]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "[One Dark Pro Darker]": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            }
          },
          "patternProperties": {
            "^\\[[^\\]]*(\\]\\s*\\[[^\\]]*)*\\]$": {
              "properties": {
                "comments": {
                  "description": "Sets the colors and styles for comments",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "strings": {
                  "description": "Sets the colors and styles for strings literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "keywords": {
                  "description": "Sets the colors and styles for keywords.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "numbers": {
                  "description": "Sets the colors and styles for number literals.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "types": {
                  "description": "Sets the colors and styles for type declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "functions": {
                  "description": "Sets the colors and styles for functions declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "variables": {
                  "description": "Sets the colors and styles for variables declarations and references.",
                  "$ref": "vscode://schemas/textmate-colors#/definitions/colorGroup"
                },
                "textMateRules": {
                  "description": "Sets colors and styles using textmate theming rules (advanced).",
                  "$ref": "vscode://schemas/textmate-colors"
                },
                "semanticHighlighting": {
                  "description": "Whether semantic highlighting should be enabled for this theme.",
                  "deprecationMessage": "Use `enabled` in `editor.semanticTokenColorCustomizations` setting instead.",
                  "markdownDeprecationMessage": "Use `enabled` in `#editor.semanticTokenColorCustomizations#` setting instead.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            }
          }
        }
      ],
      "defaultDefaultValue": {},
      "scope": 3,
      "restricted": false
    },
    "editor.semanticTokenColorCustomizations": {
      "description": "Overrides editor semantic token color and styles from the currently selected color theme.",
      "default": {},
      "allOf": [
        {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Whether semantic highlighting is enabled or disabled for this theme",
              "suggestSortText": "0_enabled"
            },
            "rules": {
              "$ref": "vscode://schemas/token-styling",
              "description": "Semantic token styling rules for this theme.",
              "suggestSortText": "0_rules"
            }
          },
          "additionalProperties": false,
          "patternProperties": {
            "^\\[": {}
          }
        },
        {
          "properties": {
            "[Abyss]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Default Dark+]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Default Light+]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Visual Studio Dark]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Visual Studio Light]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Default High Contrast]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Light High Contrast]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Kimbie Dark]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Monokai]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Monokai Dimmed]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Quiet Light]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Red]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Solarized Dark]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Solarized Light]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[Tomorrow Night Blue]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[One Dark Pro]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[One Dark Pro Flat]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            },
            "[One Dark Pro Darker]": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            }
          },
          "patternProperties": {
            "^\\[[^\\]]*(\\]\\s*\\[[^\\]]*)*\\]$": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "description": "Whether semantic highlighting is enabled or disabled for this theme",
                  "suggestSortText": "0_enabled"
                },
                "rules": {
                  "$ref": "vscode://schemas/token-styling",
                  "description": "Semantic token styling rules for this theme.",
                  "suggestSortText": "0_rules"
                }
              },
              "additionalProperties": false
            }
          }
        }
      ],
      "defaultDefaultValue": {},
      "scope": 3,
      "restricted": false
    },
    "workbench.startupEditor": {
      "scope": 4,
      "type": "string",
      "enum": [
        "none",
        "welcomePage",
        "readme",
        "newUntitledFile",
        "welcomePageInEmptyWorkbench"
      ],
      "enumDescriptions": [
        "Start without an editor.",
        "Open the Welcome page, with content to aid in getting started with VS Code and extensions.",
        "Open the README when opening a folder that contains one, fallback to 'welcomePage' otherwise. Note: This is only observed as a global configuration, it will be ignored if set in a workspace or folder configuration.",
        "Open a new untitled file (only applies when opening an empty window).",
        "Open the Welcome page when opening an empty workbench."
      ],
      "default": "welcomePage",
      "description": "Controls which editor is shown at startup, if none are restored from the previous session.",
      "defaultDefaultValue": "welcomePage",
      "restricted": false
    },
    "screencastMode.verticalOffset": {
      "type": "number",
      "default": 20,
      "minimum": 0,
      "maximum": 90,
      "description": "Controls the vertical offset of the screencast mode overlay from the bottom as a percentage of the workbench height.",
      "defaultDefaultValue": 20,
      "scope": 3,
      "restricted": false
    },
    "screencastMode.fontSize": {
      "type": "number",
      "default": 56,
      "minimum": 20,
      "maximum": 100,
      "description": "Controls the font size (in pixels) of the screencast mode keyboard.",
      "defaultDefaultValue": 56,
      "scope": 3,
      "restricted": false
    },
    "screencastMode.keyboardShortcutsFormat": {
      "enum": [
        "keys",
        "command",
        "commandWithGroup",
        "commandAndKeys",
        "commandWithGroupAndKeys"
      ],
      "enumDescriptions": [
        "Keys.",
        "Command title.",
        "Command title prefixed by its group.",
        "Command title and keys.",
        "Command title and keys, with the command prefixed by its group."
      ],
      "description": "Controls what is displayed in the keyboard overlay when showing shortcuts.",
      "default": "commandAndKeys",
      "defaultDefaultValue": "commandAndKeys",
      "scope": 3,
      "restricted": false
    },
    "screencastMode.onlyKeyboardShortcuts": {
      "type": "boolean",
      "description": "Only show keyboard shortcuts in screencast mode.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "screencastMode.keyboardOverlayTimeout": {
      "type": "number",
      "default": 800,
      "minimum": 500,
      "maximum": 5000,
      "description": "Controls how long (in milliseconds) the keyboard overlay is shown in screencast mode.",
      "defaultDefaultValue": 800,
      "scope": 3,
      "restricted": false
    },
    "screencastMode.mouseIndicatorColor": {
      "type": "string",
      "format": "color-hex",
      "default": "#FF0000",
      "description": "Controls the color in hex (#RGB, #RGBA, #RRGGBB or #RRGGBBAA) of the mouse indicator in screencast mode.",
      "defaultDefaultValue": "#FF0000",
      "scope": 3,
      "restricted": false
    },
    "screencastMode.mouseIndicatorSize": {
      "type": "number",
      "default": 20,
      "minimum": 20,
      "maximum": 100,
      "description": "Controls the size (in pixels) of the mouse indicator in screencast mode.",
      "defaultDefaultValue": 20,
      "scope": 3,
      "restricted": false
    },
    "workbench.settings.enableNaturalLanguageSearch": {
      "type": "boolean",
      "description": "Controls whether to enable the natural language search mode for settings. The natural language search is provided by a Microsoft online service.",
      "default": true,
      "scope": 3,
      "tags": [
        "usesOnlineServices"
      ],
      "defaultDefaultValue": true,
      "restricted": false
    },
    "workbench.settings.settingsSearchTocBehavior": {
      "type": "string",
      "enum": [
        "hide",
        "filter"
      ],
      "enumDescriptions": [
        "Hide the Table of Contents while searching.",
        "Filter the Table of Contents to just categories that have matching settings. Clicking a category will filter the results to that category."
      ],
      "description": "Controls the behavior of the settings editor Table of Contents while searching.",
      "default": "filter",
      "scope": 3,
      "defaultDefaultValue": "filter",
      "restricted": false
    },
    "files.participants.timeout": {
      "type": "number",
      "default": 60000,
      "markdownDescription": "Timeout in milliseconds after which file participants for create, rename, and delete are cancelled. Use `0` to disable participants.",
      "defaultDefaultValue": 60000,
      "scope": 3,
      "restricted": false
    },
    "debug.allowBreakpointsEverywhere": {
      "type": "boolean",
      "description": "Allow setting breakpoints in any file.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "debug.openExplorerOnEnd": {
      "type": "boolean",
      "description": "Automatically open the explorer view at the end of a debug session.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "debug.inlineValues": {
      "type": [
        "boolean",
        "string"
      ],
      "enum": [
        true,
        false,
        "auto"
      ],
      "description": "Show variable values inline in editor while debugging.",
      "enumDescriptions": [
        "Always show variable values inline in editor while debugging.",
        "Never show variable values inline in editor while debugging.",
        "Show variable values inline in editor while debugging when the language supports inline value locations."
      ],
      "default": "auto",
      "defaultDefaultValue": "auto",
      "scope": 3,
      "restricted": false
    },
    "debug.toolBarLocation": {
      "enum": [
        "floating",
        "docked",
        "hidden"
      ],
      "markdownDescription": "Controls the location of the debug toolbar. Either `floating` in all views, `docked` in the debug view, or `hidden`.",
      "default": "floating",
      "defaultDefaultValue": "floating",
      "scope": 3,
      "restricted": false
    },
    "debug.showInStatusBar": {
      "enum": [
        "never",
        "always",
        "onFirstSessionStart"
      ],
      "enumDescriptions": [
        "Never show debug in status bar",
        "Always show debug in status bar",
        "Show debug in status bar only after debug was started for the first time"
      ],
      "description": "Controls when the debug status bar should be visible.",
      "default": "onFirstSessionStart",
      "defaultDefaultValue": "onFirstSessionStart",
      "scope": 3,
      "restricted": false
    },
    "debug.internalConsoleOptions": {
      "enum": [
        "neverOpen",
        "openOnSessionStart",
        "openOnFirstSessionStart"
      ],
      "default": "openOnFirstSessionStart",
      "description": "Controls when the internal debug console should open.",
      "defaultDefaultValue": "openOnFirstSessionStart",
      "scope": 3,
      "restricted": false
    },
    "debug.console.closeOnEnd": {
      "type": "boolean",
      "description": "Controls if the debug console should be automatically closed when the debug session ends.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "debug.terminal.clearBeforeReusing": {
      "type": "boolean",
      "description": "Before starting a new debug session in an integrated or external terminal, clear the terminal.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "debug.openDebug": {
      "enum": [
        "neverOpen",
        "openOnSessionStart",
        "openOnFirstSessionStart",
        "openOnDebugBreak"
      ],
      "default": "openOnDebugBreak",
      "description": "Controls when the debug view should open.",
      "defaultDefaultValue": "openOnDebugBreak",
      "scope": 3,
      "restricted": false
    },
    "debug.showSubSessionsInToolBar": {
      "type": "boolean",
      "description": "Controls whether the debug sub-sessions are shown in the debug tool bar. When this setting is false the stop command on a sub-session will also stop the parent session.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "debug.console.fontSize": {
      "type": "number",
      "description": "Controls the font size in pixels in the debug console.",
      "default": 14,
      "defaultDefaultValue": 14,
      "scope": 3,
      "restricted": false
    },
    "debug.console.fontFamily": {
      "type": "string",
      "description": "Controls the font family in the debug console.",
      "default": "default",
      "defaultDefaultValue": "default",
      "scope": 3,
      "restricted": false
    },
    "debug.console.lineHeight": {
      "type": "number",
      "description": "Controls the line height in pixels in the debug console. Use 0 to compute the line height from the font size.",
      "default": 0,
      "defaultDefaultValue": 0,
      "scope": 3,
      "restricted": false
    },
    "debug.console.wordWrap": {
      "type": "boolean",
      "description": "Controls if the lines should wrap in the debug console.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "debug.console.historySuggestions": {
      "type": "boolean",
      "description": "Controls if the debug console should suggest previously typed input.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "debug.console.collapseIdenticalLines": {
      "type": "boolean",
      "description": "Controls if the debug console should collapse identical lines and show a number of occurrences with a badge.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "debug.console.acceptSuggestionOnEnter": {
      "enum": [
        "off",
        "on"
      ],
      "description": "Controls whether suggestions should be accepted on enter in the debug console. enter is also used to evaluate whatever is typed in the debug console.",
      "default": "off",
      "defaultDefaultValue": "off",
      "scope": 3,
      "restricted": false
    },
    "launch": {
      "type": "object",
      "description": "Global debug launch configuration. Should be used as an alternative to 'launch.json' that is shared across workspaces.",
      "default": {
        "configurations": [],
        "compounds": []
      },
      "$ref": "vscode://schemas/launch",
      "defaultDefaultValue": {
        "configurations": [],
        "compounds": []
      },
      "scope": 3,
      "restricted": false
    },
    "debug.focusWindowOnBreak": {
      "type": "boolean",
      "description": "Controls whether the workbench window should be focused when the debugger breaks.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "debug.onTaskErrors": {
      "enum": [
        "debugAnyway",
        "showErrors",
        "prompt",
        "abort"
      ],
      "enumDescriptions": [
        "Ignore task errors and start debugging.",
        "Show the Problems view and do not start debugging.",
        "Prompt user.",
        "Cancel debugging."
      ],
      "description": "Controls what to do when errors are encountered after running a preLaunchTask.",
      "default": "prompt",
      "defaultDefaultValue": "prompt",
      "scope": 3,
      "restricted": false
    },
    "debug.showBreakpointsInOverviewRuler": {
      "type": "boolean",
      "description": "Controls whether breakpoints should be shown in the overview ruler.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "debug.showInlineBreakpointCandidates": {
      "type": "boolean",
      "description": "Controls whether inline breakpoints candidate decorations should be shown in the editor while debugging.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "debug.saveBeforeStart": {
      "description": "Controls what editors to save before starting a debug session.",
      "enum": [
        "allEditorsInActiveGroup",
        "nonUntitledEditorsInActiveGroup",
        "none"
      ],
      "enumDescriptions": [
        "Save all editors in the active group before starting a debug session.",
        "Save all editors in the active group except untitled ones before starting a debug session.",
        "Don't save any editors before starting a debug session."
      ],
      "default": "allEditorsInActiveGroup",
      "scope": 5,
      "defaultDefaultValue": "allEditorsInActiveGroup",
      "restricted": false
    },
    "debug.confirmOnExit": {
      "description": "Controls whether to confirm when the window closes if there are active debug sessions.",
      "type": "string",
      "enum": [
        "never",
        "always"
      ],
      "enumDescriptions": [
        "Never confirm.",
        "Always confirm if there are debug sessions."
      ],
      "default": "never",
      "defaultDefaultValue": "never",
      "scope": 3,
      "restricted": false
    },
    "debug.disassemblyView.showSourceCode": {
      "type": "boolean",
      "default": true,
      "description": "Show Source Code in Disassembly View.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "files.exclude": {
      "type": "object",
      "markdownDescription": "Configure [glob patterns](https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options) for excluding files and folders. For example, the file explorer decides which files and folders to show or hide based on this setting. Refer to the `#search.exclude#` setting to define search-specific excludes.",
      "default": {
        "**/.git": true,
        "**/.svn": true,
        "**/.hg": true,
        "**/CVS": true,
        "**/.DS_Store": true,
        "**/Thumbs.db": true
      },
      "scope": 4,
      "additionalProperties": {
        "anyOf": [
          {
            "type": "boolean",
            "description": "The glob pattern to match file paths against. Set to true or false to enable or disable the pattern."
          },
          {
            "type": "object",
            "properties": {
              "when": {
                "type": "string",
                "pattern": "\\w*\\$\\(basename\\)\\w*",
                "default": "$(basename).ext",
                "description": "Additional check on the siblings of a matching file. Use $(basename) as variable for the matching file name."
              }
            }
          }
        ]
      },
      "defaultDefaultValue": {
        "**/.git": true,
        "**/.svn": true,
        "**/.hg": true,
        "**/CVS": true,
        "**/.DS_Store": true,
        "**/Thumbs.db": true
      },
      "restricted": false
    },
    "files.associations": {
      "type": "object",
      "markdownDescription": "Configure file associations to languages (e.g. `\"*.extension\": \"html\"`). These have precedence over the default associations of the languages installed.",
      "additionalProperties": {
        "type": "string"
      },
      "default": {},
      "scope": 3,
      "restricted": false
    },
    "files.encoding": {
      "type": "string",
      "enum": [
        "utf8",
        "utf8bom",
        "utf16le",
        "utf16be",
        "windows1252",
        "iso88591",
        "iso88593",
        "iso885915",
        "macroman",
        "cp437",
        "windows1256",
        "iso88596",
        "windows1257",
        "iso88594",
        "iso885914",
        "windows1250",
        "iso88592",
        "cp852",
        "windows1251",
        "cp866",
        "iso88595",
        "koi8r",
        "koi8u",
        "iso885913",
        "windows1253",
        "iso88597",
        "windows1255",
        "iso88598",
        "iso885910",
        "iso885916",
        "windows1254",
        "iso88599",
        "windows1258",
        "gbk",
        "gb18030",
        "cp950",
        "big5hkscs",
        "shiftjis",
        "eucjp",
        "euckr",
        "windows874",
        "iso885911",
        "koi8ru",
        "koi8t",
        "gb2312",
        "cp865",
        "cp850"
      ],
      "default": "utf8",
      "description": "The default character set encoding to use when reading and writing files. This setting can also be configured per language.",
      "scope": 5,
      "enumDescriptions": [
        "UTF-8",
        "UTF-8 with BOM",
        "UTF-16 LE",
        "UTF-16 BE",
        "Western (Windows 1252)",
        "Western (ISO 8859-1)",
        "Western (ISO 8859-3)",
        "Western (ISO 8859-15)",
        "Western (Mac Roman)",
        "DOS (CP 437)",
        "Arabic (Windows 1256)",
        "Arabic (ISO 8859-6)",
        "Baltic (Windows 1257)",
        "Baltic (ISO 8859-4)",
        "Celtic (ISO 8859-14)",
        "Central European (Windows 1250)",
        "Central European (ISO 8859-2)",
        "Central European (CP 852)",
        "Cyrillic (Windows 1251)",
        "Cyrillic (CP 866)",
        "Cyrillic (ISO 8859-5)",
        "Cyrillic (KOI8-R)",
        "Cyrillic (KOI8-U)",
        "Estonian (ISO 8859-13)",
        "Greek (Windows 1253)",
        "Greek (ISO 8859-7)",
        "Hebrew (Windows 1255)",
        "Hebrew (ISO 8859-8)",
        "Nordic (ISO 8859-10)",
        "Romanian (ISO 8859-16)",
        "Turkish (Windows 1254)",
        "Turkish (ISO 8859-9)",
        "Vietnamese (Windows 1258)",
        "Simplified Chinese (GBK)",
        "Simplified Chinese (GB18030)",
        "Traditional Chinese (Big5)",
        "Traditional Chinese (Big5-HKSCS)",
        "Japanese (Shift JIS)",
        "Japanese (EUC-JP)",
        "Korean (EUC-KR)",
        "Thai (Windows 874)",
        "Latin/Thai (ISO 8859-11)",
        "Cyrillic (KOI8-RU)",
        "Tajik (KOI8-T)",
        "Simplified Chinese (GB 2312)",
        "Nordic DOS (CP 865)",
        "Western European DOS (CP 850)"
      ],
      "enumItemLabels": [
        "UTF-8",
        "UTF-8 with BOM",
        "UTF-16 LE",
        "UTF-16 BE",
        "Western (Windows 1252)",
        "Western (ISO 8859-1)",
        "Western (ISO 8859-3)",
        "Western (ISO 8859-15)",
        "Western (Mac Roman)",
        "DOS (CP 437)",
        "Arabic (Windows 1256)",
        "Arabic (ISO 8859-6)",
        "Baltic (Windows 1257)",
        "Baltic (ISO 8859-4)",
        "Celtic (ISO 8859-14)",
        "Central European (Windows 1250)",
        "Central European (ISO 8859-2)",
        "Central European (CP 852)",
        "Cyrillic (Windows 1251)",
        "Cyrillic (CP 866)",
        "Cyrillic (ISO 8859-5)",
        "Cyrillic (KOI8-R)",
        "Cyrillic (KOI8-U)",
        "Estonian (ISO 8859-13)",
        "Greek (Windows 1253)",
        "Greek (ISO 8859-7)",
        "Hebrew (Windows 1255)",
        "Hebrew (ISO 8859-8)",
        "Nordic (ISO 8859-10)",
        "Romanian (ISO 8859-16)",
        "Turkish (Windows 1254)",
        "Turkish (ISO 8859-9)",
        "Vietnamese (Windows 1258)",
        "Simplified Chinese (GBK)",
        "Simplified Chinese (GB18030)",
        "Traditional Chinese (Big5)",
        "Traditional Chinese (Big5-HKSCS)",
        "Japanese (Shift JIS)",
        "Japanese (EUC-JP)",
        "Korean (EUC-KR)",
        "Thai (Windows 874)",
        "Latin/Thai (ISO 8859-11)",
        "Cyrillic (KOI8-RU)",
        "Tajik (KOI8-T)",
        "Simplified Chinese (GB 2312)",
        "Nordic DOS (CP 865)",
        "Western European DOS (CP 850)"
      ],
      "defaultDefaultValue": "utf8",
      "restricted": false
    },
    "files.autoGuessEncoding": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "When enabled, the editor will attempt to guess the character set encoding when opening files. This setting can also be configured per language. Note, this setting is not respected by text search. Only `#files.encoding#` is respected.",
      "scope": 5,
      "defaultDefaultValue": false,
      "restricted": false
    },
    "files.eol": {
      "type": "string",
      "enum": [
        "\n",
        "\r\n",
        "auto"
      ],
      "enumDescriptions": [
        "LF",
        "CRLF",
        "Uses operating system specific end of line character."
      ],
      "default": "auto",
      "description": "The default end of line character.",
      "scope": 5,
      "defaultDefaultValue": "auto",
      "restricted": false
    },
    "files.enableTrash": {
      "type": "boolean",
      "default": true,
      "description": "Moves files/folders to the OS trash (recycle bin on Windows) when deleting. Disabling this will delete files/folders permanently.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "files.trimTrailingWhitespace": {
      "type": "boolean",
      "default": false,
      "description": "When enabled, will trim trailing whitespace when saving a file.",
      "scope": 5,
      "defaultDefaultValue": false,
      "restricted": false
    },
    "files.insertFinalNewline": {
      "type": "boolean",
      "default": false,
      "description": "When enabled, insert a final new line at the end of the file when saving it.",
      "scope": 5,
      "defaultDefaultValue": false,
      "restricted": false
    },
    "files.trimFinalNewlines": {
      "type": "boolean",
      "default": false,
      "description": "When enabled, will trim all new lines after the final new line at the end of the file when saving it.",
      "scope": 5,
      "defaultDefaultValue": false,
      "restricted": false
    },
    "files.autoSave": {
      "type": "string",
      "enum": [
        "off",
        "afterDelay",
        "onFocusChange",
        "onWindowChange"
      ],
      "markdownEnumDescriptions": [
        "An editor with changes is never automatically saved.",
        "An editor with changes is automatically saved after the configured `#files.autoSaveDelay#`.",
        "An editor with changes is automatically saved when the editor loses focus.",
        "An editor with changes is automatically saved when the window loses focus."
      ],
      "default": "off",
      "markdownDescription": "Controls [auto save](https://code.visualstudio.com/docs/editor/codebasics#_save-auto-save) of editors that have unsaved changes.",
      "defaultDefaultValue": "off",
      "scope": 3,
      "restricted": false
    },
    "files.autoSaveDelay": {
      "type": "number",
      "default": 1000,
      "minimum": 0,
      "markdownDescription": "Controls the delay in milliseconds after which an editor with unsaved changes is saved automatically. Only applies when `#files.autoSave#` is set to `afterDelay`.",
      "defaultDefaultValue": 1000,
      "scope": 3,
      "restricted": false
    },
    "files.watcherExclude": {
      "type": "object",
      "default": {
        "**/.git/objects/**": true,
        "**/.git/subtree-cache/**": true,
        "**/node_modules/*/**": true,
        "**/.hg/store/**": true
      },
      "markdownDescription": "Configure paths or glob patterns to exclude from file watching. Paths that are relative (for example `build/output`) will be resolved to an absolute path using the currently opened workspace. Glob patterns must match on absolute paths (i.e. prefix with `**/` or the full path and suffix with `/**` to match files within a path) to match properly (for example `**/build/output/**` or `/Users/name/workspaces/project/build/output/**`). When you experience the file watcher process consuming a lot of CPU, make sure to exclude large folders that are of less interest (such as build output folders).",
      "scope": 4,
      "defaultDefaultValue": {
        "**/.git/objects/**": true,
        "**/.git/subtree-cache/**": true,
        "**/node_modules/*/**": true,
        "**/.hg/store/**": true
      },
      "restricted": false
    },
    "files.watcherInclude": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": [],
      "description": "Configure extra paths to watch for changes inside the workspace. By default, all workspace folders will be watched recursively, except for folders that are symbolic links. You can explicitly add absolute or relative paths to support watching folders that are symbolic links. Relative paths will be resolved to an absolute path using the currently opened workspace.",
      "scope": 4,
      "defaultDefaultValue": [],
      "restricted": false
    },
    "files.hotExit": {
      "type": "string",
      "scope": 1,
      "enum": [
        "off",
        "onExit",
        "onExitAndWindowClose"
      ],
      "default": "onExit",
      "markdownEnumDescriptions": [
        "Disable hot exit. A prompt will show when attempting to close a window with editors that have unsaved changes.",
        "Hot exit will be triggered when the last window is closed on Windows/Linux or when the `workbench.action.quit` command is triggered (command palette, keybinding, menu). All windows without folders opened will be restored upon next launch. A list of previously opened windows with unsaved files can be accessed via `File > Open Recent > More...`",
        "Hot exit will be triggered when the last window is closed on Windows/Linux or when the `workbench.action.quit` command is triggered (command palette, keybinding, menu), and also for any window with a folder opened regardless of whether it's the last window. All windows without folders opened will be restored upon next launch. A list of previously opened windows with unsaved files can be accessed via `File > Open Recent > More...`"
      ],
      "description": "Controls whether unsaved files are remembered between sessions, allowing the save prompt when exiting the editor to be skipped.",
      "defaultDefaultValue": "onExit",
      "restricted": false
    },
    "files.defaultLanguage": {
      "type": "string",
      "markdownDescription": "The default language identifier that is assigned to new files. If configured to `${activeEditorLanguage}`, will use the language identifier of the currently active text editor if any.",
      "default": "",
      "scope": 3,
      "restricted": false
    },
    "files.maxMemoryForLargeFilesMB": {
      "type": "number",
      "default": 4096,
      "markdownDescription": "Controls the memory available to VS Code after restart when trying to open large files. Same effect as specifying `--max-memory=NEWSIZE` on the command line.",
      "included": true,
      "defaultDefaultValue": 4096,
      "scope": 3,
      "restricted": false
    },
    "files.restoreUndoStack": {
      "type": "boolean",
      "description": "Restore the undo stack when a file is reopened.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "files.saveConflictResolution": {
      "type": "string",
      "enum": [
        "askUser",
        "overwriteFileOnDisk"
      ],
      "enumDescriptions": [
        "Will refuse to save and ask for resolving the save conflict manually.",
        "Will resolve the save conflict by overwriting the file on disk with the changes in the editor."
      ],
      "description": "A save conflict can occur when a file is saved to disk that was changed by another program in the meantime. To prevent data loss, the user is asked to compare the changes in the editor with the version on disk. This setting should only be changed if you frequently encounter save conflict errors and may result in data loss if used without caution.",
      "default": "askUser",
      "scope": 5,
      "defaultDefaultValue": "askUser",
      "restricted": false
    },
    "files.simpleDialog.enable": {
      "type": "boolean",
      "description": "Enables the simple file dialog. The simple file dialog replaces the system file dialog when enabled.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "editor.formatOnSave": {
      "type": "boolean",
      "description": "Format a file on save. A formatter must be available, the file must not be saved after delay, and the editor must not be shutting down.",
      "scope": 5,
      "default": false,
      "restricted": false
    },
    "editor.formatOnSaveMode": {
      "type": "string",
      "default": "file",
      "enum": [
        "file",
        "modifications",
        "modificationsIfAvailable"
      ],
      "enumDescriptions": [
        "Format the whole file.",
        "Format modifications (requires source control).",
        "Will attempt to format modifications only (requires source control). If source control can't be used, then the whole file will be formatted."
      ],
      "markdownDescription": "Controls if format on save formats the whole file or only modifications. Only applies when `#editor.formatOnSave#` is enabled.",
      "scope": 5,
      "defaultDefaultValue": "file",
      "restricted": false
    },
    "explorer.openEditors.visible": {
      "type": "number",
      "description": "Number of editors shown in the Open Editors pane. Setting this to 0 hides the Open Editors pane.",
      "default": 9,
      "defaultDefaultValue": 9,
      "scope": 3,
      "restricted": false
    },
    "explorer.openEditors.sortOrder": {
      "type": "string",
      "enum": [
        "editorOrder",
        "alphabetical",
        "fullPath"
      ],
      "description": "Controls the sorting order of editors in the Open Editors pane.",
      "enumDescriptions": [
        "Editors are ordered in the same order editor tabs are shown.",
        "Editors are ordered alphabetically by tab name inside each editor group.",
        "Editors are ordered alphabetically by full path inside each editor group."
      ],
      "default": "editorOrder",
      "defaultDefaultValue": "editorOrder",
      "scope": 3,
      "restricted": false
    },
    "explorer.autoReveal": {
      "type": [
        "boolean",
        "string"
      ],
      "enum": [
        true,
        false,
        "focusNoScroll"
      ],
      "default": true,
      "enumDescriptions": [
        "Files will be revealed and selected.",
        "Files will not be revealed and selected.",
        "Files will not be scrolled into view, but will still be focused."
      ],
      "description": "Controls whether the explorer should automatically reveal and select files when opening them.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "explorer.enableDragAndDrop": {
      "type": "boolean",
      "description": "Controls whether the explorer should allow to move files and folders via drag and drop. This setting only effects drag and drop from inside the explorer.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "explorer.confirmDragAndDrop": {
      "type": "boolean",
      "description": "Controls whether the explorer should ask for confirmation to move files and folders via drag and drop.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "explorer.confirmDelete": {
      "type": "boolean",
      "description": "Controls whether the explorer should ask for confirmation when deleting a file via the trash.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "explorer.enableUndo": {
      "type": "boolean",
      "description": "Controls whether the explorer should support undoing file and folder operations.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "explorer.confirmUndo": {
      "type": "string",
      "enum": [
        "verbose",
        "default",
        "light"
      ],
      "description": "Controls whether the explorer should ask for confirmation when undoing.",
      "default": "default",
      "enumDescriptions": [
        "Explorer will prompt before all undo operations.",
        "Explorer will prompt before destructive undo operations.",
        "Explorer will not prompt before undo operations when focused."
      ],
      "defaultDefaultValue": "default",
      "scope": 3,
      "restricted": false
    },
    "explorer.expandSingleFolderWorkspaces": {
      "type": "boolean",
      "description": "Controls whether the explorer should expand multi-root workspaces containing only one folder during initilization",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "explorer.sortOrder": {
      "type": "string",
      "enum": [
        "default",
        "mixed",
        "filesFirst",
        "type",
        "modified",
        "foldersNestsFiles"
      ],
      "default": "default",
      "enumDescriptions": [
        "Files and folders are sorted by their names. Folders are displayed before files.",
        "Files and folders are sorted by their names. Files are interwoven with folders.",
        "Files and folders are sorted by their names. Files are displayed before folders.",
        "Files and folders are grouped by extension type then sorted by their names. Folders are displayed before files.",
        "Files and folders are sorted by last modified date in descending order. Folders are displayed before  files.",
        "Files and folders are sorted by their names. Folders are displayed before files. Files with nested children are displayed before other files."
      ],
      "description": "Controls the property-based sorting of files and folders in the explorer. When `#explorer.experimental.fileNesting.enabled#` is enabled, also controls sorting of nested files.",
      "defaultDefaultValue": "default",
      "scope": 3,
      "restricted": false
    },
    "explorer.sortOrderLexicographicOptions": {
      "type": "string",
      "enum": [
        "default",
        "upper",
        "lower",
        "unicode"
      ],
      "default": "default",
      "enumDescriptions": [
        "Uppercase and lowercase names are mixed together.",
        "Uppercase names are grouped together before lowercase names.",
        "Lowercase names are grouped together before uppercase names.",
        "Names are sorted in unicode order."
      ],
      "description": "Controls the lexicographic sorting of file and folder names in the Explorer.",
      "defaultDefaultValue": "default",
      "scope": 3,
      "restricted": false
    },
    "explorer.decorations.colors": {
      "type": "boolean",
      "description": "Controls whether file decorations should use colors.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "explorer.decorations.badges": {
      "type": "boolean",
      "description": "Controls whether file decorations should use badges.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "explorer.incrementalNaming": {
      "type": "string",
      "enum": [
        "simple",
        "smart"
      ],
      "enumDescriptions": [
        "Appends the word \"copy\" at the end of the duplicated name potentially followed by a number",
        "Adds a number at the end of the duplicated name. If some number is already part of the name, tries to increase that number"
      ],
      "description": "Controls what naming strategy to use when a giving a new name to a duplicated explorer item on paste.",
      "default": "simple",
      "defaultDefaultValue": "simple",
      "scope": 3,
      "restricted": false
    },
    "explorer.compactFolders": {
      "type": "boolean",
      "description": "Controls whether the explorer should render folders in a compact form. In such a form, single child folders will be compressed in a combined tree element. Useful for Java package structures, for example.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "explorer.copyRelativePathSeparator": {
      "type": "string",
      "enum": [
        "/",
        "\\",
        "auto"
      ],
      "enumDescriptions": [
        "Use slash as path separation character.",
        "Use backslash as path separation character.",
        "Uses operating system specific path separation character."
      ],
      "description": "The path separation character used when copying relative file paths.",
      "default": "auto",
      "defaultDefaultValue": "auto",
      "scope": 3,
      "restricted": false
    },
    "explorer.experimental.fileNesting.enabled": {
      "type": "boolean",
      "markdownDescription": "Experimental. Controls whether file nesting is enabled in the explorer. File nesting allows for related files in a directory to be visually grouped together under a single parent file.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "explorer.experimental.fileNesting.expand": {
      "type": "boolean",
      "markdownDescription": "Experimental. Controls whether file nests are automatically expanded. `#explorer.experimental.fileNesting.enabled#` must be set for this to take effect.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "explorer.experimental.fileNesting.patterns": {
      "type": "object",
      "markdownDescription": "Experimental. Controls nesting of files in the explorer. `#explorer.experimental.fileNesting.enabled#` must be set for this to take effect. Each key describes a parent file pattern and each value should be a comma separated list of children file patterns that will be nested under the parent.\n\nA single `*` in a parent pattern may be used to capture any substring, which can then be matched against using `$​(capture)` in a child pattern. Child patterns may also contain one `*` to match any substring.\n\nFor example, given the configuration `*.ts => $(capture).js, $(capture).*.ts`, and a directory containing `a.ts, a.js, a.d.ts`, and `b.js`, nesting would apply as follows: \n- `*.ts` matches `a.ts`, capturing `a`. This causes any sibilings matching `a.js` or `a.*.ts` to be nested under `a.ts`\n    - `a.js` matches `a.js` exactly, so is nested under `a.ts`\n    - `a.d.ts` matches `a.*.ts`, so is also nested under `a.ts`\n\nThe final directory will be rendered with `a.ts` containg `a.js` and `a.d.ts` as nested children, and `b.js` as normal file.",
      "patternProperties": {
        "^[^*]*\\*?[^*]*$": {
          "markdownDescription": "Key patterns may contain a single `*` capture group which matches any string. Each value pattern may contain one `$​(capture)` token to be substituted with the parent capture group and one `*` token to match any string",
          "type": "string",
          "pattern": "^([^,*]*\\*?[^,*]*)(, ?[^,*]*\\*?[^,*]*)*$"
        }
      },
      "additionalProperties": false,
      "default": {
        "*.ts": "$(capture).js, $(capture).*.ts",
        "*.js": "$(capture).js.map, $(capture).min.js, $(capture).d.ts",
        "*.jsx": "$(capture).js",
        "*.tsx": "$(capture).ts",
        "tsconfig.json": "tsconfig.*.json",
        "package.json": "package-lock.json, .npmrc, yarn.lock, .yarnrc, pnpm-lock.yaml"
      },
      "defaultDefaultValue": {
        "*.ts": "$(capture).js, $(capture).*.ts",
        "*.js": "$(capture).js.map, $(capture).min.js, $(capture).d.ts",
        "*.jsx": "$(capture).js",
        "*.tsx": "$(capture).ts",
        "tsconfig.json": "tsconfig.*.json",
        "package.json": "package-lock.json, .npmrc, yarn.lock, .yarnrc, pnpm-lock.yaml"
      },
      "scope": 3,
      "restricted": false
    },
    "problems.autoReveal": {
      "description": "Controls whether Problems view should automatically reveal files when opening them.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "problems.showCurrentInStatus": {
      "description": "When enabled shows the current problem in the status bar.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "problems.sortOrder": {
      "description": "Controls the order in which problems are navigated.",
      "type": "string",
      "default": "severity",
      "enum": [
        "severity",
        "position"
      ],
      "enumDescriptions": [
        "Navigate problems ordered by severity",
        "Navigate problems ordered by position"
      ],
      "defaultDefaultValue": "severity",
      "scope": 3,
      "restricted": false
    },
    "notebook.diff.ignoreMetadata": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Hide Metadata Differences",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "notebook.diff.ignoreOutputs": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Hide Outputs Differences",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "notebook.displayOrder": {
      "description": "Priority list for output mime types",
      "type": [
        "array"
      ],
      "items": {
        "type": "string"
      },
      "default": [],
      "defaultDefaultValue": [],
      "scope": 3,
      "restricted": false
    },
    "notebook.cellToolbarLocation": {
      "description": "Where the cell toolbar should be shown, or whether it should be hidden.",
      "type": "object",
      "additionalProperties": {
        "markdownDescription": "Configure the cell toolbar position for for specific file types",
        "type": "string",
        "enum": [
          "left",
          "right",
          "hidden"
        ]
      },
      "default": {
        "default": "right"
      },
      "tags": [
        "notebookLayout"
      ],
      "defaultDefaultValue": {
        "default": "right"
      },
      "scope": 3,
      "restricted": false
    },
    "notebook.showCellStatusBar": {
      "description": "Whether the cell status bar should be shown.",
      "type": "string",
      "enum": [
        "hidden",
        "visible",
        "visibleAfterExecute"
      ],
      "enumDescriptions": [
        "The cell Status bar is always hidden.",
        "The cell Status bar is always visible.",
        "The cell Status bar is hidden until the cell has executed. Then it becomes visible to show the execution status."
      ],
      "default": "visible",
      "tags": [
        "notebookLayout"
      ],
      "defaultDefaultValue": "visible",
      "scope": 3,
      "restricted": false
    },
    "notebook.diff.enablePreview": {
      "description": "Whether to use the enhanced text diff editor for notebook.",
      "type": "boolean",
      "default": true,
      "tags": [
        "notebookLayout"
      ],
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "notebook.cellToolbarVisibility": {
      "markdownDescription": "Whether the cell toolbar should appear on hover or click.",
      "type": "string",
      "enum": [
        "hover",
        "click"
      ],
      "default": "click",
      "tags": [
        "notebookLayout"
      ],
      "defaultDefaultValue": "click",
      "scope": 3,
      "restricted": false
    },
    "notebook.undoRedoPerCell": {
      "description": "Whether to use separate undo/redo stack for each cell.",
      "type": "boolean",
      "default": true,
      "tags": [
        "notebookLayout"
      ],
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "notebook.compactView": {
      "description": "Control whether the notebook editor should be rendered in a compact form. For example, when turned on, it will decrease the left margin width.",
      "type": "boolean",
      "default": true,
      "tags": [
        "notebookLayout"
      ],
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "notebook.cellFocusIndicator": {
      "description": "Controls where the focus indicator is rendered, either along the cell borders or on the left gutter",
      "type": "string",
      "enum": [
        "border",
        "gutter"
      ],
      "default": "gutter",
      "tags": [
        "notebookLayout"
      ],
      "defaultDefaultValue": "gutter",
      "scope": 3,
      "restricted": false
    },
    "notebook.insertToolbarLocation": {
      "description": "Control where the insert cell actions should appear.",
      "type": "string",
      "enum": [
        "betweenCells",
        "notebookToolbar",
        "both",
        "hidden"
      ],
      "enumDescriptions": [
        "A toolbar that appears on hover between cells.",
        "The toolbar at the top of the notebook editor.",
        "Both toolbars.",
        "The insert actions don't appear anywhere."
      ],
      "default": "both",
      "tags": [
        "notebookLayout"
      ],
      "defaultDefaultValue": "both",
      "scope": 3,
      "restricted": false
    },
    "notebook.globalToolbar": {
      "description": "Control whether to render a global toolbar inside the notebook editor.",
      "type": "boolean",
      "default": true,
      "tags": [
        "notebookLayout"
      ],
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "notebook.consolidatedOutputButton": {
      "description": "Control whether outputs action should be rendered in the output toolbar.",
      "type": "boolean",
      "default": true,
      "tags": [
        "notebookLayout"
      ],
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "notebook.showFoldingControls": {
      "description": "Controls when the Markdown header folding arrow is shown.",
      "type": "string",
      "enum": [
        "always",
        "mouseover"
      ],
      "enumDescriptions": [
        "The folding controls are always visible.",
        "The folding controls are visible only on mouseover."
      ],
      "default": "mouseover",
      "tags": [
        "notebookLayout"
      ],
      "defaultDefaultValue": "mouseover",
      "scope": 3,
      "restricted": false
    },
    "notebook.dragAndDropEnabled": {
      "description": "Control whether the notebook editor should allow moving cells through drag and drop.",
      "type": "boolean",
      "default": true,
      "tags": [
        "notebookLayout"
      ],
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "notebook.consolidatedRunButton": {
      "description": "Control whether extra actions are shown in a dropdown next to the run button.",
      "type": "boolean",
      "default": false,
      "tags": [
        "notebookLayout"
      ],
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "notebook.globalToolbarShowLabel": {
      "description": "Control whether the actions on the notebook toolbar should render label or not.",
      "type": "string",
      "enum": [
        "always",
        "never",
        "dynamic"
      ],
      "default": "always",
      "tags": [
        "notebookLayout"
      ],
      "defaultDefaultValue": "always",
      "scope": 3,
      "restricted": false
    },
    "notebook.output.textLineLimit": {
      "description": "Control how many lines of text in a text output is rendered.",
      "type": "number",
      "default": 30,
      "tags": [
        "notebookLayout"
      ],
      "defaultDefaultValue": 30,
      "scope": 3,
      "restricted": false
    },
    "notebook.markup.fontSize": {
      "markdownDescription": "Controls the font size in pixels of rendered markup in notebooks. When set to `0`, 120% of `#editor.fontSize#` is used.",
      "type": "number",
      "default": 0,
      "tags": [
        "notebookLayout"
      ],
      "defaultDefaultValue": 0,
      "scope": 3,
      "restricted": false
    },
    "notebook.editorOptionsCustomizations": {
      "description": "Settings for code editors used in notebooks. This can be used to customize most editor.* settings.",
      "default": {},
      "allOf": [
        {
          "properties": {
            "editor.acceptSuggestionOnCommitCharacter": {
              "markdownDescription": "Controls whether suggestions should be accepted on commit characters. For example, in JavaScript, the semi-colon (`;`) can be a commit character that accepts a suggestion and types that character.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.acceptSuggestionOnEnter": {
              "markdownEnumDescriptions": [
                "",
                "Only accept a suggestion with `Enter` when it makes a textual change.",
                ""
              ],
              "markdownDescription": "Controls whether suggestions should be accepted on `Enter`, in addition to `Tab`. Helps to avoid ambiguity between inserting new lines or accepting suggestions.",
              "type": "string",
              "enum": [
                "on",
                "smart",
                "off"
              ],
              "default": "on",
              "defaultDefaultValue": "on",
              "scope": 5,
              "restricted": false
            },
            "editor.accessibilitySupport": {
              "type": "string",
              "enum": [
                "auto",
                "on",
                "off"
              ],
              "enumDescriptions": [
                "The editor will use platform APIs to detect when a Screen Reader is attached.",
                "The editor will be permanently optimized for usage with a Screen Reader. Word wrapping will be disabled.",
                "The editor will never be optimized for usage with a Screen Reader."
              ],
              "default": "auto",
              "description": "Controls whether the editor should run in a mode where it is optimized for screen readers. Setting to on will disable word wrapping.",
              "defaultDefaultValue": "auto",
              "scope": 5,
              "restricted": false
            },
            "editor.accessibilityPageSize": {
              "description": "Controls the number of lines in the editor that can be read out by a screen reader at once. When we detect a screen reader we automatically set the default to be 500. Warning: this has a performance implication for numbers larger than the default.",
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 1073741824,
              "defaultDefaultValue": 10,
              "scope": 5,
              "restricted": false
            },
            "editor.autoClosingBrackets": {
              "enumDescriptions": [
                "",
                "Use language configurations to determine when to autoclose brackets.",
                "Autoclose brackets only when the cursor is to the left of whitespace.",
                ""
              ],
              "description": "Controls whether the editor should automatically close brackets after the user adds an opening bracket.",
              "type": "string",
              "enum": [
                "always",
                "languageDefined",
                "beforeWhitespace",
                "never"
              ],
              "default": "languageDefined",
              "defaultDefaultValue": "languageDefined",
              "scope": 5,
              "restricted": false
            },
            "editor.autoClosingDelete": {
              "enumDescriptions": [
                "",
                "Remove adjacent closing quotes or brackets only if they were automatically inserted.",
                ""
              ],
              "description": "Controls whether the editor should remove adjacent closing quotes or brackets when deleting.",
              "type": "string",
              "enum": [
                "always",
                "auto",
                "never"
              ],
              "default": "auto",
              "defaultDefaultValue": "auto",
              "scope": 5,
              "restricted": false
            },
            "editor.autoClosingOvertype": {
              "enumDescriptions": [
                "",
                "Type over closing quotes or brackets only if they were automatically inserted.",
                ""
              ],
              "description": "Controls whether the editor should type over closing quotes or brackets.",
              "type": "string",
              "enum": [
                "always",
                "auto",
                "never"
              ],
              "default": "auto",
              "defaultDefaultValue": "auto",
              "scope": 5,
              "restricted": false
            },
            "editor.autoClosingQuotes": {
              "enumDescriptions": [
                "",
                "Use language configurations to determine when to autoclose quotes.",
                "Autoclose quotes only when the cursor is to the left of whitespace.",
                ""
              ],
              "description": "Controls whether the editor should automatically close quotes after the user adds an opening quote.",
              "type": "string",
              "enum": [
                "always",
                "languageDefined",
                "beforeWhitespace",
                "never"
              ],
              "default": "languageDefined",
              "defaultDefaultValue": "languageDefined",
              "scope": 5,
              "restricted": false
            },
            "editor.autoIndent": {
              "enumDescriptions": [
                "The editor will not insert indentation automatically.",
                "The editor will keep the current line's indentation.",
                "The editor will keep the current line's indentation and honor language defined brackets.",
                "The editor will keep the current line's indentation, honor language defined brackets and invoke special onEnterRules defined by languages.",
                "The editor will keep the current line's indentation, honor language defined brackets, invoke special onEnterRules defined by languages, and honor indentationRules defined by languages."
              ],
              "description": "Controls whether the editor should automatically adjust the indentation when users type, paste, move or indent lines.",
              "type": "string",
              "enum": [
                "none",
                "keep",
                "brackets",
                "advanced",
                "full"
              ],
              "default": "full",
              "defaultDefaultValue": "full",
              "scope": 5,
              "restricted": false
            },
            "editor.autoSurround": {
              "enumDescriptions": [
                "Use language configurations to determine when to automatically surround selections.",
                "Surround with quotes but not brackets.",
                "Surround with brackets but not quotes.",
                ""
              ],
              "description": "Controls whether the editor should automatically surround selections when typing quotes or brackets.",
              "type": "string",
              "enum": [
                "languageDefined",
                "quotes",
                "brackets",
                "never"
              ],
              "default": "languageDefined",
              "defaultDefaultValue": "languageDefined",
              "scope": 5,
              "restricted": false
            },
            "editor.bracketPairColorization.enabled": {
              "type": "boolean",
              "default": false,
              "description": "Controls whether bracket pair colorization is enabled or not. Use 'workbench.colorCustomizations' to override the bracket highlight colors.",
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.guides.bracketPairs": {
              "type": [
                "boolean",
                "string"
              ],
              "enum": [
                true,
                "active",
                false
              ],
              "enumDescriptions": [
                "Enables bracket pair guides.",
                "Enables bracket pair guides only for the active bracket pair.",
                "Disables bracket pair guides."
              ],
              "default": false,
              "description": "Controls whether bracket pair guides are enabled or not.",
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.guides.bracketPairsHorizontal": {
              "type": [
                "boolean",
                "string"
              ],
              "enum": [
                true,
                "active",
                false
              ],
              "enumDescriptions": [
                "Enables horizontal guides as addition to vertical bracket pair guides.",
                "Enables horizontal guides only for the active bracket pair.",
                "Disables horizontal bracket pair guides."
              ],
              "default": "active",
              "description": "Controls whether horizontal bracket pair guides are enabled or not.",
              "defaultDefaultValue": "active",
              "scope": 5,
              "restricted": false
            },
            "editor.guides.highlightActiveBracketPair": {
              "type": "boolean",
              "default": true,
              "description": "Controls whether the editor should highlight the active bracket pair.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.guides.indentation": {
              "type": "boolean",
              "default": true,
              "description": "Controls whether the editor should render indent guides.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.guides.highlightActiveIndentation": {
              "type": "boolean",
              "default": true,
              "description": "Controls whether the editor should highlight the active indent guide.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.codeLens": {
              "description": "Controls whether the editor shows CodeLens.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.codeLensFontFamily": {
              "description": "Controls the font family for CodeLens.",
              "type": "string",
              "default": "",
              "defaultDefaultValue": "",
              "scope": 5,
              "restricted": false
            },
            "editor.codeLensFontSize": {
              "type": "integer",
              "default": 0,
              "minimum": 0,
              "maximum": 100,
              "markdownDescription": "Controls the font size in pixels for CodeLens. When set to `0`, 90% of `#editor.fontSize#` is used.",
              "defaultDefaultValue": 0,
              "scope": 5,
              "restricted": false
            },
            "editor.colorDecorators": {
              "description": "Controls whether the editor should render the inline color decorators and color picker.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.columnSelection": {
              "description": "Enable that the selection with the mouse and keys is doing column selection.",
              "type": "boolean",
              "default": false,
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.comments.insertSpace": {
              "type": "boolean",
              "default": true,
              "description": "Controls whether a space character is inserted when commenting.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.comments.ignoreEmptyLines": {
              "type": "boolean",
              "default": true,
              "description": "Controls if empty lines should be ignored with toggle, add or remove actions for line comments.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.copyWithSyntaxHighlighting": {
              "description": "Controls whether syntax highlighting should be copied into the clipboard.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.cursorBlinking": {
              "description": "Control the cursor animation style.",
              "type": "string",
              "enum": [
                "blink",
                "smooth",
                "phase",
                "expand",
                "solid"
              ],
              "default": "blink",
              "defaultDefaultValue": "blink",
              "scope": 5,
              "restricted": false
            },
            "editor.cursorSmoothCaretAnimation": {
              "description": "Controls whether the smooth caret animation should be enabled.",
              "type": "boolean",
              "default": false,
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.cursorStyle": {
              "description": "Controls the cursor style.",
              "type": "string",
              "enum": [
                "line",
                "block",
                "underline",
                "line-thin",
                "block-outline",
                "underline-thin"
              ],
              "default": "line",
              "defaultDefaultValue": "line",
              "scope": 5,
              "restricted": false
            },
            "editor.cursorSurroundingLines": {
              "description": "Controls the minimal number of visible leading and trailing lines surrounding the cursor. Known as 'scrollOff' or 'scrollOffset' in some other editors.",
              "type": "integer",
              "default": 0,
              "minimum": 0,
              "maximum": 1073741824,
              "defaultDefaultValue": 0,
              "scope": 5,
              "restricted": false
            },
            "editor.cursorSurroundingLinesStyle": {
              "enumDescriptions": [
                "`cursorSurroundingLines` is enforced only when triggered via the keyboard or API.",
                "`cursorSurroundingLines` is enforced always."
              ],
              "description": "Controls when `cursorSurroundingLines` should be enforced.",
              "type": "string",
              "enum": [
                "default",
                "all"
              ],
              "default": "default",
              "defaultDefaultValue": "default",
              "scope": 5,
              "restricted": false
            },
            "editor.cursorWidth": {
              "markdownDescription": "Controls the width of the cursor when `#editor.cursorStyle#` is set to `line`.",
              "type": "integer",
              "default": 0,
              "minimum": 0,
              "maximum": 1073741824,
              "defaultDefaultValue": 0,
              "scope": 5,
              "restricted": false
            },
            "editor.dragAndDrop": {
              "description": "Controls whether the editor should allow moving selections via drag and drop.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.emptySelectionClipboard": {
              "description": "Controls whether copying without a selection copies the current line.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.fastScrollSensitivity": {
              "markdownDescription": "Scrolling speed multiplier when pressing `Alt`.",
              "type": "number",
              "default": 5,
              "defaultDefaultValue": 5,
              "scope": 5,
              "restricted": false
            },
            "editor.find.cursorMoveOnType": {
              "type": "boolean",
              "default": true,
              "description": "Controls whether the cursor should jump to find matches while typing.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.find.seedSearchStringFromSelection": {
              "type": "string",
              "enum": [
                "never",
                "always",
                "selection"
              ],
              "default": "always",
              "enumDescriptions": [
                "Never seed search string from the editor selection.",
                "Always seed search string from the editor selection, including word at cursor position.",
                "Only seed search string from the editor selection."
              ],
              "description": "Controls whether the search string in the Find Widget is seeded from the editor selection.",
              "defaultDefaultValue": "always",
              "scope": 5,
              "restricted": false
            },
            "editor.find.autoFindInSelection": {
              "type": "string",
              "enum": [
                "never",
                "always",
                "multiline"
              ],
              "default": "never",
              "enumDescriptions": [
                "Never turn on Find in Selection automatically (default).",
                "Always turn on Find in Selection automatically.",
                "Turn on Find in Selection automatically when multiple lines of content are selected."
              ],
              "description": "Controls the condition for turning on Find in Selection automatically.",
              "defaultDefaultValue": "never",
              "scope": 5,
              "restricted": false
            },
            "editor.find.globalFindClipboard": {
              "type": "boolean",
              "default": false,
              "description": "Controls whether the Find Widget should read or modify the shared find clipboard on macOS.",
              "included": false,
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.find.addExtraSpaceOnTop": {
              "type": "boolean",
              "default": true,
              "description": "Controls whether the Find Widget should add extra lines on top of the editor. When true, you can scroll beyond the first line when the Find Widget is visible.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.find.loop": {
              "type": "boolean",
              "default": true,
              "description": "Controls whether the search automatically restarts from the beginning (or the end) when no further matches can be found.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.folding": {
              "description": "Controls whether the editor has code folding enabled.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.foldingStrategy": {
              "enumDescriptions": [
                "Use a language-specific folding strategy if available, else the indentation-based one.",
                "Use the indentation-based folding strategy."
              ],
              "description": "Controls the strategy for computing folding ranges.",
              "type": "string",
              "enum": [
                "auto",
                "indentation"
              ],
              "default": "auto",
              "defaultDefaultValue": "auto",
              "scope": 5,
              "restricted": false
            },
            "editor.foldingHighlight": {
              "description": "Controls whether the editor should highlight folded ranges.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.foldingImportsByDefault": {
              "description": "Controls whether the editor automatically collapses import ranges.",
              "type": "boolean",
              "default": false,
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.foldingMaximumRegions": {
              "description": "The maximum number of foldable regions. Increasing this value may result in the editor becoming less responsive when the current source has a large number of foldable regions.",
              "type": "integer",
              "default": 5000,
              "minimum": 10,
              "maximum": 65000,
              "defaultDefaultValue": 5000,
              "scope": 5,
              "restricted": false
            },
            "editor.unfoldOnClickAfterEndOfLine": {
              "description": "Controls whether clicking on the empty content after a folded line will unfold the line.",
              "type": "boolean",
              "default": false,
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.fontFamily": {
              "description": "Controls the font family.",
              "type": "string",
              "default": "Consolas, 'Courier New', monospace",
              "defaultDefaultValue": "Consolas, 'Courier New', monospace",
              "scope": 5,
              "restricted": false
            },
            "editor.fontLigatures": {
              "anyOf": [
                {
                  "type": "boolean",
                  "description": "Enables/Disables font ligatures ('calt' and 'liga' font features). Change this to a string for fine-grained control of the 'font-feature-settings' CSS property."
                },
                {
                  "type": "string",
                  "description": "Explicit 'font-feature-settings' CSS property. A boolean can be passed instead if one only needs to turn on/off ligatures."
                }
              ],
              "description": "Configures font ligatures or font features. Can be either a boolean to enable/disable ligatures or a string for the value of the CSS 'font-feature-settings' property.",
              "default": false,
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.fontSize": {
              "type": "number",
              "minimum": 6,
              "maximum": 100,
              "default": 14,
              "description": "Controls the font size in pixels.",
              "defaultDefaultValue": 14,
              "scope": 5,
              "restricted": false
            },
            "editor.fontWeight": {
              "anyOf": [
                {
                  "type": "number",
                  "minimum": 1,
                  "maximum": 1000,
                  "errorMessage": "Only \"normal\" and \"bold\" keywords or numbers between 1 and 1000 are allowed."
                },
                {
                  "type": "string",
                  "pattern": "^(normal|bold|1000|[1-9][0-9]{0,2})$"
                },
                {
                  "enum": [
                    "normal",
                    "bold",
                    "100",
                    "200",
                    "300",
                    "400",
                    "500",
                    "600",
                    "700",
                    "800",
                    "900"
                  ]
                }
              ],
              "default": "normal",
              "description": "Controls the font weight. Accepts \"normal\" and \"bold\" keywords or numbers between 1 and 1000.",
              "defaultDefaultValue": "normal",
              "scope": 5,
              "restricted": false
            },
            "editor.formatOnPaste": {
              "description": "Controls whether the editor should automatically format the pasted content. A formatter must be available and the formatter should be able to format a range in a document.",
              "type": "boolean",
              "default": false,
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.formatOnType": {
              "description": "Controls whether the editor should automatically format the line after typing.",
              "type": "boolean",
              "default": false,
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.glyphMargin": {
              "description": "Controls whether the editor should render the vertical glyph margin. Glyph margin is mostly used for debugging.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.gotoLocation.multiple": {
              "deprecationMessage": "This setting is deprecated, please use separate settings like 'editor.editor.gotoLocation.multipleDefinitions' or 'editor.editor.gotoLocation.multipleImplementations' instead.",
              "default": null,
              "scope": 5,
              "restricted": false
            },
            "editor.gotoLocation.multipleDefinitions": {
              "description": "Controls the behavior the 'Go to Definition'-command when multiple target locations exist.",
              "type": "string",
              "enum": [
                "peek",
                "gotoAndPeek",
                "goto"
              ],
              "default": "peek",
              "enumDescriptions": [
                "Show peek view of the results (default)",
                "Go to the primary result and show a peek view",
                "Go to the primary result and enable peek-less navigation to others"
              ],
              "defaultDefaultValue": "peek",
              "scope": 5,
              "restricted": false
            },
            "editor.gotoLocation.multipleTypeDefinitions": {
              "description": "Controls the behavior the 'Go to Type Definition'-command when multiple target locations exist.",
              "type": "string",
              "enum": [
                "peek",
                "gotoAndPeek",
                "goto"
              ],
              "default": "peek",
              "enumDescriptions": [
                "Show peek view of the results (default)",
                "Go to the primary result and show a peek view",
                "Go to the primary result and enable peek-less navigation to others"
              ],
              "defaultDefaultValue": "peek",
              "scope": 5,
              "restricted": false
            },
            "editor.gotoLocation.multipleDeclarations": {
              "description": "Controls the behavior the 'Go to Declaration'-command when multiple target locations exist.",
              "type": "string",
              "enum": [
                "peek",
                "gotoAndPeek",
                "goto"
              ],
              "default": "peek",
              "enumDescriptions": [
                "Show peek view of the results (default)",
                "Go to the primary result and show a peek view",
                "Go to the primary result and enable peek-less navigation to others"
              ],
              "defaultDefaultValue": "peek",
              "scope": 5,
              "restricted": false
            },
            "editor.gotoLocation.multipleImplementations": {
              "description": "Controls the behavior the 'Go to Implementations'-command when multiple target locations exist.",
              "type": "string",
              "enum": [
                "peek",
                "gotoAndPeek",
                "goto"
              ],
              "default": "peek",
              "enumDescriptions": [
                "Show peek view of the results (default)",
                "Go to the primary result and show a peek view",
                "Go to the primary result and enable peek-less navigation to others"
              ],
              "defaultDefaultValue": "peek",
              "scope": 5,
              "restricted": false
            },
            "editor.gotoLocation.multipleReferences": {
              "description": "Controls the behavior the 'Go to References'-command when multiple target locations exist.",
              "type": "string",
              "enum": [
                "peek",
                "gotoAndPeek",
                "goto"
              ],
              "default": "peek",
              "enumDescriptions": [
                "Show peek view of the results (default)",
                "Go to the primary result and show a peek view",
                "Go to the primary result and enable peek-less navigation to others"
              ],
              "defaultDefaultValue": "peek",
              "scope": 5,
              "restricted": false
            },
            "editor.gotoLocation.alternativeDefinitionCommand": {
              "type": "string",
              "default": "editor.action.goToReferences",
              "enum": [
                "",
                "editor.action.referenceSearch.trigger",
                "editor.action.goToReferences",
                "editor.action.peekImplementation",
                "editor.action.goToImplementation",
                "editor.action.peekTypeDefinition",
                "editor.action.goToTypeDefinition",
                "editor.action.peekDeclaration",
                "editor.action.revealDeclaration",
                "editor.action.peekDefinition",
                "editor.action.revealDefinitionAside",
                "editor.action.revealDefinition"
              ],
              "description": "Alternative command id that is being executed when the result of 'Go to Definition' is the current location.",
              "defaultDefaultValue": "editor.action.goToReferences",
              "scope": 5,
              "restricted": false
            },
            "editor.gotoLocation.alternativeTypeDefinitionCommand": {
              "type": "string",
              "default": "editor.action.goToReferences",
              "enum": [
                "",
                "editor.action.referenceSearch.trigger",
                "editor.action.goToReferences",
                "editor.action.peekImplementation",
                "editor.action.goToImplementation",
                "editor.action.peekTypeDefinition",
                "editor.action.goToTypeDefinition",
                "editor.action.peekDeclaration",
                "editor.action.revealDeclaration",
                "editor.action.peekDefinition",
                "editor.action.revealDefinitionAside",
                "editor.action.revealDefinition"
              ],
              "description": "Alternative command id that is being executed when the result of 'Go to Type Definition' is the current location.",
              "defaultDefaultValue": "editor.action.goToReferences",
              "scope": 5,
              "restricted": false
            },
            "editor.gotoLocation.alternativeDeclarationCommand": {
              "type": "string",
              "default": "editor.action.goToReferences",
              "enum": [
                "",
                "editor.action.referenceSearch.trigger",
                "editor.action.goToReferences",
                "editor.action.peekImplementation",
                "editor.action.goToImplementation",
                "editor.action.peekTypeDefinition",
                "editor.action.goToTypeDefinition",
                "editor.action.peekDeclaration",
                "editor.action.revealDeclaration",
                "editor.action.peekDefinition",
                "editor.action.revealDefinitionAside",
                "editor.action.revealDefinition"
              ],
              "description": "Alternative command id that is being executed when the result of 'Go to Declaration' is the current location.",
              "defaultDefaultValue": "editor.action.goToReferences",
              "scope": 5,
              "restricted": false
            },
            "editor.gotoLocation.alternativeImplementationCommand": {
              "type": "string",
              "default": "",
              "enum": [
                "",
                "editor.action.referenceSearch.trigger",
                "editor.action.goToReferences",
                "editor.action.peekImplementation",
                "editor.action.goToImplementation",
                "editor.action.peekTypeDefinition",
                "editor.action.goToTypeDefinition",
                "editor.action.peekDeclaration",
                "editor.action.revealDeclaration",
                "editor.action.peekDefinition",
                "editor.action.revealDefinitionAside",
                "editor.action.revealDefinition"
              ],
              "description": "Alternative command id that is being executed when the result of 'Go to Implementation' is the current location.",
              "defaultDefaultValue": "",
              "scope": 5,
              "restricted": false
            },
            "editor.gotoLocation.alternativeReferenceCommand": {
              "type": "string",
              "default": "",
              "enum": [
                "",
                "editor.action.referenceSearch.trigger",
                "editor.action.goToReferences",
                "editor.action.peekImplementation",
                "editor.action.goToImplementation",
                "editor.action.peekTypeDefinition",
                "editor.action.goToTypeDefinition",
                "editor.action.peekDeclaration",
                "editor.action.revealDeclaration",
                "editor.action.peekDefinition",
                "editor.action.revealDefinitionAside",
                "editor.action.revealDefinition"
              ],
              "description": "Alternative command id that is being executed when the result of 'Go to Reference' is the current location.",
              "defaultDefaultValue": "",
              "scope": 5,
              "restricted": false
            },
            "editor.hideCursorInOverviewRuler": {
              "description": "Controls whether the cursor should be hidden in the overview ruler.",
              "type": "boolean",
              "default": false,
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.hover.enabled": {
              "type": "boolean",
              "default": true,
              "description": "Controls whether the hover is shown.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.hover.delay": {
              "type": "number",
              "default": 300,
              "minimum": 0,
              "maximum": 10000,
              "description": "Controls the delay in milliseconds after which the hover is shown.",
              "defaultDefaultValue": 300,
              "scope": 5,
              "restricted": false
            },
            "editor.hover.sticky": {
              "type": "boolean",
              "default": true,
              "description": "Controls whether the hover should remain visible when mouse is moved over it.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.hover.above": {
              "type": "boolean",
              "default": true,
              "description": "Prefer showing hovers above the line, if there's space.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.inlineSuggest.enabled": {
              "type": "boolean",
              "default": true,
              "description": "Controls whether to automatically show inline suggestions in the editor.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.letterSpacing": {
              "description": "Controls the letter spacing in pixels.",
              "type": "number",
              "default": 0,
              "defaultDefaultValue": 0,
              "scope": 5,
              "restricted": false
            },
            "editor.lightbulb.enabled": {
              "type": "boolean",
              "default": true,
              "description": "Enables the code action lightbulb in the editor.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.lineHeight": {
              "markdownDescription": "Controls the line height. \n - Use 0 to automatically compute the line height from the font size.\n - Values between 0 and 8 will be used as a multiplier with the font size.\n - Values greater than or equal to 8 will be used as effective values.",
              "type": "number",
              "default": 0,
              "defaultDefaultValue": 0,
              "scope": 5,
              "restricted": false
            },
            "editor.lineNumbers": {
              "type": "string",
              "enum": [
                "off",
                "on",
                "relative",
                "interval"
              ],
              "enumDescriptions": [
                "Line numbers are not rendered.",
                "Line numbers are rendered as absolute number.",
                "Line numbers are rendered as distance in lines to cursor position.",
                "Line numbers are rendered every 10 lines."
              ],
              "default": "on",
              "description": "Controls the display of line numbers.",
              "defaultDefaultValue": "on",
              "scope": 5,
              "restricted": false
            },
            "editor.linkedEditing": {
              "description": "Controls whether the editor has linked editing enabled. Depending on the language, related symbols, e.g. HTML tags, are updated while editing.",
              "type": "boolean",
              "default": false,
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.links": {
              "description": "Controls whether the editor should detect links and make them clickable.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.matchBrackets": {
              "description": "Highlight matching brackets.",
              "type": "string",
              "enum": [
                "always",
                "near",
                "never"
              ],
              "default": "always",
              "defaultDefaultValue": "always",
              "scope": 5,
              "restricted": false
            },
            "editor.minimap.enabled": {
              "type": "boolean",
              "default": true,
              "description": "Controls whether the minimap is shown.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.minimap.size": {
              "type": "string",
              "enum": [
                "proportional",
                "fill",
                "fit"
              ],
              "enumDescriptions": [
                "The minimap has the same size as the editor contents (and might scroll).",
                "The minimap will stretch or shrink as necessary to fill the height of the editor (no scrolling).",
                "The minimap will shrink as necessary to never be larger than the editor (no scrolling)."
              ],
              "default": "proportional",
              "description": "Controls the size of the minimap.",
              "defaultDefaultValue": "proportional",
              "scope": 5,
              "restricted": false
            },
            "editor.minimap.side": {
              "type": "string",
              "enum": [
                "left",
                "right"
              ],
              "default": "right",
              "description": "Controls the side where to render the minimap.",
              "defaultDefaultValue": "right",
              "scope": 5,
              "restricted": false
            },
            "editor.minimap.showSlider": {
              "type": "string",
              "enum": [
                "always",
                "mouseover"
              ],
              "default": "mouseover",
              "description": "Controls when the minimap slider is shown.",
              "defaultDefaultValue": "mouseover",
              "scope": 5,
              "restricted": false
            },
            "editor.minimap.scale": {
              "type": "number",
              "default": 1,
              "minimum": 1,
              "maximum": 3,
              "enum": [
                1,
                2,
                3
              ],
              "description": "Scale of content drawn in the minimap: 1, 2 or 3.",
              "defaultDefaultValue": 1,
              "scope": 5,
              "restricted": false
            },
            "editor.minimap.renderCharacters": {
              "type": "boolean",
              "default": true,
              "description": "Render the actual characters on a line as opposed to color blocks.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.minimap.maxColumn": {
              "type": "number",
              "default": 120,
              "description": "Limit the width of the minimap to render at most a certain number of columns.",
              "defaultDefaultValue": 120,
              "scope": 5,
              "restricted": false
            },
            "editor.mouseWheelScrollSensitivity": {
              "markdownDescription": "A multiplier to be used on the `deltaX` and `deltaY` of mouse wheel scroll events.",
              "type": "number",
              "default": 1,
              "defaultDefaultValue": 1,
              "scope": 5,
              "restricted": false
            },
            "editor.mouseWheelZoom": {
              "markdownDescription": "Zoom the font of the editor when using mouse wheel and holding `Ctrl`.",
              "type": "boolean",
              "default": false,
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.multiCursorMergeOverlapping": {
              "description": "Merge multiple cursors when they are overlapping.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.multiCursorModifier": {
              "markdownEnumDescriptions": [
                "Maps to `Control` on Windows and Linux and to `Command` on macOS.",
                "Maps to `Alt` on Windows and Linux and to `Option` on macOS."
              ],
              "markdownDescription": "The modifier to be used to add multiple cursors with the mouse. The Go to Definition and Open Link mouse gestures will adapt such that they do not conflict with the multicursor modifier. [Read more](https://code.visualstudio.com/docs/editor/codebasics#_multicursor-modifier).",
              "type": "string",
              "enum": [
                "ctrlCmd",
                "alt"
              ],
              "default": "alt",
              "defaultDefaultValue": "alt",
              "scope": 5,
              "restricted": false
            },
            "editor.multiCursorPaste": {
              "markdownEnumDescriptions": [
                "Each cursor pastes a single line of the text.",
                "Each cursor pastes the full text."
              ],
              "markdownDescription": "Controls pasting when the line count of the pasted text matches the cursor count.",
              "type": "string",
              "enum": [
                "spread",
                "full"
              ],
              "default": "spread",
              "defaultDefaultValue": "spread",
              "scope": 5,
              "restricted": false
            },
            "editor.occurrencesHighlight": {
              "description": "Controls whether the editor should highlight semantic symbol occurrences.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.overviewRulerBorder": {
              "description": "Controls whether a border should be drawn around the overview ruler.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.padding.top": {
              "type": "number",
              "default": 0,
              "minimum": 0,
              "maximum": 1000,
              "description": "Controls the amount of space between the top edge of the editor and the first line.",
              "defaultDefaultValue": 0,
              "scope": 5,
              "restricted": false
            },
            "editor.padding.bottom": {
              "type": "number",
              "default": 0,
              "minimum": 0,
              "maximum": 1000,
              "description": "Controls the amount of space between the bottom edge of the editor and the last line.",
              "defaultDefaultValue": 0,
              "scope": 5,
              "restricted": false
            },
            "editor.parameterHints.enabled": {
              "type": "boolean",
              "default": true,
              "description": "Enables a pop-up that shows parameter documentation and type information as you type.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.parameterHints.cycle": {
              "type": "boolean",
              "default": false,
              "description": "Controls whether the parameter hints menu cycles or closes when reaching the end of the list.",
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.peekWidgetDefaultFocus": {
              "enumDescriptions": [
                "Focus the tree when opening peek",
                "Focus the editor when opening peek"
              ],
              "description": "Controls whether to focus the inline editor or the tree in the peek widget.",
              "type": "string",
              "enum": [
                "tree",
                "editor"
              ],
              "default": "tree",
              "defaultDefaultValue": "tree",
              "scope": 5,
              "restricted": false
            },
            "editor.definitionLinkOpensInPeek": {
              "description": "Controls whether the Go to Definition mouse gesture always opens the peek widget.",
              "type": "boolean",
              "default": false,
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.quickSuggestions": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "object",
                  "properties": {
                    "strings": {
                      "type": "boolean",
                      "default": false,
                      "description": "Enable quick suggestions inside strings."
                    },
                    "comments": {
                      "type": "boolean",
                      "default": false,
                      "description": "Enable quick suggestions inside comments."
                    },
                    "other": {
                      "type": "boolean",
                      "default": true,
                      "description": "Enable quick suggestions outside of strings and comments."
                    }
                  }
                }
              ],
              "default": {
                "other": true,
                "comments": false,
                "strings": false
              },
              "description": "Controls whether suggestions should automatically show up while typing.",
              "defaultDefaultValue": {
                "other": true,
                "comments": false,
                "strings": false
              },
              "scope": 5,
              "restricted": false
            },
            "editor.quickSuggestionsDelay": {
              "description": "Controls the delay in milliseconds after which quick suggestions will show up.",
              "type": "integer",
              "default": 10,
              "minimum": 0,
              "maximum": 1073741824,
              "defaultDefaultValue": 10,
              "scope": 5,
              "restricted": false
            },
            "editor.renameOnType": {
              "description": "Controls whether the editor auto renames on type.",
              "markdownDeprecationMessage": "Deprecated, use `editor.linkedEditing` instead.",
              "type": "boolean",
              "default": false,
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false,
              "deprecationMessage": "Deprecated, use `editor.linkedEditing` instead."
            },
            "editor.renderControlCharacters": {
              "description": "Controls whether the editor should render control characters.",
              "restricted": true,
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5
            },
            "editor.renderFinalNewline": {
              "description": "Render last line number when the file ends with a newline.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.renderLineHighlight": {
              "enumDescriptions": [
                "",
                "",
                "",
                "Highlights both the gutter and the current line."
              ],
              "description": "Controls how the editor should render the current line highlight.",
              "type": "string",
              "enum": [
                "none",
                "gutter",
                "line",
                "all"
              ],
              "default": "line",
              "defaultDefaultValue": "line",
              "scope": 5,
              "restricted": false
            },
            "editor.renderLineHighlightOnlyWhenFocus": {
              "description": "Controls if the editor should render the current line highlight only when the editor is focused.",
              "type": "boolean",
              "default": false,
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.renderWhitespace": {
              "enumDescriptions": [
                "",
                "Render whitespace characters except for single spaces between words.",
                "Render whitespace characters only on selected text.",
                "Render only trailing whitespace characters.",
                ""
              ],
              "description": "Controls how the editor should render whitespace characters.",
              "type": "string",
              "enum": [
                "none",
                "boundary",
                "selection",
                "trailing",
                "all"
              ],
              "default": "selection",
              "defaultDefaultValue": "selection",
              "scope": 5,
              "restricted": false
            },
            "editor.roundedSelection": {
              "description": "Controls whether selections should have rounded corners.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.rulers": {
              "type": "array",
              "items": {
                "anyOf": [
                  {
                    "type": "number",
                    "description": "Number of monospace characters at which this editor ruler will render."
                  },
                  {
                    "type": [
                      "object"
                    ],
                    "properties": {
                      "column": {
                        "type": "number",
                        "description": "Number of monospace characters at which this editor ruler will render."
                      },
                      "color": {
                        "type": "string",
                        "description": "Color of this editor ruler.",
                        "format": "color-hex"
                      }
                    }
                  }
                ]
              },
              "default": [],
              "description": "Render vertical rulers after a certain number of monospace characters. Use multiple values for multiple rulers. No rulers are drawn if array is empty.",
              "defaultDefaultValue": [],
              "scope": 5,
              "restricted": false
            },
            "editor.scrollbar.vertical": {
              "type": "string",
              "enum": [
                "auto",
                "visible",
                "hidden"
              ],
              "enumDescriptions": [
                "The vertical scrollbar will be visible only when necessary.",
                "The vertical scrollbar will always be visible.",
                "The vertical scrollbar will always be hidden."
              ],
              "default": "auto",
              "description": "Controls the visibility of the vertical scrollbar.",
              "defaultDefaultValue": "auto",
              "scope": 5,
              "restricted": false
            },
            "editor.scrollbar.horizontal": {
              "type": "string",
              "enum": [
                "auto",
                "visible",
                "hidden"
              ],
              "enumDescriptions": [
                "The horizontal scrollbar will be visible only when necessary.",
                "The horizontal scrollbar will always be visible.",
                "The horizontal scrollbar will always be hidden."
              ],
              "default": "auto",
              "description": "Controls the visibility of the horizontal scrollbar.",
              "defaultDefaultValue": "auto",
              "scope": 5,
              "restricted": false
            },
            "editor.scrollbar.verticalScrollbarSize": {
              "type": "number",
              "default": 14,
              "description": "The width of the vertical scrollbar.",
              "defaultDefaultValue": 14,
              "scope": 5,
              "restricted": false
            },
            "editor.scrollbar.horizontalScrollbarSize": {
              "type": "number",
              "default": 12,
              "description": "The height of the horizontal scrollbar.",
              "defaultDefaultValue": 12,
              "scope": 5,
              "restricted": false
            },
            "editor.scrollbar.scrollByPage": {
              "type": "boolean",
              "default": false,
              "description": "Controls whether clicks scroll by page or jump to click position.",
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.scrollBeyondLastColumn": {
              "description": "Controls the number of extra characters beyond which the editor will scroll horizontally.",
              "type": "integer",
              "default": 5,
              "minimum": 0,
              "maximum": 1073741824,
              "defaultDefaultValue": 5,
              "scope": 5,
              "restricted": false
            },
            "editor.scrollBeyondLastLine": {
              "description": "Controls whether the editor will scroll beyond the last line.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.scrollPredominantAxis": {
              "description": "Scroll only along the predominant axis when scrolling both vertically and horizontally at the same time. Prevents horizontal drift when scrolling vertically on a trackpad.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.selectionClipboard": {
              "description": "Controls whether the Linux primary clipboard should be supported.",
              "included": false,
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.selectionHighlight": {
              "description": "Controls whether the editor should highlight matches similar to the selection.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.showFoldingControls": {
              "enumDescriptions": [
                "Always show the folding controls.",
                "Only show the folding controls when the mouse is over the gutter."
              ],
              "description": "Controls when the folding controls on the gutter are shown.",
              "type": "string",
              "enum": [
                "always",
                "mouseover"
              ],
              "default": "mouseover",
              "defaultDefaultValue": "mouseover",
              "scope": 5,
              "restricted": false
            },
            "editor.showUnused": {
              "description": "Controls fading out of unused code.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.snippetSuggestions": {
              "enumDescriptions": [
                "Show snippet suggestions on top of other suggestions.",
                "Show snippet suggestions below other suggestions.",
                "Show snippets suggestions with other suggestions.",
                "Do not show snippet suggestions."
              ],
              "description": "Controls whether snippets are shown with other suggestions and how they are sorted.",
              "type": "string",
              "enum": [
                "top",
                "bottom",
                "inline",
                "none"
              ],
              "default": "inline",
              "defaultDefaultValue": "inline",
              "scope": 5,
              "restricted": false
            },
            "editor.smartSelect.selectLeadingAndTrailingWhitespace": {
              "description": "Whether leading and trailing whitespace should always be selected.",
              "default": true,
              "type": "boolean",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.smoothScrolling": {
              "description": "Controls whether the editor will scroll using an animation.",
              "type": "boolean",
              "default": false,
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.stickyTabStops": {
              "description": "Emulate selection behavior of tab characters when using spaces for indentation. Selection will stick to tab stops.",
              "type": "boolean",
              "default": false,
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.insertMode": {
              "type": "string",
              "enum": [
                "insert",
                "replace"
              ],
              "enumDescriptions": [
                "Insert suggestion without overwriting text right of the cursor.",
                "Insert suggestion and overwrite text right of the cursor."
              ],
              "default": "insert",
              "description": "Controls whether words are overwritten when accepting completions. Note that this depends on extensions opting into this feature.",
              "defaultDefaultValue": "insert",
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.filterGraceful": {
              "type": "boolean",
              "default": true,
              "description": "Controls whether filtering and sorting suggestions accounts for small typos.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.localityBonus": {
              "type": "boolean",
              "default": false,
              "description": "Controls whether sorting favors words that appear close to the cursor.",
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.shareSuggestSelections": {
              "type": "boolean",
              "default": false,
              "markdownDescription": "Controls whether remembered suggestion selections are shared between multiple workspaces and windows (needs `#editor.suggestSelection#`).",
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.snippetsPreventQuickSuggestions": {
              "type": "boolean",
              "default": true,
              "description": "Controls whether an active snippet prevents quick suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showIcons": {
              "type": "boolean",
              "default": true,
              "description": "Controls whether to show or hide icons in suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showStatusBar": {
              "type": "boolean",
              "default": false,
              "description": "Controls the visibility of the status bar at the bottom of the suggest widget.",
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.preview": {
              "type": "boolean",
              "default": false,
              "description": "Controls whether to preview the suggestion outcome in the editor.",
              "defaultDefaultValue": false,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showInlineDetails": {
              "type": "boolean",
              "default": true,
              "description": "Controls whether suggest details show inline with the label or only in the details widget",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.maxVisibleSuggestions": {
              "type": "number",
              "deprecationMessage": "This setting is deprecated. The suggest widget can now be resized.",
              "default": 0,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.filteredTypes": {
              "type": "object",
              "deprecationMessage": "This setting is deprecated, please use separate settings like 'editor.suggest.showKeywords' or 'editor.suggest.showSnippets' instead.",
              "default": {},
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showMethods": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `method`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showFunctions": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `function`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showConstructors": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `constructor`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showDeprecated": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `deprecated`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showFields": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `field`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showVariables": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `variable`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showClasses": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `class`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showStructs": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `struct`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showInterfaces": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `interface`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showModules": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `module`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showProperties": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `property`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showEvents": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `event`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showOperators": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `operator`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showUnits": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `unit`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showValues": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `value`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showConstants": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `constant`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showEnums": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `enum`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showEnumMembers": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `enumMember`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showKeywords": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `keyword`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showWords": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `text`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showColors": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `color`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showFiles": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `file`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showReferences": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `reference`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showCustomcolors": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `customcolor`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showFolders": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `folder`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showTypeParameters": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `typeParameter`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showSnippets": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `snippet`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showUsers": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `user`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggest.showIssues": {
              "type": "boolean",
              "default": true,
              "markdownDescription": "When enabled IntelliSense shows `issues`-suggestions.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggestFontSize": {
              "markdownDescription": "Font size for the suggest widget. When set to `0`, the value of `#editor.fontSize#` is used.",
              "type": "integer",
              "default": 0,
              "minimum": 0,
              "maximum": 1000,
              "defaultDefaultValue": 0,
              "scope": 5,
              "restricted": false
            },
            "editor.suggestLineHeight": {
              "markdownDescription": "Line height for the suggest widget. When set to `0`, the value of `#editor.lineHeight#` is used. The minimum value is 8.",
              "type": "integer",
              "default": 0,
              "minimum": 0,
              "maximum": 1000,
              "defaultDefaultValue": 0,
              "scope": 5,
              "restricted": false
            },
            "editor.suggestOnTriggerCharacters": {
              "description": "Controls whether suggestions should automatically show up when typing trigger characters.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.suggestSelection": {
              "markdownEnumDescriptions": [
                "Always select the first suggestion.",
                "Select recent suggestions unless further typing selects one, e.g. `console.| -> console.log` because `log` has been completed recently.",
                "Select suggestions based on previous prefixes that have completed those suggestions, e.g. `co -> console` and `con -> const`."
              ],
              "description": "Controls how suggestions are pre-selected when showing the suggest list.",
              "type": "string",
              "enum": [
                "first",
                "recentlyUsed",
                "recentlyUsedByPrefix"
              ],
              "default": "first",
              "defaultDefaultValue": "first",
              "scope": 5,
              "restricted": false
            },
            "editor.tabCompletion": {
              "enumDescriptions": [
                "Tab complete will insert the best matching suggestion when pressing tab.",
                "Disable tab completions.",
                "Tab complete snippets when their prefix match. Works best when 'quickSuggestions' aren't enabled."
              ],
              "description": "Enables tab completions.",
              "type": "string",
              "enum": [
                "on",
                "off",
                "onlySnippets"
              ],
              "default": "off",
              "defaultDefaultValue": "off",
              "scope": 5,
              "restricted": false
            },
            "editor.unicodeHighlight.nonBasicASCII": {
              "restricted": true,
              "type": [
                "boolean",
                "string"
              ],
              "enum": [
                true,
                false,
                "inUntrustedWorkspace"
              ],
              "default": "inUntrustedWorkspace",
              "description": "Controls whether all non-basic ASCII characters are highlighted. Only characters between U+0020 and U+007E, tab, line-feed and carriage-return are considered basic ASCII.",
              "defaultDefaultValue": "inUntrustedWorkspace",
              "scope": 5
            },
            "editor.unicodeHighlight.invisibleCharacters": {
              "restricted": true,
              "type": "boolean",
              "default": true,
              "description": "Controls whether characters that just reserve space or have no width at all are highlighted.",
              "defaultDefaultValue": true,
              "scope": 5
            },
            "editor.unicodeHighlight.ambiguousCharacters": {
              "restricted": true,
              "type": "boolean",
              "default": true,
              "description": "Controls whether characters are highlighted that can be confused with basic ASCII characters, except those that are common in the current user locale.",
              "defaultDefaultValue": true,
              "scope": 5
            },
            "editor.unicodeHighlight.includeComments": {
              "restricted": true,
              "type": [
                "boolean",
                "string"
              ],
              "enum": [
                true,
                false,
                "inUntrustedWorkspace"
              ],
              "default": "inUntrustedWorkspace",
              "description": "Controls whether characters in comments should also be subject to unicode highlighting.",
              "defaultDefaultValue": "inUntrustedWorkspace",
              "scope": 5
            },
            "editor.unicodeHighlight.includeStrings": {
              "restricted": true,
              "type": [
                "boolean",
                "string"
              ],
              "enum": [
                true,
                false,
                "inUntrustedWorkspace"
              ],
              "default": true,
              "description": "Controls whether characters in strings should also be subject to unicode highlighting.",
              "defaultDefaultValue": true,
              "scope": 5
            },
            "editor.unicodeHighlight.allowedCharacters": {
              "restricted": true,
              "type": "object",
              "default": {},
              "description": "Defines allowed characters that are not being highlighted.",
              "additionalProperties": {
                "type": "boolean"
              },
              "defaultDefaultValue": {},
              "scope": 5
            },
            "editor.unicodeHighlight.allowedLocales": {
              "restricted": true,
              "type": "object",
              "additionalProperties": {
                "type": "boolean"
              },
              "default": {
                "_os": true,
                "_vscode": true
              },
              "description": "Unicode characters that are common in allowed locales are not being highlighted.",
              "defaultDefaultValue": {
                "_os": true,
                "_vscode": true
              },
              "scope": 5
            },
            "editor.unusualLineTerminators": {
              "enumDescriptions": [
                "Unusual line terminators are automatically removed.",
                "Unusual line terminators are ignored.",
                "Unusual line terminators prompt to be removed."
              ],
              "description": "Remove unusual line terminators that might cause problems.",
              "type": "string",
              "enum": [
                "auto",
                "off",
                "prompt"
              ],
              "default": "prompt",
              "defaultDefaultValue": "prompt",
              "scope": 5,
              "restricted": false
            },
            "editor.useTabStops": {
              "description": "Inserting and deleting whitespace follows tab stops.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.wordSeparators": {
              "description": "Characters that will be used as word separators when doing word related navigations or operations.",
              "type": "string",
              "default": "`~!@#$%^&*()-=+[{]}\\|;:'\",.<>/?",
              "defaultDefaultValue": "`~!@#$%^&*()-=+[{]}\\|;:'\",.<>/?",
              "scope": 5,
              "restricted": false
            },
            "editor.wordWrap": {
              "markdownEnumDescriptions": [
                "Lines will never wrap.",
                "Lines will wrap at the viewport width.",
                "Lines will wrap at `#editor.wordWrapColumn#`.",
                "Lines will wrap at the minimum of viewport and `#editor.wordWrapColumn#`."
              ],
              "description": "Controls how lines should wrap.",
              "type": "string",
              "enum": [
                "off",
                "on",
                "wordWrapColumn",
                "bounded"
              ],
              "default": "off",
              "defaultDefaultValue": "off",
              "scope": 5,
              "restricted": false
            },
            "editor.wordWrapColumn": {
              "markdownDescription": "Controls the wrapping column of the editor when `#editor.wordWrap#` is `wordWrapColumn` or `bounded`.",
              "type": "integer",
              "default": 80,
              "minimum": 1,
              "maximum": 1073741824,
              "defaultDefaultValue": 80,
              "scope": 5,
              "restricted": false
            },
            "editor.wrappingIndent": {
              "enumDescriptions": [
                "No indentation. Wrapped lines begin at column 1.",
                "Wrapped lines get the same indentation as the parent.",
                "Wrapped lines get +1 indentation toward the parent.",
                "Wrapped lines get +2 indentation toward the parent."
              ],
              "description": "Controls the indentation of wrapped lines.",
              "type": "string",
              "enum": [
                "none",
                "same",
                "indent",
                "deepIndent"
              ],
              "default": "same",
              "defaultDefaultValue": "same",
              "scope": 5,
              "restricted": false
            },
            "editor.wrappingStrategy": {
              "enumDescriptions": [
                "Assumes that all characters are of the same width. This is a fast algorithm that works correctly for monospace fonts and certain scripts (like Latin characters) where glyphs are of equal width.",
                "Delegates wrapping points computation to the browser. This is a slow algorithm, that might cause freezes for large files, but it works correctly in all cases."
              ],
              "description": "Controls the algorithm that computes wrapping points.",
              "type": "string",
              "enum": [
                "simple",
                "advanced"
              ],
              "default": "simple",
              "defaultDefaultValue": "simple",
              "scope": 5,
              "restricted": false
            },
            "editor.showDeprecated": {
              "description": "Controls strikethrough deprecated variables.",
              "type": "boolean",
              "default": true,
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.inlayHints.enabled": {
              "type": "boolean",
              "default": true,
              "description": "Enables the inlay hints in the editor.",
              "defaultDefaultValue": true,
              "scope": 5,
              "restricted": false
            },
            "editor.inlayHints.fontSize": {
              "type": "number",
              "default": 0,
              "markdownDescription": "Controls font size of inlay hints in the editor. A default of 90% of `#editor.fontSize#` is used when the configured value is less than `5` or greater than the editor font size.",
              "defaultDefaultValue": 0,
              "scope": 5,
              "restricted": false
            },
            "editor.inlayHints.fontFamily": {
              "type": "string",
              "default": "",
              "markdownDescription": "Controls font family of inlay hints in the editor. When set to empty, the `#editor.fontFamily#` is used.",
              "defaultDefaultValue": "",
              "scope": 5,
              "restricted": false
            }
          }
        }
      ],
      "tags": [
        "notebookLayout"
      ],
      "defaultDefaultValue": {},
      "scope": 3,
      "restricted": false
    },
    "interactiveWindow.collapseCellInputCode": {
      "markdownDescription": "Controls whether code cells in the interactive window are collapsed by default.",
      "type": "string",
      "enum": [
        "always",
        "never",
        "fromEditor"
      ],
      "default": "fromEditor",
      "defaultDefaultValue": "fromEditor",
      "scope": 3,
      "restricted": false
    },
    "outline.icons": {
      "description": "Render Outline Elements with Icons.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "outline.problems.enabled": {
      "description": "Show Errors & Warnings on Outline Elements.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "outline.problems.colors": {
      "description": "Use colors for Errors & Warnings.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "outline.problems.badges": {
      "description": "Use badges for Errors & Warnings.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "outline.showFiles": {
      "type": "boolean",
      "scope": 5,
      "default": true,
      "markdownDescription": "When enabled outline shows `file`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showModules": {
      "type": "boolean",
      "scope": 5,
      "default": true,
      "markdownDescription": "When enabled outline shows `module`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showNamespaces": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled outline shows `namespace`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showPackages": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled outline shows `package`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showClasses": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled outline shows `class`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showMethods": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled outline shows `method`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showProperties": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled outline shows `property`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showFields": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled outline shows `field`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showConstructors": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled outline shows `constructor`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showEnums": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled outline shows `enum`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showInterfaces": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled outline shows `interface`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showFunctions": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled outline shows `function`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showVariables": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled outline shows `variable`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showConstants": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled outline shows `constant`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showStrings": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled outline shows `string`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showNumbers": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled outline shows `number`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showBooleans": {
      "type": "boolean",
      "scope": 5,
      "default": true,
      "markdownDescription": "When enabled outline shows `boolean`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showArrays": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled outline shows `array`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showObjects": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled outline shows `object`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showKeys": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled outline shows `key`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showNull": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled outline shows `null`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showEnumMembers": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled outline shows `enumMember`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showStructs": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled outline shows `struct`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showEvents": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled outline shows `event`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showOperators": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled outline shows `operator`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "outline.showTypeParameters": {
      "type": "boolean",
      "default": true,
      "scope": 5,
      "markdownDescription": "When enabled outline shows `typeParameter`-symbols.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "output.smartScroll.enabled": {
      "type": "boolean",
      "description": "Enable/disable the ability of smart scrolling in the output view. Smart scrolling allows you to lock scrolling automatically when you click in the output view and unlocks when you click in the last line.",
      "default": true,
      "scope": 3,
      "tags": [
        "output"
      ],
      "defaultDefaultValue": true,
      "restricted": false
    },
    "scm.diffDecorations": {
      "type": "string",
      "enum": [
        "all",
        "gutter",
        "overview",
        "minimap",
        "none"
      ],
      "enumDescriptions": [
        "Show the diff decorations in all available locations.",
        "Show the diff decorations only in the editor gutter.",
        "Show the diff decorations only in the overview ruler.",
        "Show the diff decorations only in the minimap.",
        "Do not show the diff decorations."
      ],
      "default": "all",
      "description": "Controls diff decorations in the editor.",
      "defaultDefaultValue": "all",
      "scope": 4,
      "restricted": false
    },
    "scm.diffDecorationsGutterWidth": {
      "type": "number",
      "enum": [
        1,
        2,
        3,
        4,
        5
      ],
      "default": 3,
      "description": "Controls the width(px) of diff decorations in gutter (added & modified).",
      "defaultDefaultValue": 3,
      "scope": 4,
      "restricted": false
    },
    "scm.diffDecorationsGutterVisibility": {
      "type": "string",
      "enum": [
        "always",
        "hover"
      ],
      "enumDescriptions": [
        "Show the diff decorator in the gutter at all times.",
        "Show the diff decorator in the gutter only on hover."
      ],
      "description": "Controls the visibility of the Source Control diff decorator in the gutter.",
      "default": "always",
      "defaultDefaultValue": "always",
      "scope": 4,
      "restricted": false
    },
    "scm.diffDecorationsGutterAction": {
      "type": "string",
      "enum": [
        "diff",
        "none"
      ],
      "enumDescriptions": [
        "Show the inline diff peek view on click.",
        "Do nothing."
      ],
      "description": "Controls the behavior of Source Control diff gutter decorations.",
      "default": "diff",
      "defaultDefaultValue": "diff",
      "scope": 4,
      "restricted": false
    },
    "scm.diffDecorationsIgnoreTrimWhitespace": {
      "type": "string",
      "enum": [
        "true",
        "false",
        "inherit"
      ],
      "enumDescriptions": [
        "Ignore leading and trailing whitespace.",
        "Do not ignore leading and trailing whitespace.",
        "Inherit from `diffEditor.ignoreTrimWhitespace`."
      ],
      "description": "Controls whether leading and trailing whitespace is ignored in Source Control diff gutter decorations.",
      "default": "false",
      "defaultDefaultValue": "false",
      "scope": 4,
      "restricted": false
    },
    "scm.alwaysShowActions": {
      "type": "boolean",
      "description": "Controls whether inline actions are always visible in the Source Control view.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 4,
      "restricted": false
    },
    "scm.countBadge": {
      "type": "string",
      "enum": [
        "all",
        "focused",
        "off"
      ],
      "enumDescriptions": [
        "Show the sum of all Source Control Provider count badges.",
        "Show the count badge of the focused Source Control Provider.",
        "Disable the Source Control count badge."
      ],
      "description": "Controls the count badge on the Source Control icon on the Activity Bar.",
      "default": "all",
      "defaultDefaultValue": "all",
      "scope": 4,
      "restricted": false
    },
    "scm.providerCountBadge": {
      "type": "string",
      "enum": [
        "hidden",
        "auto",
        "visible"
      ],
      "enumDescriptions": [
        "Hide Source Control Provider count badges.",
        "Only show count badge for Source Control Provider when non-zero.",
        "Show Source Control Provider count badges."
      ],
      "description": "Controls the count badges on Source Control Provider headers. These headers only appear when there is more than one provider.",
      "default": "hidden",
      "defaultDefaultValue": "hidden",
      "scope": 4,
      "restricted": false
    },
    "scm.defaultViewMode": {
      "type": "string",
      "enum": [
        "tree",
        "list"
      ],
      "enumDescriptions": [
        "Show the repository changes as a tree.",
        "Show the repository changes as a list."
      ],
      "description": "Controls the default Source Control repository view mode.",
      "default": "list",
      "defaultDefaultValue": "list",
      "scope": 4,
      "restricted": false
    },
    "scm.defaultViewSortKey": {
      "type": "string",
      "enum": [
        "name",
        "path",
        "status"
      ],
      "enumDescriptions": [
        "Sort the repository changes by file name.",
        "Sort the repository changes by path.",
        "Sort the repository changes by SCM status."
      ],
      "description": "Controls the default Source Control repository sort mode.",
      "default": "path",
      "defaultDefaultValue": "path",
      "scope": 4,
      "restricted": false
    },
    "scm.autoReveal": {
      "type": "boolean",
      "description": "Controls whether the SCM view should automatically reveal and select files when opening them.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 4,
      "restricted": false
    },
    "scm.inputFontFamily": {
      "type": "string",
      "markdownDescription": "Controls the font for the input message. Use `default` for the workbench user interface font family, `editor` for the `#editor.fontFamily#`'s value, or a custom font family.",
      "default": "default",
      "defaultDefaultValue": "default",
      "scope": 4,
      "restricted": false
    },
    "scm.inputFontSize": {
      "type": "number",
      "markdownDescription": "Controls the font size for the input message in pixels.",
      "default": 13,
      "defaultDefaultValue": 13,
      "scope": 4,
      "restricted": false
    },
    "scm.alwaysShowRepositories": {
      "type": "boolean",
      "markdownDescription": "Controls whether repositories should always be visible in the SCM view.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 4,
      "restricted": false
    },
    "scm.repositories.visible": {
      "type": "number",
      "description": "Controls how many repositories are visible in the Source Control Repositories section. Set to `0` to be able to manually resize the view.",
      "default": 10,
      "defaultDefaultValue": 10,
      "scope": 4,
      "restricted": false
    },
    "scm.showActionButton": {
      "type": "boolean",
      "markdownDescription": "Controls whether an action button can be shown in the SCM view.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 4,
      "restricted": false
    },
    "search.exclude": {
      "type": "object",
      "markdownDescription": "Configure [glob patterns](https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options) for excluding files and folders in fulltext searches and quick open. Inherits all glob patterns from the `#files.exclude#` setting.",
      "default": {
        "**/node_modules": true,
        "**/bower_components": true,
        "**/*.code-search": true
      },
      "additionalProperties": {
        "anyOf": [
          {
            "type": "boolean",
            "description": "The glob pattern to match file paths against. Set to true or false to enable or disable the pattern."
          },
          {
            "type": "object",
            "properties": {
              "when": {
                "type": "string",
                "pattern": "\\w*\\$\\(basename\\)\\w*",
                "default": "$(basename).ext",
                "description": "Additional check on the siblings of a matching file. Use $(basename) as variable for the matching file name."
              }
            }
          }
        ]
      },
      "scope": 4,
      "defaultDefaultValue": {
        "**/node_modules": true,
        "**/bower_components": true,
        "**/*.code-search": true
      },
      "restricted": false
    },
    "search.mode": {
      "type": "string",
      "enum": [
        "view",
        "reuseEditor",
        "newEditor"
      ],
      "default": "view",
      "markdownDescription": "Controls where new `Search: Find in Files` and `Find in Folder` operations occur: either in the sidebar's search view, or in a search editor",
      "enumDescriptions": [
        "Search in the search view, either in the panel or sidebar.",
        "Search in an existing search editor if present, otherwise in a new search editor.",
        "Search in a new search editor."
      ],
      "defaultDefaultValue": "view",
      "scope": 3,
      "restricted": false
    },
    "search.useRipgrep": {
      "type": "boolean",
      "description": "This setting is deprecated and now falls back on \"search.usePCRE2\".",
      "deprecationMessage": "Deprecated. Consider \"search.usePCRE2\" for advanced regex feature support.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "search.maintainFileSearchCache": {
      "type": "boolean",
      "deprecationMessage": "The search cache is kept in the extension host which never shuts down, so this setting is no longer needed.",
      "description": "When enabled, the searchService process will be kept alive instead of being shut down after an hour of inactivity. This will keep the file search cache in memory.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "search.useIgnoreFiles": {
      "type": "boolean",
      "markdownDescription": "Controls whether to use `.gitignore` and `.ignore` files when searching for files.",
      "default": true,
      "scope": 4,
      "defaultDefaultValue": true,
      "restricted": false
    },
    "search.useGlobalIgnoreFiles": {
      "type": "boolean",
      "markdownDescription": "Controls whether to use global `.gitignore` and `.ignore` files when searching for files. Requires `#search.useIgnoreFiles#` to be enabled.",
      "default": false,
      "scope": 4,
      "defaultDefaultValue": false,
      "restricted": false
    },
    "search.useParentIgnoreFiles": {
      "type": "boolean",
      "markdownDescription": "Controls whether to use `.gitignore` and `.ignore` files in parent directories when searching for files. Requires `#search.useIgnoreFiles#` to be enabled.",
      "default": false,
      "scope": 4,
      "defaultDefaultValue": false,
      "restricted": false
    },
    "search.quickOpen.includeSymbols": {
      "type": "boolean",
      "description": "Whether to include results from a global symbol search in the file results for Quick Open.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "search.quickOpen.includeHistory": {
      "type": "boolean",
      "description": "Whether to include results from recently opened files in the file results for Quick Open.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "search.quickOpen.history.filterSortOrder": {
      "type": "string",
      "enum": [
        "default",
        "recency"
      ],
      "default": "default",
      "enumDescriptions": [
        "History entries are sorted by relevance based on the filter value used. More relevant entries appear first.",
        "History entries are sorted by recency. More recently opened entries appear first."
      ],
      "description": "Controls sorting order of editor history in quick open when filtering.",
      "defaultDefaultValue": "default",
      "scope": 3,
      "restricted": false
    },
    "search.followSymlinks": {
      "type": "boolean",
      "description": "Controls whether to follow symlinks while searching.",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "search.smartCase": {
      "type": "boolean",
      "description": "Search case-insensitively if the pattern is all lowercase, otherwise, search case-sensitively.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "search.location": {
      "type": "string",
      "enum": [
        "sidebar",
        "panel"
      ],
      "default": "sidebar",
      "description": "Controls whether the search will be shown as a view in the sidebar or as a panel in the panel area for more horizontal space.",
      "deprecationMessage": "This setting is deprecated. You can drag the search icon to a new location instead.",
      "defaultDefaultValue": "sidebar",
      "scope": 3,
      "restricted": false
    },
    "search.maxResults": {
      "type": [
        "number",
        "null"
      ],
      "default": 20000,
      "markdownDescription": "Controls the maximum number of search results, this can be set to `null` (empty) to return unlimited results.",
      "defaultDefaultValue": 20000,
      "scope": 3,
      "restricted": false
    },
    "search.collapseResults": {
      "type": "string",
      "enum": [
        "auto",
        "alwaysCollapse",
        "alwaysExpand"
      ],
      "enumDescriptions": [
        "Files with less than 10 results are expanded. Others are collapsed.",
        "",
        ""
      ],
      "default": "alwaysExpand",
      "description": "Controls whether the search results will be collapsed or expanded.",
      "defaultDefaultValue": "alwaysExpand",
      "scope": 3,
      "restricted": false
    },
    "search.useReplacePreview": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether to open Replace Preview when selecting or replacing a match.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "search.showLineNumbers": {
      "type": "boolean",
      "default": false,
      "description": "Controls whether to show line numbers for search results.",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "search.usePCRE2": {
      "type": "boolean",
      "default": false,
      "description": "Whether to use the PCRE2 regex engine in text search. This enables using some advanced regex features like lookahead and backreferences. However, not all PCRE2 features are supported - only features that are also supported by JavaScript.",
      "deprecationMessage": "Deprecated. PCRE2 will be used automatically when using regex features that are only supported by PCRE2.",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "search.actionsPosition": {
      "type": "string",
      "enum": [
        "auto",
        "right"
      ],
      "enumDescriptions": [
        "Position the actionbar to the right when the search view is narrow, and immediately after the content when the search view is wide.",
        "Always position the actionbar to the right."
      ],
      "default": "right",
      "description": "Controls the positioning of the actionbar on rows in the search view.",
      "defaultDefaultValue": "right",
      "scope": 3,
      "restricted": false
    },
    "search.searchOnType": {
      "type": "boolean",
      "default": true,
      "description": "Search all files as you type.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "search.seedWithNearestWord": {
      "type": "boolean",
      "default": false,
      "description": "Enable seeding search from the word nearest the cursor when the active editor has no selection.",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "search.seedOnFocus": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Update the search query to the editor's selected text when focusing the search view. This happens either on click or when triggering the `workbench.views.search.focus` command.",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "search.searchOnTypeDebouncePeriod": {
      "type": "number",
      "default": 300,
      "markdownDescription": "When `#search.searchOnType#` is enabled, controls the timeout in milliseconds between a character being typed and the search starting. Has no effect when `search.searchOnType` is disabled.",
      "defaultDefaultValue": 300,
      "scope": 3,
      "restricted": false
    },
    "search.searchEditor.doubleClickBehaviour": {
      "type": "string",
      "enum": [
        "selectWord",
        "goToLocation",
        "openLocationToSide"
      ],
      "default": "goToLocation",
      "enumDescriptions": [
        "Double clicking selects the word under the cursor.",
        "Double clicking opens the result in the active editor group.",
        "Double clicking opens the result in the editor group to the side, creating one if it does not yet exist."
      ],
      "markdownDescription": "Configure effect of double clicking a result in a search editor.",
      "defaultDefaultValue": "goToLocation",
      "scope": 3,
      "restricted": false
    },
    "search.searchEditor.reusePriorSearchConfiguration": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "When enabled, new Search Editors will reuse the includes, excludes, and flags of the previously opened Search Editor.",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "search.searchEditor.defaultNumberOfContextLines": {
      "type": [
        "number",
        "null"
      ],
      "default": 1,
      "markdownDescription": "The default number of surrounding context lines to use when creating new Search Editors. If using `#search.searchEditor.reusePriorSearchConfiguration#`, this can be set to `null` (empty) to use the prior Search Editor's configuration.",
      "defaultDefaultValue": 1,
      "scope": 3,
      "restricted": false
    },
    "search.sortOrder": {
      "type": "string",
      "enum": [
        "default",
        "fileNames",
        "type",
        "modified",
        "countDescending",
        "countAscending"
      ],
      "default": "default",
      "enumDescriptions": [
        "Results are sorted by folder and file names, in alphabetical order.",
        "Results are sorted by file names ignoring folder order, in alphabetical order.",
        "Results are sorted by file extensions, in alphabetical order.",
        "Results are sorted by file last modified date, in descending order.",
        "Results are sorted by count per file, in descending order.",
        "Results are sorted by count per file, in ascending order."
      ],
      "description": "Controls sorting order of search results.",
      "defaultDefaultValue": "default",
      "scope": 3,
      "restricted": false
    },
    "testing.autoRun.mode": {
      "description": "Controls which tests are automatically run.",
      "enum": [
        "all",
        "rerun"
      ],
      "default": "all",
      "enumDescriptions": [
        "Automatically runs all discovered test when auto-run is toggled. Reruns individual tests when they are changed.",
        "Reruns individual tests when they are changed. Will not automatically run any tests that have not been already executed."
      ],
      "defaultDefaultValue": "all",
      "scope": 3,
      "restricted": false
    },
    "testing.autoRun.delay": {
      "type": "integer",
      "minimum": 0,
      "description": "How long to wait, in milliseconds, after a test is marked as outdated and starting a new run.",
      "default": 1000,
      "defaultDefaultValue": 1000,
      "scope": 3,
      "restricted": false
    },
    "testing.automaticallyOpenPeekView": {
      "description": "Configures when the error peek view is automatically opened.",
      "enum": [
        "failureAnywhere",
        "failureInVisibleDocument",
        "never"
      ],
      "default": "failureInVisibleDocument",
      "enumDescriptions": [
        "Open automatically no matter where the failure is.",
        "Open automatically when a test fails in a visible document.",
        "Never automatically open."
      ],
      "defaultDefaultValue": "failureInVisibleDocument",
      "scope": 3,
      "restricted": false
    },
    "testing.automaticallyOpenPeekViewDuringAutoRun": {
      "description": "Controls whether to automatically open the peek view during auto-run mode.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "testing.followRunningTest": {
      "description": "Controls whether the running test should be followed in the test explorer view",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "testing.defaultGutterClickAction": {
      "description": "Controls the action to take when left-clicking on a test decoration in the gutter.",
      "enum": [
        "run",
        "debug",
        "contextMenu"
      ],
      "enumDescriptions": [
        "Run the test.",
        "Debug the test.",
        "Open the context menu for more options."
      ],
      "default": "run",
      "defaultDefaultValue": "run",
      "scope": 3,
      "restricted": false
    },
    "testing.gutterEnabled": {
      "description": "Controls whether test decorations are shown in the editor gutter.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "testing.saveBeforeTest": {
      "description": "Control whether save all dirty editors before running a test.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "testing.openTesting": {
      "enum": [
        "neverOpen",
        "openOnTestStart",
        "openOnTestFailure"
      ],
      "enumDescriptions": [
        "Never automatically open the testing view",
        "Open the testing view when tests start",
        "Open the testing view on any test failure"
      ],
      "default": "openOnTestStart",
      "description": "Controls when the testing view should open.",
      "defaultDefaultValue": "openOnTestStart",
      "scope": 3,
      "restricted": false
    },
    "timeline.excludeSources": {
      "type": [
        "array",
        "null"
      ],
      "default": null,
      "description": "An array of Timeline sources that should be excluded from the Timeline view.",
      "defaultDefaultValue": null,
      "scope": 3,
      "restricted": false
    },
    "timeline.pageSize": {
      "type": [
        "number",
        "null"
      ],
      "default": null,
      "markdownDescription": "The number of items to show in the Timeline view by default and when loading more items. Setting to `null` (the default) will automatically choose a page size based on the visible area of the Timeline view.",
      "defaultDefaultValue": null,
      "scope": 3,
      "restricted": false
    },
    "timeline.pageOnScroll": {
      "type": "boolean",
      "default": false,
      "description": "Experimental. Controls whether the Timeline view will load the next page of items when you scroll to the end of the list.",
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "workbench.tips.enabled": {
      "type": "boolean",
      "default": true,
      "description": "When enabled, will show the watermark tips when no editor is open.",
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "workbench.welcomePage.walkthroughs.openOnInstall": {
      "scope": 2,
      "type": "boolean",
      "default": true,
      "description": "When enabled, an extension's walkthrough will open upon install of the extension.",
      "defaultDefaultValue": true,
      "restricted": false
    },
    "workbench.welcomePage.experimental.videoTutorials": {
      "scope": 2,
      "type": "string",
      "enum": [
        "off",
        "on",
        "experimental"
      ],
      "tags": [
        "experimental"
      ],
      "default": "off",
      "description": "When enabled, the get started page has additional links to video tutorials.",
      "defaultDefaultValue": "off",
      "restricted": false
    },
    "extensions.autoUpdate": {
      "enum": [
        true,
        "onlyEnabledExtensions",
        false
      ],
      "enumItemLabels": [
        "All Extensions",
        "Only Enabled Extensions",
        "None"
      ],
      "enumDescriptions": [
        "Download and install updates automatically for all extensions.",
        "Download and install updates automatically only for enabled extensions. Disabled extensions will not be updated automatically.",
        "Extensions are not automatically updated."
      ],
      "description": "Controls the automatic update behavior of extensions. The updates are fetched from a Microsoft online service.",
      "default": true,
      "scope": 1,
      "tags": [
        "usesOnlineServices"
      ],
      "defaultDefaultValue": true,
      "restricted": false
    },
    "extensions.autoCheckUpdates": {
      "type": "boolean",
      "description": "When enabled, automatically checks extensions for updates. If an extension has an update, it is marked as outdated in the Extensions view. The updates are fetched from a Microsoft online service.",
      "default": true,
      "scope": 1,
      "tags": [
        "usesOnlineServices"
      ],
      "defaultDefaultValue": true,
      "restricted": false
    },
    "extensions.ignoreRecommendations": {
      "type": "boolean",
      "description": "When enabled, the notifications for extension recommendations will not be shown.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "extensions.showRecommendationsOnlyOnDemand": {
      "type": "boolean",
      "deprecationMessage": "This setting is deprecated. Use extensions.ignoreRecommendations setting to control recommendation notifications. Use Extensions view's visibility actions to hide Recommended view by default.",
      "default": false,
      "tags": [
        "usesOnlineServices"
      ],
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "extensions.closeExtensionDetailsOnViewChange": {
      "type": "boolean",
      "description": "When enabled, editors with extension details will be automatically closed upon navigating away from the Extensions View.",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "extensions.confirmedUriHandlerExtensionIds": {
      "type": "array",
      "description": "When an extension is listed here, a confirmation prompt will not be shown when that extension handles a URI.",
      "default": [],
      "scope": 1,
      "defaultDefaultValue": [],
      "restricted": false
    },
    "extensions.webWorker": {
      "type": [
        "boolean",
        "string"
      ],
      "enum": [
        true,
        false,
        "auto"
      ],
      "enumDescriptions": [
        "The Web Worker Extension Host will always be launched.",
        "The Web Worker Extension Host will never be launched.",
        "The Web Worker Extension Host will be launched when a web extension needs it."
      ],
      "description": "Enable web worker extension host.",
      "default": "auto",
      "defaultDefaultValue": "auto",
      "scope": 3,
      "restricted": false
    },
    "extensions.supportVirtualWorkspaces": {
      "type": "object",
      "markdownDescription": "Override the virtual workspaces support of an extension.",
      "patternProperties": {
        "([a-z0-9A-Z][a-z0-9-A-Z]*)\\.([a-z0-9A-Z][a-z0-9-A-Z]*)$": {
          "type": "boolean",
          "default": false
        }
      },
      "default": {
        "pub.name": false
      },
      "defaultDefaultValue": {
        "pub.name": false
      },
      "scope": 3,
      "restricted": false
    },
    "extensions.supportUntrustedWorkspaces": {
      "type": "object",
      "scope": 1,
      "markdownDescription": "Override the untrusted workspace support of an extension. Extensions using `true` will always be enabled. Extensions using `limited` will always be enabled, and the extension will hide functionality that requires trust. Extensions using `false` will only be enabled only when the workspace is trusted.",
      "patternProperties": {
        "([a-z0-9A-Z][a-z0-9-A-Z]*)\\.([a-z0-9A-Z][a-z0-9-A-Z]*)$": {
          "type": "object",
          "properties": {
            "supported": {
              "type": [
                "boolean",
                "string"
              ],
              "enum": [
                true,
                false,
                "limited"
              ],
              "enumDescriptions": [
                "Extension will always be enabled.",
                "Extension will only be enabled only when the workspace is trusted.",
                "Extension will always be enabled, and the extension will hide functionality requiring trust."
              ],
              "description": "Defines the untrusted workspace support setting for the extension."
            },
            "version": {
              "type": "string",
              "description": "Defines the version of the extension for which the override should be applied. If not specified, the override will be applied independent of the extension version."
            }
          }
        }
      },
      "default": {},
      "restricted": false
    },
    "terminal.integrated.automationShell.linux": {
      "restricted": true,
      "markdownDescription": "A path that when set will override `terminal.integrated.shell.linux` and ignore `shellArgs` values for automation-related terminal usage like tasks and debug.",
      "type": [
        "string",
        "null"
      ],
      "default": null,
      "markdownDeprecationMessage": "This is deprecated, the new recommended way to configure your automation shell is by creating a terminal automation profile with `#terminal.integrated.automationProfile.linux#`. This will currently take priority over the new automation profile settings but that will change in the future.",
      "defaultDefaultValue": null,
      "scope": 3,
      "deprecationMessage": "This is deprecated, the new recommended way to configure your automation shell is by creating a terminal automation profile with `#terminal.integrated.automationProfile.linux#`. This will currently take priority over the new automation profile settings but that will change in the future."
    },
    "terminal.integrated.automationShell.osx": {
      "restricted": true,
      "markdownDescription": "A path that when set will override `terminal.integrated.shell.osx` and ignore `shellArgs` values for automation-related terminal usage like tasks and debug.",
      "type": [
        "string",
        "null"
      ],
      "default": null,
      "markdownDeprecationMessage": "This is deprecated, the new recommended way to configure your automation shell is by creating a terminal automation profile with `#terminal.integrated.automationProfile.osx#`. This will currently take priority over the new automation profile settings but that will change in the future.",
      "defaultDefaultValue": null,
      "scope": 3,
      "deprecationMessage": "This is deprecated, the new recommended way to configure your automation shell is by creating a terminal automation profile with `#terminal.integrated.automationProfile.osx#`. This will currently take priority over the new automation profile settings but that will change in the future."
    },
    "terminal.integrated.automationShell.windows": {
      "restricted": true,
      "markdownDescription": "A path that when set will override `terminal.integrated.shell.windows` and ignore `shellArgs` values for automation-related terminal usage like tasks and debug.",
      "type": [
        "string",
        "null"
      ],
      "default": null,
      "markdownDeprecationMessage": "This is deprecated, the new recommended way to configure your automation shell is by creating a terminal automation profile with `#terminal.integrated.automationProfile.windows#`. This will currently take priority over the new automation profile settings but that will change in the future.",
      "defaultDefaultValue": null,
      "scope": 3,
      "deprecationMessage": "This is deprecated, the new recommended way to configure your automation shell is by creating a terminal automation profile with `#terminal.integrated.automationProfile.windows#`. This will currently take priority over the new automation profile settings but that will change in the future."
    },
    "terminal.integrated.automationProfile.linux": {
      "restricted": true,
      "markdownDescription": "The terminal profile to use on Linux for automation-related terminal usage like tasks and debug. This setting will currently be ignored if #terminal.integrated.automationShell.linux# is set.",
      "type": [
        "object",
        "null"
      ],
      "default": null,
      "anyOf": [
        {
          "type": "null"
        },
        {
          "type": "object",
          "required": [
            "path"
          ],
          "properties": {
            "path": {
              "description": "A single path to a shell executable.",
              "type": [
                "string"
              ],
              "items": {
                "type": "string"
              }
            },
            "args": {
              "description": "An optional set of arguments to run the shell executable with.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "overrideName": {
              "description": "Controls whether or not the profile name overrides the auto detected one.",
              "type": "boolean"
            },
            "icon": {
              "description": "A codicon ID to associate with this terminal.",
              "type": "string",
              "enum": [
                "add",
                "plus",
                "gist-new",
                "repo-create",
                "lightbulb",
                "light-bulb",
                "repo",
                "repo-delete",
                "gist-fork",
                "repo-forked",
                "git-pull-request",
                "git-pull-request-abandoned",
                "record-keys",
                "keyboard",
                "tag",
                "tag-add",
                "tag-remove",
                "person",
                "person-follow",
                "person-outline",
                "person-filled",
                "git-branch",
                "git-branch-create",
                "git-branch-delete",
                "source-control",
                "mirror",
                "mirror-public",
                "star",
                "star-add",
                "star-delete",
                "star-empty",
                "comment",
                "comment-add",
                "alert",
                "warning",
                "search",
                "search-save",
                "log-out",
                "sign-out",
                "log-in",
                "sign-in",
                "eye",
                "eye-unwatch",
                "eye-watch",
                "circle-filled",
                "primitive-dot",
                "close-dirty",
                "debug-breakpoint",
                "debug-breakpoint-disabled",
                "debug-hint",
                "primitive-square",
                "edit",
                "pencil",
                "info",
                "issue-opened",
                "gist-private",
                "git-fork-private",
                "lock",
                "mirror-private",
                "close",
                "remove-close",
                "x",
                "repo-sync",
                "sync",
                "clone",
                "desktop-download",
                "beaker",
                "microscope",
                "vm",
                "device-desktop",
                "file",
                "file-text",
                "more",
                "ellipsis",
                "kebab-horizontal",
                "mail-reply",
                "reply",
                "organization",
                "organization-filled",
                "organization-outline",
                "new-file",
                "file-add",
                "new-folder",
                "file-directory-create",
                "trash",
                "trashcan",
                "history",
                "clock",
                "folder",
                "file-directory",
                "symbol-folder",
                "logo-github",
                "mark-github",
                "github",
                "terminal",
                "console",
                "repl",
                "zap",
                "symbol-event",
                "error",
                "stop",
                "variable",
                "symbol-variable",
                "array",
                "symbol-array",
                "symbol-module",
                "symbol-package",
                "symbol-namespace",
                "symbol-object",
                "symbol-method",
                "symbol-function",
                "symbol-constructor",
                "symbol-boolean",
                "symbol-null",
                "symbol-numeric",
                "symbol-number",
                "symbol-structure",
                "symbol-struct",
                "symbol-parameter",
                "symbol-type-parameter",
                "symbol-key",
                "symbol-text",
                "symbol-reference",
                "go-to-file",
                "symbol-enum",
                "symbol-value",
                "symbol-ruler",
                "symbol-unit",
                "activate-breakpoints",
                "archive",
                "arrow-both",
                "arrow-down",
                "arrow-left",
                "arrow-right",
                "arrow-small-down",
                "arrow-small-left",
                "arrow-small-right",
                "arrow-small-up",
                "arrow-up",
                "bell",
                "bold",
                "book",
                "bookmark",
                "debug-breakpoint-conditional-unverified",
                "debug-breakpoint-conditional",
                "debug-breakpoint-conditional-disabled",
                "debug-breakpoint-data-unverified",
                "debug-breakpoint-data",
                "debug-breakpoint-data-disabled",
                "debug-breakpoint-log-unverified",
                "debug-breakpoint-log",
                "debug-breakpoint-log-disabled",
                "briefcase",
                "broadcast",
                "browser",
                "bug",
                "calendar",
                "case-sensitive",
                "check",
                "checklist",
                "chevron-down",
                "drop-down-button",
                "chevron-left",
                "chevron-right",
                "chevron-up",
                "chrome-close",
                "chrome-maximize",
                "chrome-minimize",
                "chrome-restore",
                "circle-outline",
                "debug-breakpoint-unverified",
                "circle-slash",
                "circuit-board",
                "clear-all",
                "clippy",
                "close-all",
                "cloud-download",
                "cloud-upload",
                "code",
                "collapse-all",
                "color-mode",
                "comment-discussion",
                "compare-changes",
                "credit-card",
                "dash",
                "dashboard",
                "database",
                "debug-continue",
                "debug-disconnect",
                "debug-pause",
                "debug-restart",
                "debug-start",
                "debug-step-into",
                "debug-step-out",
                "debug-step-over",
                "debug-stop",
                "debug",
                "device-camera-video",
                "device-camera",
                "device-mobile",
                "diff-added",
                "diff-ignored",
                "diff-modified",
                "diff-removed",
                "diff-renamed",
                "diff",
                "discard",
                "editor-layout",
                "empty-window",
                "exclude",
                "extensions",
                "eye-closed",
                "file-binary",
                "file-code",
                "file-media",
                "file-pdf",
                "file-submodule",
                "file-symlink-directory",
                "file-symlink-file",
                "file-zip",
                "files",
                "filter",
                "flame",
                "fold-down",
                "fold-up",
                "fold",
                "folder-active",
                "folder-opened",
                "gear",
                "gift",
                "gist-secret",
                "gist",
                "git-commit",
                "git-compare",
                "git-merge",
                "github-action",
                "github-alt",
                "globe",
                "grabber",
                "graph",
                "gripper",
                "heart",
                "home",
                "horizontal-rule",
                "hubot",
                "inbox",
                "issue-closed",
                "issue-reopened",
                "issues",
                "italic",
                "jersey",
                "json",
                "kebab-vertical",
                "key",
                "law",
                "lightbulb-autofix",
                "link-external",
                "link",
                "list-ordered",
                "list-unordered",
                "live-share",
                "loading",
                "location",
                "mail-read",
                "mail",
                "markdown",
                "megaphone",
                "mention",
                "milestone",
                "mortar-board",
                "move",
                "multiple-windows",
                "mute",
                "no-newline",
                "note",
                "octoface",
                "open-preview",
                "package",
                "paintcan",
                "pin",
                "play",
                "run",
                "plug",
                "preserve-case",
                "preview",
                "project",
                "pulse",
                "question",
                "quote",
                "radio-tower",
                "reactions",
                "references",
                "refresh",
                "regex",
                "remote-explorer",
                "remote",
                "remove",
                "replace-all",
                "replace",
                "repo-clone",
                "repo-force-push",
                "repo-pull",
                "repo-push",
                "report",
                "request-changes",
                "rocket",
                "root-folder-opened",
                "root-folder",
                "rss",
                "ruby",
                "save-all",
                "save-as",
                "save",
                "screen-full",
                "screen-normal",
                "search-stop",
                "server",
                "settings-gear",
                "settings",
                "shield",
                "smiley",
                "sort-precedence",
                "split-horizontal",
                "split-vertical",
                "squirrel",
                "star-full",
                "star-half",
                "symbol-class",
                "symbol-color",
                "symbol-customcolor",
                "symbol-constant",
                "symbol-enum-member",
                "symbol-field",
                "symbol-file",
                "symbol-interface",
                "symbol-keyword",
                "symbol-misc",
                "symbol-operator",
                "symbol-property",
                "wrench",
                "wrench-subaction",
                "symbol-snippet",
                "tasklist",
                "telescope",
                "text-size",
                "three-bars",
                "thumbsdown",
                "thumbsup",
                "tools",
                "triangle-down",
                "triangle-left",
                "triangle-right",
                "triangle-up",
                "twitter",
                "unfold",
                "unlock",
                "unmute",
                "unverified",
                "verified",
                "versions",
                "vm-active",
                "vm-outline",
                "vm-running",
                "watch",
                "whitespace",
                "whole-word",
                "window",
                "word-wrap",
                "zoom-in",
                "zoom-out",
                "list-filter",
                "list-flat",
                "list-selection",
                "selection",
                "list-tree",
                "debug-breakpoint-function-unverified",
                "debug-breakpoint-function",
                "debug-breakpoint-function-disabled",
                "debug-stackframe-active",
                "debug-stackframe-dot",
                "debug-stackframe",
                "debug-stackframe-focused",
                "debug-breakpoint-unsupported",
                "symbol-string",
                "debug-reverse-continue",
                "debug-step-back",
                "debug-restart-frame",
                "call-incoming",
                "call-outgoing",
                "menu",
                "expand-all",
                "feedback",
                "group-by-ref-type",
                "ungroup-by-ref-type",
                "account",
                "bell-dot",
                "debug-console",
                "library",
                "output",
                "run-all",
                "sync-ignored",
                "pinned",
                "github-inverted",
                "debug-alt",
                "server-process",
                "server-environment",
                "pass",
                "stop-circle",
                "play-circle",
                "record",
                "debug-alt-small",
                "vm-connect",
                "cloud",
                "merge",
                "export",
                "graph-left",
                "magnet",
                "notebook",
                "redo",
                "check-all",
                "pinned-dirty",
                "pass-filled",
                "circle-large-filled",
                "circle-large-outline",
                "combine",
                "gather",
                "table",
                "variable-group",
                "type-hierarchy",
                "type-hierarchy-sub",
                "type-hierarchy-super",
                "git-pull-request-create",
                "run-above",
                "run-below",
                "notebook-template",
                "debug-rerun",
                "workspace-trusted",
                "workspace-untrusted",
                "workspace-unspecified",
                "terminal-cmd",
                "terminal-debian",
                "terminal-linux",
                "terminal-powershell",
                "terminal-tmux",
                "terminal-ubuntu",
                "terminal-bash",
                "arrow-swap",
                "copy",
                "person-add",
                "filter-filled",
                "wand",
                "debug-line-by-line",
                "inspect",
                "layers",
                "layers-dot",
                "layers-active",
                "compass",
                "compass-dot",
                "compass-active",
                "azure",
                "issue-draft",
                "git-pull-request-closed",
                "git-pull-request-draft",
                "debug-all",
                "debug-coverage",
                "run-errors",
                "folder-library",
                "debug-continue-small",
                "beaker-stop",
                "graph-line",
                "graph-scatter",
                "pie-chart",
                "bracket",
                "bracket-dot",
                "bracket-error",
                "lock-small",
                "azure-devops",
                "verified-filled",
                "newline",
                "layout",
                "layout-activitybar-left",
                "layout-activitybar-right",
                "layout-panel-left",
                "layout-panel-center",
                "layout-panel-justify",
                "layout-panel-right",
                "layout-panel",
                "layout-sidebar-left",
                "layout-sidebar-right",
                "layout-statusbar",
                "layout-menubar",
                "layout-centered",
                "target",
                "indent",
                "record-small",
                "error-small",
                "arrow-circle-down",
                "arrow-circle-left",
                "arrow-circle-right",
                "arrow-circle-up",
                "dialog-error",
                "dialog-warning",
                "dialog-info",
                "dialog-close",
                "tree-item-expanded",
                "tree-filter-on-type-on",
                "tree-filter-on-type-off",
                "tree-filter-clear",
                "tree-item-loading",
                "menu-selection",
                "menu-submenu",
                "menubar-more",
                "scrollbar-button-left",
                "scrollbar-button-right",
                "scrollbar-button-up",
                "scrollbar-button-down",
                "toolbar-more",
                "quick-input-back"
              ],
              "markdownEnumDescriptions": [
                "$(add)",
                "$(plus)",
                "$(gist-new)",
                "$(repo-create)",
                "$(lightbulb)",
                "$(light-bulb)",
                "$(repo)",
                "$(repo-delete)",
                "$(gist-fork)",
                "$(repo-forked)",
                "$(git-pull-request)",
                "$(git-pull-request-abandoned)",
                "$(record-keys)",
                "$(keyboard)",
                "$(tag)",
                "$(tag-add)",
                "$(tag-remove)",
                "$(person)",
                "$(person-follow)",
                "$(person-outline)",
                "$(person-filled)",
                "$(git-branch)",
                "$(git-branch-create)",
                "$(git-branch-delete)",
                "$(source-control)",
                "$(mirror)",
                "$(mirror-public)",
                "$(star)",
                "$(star-add)",
                "$(star-delete)",
                "$(star-empty)",
                "$(comment)",
                "$(comment-add)",
                "$(alert)",
                "$(warning)",
                "$(search)",
                "$(search-save)",
                "$(log-out)",
                "$(sign-out)",
                "$(log-in)",
                "$(sign-in)",
                "$(eye)",
                "$(eye-unwatch)",
                "$(eye-watch)",
                "$(circle-filled)",
                "$(primitive-dot)",
                "$(close-dirty)",
                "$(debug-breakpoint)",
                "$(debug-breakpoint-disabled)",
                "$(debug-hint)",
                "$(primitive-square)",
                "$(edit)",
                "$(pencil)",
                "$(info)",
                "$(issue-opened)",
                "$(gist-private)",
                "$(git-fork-private)",
                "$(lock)",
                "$(mirror-private)",
                "$(close)",
                "$(remove-close)",
                "$(x)",
                "$(repo-sync)",
                "$(sync)",
                "$(clone)",
                "$(desktop-download)",
                "$(beaker)",
                "$(microscope)",
                "$(vm)",
                "$(device-desktop)",
                "$(file)",
                "$(file-text)",
                "$(more)",
                "$(ellipsis)",
                "$(kebab-horizontal)",
                "$(mail-reply)",
                "$(reply)",
                "$(organization)",
                "$(organization-filled)",
                "$(organization-outline)",
                "$(new-file)",
                "$(file-add)",
                "$(new-folder)",
                "$(file-directory-create)",
                "$(trash)",
                "$(trashcan)",
                "$(history)",
                "$(clock)",
                "$(folder)",
                "$(file-directory)",
                "$(symbol-folder)",
                "$(logo-github)",
                "$(mark-github)",
                "$(github)",
                "$(terminal)",
                "$(console)",
                "$(repl)",
                "$(zap)",
                "$(symbol-event)",
                "$(error)",
                "$(stop)",
                "$(variable)",
                "$(symbol-variable)",
                "$(array)",
                "$(symbol-array)",
                "$(symbol-module)",
                "$(symbol-package)",
                "$(symbol-namespace)",
                "$(symbol-object)",
                "$(symbol-method)",
                "$(symbol-function)",
                "$(symbol-constructor)",
                "$(symbol-boolean)",
                "$(symbol-null)",
                "$(symbol-numeric)",
                "$(symbol-number)",
                "$(symbol-structure)",
                "$(symbol-struct)",
                "$(symbol-parameter)",
                "$(symbol-type-parameter)",
                "$(symbol-key)",
                "$(symbol-text)",
                "$(symbol-reference)",
                "$(go-to-file)",
                "$(symbol-enum)",
                "$(symbol-value)",
                "$(symbol-ruler)",
                "$(symbol-unit)",
                "$(activate-breakpoints)",
                "$(archive)",
                "$(arrow-both)",
                "$(arrow-down)",
                "$(arrow-left)",
                "$(arrow-right)",
                "$(arrow-small-down)",
                "$(arrow-small-left)",
                "$(arrow-small-right)",
                "$(arrow-small-up)",
                "$(arrow-up)",
                "$(bell)",
                "$(bold)",
                "$(book)",
                "$(bookmark)",
                "$(debug-breakpoint-conditional-unverified)",
                "$(debug-breakpoint-conditional)",
                "$(debug-breakpoint-conditional-disabled)",
                "$(debug-breakpoint-data-unverified)",
                "$(debug-breakpoint-data)",
                "$(debug-breakpoint-data-disabled)",
                "$(debug-breakpoint-log-unverified)",
                "$(debug-breakpoint-log)",
                "$(debug-breakpoint-log-disabled)",
                "$(briefcase)",
                "$(broadcast)",
                "$(browser)",
                "$(bug)",
                "$(calendar)",
                "$(case-sensitive)",
                "$(check)",
                "$(checklist)",
                "$(chevron-down)",
                "$(drop-down-button)",
                "$(chevron-left)",
                "$(chevron-right)",
                "$(chevron-up)",
                "$(chrome-close)",
                "$(chrome-maximize)",
                "$(chrome-minimize)",
                "$(chrome-restore)",
                "$(circle-outline)",
                "$(debug-breakpoint-unverified)",
                "$(circle-slash)",
                "$(circuit-board)",
                "$(clear-all)",
                "$(clippy)",
                "$(close-all)",
                "$(cloud-download)",
                "$(cloud-upload)",
                "$(code)",
                "$(collapse-all)",
                "$(color-mode)",
                "$(comment-discussion)",
                "$(compare-changes)",
                "$(credit-card)",
                "$(dash)",
                "$(dashboard)",
                "$(database)",
                "$(debug-continue)",
                "$(debug-disconnect)",
                "$(debug-pause)",
                "$(debug-restart)",
                "$(debug-start)",
                "$(debug-step-into)",
                "$(debug-step-out)",
                "$(debug-step-over)",
                "$(debug-stop)",
                "$(debug)",
                "$(device-camera-video)",
                "$(device-camera)",
                "$(device-mobile)",
                "$(diff-added)",
                "$(diff-ignored)",
                "$(diff-modified)",
                "$(diff-removed)",
                "$(diff-renamed)",
                "$(diff)",
                "$(discard)",
                "$(editor-layout)",
                "$(empty-window)",
                "$(exclude)",
                "$(extensions)",
                "$(eye-closed)",
                "$(file-binary)",
                "$(file-code)",
                "$(file-media)",
                "$(file-pdf)",
                "$(file-submodule)",
                "$(file-symlink-directory)",
                "$(file-symlink-file)",
                "$(file-zip)",
                "$(files)",
                "$(filter)",
                "$(flame)",
                "$(fold-down)",
                "$(fold-up)",
                "$(fold)",
                "$(folder-active)",
                "$(folder-opened)",
                "$(gear)",
                "$(gift)",
                "$(gist-secret)",
                "$(gist)",
                "$(git-commit)",
                "$(git-compare)",
                "$(git-merge)",
                "$(github-action)",
                "$(github-alt)",
                "$(globe)",
                "$(grabber)",
                "$(graph)",
                "$(gripper)",
                "$(heart)",
                "$(home)",
                "$(horizontal-rule)",
                "$(hubot)",
                "$(inbox)",
                "$(issue-closed)",
                "$(issue-reopened)",
                "$(issues)",
                "$(italic)",
                "$(jersey)",
                "$(json)",
                "$(kebab-vertical)",
                "$(key)",
                "$(law)",
                "$(lightbulb-autofix)",
                "$(link-external)",
                "$(link)",
                "$(list-ordered)",
                "$(list-unordered)",
                "$(live-share)",
                "$(loading)",
                "$(location)",
                "$(mail-read)",
                "$(mail)",
                "$(markdown)",
                "$(megaphone)",
                "$(mention)",
                "$(milestone)",
                "$(mortar-board)",
                "$(move)",
                "$(multiple-windows)",
                "$(mute)",
                "$(no-newline)",
                "$(note)",
                "$(octoface)",
                "$(open-preview)",
                "$(package)",
                "$(paintcan)",
                "$(pin)",
                "$(play)",
                "$(run)",
                "$(plug)",
                "$(preserve-case)",
                "$(preview)",
                "$(project)",
                "$(pulse)",
                "$(question)",
                "$(quote)",
                "$(radio-tower)",
                "$(reactions)",
                "$(references)",
                "$(refresh)",
                "$(regex)",
                "$(remote-explorer)",
                "$(remote)",
                "$(remove)",
                "$(replace-all)",
                "$(replace)",
                "$(repo-clone)",
                "$(repo-force-push)",
                "$(repo-pull)",
                "$(repo-push)",
                "$(report)",
                "$(request-changes)",
                "$(rocket)",
                "$(root-folder-opened)",
                "$(root-folder)",
                "$(rss)",
                "$(ruby)",
                "$(save-all)",
                "$(save-as)",
                "$(save)",
                "$(screen-full)",
                "$(screen-normal)",
                "$(search-stop)",
                "$(server)",
                "$(settings-gear)",
                "$(settings)",
                "$(shield)",
                "$(smiley)",
                "$(sort-precedence)",
                "$(split-horizontal)",
                "$(split-vertical)",
                "$(squirrel)",
                "$(star-full)",
                "$(star-half)",
                "$(symbol-class)",
                "$(symbol-color)",
                "$(symbol-customcolor)",
                "$(symbol-constant)",
                "$(symbol-enum-member)",
                "$(symbol-field)",
                "$(symbol-file)",
                "$(symbol-interface)",
                "$(symbol-keyword)",
                "$(symbol-misc)",
                "$(symbol-operator)",
                "$(symbol-property)",
                "$(wrench)",
                "$(wrench-subaction)",
                "$(symbol-snippet)",
                "$(tasklist)",
                "$(telescope)",
                "$(text-size)",
                "$(three-bars)",
                "$(thumbsdown)",
                "$(thumbsup)",
                "$(tools)",
                "$(triangle-down)",
                "$(triangle-left)",
                "$(triangle-right)",
                "$(triangle-up)",
                "$(twitter)",
                "$(unfold)",
                "$(unlock)",
                "$(unmute)",
                "$(unverified)",
                "$(verified)",
                "$(versions)",
                "$(vm-active)",
                "$(vm-outline)",
                "$(vm-running)",
                "$(watch)",
                "$(whitespace)",
                "$(whole-word)",
                "$(window)",
                "$(word-wrap)",
                "$(zoom-in)",
                "$(zoom-out)",
                "$(list-filter)",
                "$(list-flat)",
                "$(list-selection)",
                "$(selection)",
                "$(list-tree)",
                "$(debug-breakpoint-function-unverified)",
                "$(debug-breakpoint-function)",
                "$(debug-breakpoint-function-disabled)",
                "$(debug-stackframe-active)",
                "$(debug-stackframe-dot)",
                "$(debug-stackframe)",
                "$(debug-stackframe-focused)",
                "$(debug-breakpoint-unsupported)",
                "$(symbol-string)",
                "$(debug-reverse-continue)",
                "$(debug-step-back)",
                "$(debug-restart-frame)",
                "$(call-incoming)",
                "$(call-outgoing)",
                "$(menu)",
                "$(expand-all)",
                "$(feedback)",
                "$(group-by-ref-type)",
                "$(ungroup-by-ref-type)",
                "$(account)",
                "$(bell-dot)",
                "$(debug-console)",
                "$(library)",
                "$(output)",
                "$(run-all)",
                "$(sync-ignored)",
                "$(pinned)",
                "$(github-inverted)",
                "$(debug-alt)",
                "$(server-process)",
                "$(server-environment)",
                "$(pass)",
                "$(stop-circle)",
                "$(play-circle)",
                "$(record)",
                "$(debug-alt-small)",
                "$(vm-connect)",
                "$(cloud)",
                "$(merge)",
                "$(export)",
                "$(graph-left)",
                "$(magnet)",
                "$(notebook)",
                "$(redo)",
                "$(check-all)",
                "$(pinned-dirty)",
                "$(pass-filled)",
                "$(circle-large-filled)",
                "$(circle-large-outline)",
                "$(combine)",
                "$(gather)",
                "$(table)",
                "$(variable-group)",
                "$(type-hierarchy)",
                "$(type-hierarchy-sub)",
                "$(type-hierarchy-super)",
                "$(git-pull-request-create)",
                "$(run-above)",
                "$(run-below)",
                "$(notebook-template)",
                "$(debug-rerun)",
                "$(workspace-trusted)",
                "$(workspace-untrusted)",
                "$(workspace-unspecified)",
                "$(terminal-cmd)",
                "$(terminal-debian)",
                "$(terminal-linux)",
                "$(terminal-powershell)",
                "$(terminal-tmux)",
                "$(terminal-ubuntu)",
                "$(terminal-bash)",
                "$(arrow-swap)",
                "$(copy)",
                "$(person-add)",
                "$(filter-filled)",
                "$(wand)",
                "$(debug-line-by-line)",
                "$(inspect)",
                "$(layers)",
                "$(layers-dot)",
                "$(layers-active)",
                "$(compass)",
                "$(compass-dot)",
                "$(compass-active)",
                "$(azure)",
                "$(issue-draft)",
                "$(git-pull-request-closed)",
                "$(git-pull-request-draft)",
                "$(debug-all)",
                "$(debug-coverage)",
                "$(run-errors)",
                "$(folder-library)",
                "$(debug-continue-small)",
                "$(beaker-stop)",
                "$(graph-line)",
                "$(graph-scatter)",
                "$(pie-chart)",
                "$(bracket)",
                "$(bracket-dot)",
                "$(bracket-error)",
                "$(lock-small)",
                "$(azure-devops)",
                "$(verified-filled)",
                "$(newline)",
                "$(layout)",
                "$(layout-activitybar-left)",
                "$(layout-activitybar-right)",
                "$(layout-panel-left)",
                "$(layout-panel-center)",
                "$(layout-panel-justify)",
                "$(layout-panel-right)",
                "$(layout-panel)",
                "$(layout-sidebar-left)",
                "$(layout-sidebar-right)",
                "$(layout-statusbar)",
                "$(layout-menubar)",
                "$(layout-centered)",
                "$(target)",
                "$(indent)",
                "$(record-small)",
                "$(error-small)",
                "$(arrow-circle-down)",
                "$(arrow-circle-left)",
                "$(arrow-circle-right)",
                "$(arrow-circle-up)",
                "$(dialog-error)",
                "$(dialog-warning)",
                "$(dialog-info)",
                "$(dialog-close)",
                "$(tree-item-expanded)",
                "$(tree-filter-on-type-on)",
                "$(tree-filter-on-type-off)",
                "$(tree-filter-clear)",
                "$(tree-item-loading)",
                "$(menu-selection)",
                "$(menu-submenu)",
                "$(menubar-more)",
                "$(scrollbar-button-left)",
                "$(scrollbar-button-right)",
                "$(scrollbar-button-up)",
                "$(scrollbar-button-down)",
                "$(toolbar-more)",
                "$(quick-input-back)"
              ]
            },
            "color": {
              "description": "A theme color ID to associate with this terminal.",
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "terminal.ansiBlack",
                "terminal.ansiRed",
                "terminal.ansiGreen",
                "terminal.ansiYellow",
                "terminal.ansiBlue",
                "terminal.ansiMagenta",
                "terminal.ansiCyan",
                "terminal.ansiWhite"
              ],
              "default": null
            },
            "env": {
              "markdownDescription": "An object with environment variables that will be added to the terminal profile process. Set to `null` to delete environment variables from the base environment.",
              "type": "object",
              "additionalProperties": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "default": {}
            }
          }
        }
      ],
      "defaultSnippets": [
        {
          "body": {
            "path": "${1}",
            "icon": "${2}"
          }
        }
      ],
      "defaultDefaultValue": null,
      "scope": 3
    },
    "terminal.integrated.automationProfile.osx": {
      "restricted": true,
      "description": "The terminal profile to use on macOS for automation-related terminal usage like tasks and debug. This setting will currently be ignored if #terminal.integrated.automationShell.osx# is set.",
      "type": [
        "object",
        "null"
      ],
      "default": null,
      "anyOf": [
        {
          "type": "null"
        },
        {
          "type": "object",
          "required": [
            "path"
          ],
          "properties": {
            "path": {
              "description": "A single path to a shell executable.",
              "type": [
                "string"
              ],
              "items": {
                "type": "string"
              }
            },
            "args": {
              "description": "An optional set of arguments to run the shell executable with.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "overrideName": {
              "description": "Controls whether or not the profile name overrides the auto detected one.",
              "type": "boolean"
            },
            "icon": {
              "description": "A codicon ID to associate with this terminal.",
              "type": "string",
              "enum": [
                "add",
                "plus",
                "gist-new",
                "repo-create",
                "lightbulb",
                "light-bulb",
                "repo",
                "repo-delete",
                "gist-fork",
                "repo-forked",
                "git-pull-request",
                "git-pull-request-abandoned",
                "record-keys",
                "keyboard",
                "tag",
                "tag-add",
                "tag-remove",
                "person",
                "person-follow",
                "person-outline",
                "person-filled",
                "git-branch",
                "git-branch-create",
                "git-branch-delete",
                "source-control",
                "mirror",
                "mirror-public",
                "star",
                "star-add",
                "star-delete",
                "star-empty",
                "comment",
                "comment-add",
                "alert",
                "warning",
                "search",
                "search-save",
                "log-out",
                "sign-out",
                "log-in",
                "sign-in",
                "eye",
                "eye-unwatch",
                "eye-watch",
                "circle-filled",
                "primitive-dot",
                "close-dirty",
                "debug-breakpoint",
                "debug-breakpoint-disabled",
                "debug-hint",
                "primitive-square",
                "edit",
                "pencil",
                "info",
                "issue-opened",
                "gist-private",
                "git-fork-private",
                "lock",
                "mirror-private",
                "close",
                "remove-close",
                "x",
                "repo-sync",
                "sync",
                "clone",
                "desktop-download",
                "beaker",
                "microscope",
                "vm",
                "device-desktop",
                "file",
                "file-text",
                "more",
                "ellipsis",
                "kebab-horizontal",
                "mail-reply",
                "reply",
                "organization",
                "organization-filled",
                "organization-outline",
                "new-file",
                "file-add",
                "new-folder",
                "file-directory-create",
                "trash",
                "trashcan",
                "history",
                "clock",
                "folder",
                "file-directory",
                "symbol-folder",
                "logo-github",
                "mark-github",
                "github",
                "terminal",
                "console",
                "repl",
                "zap",
                "symbol-event",
                "error",
                "stop",
                "variable",
                "symbol-variable",
                "array",
                "symbol-array",
                "symbol-module",
                "symbol-package",
                "symbol-namespace",
                "symbol-object",
                "symbol-method",
                "symbol-function",
                "symbol-constructor",
                "symbol-boolean",
                "symbol-null",
                "symbol-numeric",
                "symbol-number",
                "symbol-structure",
                "symbol-struct",
                "symbol-parameter",
                "symbol-type-parameter",
                "symbol-key",
                "symbol-text",
                "symbol-reference",
                "go-to-file",
                "symbol-enum",
                "symbol-value",
                "symbol-ruler",
                "symbol-unit",
                "activate-breakpoints",
                "archive",
                "arrow-both",
                "arrow-down",
                "arrow-left",
                "arrow-right",
                "arrow-small-down",
                "arrow-small-left",
                "arrow-small-right",
                "arrow-small-up",
                "arrow-up",
                "bell",
                "bold",
                "book",
                "bookmark",
                "debug-breakpoint-conditional-unverified",
                "debug-breakpoint-conditional",
                "debug-breakpoint-conditional-disabled",
                "debug-breakpoint-data-unverified",
                "debug-breakpoint-data",
                "debug-breakpoint-data-disabled",
                "debug-breakpoint-log-unverified",
                "debug-breakpoint-log",
                "debug-breakpoint-log-disabled",
                "briefcase",
                "broadcast",
                "browser",
                "bug",
                "calendar",
                "case-sensitive",
                "check",
                "checklist",
                "chevron-down",
                "drop-down-button",
                "chevron-left",
                "chevron-right",
                "chevron-up",
                "chrome-close",
                "chrome-maximize",
                "chrome-minimize",
                "chrome-restore",
                "circle-outline",
                "debug-breakpoint-unverified",
                "circle-slash",
                "circuit-board",
                "clear-all",
                "clippy",
                "close-all",
                "cloud-download",
                "cloud-upload",
                "code",
                "collapse-all",
                "color-mode",
                "comment-discussion",
                "compare-changes",
                "credit-card",
                "dash",
                "dashboard",
                "database",
                "debug-continue",
                "debug-disconnect",
                "debug-pause",
                "debug-restart",
                "debug-start",
                "debug-step-into",
                "debug-step-out",
                "debug-step-over",
                "debug-stop",
                "debug",
                "device-camera-video",
                "device-camera",
                "device-mobile",
                "diff-added",
                "diff-ignored",
                "diff-modified",
                "diff-removed",
                "diff-renamed",
                "diff",
                "discard",
                "editor-layout",
                "empty-window",
                "exclude",
                "extensions",
                "eye-closed",
                "file-binary",
                "file-code",
                "file-media",
                "file-pdf",
                "file-submodule",
                "file-symlink-directory",
                "file-symlink-file",
                "file-zip",
                "files",
                "filter",
                "flame",
                "fold-down",
                "fold-up",
                "fold",
                "folder-active",
                "folder-opened",
                "gear",
                "gift",
                "gist-secret",
                "gist",
                "git-commit",
                "git-compare",
                "git-merge",
                "github-action",
                "github-alt",
                "globe",
                "grabber",
                "graph",
                "gripper",
                "heart",
                "home",
                "horizontal-rule",
                "hubot",
                "inbox",
                "issue-closed",
                "issue-reopened",
                "issues",
                "italic",
                "jersey",
                "json",
                "kebab-vertical",
                "key",
                "law",
                "lightbulb-autofix",
                "link-external",
                "link",
                "list-ordered",
                "list-unordered",
                "live-share",
                "loading",
                "location",
                "mail-read",
                "mail",
                "markdown",
                "megaphone",
                "mention",
                "milestone",
                "mortar-board",
                "move",
                "multiple-windows",
                "mute",
                "no-newline",
                "note",
                "octoface",
                "open-preview",
                "package",
                "paintcan",
                "pin",
                "play",
                "run",
                "plug",
                "preserve-case",
                "preview",
                "project",
                "pulse",
                "question",
                "quote",
                "radio-tower",
                "reactions",
                "references",
                "refresh",
                "regex",
                "remote-explorer",
                "remote",
                "remove",
                "replace-all",
                "replace",
                "repo-clone",
                "repo-force-push",
                "repo-pull",
                "repo-push",
                "report",
                "request-changes",
                "rocket",
                "root-folder-opened",
                "root-folder",
                "rss",
                "ruby",
                "save-all",
                "save-as",
                "save",
                "screen-full",
                "screen-normal",
                "search-stop",
                "server",
                "settings-gear",
                "settings",
                "shield",
                "smiley",
                "sort-precedence",
                "split-horizontal",
                "split-vertical",
                "squirrel",
                "star-full",
                "star-half",
                "symbol-class",
                "symbol-color",
                "symbol-customcolor",
                "symbol-constant",
                "symbol-enum-member",
                "symbol-field",
                "symbol-file",
                "symbol-interface",
                "symbol-keyword",
                "symbol-misc",
                "symbol-operator",
                "symbol-property",
                "wrench",
                "wrench-subaction",
                "symbol-snippet",
                "tasklist",
                "telescope",
                "text-size",
                "three-bars",
                "thumbsdown",
                "thumbsup",
                "tools",
                "triangle-down",
                "triangle-left",
                "triangle-right",
                "triangle-up",
                "twitter",
                "unfold",
                "unlock",
                "unmute",
                "unverified",
                "verified",
                "versions",
                "vm-active",
                "vm-outline",
                "vm-running",
                "watch",
                "whitespace",
                "whole-word",
                "window",
                "word-wrap",
                "zoom-in",
                "zoom-out",
                "list-filter",
                "list-flat",
                "list-selection",
                "selection",
                "list-tree",
                "debug-breakpoint-function-unverified",
                "debug-breakpoint-function",
                "debug-breakpoint-function-disabled",
                "debug-stackframe-active",
                "debug-stackframe-dot",
                "debug-stackframe",
                "debug-stackframe-focused",
                "debug-breakpoint-unsupported",
                "symbol-string",
                "debug-reverse-continue",
                "debug-step-back",
                "debug-restart-frame",
                "call-incoming",
                "call-outgoing",
                "menu",
                "expand-all",
                "feedback",
                "group-by-ref-type",
                "ungroup-by-ref-type",
                "account",
                "bell-dot",
                "debug-console",
                "library",
                "output",
                "run-all",
                "sync-ignored",
                "pinned",
                "github-inverted",
                "debug-alt",
                "server-process",
                "server-environment",
                "pass",
                "stop-circle",
                "play-circle",
                "record",
                "debug-alt-small",
                "vm-connect",
                "cloud",
                "merge",
                "export",
                "graph-left",
                "magnet",
                "notebook",
                "redo",
                "check-all",
                "pinned-dirty",
                "pass-filled",
                "circle-large-filled",
                "circle-large-outline",
                "combine",
                "gather",
                "table",
                "variable-group",
                "type-hierarchy",
                "type-hierarchy-sub",
                "type-hierarchy-super",
                "git-pull-request-create",
                "run-above",
                "run-below",
                "notebook-template",
                "debug-rerun",
                "workspace-trusted",
                "workspace-untrusted",
                "workspace-unspecified",
                "terminal-cmd",
                "terminal-debian",
                "terminal-linux",
                "terminal-powershell",
                "terminal-tmux",
                "terminal-ubuntu",
                "terminal-bash",
                "arrow-swap",
                "copy",
                "person-add",
                "filter-filled",
                "wand",
                "debug-line-by-line",
                "inspect",
                "layers",
                "layers-dot",
                "layers-active",
                "compass",
                "compass-dot",
                "compass-active",
                "azure",
                "issue-draft",
                "git-pull-request-closed",
                "git-pull-request-draft",
                "debug-all",
                "debug-coverage",
                "run-errors",
                "folder-library",
                "debug-continue-small",
                "beaker-stop",
                "graph-line",
                "graph-scatter",
                "pie-chart",
                "bracket",
                "bracket-dot",
                "bracket-error",
                "lock-small",
                "azure-devops",
                "verified-filled",
                "newline",
                "layout",
                "layout-activitybar-left",
                "layout-activitybar-right",
                "layout-panel-left",
                "layout-panel-center",
                "layout-panel-justify",
                "layout-panel-right",
                "layout-panel",
                "layout-sidebar-left",
                "layout-sidebar-right",
                "layout-statusbar",
                "layout-menubar",
                "layout-centered",
                "target",
                "indent",
                "record-small",
                "error-small",
                "arrow-circle-down",
                "arrow-circle-left",
                "arrow-circle-right",
                "arrow-circle-up",
                "dialog-error",
                "dialog-warning",
                "dialog-info",
                "dialog-close",
                "tree-item-expanded",
                "tree-filter-on-type-on",
                "tree-filter-on-type-off",
                "tree-filter-clear",
                "tree-item-loading",
                "menu-selection",
                "menu-submenu",
                "menubar-more",
                "scrollbar-button-left",
                "scrollbar-button-right",
                "scrollbar-button-up",
                "scrollbar-button-down",
                "toolbar-more",
                "quick-input-back"
              ],
              "markdownEnumDescriptions": [
                "$(add)",
                "$(plus)",
                "$(gist-new)",
                "$(repo-create)",
                "$(lightbulb)",
                "$(light-bulb)",
                "$(repo)",
                "$(repo-delete)",
                "$(gist-fork)",
                "$(repo-forked)",
                "$(git-pull-request)",
                "$(git-pull-request-abandoned)",
                "$(record-keys)",
                "$(keyboard)",
                "$(tag)",
                "$(tag-add)",
                "$(tag-remove)",
                "$(person)",
                "$(person-follow)",
                "$(person-outline)",
                "$(person-filled)",
                "$(git-branch)",
                "$(git-branch-create)",
                "$(git-branch-delete)",
                "$(source-control)",
                "$(mirror)",
                "$(mirror-public)",
                "$(star)",
                "$(star-add)",
                "$(star-delete)",
                "$(star-empty)",
                "$(comment)",
                "$(comment-add)",
                "$(alert)",
                "$(warning)",
                "$(search)",
                "$(search-save)",
                "$(log-out)",
                "$(sign-out)",
                "$(log-in)",
                "$(sign-in)",
                "$(eye)",
                "$(eye-unwatch)",
                "$(eye-watch)",
                "$(circle-filled)",
                "$(primitive-dot)",
                "$(close-dirty)",
                "$(debug-breakpoint)",
                "$(debug-breakpoint-disabled)",
                "$(debug-hint)",
                "$(primitive-square)",
                "$(edit)",
                "$(pencil)",
                "$(info)",
                "$(issue-opened)",
                "$(gist-private)",
                "$(git-fork-private)",
                "$(lock)",
                "$(mirror-private)",
                "$(close)",
                "$(remove-close)",
                "$(x)",
                "$(repo-sync)",
                "$(sync)",
                "$(clone)",
                "$(desktop-download)",
                "$(beaker)",
                "$(microscope)",
                "$(vm)",
                "$(device-desktop)",
                "$(file)",
                "$(file-text)",
                "$(more)",
                "$(ellipsis)",
                "$(kebab-horizontal)",
                "$(mail-reply)",
                "$(reply)",
                "$(organization)",
                "$(organization-filled)",
                "$(organization-outline)",
                "$(new-file)",
                "$(file-add)",
                "$(new-folder)",
                "$(file-directory-create)",
                "$(trash)",
                "$(trashcan)",
                "$(history)",
                "$(clock)",
                "$(folder)",
                "$(file-directory)",
                "$(symbol-folder)",
                "$(logo-github)",
                "$(mark-github)",
                "$(github)",
                "$(terminal)",
                "$(console)",
                "$(repl)",
                "$(zap)",
                "$(symbol-event)",
                "$(error)",
                "$(stop)",
                "$(variable)",
                "$(symbol-variable)",
                "$(array)",
                "$(symbol-array)",
                "$(symbol-module)",
                "$(symbol-package)",
                "$(symbol-namespace)",
                "$(symbol-object)",
                "$(symbol-method)",
                "$(symbol-function)",
                "$(symbol-constructor)",
                "$(symbol-boolean)",
                "$(symbol-null)",
                "$(symbol-numeric)",
                "$(symbol-number)",
                "$(symbol-structure)",
                "$(symbol-struct)",
                "$(symbol-parameter)",
                "$(symbol-type-parameter)",
                "$(symbol-key)",
                "$(symbol-text)",
                "$(symbol-reference)",
                "$(go-to-file)",
                "$(symbol-enum)",
                "$(symbol-value)",
                "$(symbol-ruler)",
                "$(symbol-unit)",
                "$(activate-breakpoints)",
                "$(archive)",
                "$(arrow-both)",
                "$(arrow-down)",
                "$(arrow-left)",
                "$(arrow-right)",
                "$(arrow-small-down)",
                "$(arrow-small-left)",
                "$(arrow-small-right)",
                "$(arrow-small-up)",
                "$(arrow-up)",
                "$(bell)",
                "$(bold)",
                "$(book)",
                "$(bookmark)",
                "$(debug-breakpoint-conditional-unverified)",
                "$(debug-breakpoint-conditional)",
                "$(debug-breakpoint-conditional-disabled)",
                "$(debug-breakpoint-data-unverified)",
                "$(debug-breakpoint-data)",
                "$(debug-breakpoint-data-disabled)",
                "$(debug-breakpoint-log-unverified)",
                "$(debug-breakpoint-log)",
                "$(debug-breakpoint-log-disabled)",
                "$(briefcase)",
                "$(broadcast)",
                "$(browser)",
                "$(bug)",
                "$(calendar)",
                "$(case-sensitive)",
                "$(check)",
                "$(checklist)",
                "$(chevron-down)",
                "$(drop-down-button)",
                "$(chevron-left)",
                "$(chevron-right)",
                "$(chevron-up)",
                "$(chrome-close)",
                "$(chrome-maximize)",
                "$(chrome-minimize)",
                "$(chrome-restore)",
                "$(circle-outline)",
                "$(debug-breakpoint-unverified)",
                "$(circle-slash)",
                "$(circuit-board)",
                "$(clear-all)",
                "$(clippy)",
                "$(close-all)",
                "$(cloud-download)",
                "$(cloud-upload)",
                "$(code)",
                "$(collapse-all)",
                "$(color-mode)",
                "$(comment-discussion)",
                "$(compare-changes)",
                "$(credit-card)",
                "$(dash)",
                "$(dashboard)",
                "$(database)",
                "$(debug-continue)",
                "$(debug-disconnect)",
                "$(debug-pause)",
                "$(debug-restart)",
                "$(debug-start)",
                "$(debug-step-into)",
                "$(debug-step-out)",
                "$(debug-step-over)",
                "$(debug-stop)",
                "$(debug)",
                "$(device-camera-video)",
                "$(device-camera)",
                "$(device-mobile)",
                "$(diff-added)",
                "$(diff-ignored)",
                "$(diff-modified)",
                "$(diff-removed)",
                "$(diff-renamed)",
                "$(diff)",
                "$(discard)",
                "$(editor-layout)",
                "$(empty-window)",
                "$(exclude)",
                "$(extensions)",
                "$(eye-closed)",
                "$(file-binary)",
                "$(file-code)",
                "$(file-media)",
                "$(file-pdf)",
                "$(file-submodule)",
                "$(file-symlink-directory)",
                "$(file-symlink-file)",
                "$(file-zip)",
                "$(files)",
                "$(filter)",
                "$(flame)",
                "$(fold-down)",
                "$(fold-up)",
                "$(fold)",
                "$(folder-active)",
                "$(folder-opened)",
                "$(gear)",
                "$(gift)",
                "$(gist-secret)",
                "$(gist)",
                "$(git-commit)",
                "$(git-compare)",
                "$(git-merge)",
                "$(github-action)",
                "$(github-alt)",
                "$(globe)",
                "$(grabber)",
                "$(graph)",
                "$(gripper)",
                "$(heart)",
                "$(home)",
                "$(horizontal-rule)",
                "$(hubot)",
                "$(inbox)",
                "$(issue-closed)",
                "$(issue-reopened)",
                "$(issues)",
                "$(italic)",
                "$(jersey)",
                "$(json)",
                "$(kebab-vertical)",
                "$(key)",
                "$(law)",
                "$(lightbulb-autofix)",
                "$(link-external)",
                "$(link)",
                "$(list-ordered)",
                "$(list-unordered)",
                "$(live-share)",
                "$(loading)",
                "$(location)",
                "$(mail-read)",
                "$(mail)",
                "$(markdown)",
                "$(megaphone)",
                "$(mention)",
                "$(milestone)",
                "$(mortar-board)",
                "$(move)",
                "$(multiple-windows)",
                "$(mute)",
                "$(no-newline)",
                "$(note)",
                "$(octoface)",
                "$(open-preview)",
                "$(package)",
                "$(paintcan)",
                "$(pin)",
                "$(play)",
                "$(run)",
                "$(plug)",
                "$(preserve-case)",
                "$(preview)",
                "$(project)",
                "$(pulse)",
                "$(question)",
                "$(quote)",
                "$(radio-tower)",
                "$(reactions)",
                "$(references)",
                "$(refresh)",
                "$(regex)",
                "$(remote-explorer)",
                "$(remote)",
                "$(remove)",
                "$(replace-all)",
                "$(replace)",
                "$(repo-clone)",
                "$(repo-force-push)",
                "$(repo-pull)",
                "$(repo-push)",
                "$(report)",
                "$(request-changes)",
                "$(rocket)",
                "$(root-folder-opened)",
                "$(root-folder)",
                "$(rss)",
                "$(ruby)",
                "$(save-all)",
                "$(save-as)",
                "$(save)",
                "$(screen-full)",
                "$(screen-normal)",
                "$(search-stop)",
                "$(server)",
                "$(settings-gear)",
                "$(settings)",
                "$(shield)",
                "$(smiley)",
                "$(sort-precedence)",
                "$(split-horizontal)",
                "$(split-vertical)",
                "$(squirrel)",
                "$(star-full)",
                "$(star-half)",
                "$(symbol-class)",
                "$(symbol-color)",
                "$(symbol-customcolor)",
                "$(symbol-constant)",
                "$(symbol-enum-member)",
                "$(symbol-field)",
                "$(symbol-file)",
                "$(symbol-interface)",
                "$(symbol-keyword)",
                "$(symbol-misc)",
                "$(symbol-operator)",
                "$(symbol-property)",
                "$(wrench)",
                "$(wrench-subaction)",
                "$(symbol-snippet)",
                "$(tasklist)",
                "$(telescope)",
                "$(text-size)",
                "$(three-bars)",
                "$(thumbsdown)",
                "$(thumbsup)",
                "$(tools)",
                "$(triangle-down)",
                "$(triangle-left)",
                "$(triangle-right)",
                "$(triangle-up)",
                "$(twitter)",
                "$(unfold)",
                "$(unlock)",
                "$(unmute)",
                "$(unverified)",
                "$(verified)",
                "$(versions)",
                "$(vm-active)",
                "$(vm-outline)",
                "$(vm-running)",
                "$(watch)",
                "$(whitespace)",
                "$(whole-word)",
                "$(window)",
                "$(word-wrap)",
                "$(zoom-in)",
                "$(zoom-out)",
                "$(list-filter)",
                "$(list-flat)",
                "$(list-selection)",
                "$(selection)",
                "$(list-tree)",
                "$(debug-breakpoint-function-unverified)",
                "$(debug-breakpoint-function)",
                "$(debug-breakpoint-function-disabled)",
                "$(debug-stackframe-active)",
                "$(debug-stackframe-dot)",
                "$(debug-stackframe)",
                "$(debug-stackframe-focused)",
                "$(debug-breakpoint-unsupported)",
                "$(symbol-string)",
                "$(debug-reverse-continue)",
                "$(debug-step-back)",
                "$(debug-restart-frame)",
                "$(call-incoming)",
                "$(call-outgoing)",
                "$(menu)",
                "$(expand-all)",
                "$(feedback)",
                "$(group-by-ref-type)",
                "$(ungroup-by-ref-type)",
                "$(account)",
                "$(bell-dot)",
                "$(debug-console)",
                "$(library)",
                "$(output)",
                "$(run-all)",
                "$(sync-ignored)",
                "$(pinned)",
                "$(github-inverted)",
                "$(debug-alt)",
                "$(server-process)",
                "$(server-environment)",
                "$(pass)",
                "$(stop-circle)",
                "$(play-circle)",
                "$(record)",
                "$(debug-alt-small)",
                "$(vm-connect)",
                "$(cloud)",
                "$(merge)",
                "$(export)",
                "$(graph-left)",
                "$(magnet)",
                "$(notebook)",
                "$(redo)",
                "$(check-all)",
                "$(pinned-dirty)",
                "$(pass-filled)",
                "$(circle-large-filled)",
                "$(circle-large-outline)",
                "$(combine)",
                "$(gather)",
                "$(table)",
                "$(variable-group)",
                "$(type-hierarchy)",
                "$(type-hierarchy-sub)",
                "$(type-hierarchy-super)",
                "$(git-pull-request-create)",
                "$(run-above)",
                "$(run-below)",
                "$(notebook-template)",
                "$(debug-rerun)",
                "$(workspace-trusted)",
                "$(workspace-untrusted)",
                "$(workspace-unspecified)",
                "$(terminal-cmd)",
                "$(terminal-debian)",
                "$(terminal-linux)",
                "$(terminal-powershell)",
                "$(terminal-tmux)",
                "$(terminal-ubuntu)",
                "$(terminal-bash)",
                "$(arrow-swap)",
                "$(copy)",
                "$(person-add)",
                "$(filter-filled)",
                "$(wand)",
                "$(debug-line-by-line)",
                "$(inspect)",
                "$(layers)",
                "$(layers-dot)",
                "$(layers-active)",
                "$(compass)",
                "$(compass-dot)",
                "$(compass-active)",
                "$(azure)",
                "$(issue-draft)",
                "$(git-pull-request-closed)",
                "$(git-pull-request-draft)",
                "$(debug-all)",
                "$(debug-coverage)",
                "$(run-errors)",
                "$(folder-library)",
                "$(debug-continue-small)",
                "$(beaker-stop)",
                "$(graph-line)",
                "$(graph-scatter)",
                "$(pie-chart)",
                "$(bracket)",
                "$(bracket-dot)",
                "$(bracket-error)",
                "$(lock-small)",
                "$(azure-devops)",
                "$(verified-filled)",
                "$(newline)",
                "$(layout)",
                "$(layout-activitybar-left)",
                "$(layout-activitybar-right)",
                "$(layout-panel-left)",
                "$(layout-panel-center)",
                "$(layout-panel-justify)",
                "$(layout-panel-right)",
                "$(layout-panel)",
                "$(layout-sidebar-left)",
                "$(layout-sidebar-right)",
                "$(layout-statusbar)",
                "$(layout-menubar)",
                "$(layout-centered)",
                "$(target)",
                "$(indent)",
                "$(record-small)",
                "$(error-small)",
                "$(arrow-circle-down)",
                "$(arrow-circle-left)",
                "$(arrow-circle-right)",
                "$(arrow-circle-up)",
                "$(dialog-error)",
                "$(dialog-warning)",
                "$(dialog-info)",
                "$(dialog-close)",
                "$(tree-item-expanded)",
                "$(tree-filter-on-type-on)",
                "$(tree-filter-on-type-off)",
                "$(tree-filter-clear)",
                "$(tree-item-loading)",
                "$(menu-selection)",
                "$(menu-submenu)",
                "$(menubar-more)",
                "$(scrollbar-button-left)",
                "$(scrollbar-button-right)",
                "$(scrollbar-button-up)",
                "$(scrollbar-button-down)",
                "$(toolbar-more)",
                "$(quick-input-back)"
              ]
            },
            "color": {
              "description": "A theme color ID to associate with this terminal.",
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "terminal.ansiBlack",
                "terminal.ansiRed",
                "terminal.ansiGreen",
                "terminal.ansiYellow",
                "terminal.ansiBlue",
                "terminal.ansiMagenta",
                "terminal.ansiCyan",
                "terminal.ansiWhite"
              ],
              "default": null
            },
            "env": {
              "markdownDescription": "An object with environment variables that will be added to the terminal profile process. Set to `null` to delete environment variables from the base environment.",
              "type": "object",
              "additionalProperties": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "default": {}
            }
          }
        }
      ],
      "defaultSnippets": [
        {
          "body": {
            "path": "${1}",
            "icon": "${2}"
          }
        }
      ],
      "defaultDefaultValue": null,
      "scope": 3
    },
    "terminal.integrated.automationProfile.windows": {
      "restricted": true,
      "description": "The terminal profile to use for automation-related terminal usage like tasks and debug. This setting will currently be ignored if #terminal.integrated.automationShell.windows# is set.",
      "type": [
        "object",
        "null"
      ],
      "default": null,
      "anyOf": [
        {
          "type": "null"
        },
        {
          "type": "object",
          "required": [
            "path"
          ],
          "properties": {
            "path": {
              "description": "A single path to a shell executable.",
              "type": [
                "string"
              ],
              "items": {
                "type": "string"
              }
            },
            "args": {
              "description": "An optional set of arguments to run the shell executable with.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "overrideName": {
              "description": "Controls whether or not the profile name overrides the auto detected one.",
              "type": "boolean"
            },
            "icon": {
              "description": "A codicon ID to associate with this terminal.",
              "type": "string",
              "enum": [
                "add",
                "plus",
                "gist-new",
                "repo-create",
                "lightbulb",
                "light-bulb",
                "repo",
                "repo-delete",
                "gist-fork",
                "repo-forked",
                "git-pull-request",
                "git-pull-request-abandoned",
                "record-keys",
                "keyboard",
                "tag",
                "tag-add",
                "tag-remove",
                "person",
                "person-follow",
                "person-outline",
                "person-filled",
                "git-branch",
                "git-branch-create",
                "git-branch-delete",
                "source-control",
                "mirror",
                "mirror-public",
                "star",
                "star-add",
                "star-delete",
                "star-empty",
                "comment",
                "comment-add",
                "alert",
                "warning",
                "search",
                "search-save",
                "log-out",
                "sign-out",
                "log-in",
                "sign-in",
                "eye",
                "eye-unwatch",
                "eye-watch",
                "circle-filled",
                "primitive-dot",
                "close-dirty",
                "debug-breakpoint",
                "debug-breakpoint-disabled",
                "debug-hint",
                "primitive-square",
                "edit",
                "pencil",
                "info",
                "issue-opened",
                "gist-private",
                "git-fork-private",
                "lock",
                "mirror-private",
                "close",
                "remove-close",
                "x",
                "repo-sync",
                "sync",
                "clone",
                "desktop-download",
                "beaker",
                "microscope",
                "vm",
                "device-desktop",
                "file",
                "file-text",
                "more",
                "ellipsis",
                "kebab-horizontal",
                "mail-reply",
                "reply",
                "organization",
                "organization-filled",
                "organization-outline",
                "new-file",
                "file-add",
                "new-folder",
                "file-directory-create",
                "trash",
                "trashcan",
                "history",
                "clock",
                "folder",
                "file-directory",
                "symbol-folder",
                "logo-github",
                "mark-github",
                "github",
                "terminal",
                "console",
                "repl",
                "zap",
                "symbol-event",
                "error",
                "stop",
                "variable",
                "symbol-variable",
                "array",
                "symbol-array",
                "symbol-module",
                "symbol-package",
                "symbol-namespace",
                "symbol-object",
                "symbol-method",
                "symbol-function",
                "symbol-constructor",
                "symbol-boolean",
                "symbol-null",
                "symbol-numeric",
                "symbol-number",
                "symbol-structure",
                "symbol-struct",
                "symbol-parameter",
                "symbol-type-parameter",
                "symbol-key",
                "symbol-text",
                "symbol-reference",
                "go-to-file",
                "symbol-enum",
                "symbol-value",
                "symbol-ruler",
                "symbol-unit",
                "activate-breakpoints",
                "archive",
                "arrow-both",
                "arrow-down",
                "arrow-left",
                "arrow-right",
                "arrow-small-down",
                "arrow-small-left",
                "arrow-small-right",
                "arrow-small-up",
                "arrow-up",
                "bell",
                "bold",
                "book",
                "bookmark",
                "debug-breakpoint-conditional-unverified",
                "debug-breakpoint-conditional",
                "debug-breakpoint-conditional-disabled",
                "debug-breakpoint-data-unverified",
                "debug-breakpoint-data",
                "debug-breakpoint-data-disabled",
                "debug-breakpoint-log-unverified",
                "debug-breakpoint-log",
                "debug-breakpoint-log-disabled",
                "briefcase",
                "broadcast",
                "browser",
                "bug",
                "calendar",
                "case-sensitive",
                "check",
                "checklist",
                "chevron-down",
                "drop-down-button",
                "chevron-left",
                "chevron-right",
                "chevron-up",
                "chrome-close",
                "chrome-maximize",
                "chrome-minimize",
                "chrome-restore",
                "circle-outline",
                "debug-breakpoint-unverified",
                "circle-slash",
                "circuit-board",
                "clear-all",
                "clippy",
                "close-all",
                "cloud-download",
                "cloud-upload",
                "code",
                "collapse-all",
                "color-mode",
                "comment-discussion",
                "compare-changes",
                "credit-card",
                "dash",
                "dashboard",
                "database",
                "debug-continue",
                "debug-disconnect",
                "debug-pause",
                "debug-restart",
                "debug-start",
                "debug-step-into",
                "debug-step-out",
                "debug-step-over",
                "debug-stop",
                "debug",
                "device-camera-video",
                "device-camera",
                "device-mobile",
                "diff-added",
                "diff-ignored",
                "diff-modified",
                "diff-removed",
                "diff-renamed",
                "diff",
                "discard",
                "editor-layout",
                "empty-window",
                "exclude",
                "extensions",
                "eye-closed",
                "file-binary",
                "file-code",
                "file-media",
                "file-pdf",
                "file-submodule",
                "file-symlink-directory",
                "file-symlink-file",
                "file-zip",
                "files",
                "filter",
                "flame",
                "fold-down",
                "fold-up",
                "fold",
                "folder-active",
                "folder-opened",
                "gear",
                "gift",
                "gist-secret",
                "gist",
                "git-commit",
                "git-compare",
                "git-merge",
                "github-action",
                "github-alt",
                "globe",
                "grabber",
                "graph",
                "gripper",
                "heart",
                "home",
                "horizontal-rule",
                "hubot",
                "inbox",
                "issue-closed",
                "issue-reopened",
                "issues",
                "italic",
                "jersey",
                "json",
                "kebab-vertical",
                "key",
                "law",
                "lightbulb-autofix",
                "link-external",
                "link",
                "list-ordered",
                "list-unordered",
                "live-share",
                "loading",
                "location",
                "mail-read",
                "mail",
                "markdown",
                "megaphone",
                "mention",
                "milestone",
                "mortar-board",
                "move",
                "multiple-windows",
                "mute",
                "no-newline",
                "note",
                "octoface",
                "open-preview",
                "package",
                "paintcan",
                "pin",
                "play",
                "run",
                "plug",
                "preserve-case",
                "preview",
                "project",
                "pulse",
                "question",
                "quote",
                "radio-tower",
                "reactions",
                "references",
                "refresh",
                "regex",
                "remote-explorer",
                "remote",
                "remove",
                "replace-all",
                "replace",
                "repo-clone",
                "repo-force-push",
                "repo-pull",
                "repo-push",
                "report",
                "request-changes",
                "rocket",
                "root-folder-opened",
                "root-folder",
                "rss",
                "ruby",
                "save-all",
                "save-as",
                "save",
                "screen-full",
                "screen-normal",
                "search-stop",
                "server",
                "settings-gear",
                "settings",
                "shield",
                "smiley",
                "sort-precedence",
                "split-horizontal",
                "split-vertical",
                "squirrel",
                "star-full",
                "star-half",
                "symbol-class",
                "symbol-color",
                "symbol-customcolor",
                "symbol-constant",
                "symbol-enum-member",
                "symbol-field",
                "symbol-file",
                "symbol-interface",
                "symbol-keyword",
                "symbol-misc",
                "symbol-operator",
                "symbol-property",
                "wrench",
                "wrench-subaction",
                "symbol-snippet",
                "tasklist",
                "telescope",
                "text-size",
                "three-bars",
                "thumbsdown",
                "thumbsup",
                "tools",
                "triangle-down",
                "triangle-left",
                "triangle-right",
                "triangle-up",
                "twitter",
                "unfold",
                "unlock",
                "unmute",
                "unverified",
                "verified",
                "versions",
                "vm-active",
                "vm-outline",
                "vm-running",
                "watch",
                "whitespace",
                "whole-word",
                "window",
                "word-wrap",
                "zoom-in",
                "zoom-out",
                "list-filter",
                "list-flat",
                "list-selection",
                "selection",
                "list-tree",
                "debug-breakpoint-function-unverified",
                "debug-breakpoint-function",
                "debug-breakpoint-function-disabled",
                "debug-stackframe-active",
                "debug-stackframe-dot",
                "debug-stackframe",
                "debug-stackframe-focused",
                "debug-breakpoint-unsupported",
                "symbol-string",
                "debug-reverse-continue",
                "debug-step-back",
                "debug-restart-frame",
                "call-incoming",
                "call-outgoing",
                "menu",
                "expand-all",
                "feedback",
                "group-by-ref-type",
                "ungroup-by-ref-type",
                "account",
                "bell-dot",
                "debug-console",
                "library",
                "output",
                "run-all",
                "sync-ignored",
                "pinned",
                "github-inverted",
                "debug-alt",
                "server-process",
                "server-environment",
                "pass",
                "stop-circle",
                "play-circle",
                "record",
                "debug-alt-small",
                "vm-connect",
                "cloud",
                "merge",
                "export",
                "graph-left",
                "magnet",
                "notebook",
                "redo",
                "check-all",
                "pinned-dirty",
                "pass-filled",
                "circle-large-filled",
                "circle-large-outline",
                "combine",
                "gather",
                "table",
                "variable-group",
                "type-hierarchy",
                "type-hierarchy-sub",
                "type-hierarchy-super",
                "git-pull-request-create",
                "run-above",
                "run-below",
                "notebook-template",
                "debug-rerun",
                "workspace-trusted",
                "workspace-untrusted",
                "workspace-unspecified",
                "terminal-cmd",
                "terminal-debian",
                "terminal-linux",
                "terminal-powershell",
                "terminal-tmux",
                "terminal-ubuntu",
                "terminal-bash",
                "arrow-swap",
                "copy",
                "person-add",
                "filter-filled",
                "wand",
                "debug-line-by-line",
                "inspect",
                "layers",
                "layers-dot",
                "layers-active",
                "compass",
                "compass-dot",
                "compass-active",
                "azure",
                "issue-draft",
                "git-pull-request-closed",
                "git-pull-request-draft",
                "debug-all",
                "debug-coverage",
                "run-errors",
                "folder-library",
                "debug-continue-small",
                "beaker-stop",
                "graph-line",
                "graph-scatter",
                "pie-chart",
                "bracket",
                "bracket-dot",
                "bracket-error",
                "lock-small",
                "azure-devops",
                "verified-filled",
                "newline",
                "layout",
                "layout-activitybar-left",
                "layout-activitybar-right",
                "layout-panel-left",
                "layout-panel-center",
                "layout-panel-justify",
                "layout-panel-right",
                "layout-panel",
                "layout-sidebar-left",
                "layout-sidebar-right",
                "layout-statusbar",
                "layout-menubar",
                "layout-centered",
                "target",
                "indent",
                "record-small",
                "error-small",
                "arrow-circle-down",
                "arrow-circle-left",
                "arrow-circle-right",
                "arrow-circle-up",
                "dialog-error",
                "dialog-warning",
                "dialog-info",
                "dialog-close",
                "tree-item-expanded",
                "tree-filter-on-type-on",
                "tree-filter-on-type-off",
                "tree-filter-clear",
                "tree-item-loading",
                "menu-selection",
                "menu-submenu",
                "menubar-more",
                "scrollbar-button-left",
                "scrollbar-button-right",
                "scrollbar-button-up",
                "scrollbar-button-down",
                "toolbar-more",
                "quick-input-back"
              ],
              "markdownEnumDescriptions": [
                "$(add)",
                "$(plus)",
                "$(gist-new)",
                "$(repo-create)",
                "$(lightbulb)",
                "$(light-bulb)",
                "$(repo)",
                "$(repo-delete)",
                "$(gist-fork)",
                "$(repo-forked)",
                "$(git-pull-request)",
                "$(git-pull-request-abandoned)",
                "$(record-keys)",
                "$(keyboard)",
                "$(tag)",
                "$(tag-add)",
                "$(tag-remove)",
                "$(person)",
                "$(person-follow)",
                "$(person-outline)",
                "$(person-filled)",
                "$(git-branch)",
                "$(git-branch-create)",
                "$(git-branch-delete)",
                "$(source-control)",
                "$(mirror)",
                "$(mirror-public)",
                "$(star)",
                "$(star-add)",
                "$(star-delete)",
                "$(star-empty)",
                "$(comment)",
                "$(comment-add)",
                "$(alert)",
                "$(warning)",
                "$(search)",
                "$(search-save)",
                "$(log-out)",
                "$(sign-out)",
                "$(log-in)",
                "$(sign-in)",
                "$(eye)",
                "$(eye-unwatch)",
                "$(eye-watch)",
                "$(circle-filled)",
                "$(primitive-dot)",
                "$(close-dirty)",
                "$(debug-breakpoint)",
                "$(debug-breakpoint-disabled)",
                "$(debug-hint)",
                "$(primitive-square)",
                "$(edit)",
                "$(pencil)",
                "$(info)",
                "$(issue-opened)",
                "$(gist-private)",
                "$(git-fork-private)",
                "$(lock)",
                "$(mirror-private)",
                "$(close)",
                "$(remove-close)",
                "$(x)",
                "$(repo-sync)",
                "$(sync)",
                "$(clone)",
                "$(desktop-download)",
                "$(beaker)",
                "$(microscope)",
                "$(vm)",
                "$(device-desktop)",
                "$(file)",
                "$(file-text)",
                "$(more)",
                "$(ellipsis)",
                "$(kebab-horizontal)",
                "$(mail-reply)",
                "$(reply)",
                "$(organization)",
                "$(organization-filled)",
                "$(organization-outline)",
                "$(new-file)",
                "$(file-add)",
                "$(new-folder)",
                "$(file-directory-create)",
                "$(trash)",
                "$(trashcan)",
                "$(history)",
                "$(clock)",
                "$(folder)",
                "$(file-directory)",
                "$(symbol-folder)",
                "$(logo-github)",
                "$(mark-github)",
                "$(github)",
                "$(terminal)",
                "$(console)",
                "$(repl)",
                "$(zap)",
                "$(symbol-event)",
                "$(error)",
                "$(stop)",
                "$(variable)",
                "$(symbol-variable)",
                "$(array)",
                "$(symbol-array)",
                "$(symbol-module)",
                "$(symbol-package)",
                "$(symbol-namespace)",
                "$(symbol-object)",
                "$(symbol-method)",
                "$(symbol-function)",
                "$(symbol-constructor)",
                "$(symbol-boolean)",
                "$(symbol-null)",
                "$(symbol-numeric)",
                "$(symbol-number)",
                "$(symbol-structure)",
                "$(symbol-struct)",
                "$(symbol-parameter)",
                "$(symbol-type-parameter)",
                "$(symbol-key)",
                "$(symbol-text)",
                "$(symbol-reference)",
                "$(go-to-file)",
                "$(symbol-enum)",
                "$(symbol-value)",
                "$(symbol-ruler)",
                "$(symbol-unit)",
                "$(activate-breakpoints)",
                "$(archive)",
                "$(arrow-both)",
                "$(arrow-down)",
                "$(arrow-left)",
                "$(arrow-right)",
                "$(arrow-small-down)",
                "$(arrow-small-left)",
                "$(arrow-small-right)",
                "$(arrow-small-up)",
                "$(arrow-up)",
                "$(bell)",
                "$(bold)",
                "$(book)",
                "$(bookmark)",
                "$(debug-breakpoint-conditional-unverified)",
                "$(debug-breakpoint-conditional)",
                "$(debug-breakpoint-conditional-disabled)",
                "$(debug-breakpoint-data-unverified)",
                "$(debug-breakpoint-data)",
                "$(debug-breakpoint-data-disabled)",
                "$(debug-breakpoint-log-unverified)",
                "$(debug-breakpoint-log)",
                "$(debug-breakpoint-log-disabled)",
                "$(briefcase)",
                "$(broadcast)",
                "$(browser)",
                "$(bug)",
                "$(calendar)",
                "$(case-sensitive)",
                "$(check)",
                "$(checklist)",
                "$(chevron-down)",
                "$(drop-down-button)",
                "$(chevron-left)",
                "$(chevron-right)",
                "$(chevron-up)",
                "$(chrome-close)",
                "$(chrome-maximize)",
                "$(chrome-minimize)",
                "$(chrome-restore)",
                "$(circle-outline)",
                "$(debug-breakpoint-unverified)",
                "$(circle-slash)",
                "$(circuit-board)",
                "$(clear-all)",
                "$(clippy)",
                "$(close-all)",
                "$(cloud-download)",
                "$(cloud-upload)",
                "$(code)",
                "$(collapse-all)",
                "$(color-mode)",
                "$(comment-discussion)",
                "$(compare-changes)",
                "$(credit-card)",
                "$(dash)",
                "$(dashboard)",
                "$(database)",
                "$(debug-continue)",
                "$(debug-disconnect)",
                "$(debug-pause)",
                "$(debug-restart)",
                "$(debug-start)",
                "$(debug-step-into)",
                "$(debug-step-out)",
                "$(debug-step-over)",
                "$(debug-stop)",
                "$(debug)",
                "$(device-camera-video)",
                "$(device-camera)",
                "$(device-mobile)",
                "$(diff-added)",
                "$(diff-ignored)",
                "$(diff-modified)",
                "$(diff-removed)",
                "$(diff-renamed)",
                "$(diff)",
                "$(discard)",
                "$(editor-layout)",
                "$(empty-window)",
                "$(exclude)",
                "$(extensions)",
                "$(eye-closed)",
                "$(file-binary)",
                "$(file-code)",
                "$(file-media)",
                "$(file-pdf)",
                "$(file-submodule)",
                "$(file-symlink-directory)",
                "$(file-symlink-file)",
                "$(file-zip)",
                "$(files)",
                "$(filter)",
                "$(flame)",
                "$(fold-down)",
                "$(fold-up)",
                "$(fold)",
                "$(folder-active)",
                "$(folder-opened)",
                "$(gear)",
                "$(gift)",
                "$(gist-secret)",
                "$(gist)",
                "$(git-commit)",
                "$(git-compare)",
                "$(git-merge)",
                "$(github-action)",
                "$(github-alt)",
                "$(globe)",
                "$(grabber)",
                "$(graph)",
                "$(gripper)",
                "$(heart)",
                "$(home)",
                "$(horizontal-rule)",
                "$(hubot)",
                "$(inbox)",
                "$(issue-closed)",
                "$(issue-reopened)",
                "$(issues)",
                "$(italic)",
                "$(jersey)",
                "$(json)",
                "$(kebab-vertical)",
                "$(key)",
                "$(law)",
                "$(lightbulb-autofix)",
                "$(link-external)",
                "$(link)",
                "$(list-ordered)",
                "$(list-unordered)",
                "$(live-share)",
                "$(loading)",
                "$(location)",
                "$(mail-read)",
                "$(mail)",
                "$(markdown)",
                "$(megaphone)",
                "$(mention)",
                "$(milestone)",
                "$(mortar-board)",
                "$(move)",
                "$(multiple-windows)",
                "$(mute)",
                "$(no-newline)",
                "$(note)",
                "$(octoface)",
                "$(open-preview)",
                "$(package)",
                "$(paintcan)",
                "$(pin)",
                "$(play)",
                "$(run)",
                "$(plug)",
                "$(preserve-case)",
                "$(preview)",
                "$(project)",
                "$(pulse)",
                "$(question)",
                "$(quote)",
                "$(radio-tower)",
                "$(reactions)",
                "$(references)",
                "$(refresh)",
                "$(regex)",
                "$(remote-explorer)",
                "$(remote)",
                "$(remove)",
                "$(replace-all)",
                "$(replace)",
                "$(repo-clone)",
                "$(repo-force-push)",
                "$(repo-pull)",
                "$(repo-push)",
                "$(report)",
                "$(request-changes)",
                "$(rocket)",
                "$(root-folder-opened)",
                "$(root-folder)",
                "$(rss)",
                "$(ruby)",
                "$(save-all)",
                "$(save-as)",
                "$(save)",
                "$(screen-full)",
                "$(screen-normal)",
                "$(search-stop)",
                "$(server)",
                "$(settings-gear)",
                "$(settings)",
                "$(shield)",
                "$(smiley)",
                "$(sort-precedence)",
                "$(split-horizontal)",
                "$(split-vertical)",
                "$(squirrel)",
                "$(star-full)",
                "$(star-half)",
                "$(symbol-class)",
                "$(symbol-color)",
                "$(symbol-customcolor)",
                "$(symbol-constant)",
                "$(symbol-enum-member)",
                "$(symbol-field)",
                "$(symbol-file)",
                "$(symbol-interface)",
                "$(symbol-keyword)",
                "$(symbol-misc)",
                "$(symbol-operator)",
                "$(symbol-property)",
                "$(wrench)",
                "$(wrench-subaction)",
                "$(symbol-snippet)",
                "$(tasklist)",
                "$(telescope)",
                "$(text-size)",
                "$(three-bars)",
                "$(thumbsdown)",
                "$(thumbsup)",
                "$(tools)",
                "$(triangle-down)",
                "$(triangle-left)",
                "$(triangle-right)",
                "$(triangle-up)",
                "$(twitter)",
                "$(unfold)",
                "$(unlock)",
                "$(unmute)",
                "$(unverified)",
                "$(verified)",
                "$(versions)",
                "$(vm-active)",
                "$(vm-outline)",
                "$(vm-running)",
                "$(watch)",
                "$(whitespace)",
                "$(whole-word)",
                "$(window)",
                "$(word-wrap)",
                "$(zoom-in)",
                "$(zoom-out)",
                "$(list-filter)",
                "$(list-flat)",
                "$(list-selection)",
                "$(selection)",
                "$(list-tree)",
                "$(debug-breakpoint-function-unverified)",
                "$(debug-breakpoint-function)",
                "$(debug-breakpoint-function-disabled)",
                "$(debug-stackframe-active)",
                "$(debug-stackframe-dot)",
                "$(debug-stackframe)",
                "$(debug-stackframe-focused)",
                "$(debug-breakpoint-unsupported)",
                "$(symbol-string)",
                "$(debug-reverse-continue)",
                "$(debug-step-back)",
                "$(debug-restart-frame)",
                "$(call-incoming)",
                "$(call-outgoing)",
                "$(menu)",
                "$(expand-all)",
                "$(feedback)",
                "$(group-by-ref-type)",
                "$(ungroup-by-ref-type)",
                "$(account)",
                "$(bell-dot)",
                "$(debug-console)",
                "$(library)",
                "$(output)",
                "$(run-all)",
                "$(sync-ignored)",
                "$(pinned)",
                "$(github-inverted)",
                "$(debug-alt)",
                "$(server-process)",
                "$(server-environment)",
                "$(pass)",
                "$(stop-circle)",
                "$(play-circle)",
                "$(record)",
                "$(debug-alt-small)",
                "$(vm-connect)",
                "$(cloud)",
                "$(merge)",
                "$(export)",
                "$(graph-left)",
                "$(magnet)",
                "$(notebook)",
                "$(redo)",
                "$(check-all)",
                "$(pinned-dirty)",
                "$(pass-filled)",
                "$(circle-large-filled)",
                "$(circle-large-outline)",
                "$(combine)",
                "$(gather)",
                "$(table)",
                "$(variable-group)",
                "$(type-hierarchy)",
                "$(type-hierarchy-sub)",
                "$(type-hierarchy-super)",
                "$(git-pull-request-create)",
                "$(run-above)",
                "$(run-below)",
                "$(notebook-template)",
                "$(debug-rerun)",
                "$(workspace-trusted)",
                "$(workspace-untrusted)",
                "$(workspace-unspecified)",
                "$(terminal-cmd)",
                "$(terminal-debian)",
                "$(terminal-linux)",
                "$(terminal-powershell)",
                "$(terminal-tmux)",
                "$(terminal-ubuntu)",
                "$(terminal-bash)",
                "$(arrow-swap)",
                "$(copy)",
                "$(person-add)",
                "$(filter-filled)",
                "$(wand)",
                "$(debug-line-by-line)",
                "$(inspect)",
                "$(layers)",
                "$(layers-dot)",
                "$(layers-active)",
                "$(compass)",
                "$(compass-dot)",
                "$(compass-active)",
                "$(azure)",
                "$(issue-draft)",
                "$(git-pull-request-closed)",
                "$(git-pull-request-draft)",
                "$(debug-all)",
                "$(debug-coverage)",
                "$(run-errors)",
                "$(folder-library)",
                "$(debug-continue-small)",
                "$(beaker-stop)",
                "$(graph-line)",
                "$(graph-scatter)",
                "$(pie-chart)",
                "$(bracket)",
                "$(bracket-dot)",
                "$(bracket-error)",
                "$(lock-small)",
                "$(azure-devops)",
                "$(verified-filled)",
                "$(newline)",
                "$(layout)",
                "$(layout-activitybar-left)",
                "$(layout-activitybar-right)",
                "$(layout-panel-left)",
                "$(layout-panel-center)",
                "$(layout-panel-justify)",
                "$(layout-panel-right)",
                "$(layout-panel)",
                "$(layout-sidebar-left)",
                "$(layout-sidebar-right)",
                "$(layout-statusbar)",
                "$(layout-menubar)",
                "$(layout-centered)",
                "$(target)",
                "$(indent)",
                "$(record-small)",
                "$(error-small)",
                "$(arrow-circle-down)",
                "$(arrow-circle-left)",
                "$(arrow-circle-right)",
                "$(arrow-circle-up)",
                "$(dialog-error)",
                "$(dialog-warning)",
                "$(dialog-info)",
                "$(dialog-close)",
                "$(tree-item-expanded)",
                "$(tree-filter-on-type-on)",
                "$(tree-filter-on-type-off)",
                "$(tree-filter-clear)",
                "$(tree-item-loading)",
                "$(menu-selection)",
                "$(menu-submenu)",
                "$(menubar-more)",
                "$(scrollbar-button-left)",
                "$(scrollbar-button-right)",
                "$(scrollbar-button-up)",
                "$(scrollbar-button-down)",
                "$(toolbar-more)",
                "$(quick-input-back)"
              ]
            },
            "color": {
              "description": "A theme color ID to associate with this terminal.",
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "terminal.ansiBlack",
                "terminal.ansiRed",
                "terminal.ansiGreen",
                "terminal.ansiYellow",
                "terminal.ansiBlue",
                "terminal.ansiMagenta",
                "terminal.ansiCyan",
                "terminal.ansiWhite"
              ],
              "default": null
            },
            "env": {
              "markdownDescription": "An object with environment variables that will be added to the terminal profile process. Set to `null` to delete environment variables from the base environment.",
              "type": "object",
              "additionalProperties": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "default": {}
            }
          }
        }
      ],
      "defaultSnippets": [
        {
          "body": {
            "path": "${1}",
            "icon": "${2}"
          }
        }
      ],
      "defaultDefaultValue": null,
      "scope": 3
    },
    "terminal.integrated.shell.linux": {
      "restricted": true,
      "markdownDescription": "The path of the shell that the terminal uses on Linux. [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_terminal-profiles).",
      "type": [
        "string",
        "null"
      ],
      "default": null,
      "markdownDeprecationMessage": "This is deprecated, the new recommended way to configure your default shell is by creating a terminal profile in `#terminal.integrated.profiles.linux#` and setting its profile name as the default in `#terminal.integrated.defaultProfile.linux#`. This will currently take priority over the new profiles settings but that will change in the future.",
      "defaultDefaultValue": null,
      "scope": 3,
      "deprecationMessage": "This is deprecated, the new recommended way to configure your default shell is by creating a terminal profile in `#terminal.integrated.profiles.linux#` and setting its profile name as the default in `#terminal.integrated.defaultProfile.linux#`. This will currently take priority over the new profiles settings but that will change in the future."
    },
    "terminal.integrated.shell.osx": {
      "restricted": true,
      "markdownDescription": "The path of the shell that the terminal uses on macOS. [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_terminal-profiles).",
      "type": [
        "string",
        "null"
      ],
      "default": null,
      "markdownDeprecationMessage": "This is deprecated, the new recommended way to configure your default shell is by creating a terminal profile in `#terminal.integrated.profiles.osx#` and setting its profile name as the default in `#terminal.integrated.defaultProfile.osx#`. This will currently take priority over the new profiles settings but that will change in the future.",
      "defaultDefaultValue": null,
      "scope": 3,
      "deprecationMessage": "This is deprecated, the new recommended way to configure your default shell is by creating a terminal profile in `#terminal.integrated.profiles.osx#` and setting its profile name as the default in `#terminal.integrated.defaultProfile.osx#`. This will currently take priority over the new profiles settings but that will change in the future."
    },
    "terminal.integrated.shell.windows": {
      "restricted": true,
      "markdownDescription": "The path of the shell that the terminal uses on Windows. [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_terminal-profiles).",
      "type": [
        "string",
        "null"
      ],
      "default": null,
      "markdownDeprecationMessage": "This is deprecated, the new recommended way to configure your default shell is by creating a terminal profile in `#terminal.integrated.profiles.windows#` and setting its profile name as the default in `#terminal.integrated.defaultProfile.windows#`. This will currently take priority over the new profiles settings but that will change in the future.",
      "defaultDefaultValue": null,
      "scope": 3,
      "deprecationMessage": "This is deprecated, the new recommended way to configure your default shell is by creating a terminal profile in `#terminal.integrated.profiles.windows#` and setting its profile name as the default in `#terminal.integrated.defaultProfile.windows#`. This will currently take priority over the new profiles settings but that will change in the future."
    },
    "terminal.integrated.shellArgs.linux": {
      "restricted": true,
      "markdownDescription": "The command line arguments to use when on the Linux terminal. [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_terminal-profiles).",
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": [],
      "markdownDeprecationMessage": "This is deprecated, the new recommended way to configure your default shell is by creating a terminal profile in `#terminal.integrated.profiles.linux#` and setting its profile name as the default in `#terminal.integrated.defaultProfile.linux#`. This will currently take priority over the new profiles settings but that will change in the future.",
      "defaultDefaultValue": [],
      "scope": 3,
      "deprecationMessage": "This is deprecated, the new recommended way to configure your default shell is by creating a terminal profile in `#terminal.integrated.profiles.linux#` and setting its profile name as the default in `#terminal.integrated.defaultProfile.linux#`. This will currently take priority over the new profiles settings but that will change in the future."
    },
    "terminal.integrated.shellArgs.osx": {
      "restricted": true,
      "markdownDescription": "The command line arguments to use when on the macOS terminal. [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_terminal-profiles).",
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": [
        "-l"
      ],
      "markdownDeprecationMessage": "This is deprecated, the new recommended way to configure your default shell is by creating a terminal profile in `#terminal.integrated.profiles.osx#` and setting its profile name as the default in `#terminal.integrated.defaultProfile.osx#`. This will currently take priority over the new profiles settings but that will change in the future.",
      "defaultDefaultValue": [
        "-l"
      ],
      "scope": 3,
      "deprecationMessage": "This is deprecated, the new recommended way to configure your default shell is by creating a terminal profile in `#terminal.integrated.profiles.osx#` and setting its profile name as the default in `#terminal.integrated.defaultProfile.osx#`. This will currently take priority over the new profiles settings but that will change in the future."
    },
    "terminal.integrated.shellArgs.windows": {
      "restricted": true,
      "markdownDescription": "The command line arguments to use when on the Windows terminal. [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_terminal-profiles).",
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "string",
            "markdownDescription": "The command line arguments to use when on the Windows terminal. [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_terminal-profiles)."
          }
        },
        {
          "type": "string",
          "markdownDescription": "The command line arguments in [command-line format](https://msdn.microsoft.com/en-au/08dfcab2-eb6e-49a4-80eb-87d4076c98c6) to use when on the Windows terminal. [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_terminal-profiles)."
        }
      ],
      "default": [],
      "markdownDeprecationMessage": "This is deprecated, the new recommended way to configure your default shell is by creating a terminal profile in `#terminal.integrated.profiles.windows#` and setting its profile name as the default in `#terminal.integrated.defaultProfile.windows#`. This will currently take priority over the new profiles settings but that will change in the future.",
      "defaultDefaultValue": [],
      "scope": 3,
      "deprecationMessage": "This is deprecated, the new recommended way to configure your default shell is by creating a terminal profile in `#terminal.integrated.profiles.windows#` and setting its profile name as the default in `#terminal.integrated.defaultProfile.windows#`. This will currently take priority over the new profiles settings but that will change in the future."
    },
    "terminal.integrated.profiles.windows": {
      "restricted": true,
      "markdownDescription": "The Windows profiles to present when creating a new terminal via the terminal dropdown. Use the `source` property to automatically detect the shell's location. Or set the `path` property manually with an optional `args`.\n\nSet an existing profile to `null` to hide the profile from the list, for example: `\"Ubuntu-20.04 (WSL)\": null`.",
      "type": "object",
      "default": {
        "PowerShell": {
          "source": "PowerShell",
          "icon": "terminal-powershell"
        },
        "Command Prompt": {
          "path": [
            "${env:windir}\\Sysnative\\cmd.exe",
            "${env:windir}\\System32\\cmd.exe"
          ],
          "args": [],
          "icon": "terminal-cmd"
        },
        "Git Bash": {
          "source": "Git Bash"
        }
      },
      "additionalProperties": {
        "anyOf": [
          {
            "type": "object",
            "required": [
              "source"
            ],
            "properties": {
              "source": {
                "description": "A profile source that will auto detect the paths to the shell.",
                "enum": [
                  "PowerShell",
                  "Git Bash"
                ]
              },
              "args": {
                "description": "An optional set of arguments to run the shell executable with.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "overrideName": {
                "description": "Controls whether or not the profile name overrides the auto detected one.",
                "type": "boolean"
              },
              "icon": {
                "description": "A codicon ID to associate with this terminal.",
                "type": "string",
                "enum": [
                  "add",
                  "plus",
                  "gist-new",
                  "repo-create",
                  "lightbulb",
                  "light-bulb",
                  "repo",
                  "repo-delete",
                  "gist-fork",
                  "repo-forked",
                  "git-pull-request",
                  "git-pull-request-abandoned",
                  "record-keys",
                  "keyboard",
                  "tag",
                  "tag-add",
                  "tag-remove",
                  "person",
                  "person-follow",
                  "person-outline",
                  "person-filled",
                  "git-branch",
                  "git-branch-create",
                  "git-branch-delete",
                  "source-control",
                  "mirror",
                  "mirror-public",
                  "star",
                  "star-add",
                  "star-delete",
                  "star-empty",
                  "comment",
                  "comment-add",
                  "alert",
                  "warning",
                  "search",
                  "search-save",
                  "log-out",
                  "sign-out",
                  "log-in",
                  "sign-in",
                  "eye",
                  "eye-unwatch",
                  "eye-watch",
                  "circle-filled",
                  "primitive-dot",
                  "close-dirty",
                  "debug-breakpoint",
                  "debug-breakpoint-disabled",
                  "debug-hint",
                  "primitive-square",
                  "edit",
                  "pencil",
                  "info",
                  "issue-opened",
                  "gist-private",
                  "git-fork-private",
                  "lock",
                  "mirror-private",
                  "close",
                  "remove-close",
                  "x",
                  "repo-sync",
                  "sync",
                  "clone",
                  "desktop-download",
                  "beaker",
                  "microscope",
                  "vm",
                  "device-desktop",
                  "file",
                  "file-text",
                  "more",
                  "ellipsis",
                  "kebab-horizontal",
                  "mail-reply",
                  "reply",
                  "organization",
                  "organization-filled",
                  "organization-outline",
                  "new-file",
                  "file-add",
                  "new-folder",
                  "file-directory-create",
                  "trash",
                  "trashcan",
                  "history",
                  "clock",
                  "folder",
                  "file-directory",
                  "symbol-folder",
                  "logo-github",
                  "mark-github",
                  "github",
                  "terminal",
                  "console",
                  "repl",
                  "zap",
                  "symbol-event",
                  "error",
                  "stop",
                  "variable",
                  "symbol-variable",
                  "array",
                  "symbol-array",
                  "symbol-module",
                  "symbol-package",
                  "symbol-namespace",
                  "symbol-object",
                  "symbol-method",
                  "symbol-function",
                  "symbol-constructor",
                  "symbol-boolean",
                  "symbol-null",
                  "symbol-numeric",
                  "symbol-number",
                  "symbol-structure",
                  "symbol-struct",
                  "symbol-parameter",
                  "symbol-type-parameter",
                  "symbol-key",
                  "symbol-text",
                  "symbol-reference",
                  "go-to-file",
                  "symbol-enum",
                  "symbol-value",
                  "symbol-ruler",
                  "symbol-unit",
                  "activate-breakpoints",
                  "archive",
                  "arrow-both",
                  "arrow-down",
                  "arrow-left",
                  "arrow-right",
                  "arrow-small-down",
                  "arrow-small-left",
                  "arrow-small-right",
                  "arrow-small-up",
                  "arrow-up",
                  "bell",
                  "bold",
                  "book",
                  "bookmark",
                  "debug-breakpoint-conditional-unverified",
                  "debug-breakpoint-conditional",
                  "debug-breakpoint-conditional-disabled",
                  "debug-breakpoint-data-unverified",
                  "debug-breakpoint-data",
                  "debug-breakpoint-data-disabled",
                  "debug-breakpoint-log-unverified",
                  "debug-breakpoint-log",
                  "debug-breakpoint-log-disabled",
                  "briefcase",
                  "broadcast",
                  "browser",
                  "bug",
                  "calendar",
                  "case-sensitive",
                  "check",
                  "checklist",
                  "chevron-down",
                  "drop-down-button",
                  "chevron-left",
                  "chevron-right",
                  "chevron-up",
                  "chrome-close",
                  "chrome-maximize",
                  "chrome-minimize",
                  "chrome-restore",
                  "circle-outline",
                  "debug-breakpoint-unverified",
                  "circle-slash",
                  "circuit-board",
                  "clear-all",
                  "clippy",
                  "close-all",
                  "cloud-download",
                  "cloud-upload",
                  "code",
                  "collapse-all",
                  "color-mode",
                  "comment-discussion",
                  "compare-changes",
                  "credit-card",
                  "dash",
                  "dashboard",
                  "database",
                  "debug-continue",
                  "debug-disconnect",
                  "debug-pause",
                  "debug-restart",
                  "debug-start",
                  "debug-step-into",
                  "debug-step-out",
                  "debug-step-over",
                  "debug-stop",
                  "debug",
                  "device-camera-video",
                  "device-camera",
                  "device-mobile",
                  "diff-added",
                  "diff-ignored",
                  "diff-modified",
                  "diff-removed",
                  "diff-renamed",
                  "diff",
                  "discard",
                  "editor-layout",
                  "empty-window",
                  "exclude",
                  "extensions",
                  "eye-closed",
                  "file-binary",
                  "file-code",
                  "file-media",
                  "file-pdf",
                  "file-submodule",
                  "file-symlink-directory",
                  "file-symlink-file",
                  "file-zip",
                  "files",
                  "filter",
                  "flame",
                  "fold-down",
                  "fold-up",
                  "fold",
                  "folder-active",
                  "folder-opened",
                  "gear",
                  "gift",
                  "gist-secret",
                  "gist",
                  "git-commit",
                  "git-compare",
                  "git-merge",
                  "github-action",
                  "github-alt",
                  "globe",
                  "grabber",
                  "graph",
                  "gripper",
                  "heart",
                  "home",
                  "horizontal-rule",
                  "hubot",
                  "inbox",
                  "issue-closed",
                  "issue-reopened",
                  "issues",
                  "italic",
                  "jersey",
                  "json",
                  "kebab-vertical",
                  "key",
                  "law",
                  "lightbulb-autofix",
                  "link-external",
                  "link",
                  "list-ordered",
                  "list-unordered",
                  "live-share",
                  "loading",
                  "location",
                  "mail-read",
                  "mail",
                  "markdown",
                  "megaphone",
                  "mention",
                  "milestone",
                  "mortar-board",
                  "move",
                  "multiple-windows",
                  "mute",
                  "no-newline",
                  "note",
                  "octoface",
                  "open-preview",
                  "package",
                  "paintcan",
                  "pin",
                  "play",
                  "run",
                  "plug",
                  "preserve-case",
                  "preview",
                  "project",
                  "pulse",
                  "question",
                  "quote",
                  "radio-tower",
                  "reactions",
                  "references",
                  "refresh",
                  "regex",
                  "remote-explorer",
                  "remote",
                  "remove",
                  "replace-all",
                  "replace",
                  "repo-clone",
                  "repo-force-push",
                  "repo-pull",
                  "repo-push",
                  "report",
                  "request-changes",
                  "rocket",
                  "root-folder-opened",
                  "root-folder",
                  "rss",
                  "ruby",
                  "save-all",
                  "save-as",
                  "save",
                  "screen-full",
                  "screen-normal",
                  "search-stop",
                  "server",
                  "settings-gear",
                  "settings",
                  "shield",
                  "smiley",
                  "sort-precedence",
                  "split-horizontal",
                  "split-vertical",
                  "squirrel",
                  "star-full",
                  "star-half",
                  "symbol-class",
                  "symbol-color",
                  "symbol-customcolor",
                  "symbol-constant",
                  "symbol-enum-member",
                  "symbol-field",
                  "symbol-file",
                  "symbol-interface",
                  "symbol-keyword",
                  "symbol-misc",
                  "symbol-operator",
                  "symbol-property",
                  "wrench",
                  "wrench-subaction",
                  "symbol-snippet",
                  "tasklist",
                  "telescope",
                  "text-size",
                  "three-bars",
                  "thumbsdown",
                  "thumbsup",
                  "tools",
                  "triangle-down",
                  "triangle-left",
                  "triangle-right",
                  "triangle-up",
                  "twitter",
                  "unfold",
                  "unlock",
                  "unmute",
                  "unverified",
                  "verified",
                  "versions",
                  "vm-active",
                  "vm-outline",
                  "vm-running",
                  "watch",
                  "whitespace",
                  "whole-word",
                  "window",
                  "word-wrap",
                  "zoom-in",
                  "zoom-out",
                  "list-filter",
                  "list-flat",
                  "list-selection",
                  "selection",
                  "list-tree",
                  "debug-breakpoint-function-unverified",
                  "debug-breakpoint-function",
                  "debug-breakpoint-function-disabled",
                  "debug-stackframe-active",
                  "debug-stackframe-dot",
                  "debug-stackframe",
                  "debug-stackframe-focused",
                  "debug-breakpoint-unsupported",
                  "symbol-string",
                  "debug-reverse-continue",
                  "debug-step-back",
                  "debug-restart-frame",
                  "call-incoming",
                  "call-outgoing",
                  "menu",
                  "expand-all",
                  "feedback",
                  "group-by-ref-type",
                  "ungroup-by-ref-type",
                  "account",
                  "bell-dot",
                  "debug-console",
                  "library",
                  "output",
                  "run-all",
                  "sync-ignored",
                  "pinned",
                  "github-inverted",
                  "debug-alt",
                  "server-process",
                  "server-environment",
                  "pass",
                  "stop-circle",
                  "play-circle",
                  "record",
                  "debug-alt-small",
                  "vm-connect",
                  "cloud",
                  "merge",
                  "export",
                  "graph-left",
                  "magnet",
                  "notebook",
                  "redo",
                  "check-all",
                  "pinned-dirty",
                  "pass-filled",
                  "circle-large-filled",
                  "circle-large-outline",
                  "combine",
                  "gather",
                  "table",
                  "variable-group",
                  "type-hierarchy",
                  "type-hierarchy-sub",
                  "type-hierarchy-super",
                  "git-pull-request-create",
                  "run-above",
                  "run-below",
                  "notebook-template",
                  "debug-rerun",
                  "workspace-trusted",
                  "workspace-untrusted",
                  "workspace-unspecified",
                  "terminal-cmd",
                  "terminal-debian",
                  "terminal-linux",
                  "terminal-powershell",
                  "terminal-tmux",
                  "terminal-ubuntu",
                  "terminal-bash",
                  "arrow-swap",
                  "copy",
                  "person-add",
                  "filter-filled",
                  "wand",
                  "debug-line-by-line",
                  "inspect",
                  "layers",
                  "layers-dot",
                  "layers-active",
                  "compass",
                  "compass-dot",
                  "compass-active",
                  "azure",
                  "issue-draft",
                  "git-pull-request-closed",
                  "git-pull-request-draft",
                  "debug-all",
                  "debug-coverage",
                  "run-errors",
                  "folder-library",
                  "debug-continue-small",
                  "beaker-stop",
                  "graph-line",
                  "graph-scatter",
                  "pie-chart",
                  "bracket",
                  "bracket-dot",
                  "bracket-error",
                  "lock-small",
                  "azure-devops",
                  "verified-filled",
                  "newline",
                  "layout",
                  "layout-activitybar-left",
                  "layout-activitybar-right",
                  "layout-panel-left",
                  "layout-panel-center",
                  "layout-panel-justify",
                  "layout-panel-right",
                  "layout-panel",
                  "layout-sidebar-left",
                  "layout-sidebar-right",
                  "layout-statusbar",
                  "layout-menubar",
                  "layout-centered",
                  "target",
                  "indent",
                  "record-small",
                  "error-small",
                  "arrow-circle-down",
                  "arrow-circle-left",
                  "arrow-circle-right",
                  "arrow-circle-up",
                  "dialog-error",
                  "dialog-warning",
                  "dialog-info",
                  "dialog-close",
                  "tree-item-expanded",
                  "tree-filter-on-type-on",
                  "tree-filter-on-type-off",
                  "tree-filter-clear",
                  "tree-item-loading",
                  "menu-selection",
                  "menu-submenu",
                  "menubar-more",
                  "scrollbar-button-left",
                  "scrollbar-button-right",
                  "scrollbar-button-up",
                  "scrollbar-button-down",
                  "toolbar-more",
                  "quick-input-back"
                ],
                "markdownEnumDescriptions": [
                  "$(add)",
                  "$(plus)",
                  "$(gist-new)",
                  "$(repo-create)",
                  "$(lightbulb)",
                  "$(light-bulb)",
                  "$(repo)",
                  "$(repo-delete)",
                  "$(gist-fork)",
                  "$(repo-forked)",
                  "$(git-pull-request)",
                  "$(git-pull-request-abandoned)",
                  "$(record-keys)",
                  "$(keyboard)",
                  "$(tag)",
                  "$(tag-add)",
                  "$(tag-remove)",
                  "$(person)",
                  "$(person-follow)",
                  "$(person-outline)",
                  "$(person-filled)",
                  "$(git-branch)",
                  "$(git-branch-create)",
                  "$(git-branch-delete)",
                  "$(source-control)",
                  "$(mirror)",
                  "$(mirror-public)",
                  "$(star)",
                  "$(star-add)",
                  "$(star-delete)",
                  "$(star-empty)",
                  "$(comment)",
                  "$(comment-add)",
                  "$(alert)",
                  "$(warning)",
                  "$(search)",
                  "$(search-save)",
                  "$(log-out)",
                  "$(sign-out)",
                  "$(log-in)",
                  "$(sign-in)",
                  "$(eye)",
                  "$(eye-unwatch)",
                  "$(eye-watch)",
                  "$(circle-filled)",
                  "$(primitive-dot)",
                  "$(close-dirty)",
                  "$(debug-breakpoint)",
                  "$(debug-breakpoint-disabled)",
                  "$(debug-hint)",
                  "$(primitive-square)",
                  "$(edit)",
                  "$(pencil)",
                  "$(info)",
                  "$(issue-opened)",
                  "$(gist-private)",
                  "$(git-fork-private)",
                  "$(lock)",
                  "$(mirror-private)",
                  "$(close)",
                  "$(remove-close)",
                  "$(x)",
                  "$(repo-sync)",
                  "$(sync)",
                  "$(clone)",
                  "$(desktop-download)",
                  "$(beaker)",
                  "$(microscope)",
                  "$(vm)",
                  "$(device-desktop)",
                  "$(file)",
                  "$(file-text)",
                  "$(more)",
                  "$(ellipsis)",
                  "$(kebab-horizontal)",
                  "$(mail-reply)",
                  "$(reply)",
                  "$(organization)",
                  "$(organization-filled)",
                  "$(organization-outline)",
                  "$(new-file)",
                  "$(file-add)",
                  "$(new-folder)",
                  "$(file-directory-create)",
                  "$(trash)",
                  "$(trashcan)",
                  "$(history)",
                  "$(clock)",
                  "$(folder)",
                  "$(file-directory)",
                  "$(symbol-folder)",
                  "$(logo-github)",
                  "$(mark-github)",
                  "$(github)",
                  "$(terminal)",
                  "$(console)",
                  "$(repl)",
                  "$(zap)",
                  "$(symbol-event)",
                  "$(error)",
                  "$(stop)",
                  "$(variable)",
                  "$(symbol-variable)",
                  "$(array)",
                  "$(symbol-array)",
                  "$(symbol-module)",
                  "$(symbol-package)",
                  "$(symbol-namespace)",
                  "$(symbol-object)",
                  "$(symbol-method)",
                  "$(symbol-function)",
                  "$(symbol-constructor)",
                  "$(symbol-boolean)",
                  "$(symbol-null)",
                  "$(symbol-numeric)",
                  "$(symbol-number)",
                  "$(symbol-structure)",
                  "$(symbol-struct)",
                  "$(symbol-parameter)",
                  "$(symbol-type-parameter)",
                  "$(symbol-key)",
                  "$(symbol-text)",
                  "$(symbol-reference)",
                  "$(go-to-file)",
                  "$(symbol-enum)",
                  "$(symbol-value)",
                  "$(symbol-ruler)",
                  "$(symbol-unit)",
                  "$(activate-breakpoints)",
                  "$(archive)",
                  "$(arrow-both)",
                  "$(arrow-down)",
                  "$(arrow-left)",
                  "$(arrow-right)",
                  "$(arrow-small-down)",
                  "$(arrow-small-left)",
                  "$(arrow-small-right)",
                  "$(arrow-small-up)",
                  "$(arrow-up)",
                  "$(bell)",
                  "$(bold)",
                  "$(book)",
                  "$(bookmark)",
                  "$(debug-breakpoint-conditional-unverified)",
                  "$(debug-breakpoint-conditional)",
                  "$(debug-breakpoint-conditional-disabled)",
                  "$(debug-breakpoint-data-unverified)",
                  "$(debug-breakpoint-data)",
                  "$(debug-breakpoint-data-disabled)",
                  "$(debug-breakpoint-log-unverified)",
                  "$(debug-breakpoint-log)",
                  "$(debug-breakpoint-log-disabled)",
                  "$(briefcase)",
                  "$(broadcast)",
                  "$(browser)",
                  "$(bug)",
                  "$(calendar)",
                  "$(case-sensitive)",
                  "$(check)",
                  "$(checklist)",
                  "$(chevron-down)",
                  "$(drop-down-button)",
                  "$(chevron-left)",
                  "$(chevron-right)",
                  "$(chevron-up)",
                  "$(chrome-close)",
                  "$(chrome-maximize)",
                  "$(chrome-minimize)",
                  "$(chrome-restore)",
                  "$(circle-outline)",
                  "$(debug-breakpoint-unverified)",
                  "$(circle-slash)",
                  "$(circuit-board)",
                  "$(clear-all)",
                  "$(clippy)",
                  "$(close-all)",
                  "$(cloud-download)",
                  "$(cloud-upload)",
                  "$(code)",
                  "$(collapse-all)",
                  "$(color-mode)",
                  "$(comment-discussion)",
                  "$(compare-changes)",
                  "$(credit-card)",
                  "$(dash)",
                  "$(dashboard)",
                  "$(database)",
                  "$(debug-continue)",
                  "$(debug-disconnect)",
                  "$(debug-pause)",
                  "$(debug-restart)",
                  "$(debug-start)",
                  "$(debug-step-into)",
                  "$(debug-step-out)",
                  "$(debug-step-over)",
                  "$(debug-stop)",
                  "$(debug)",
                  "$(device-camera-video)",
                  "$(device-camera)",
                  "$(device-mobile)",
                  "$(diff-added)",
                  "$(diff-ignored)",
                  "$(diff-modified)",
                  "$(diff-removed)",
                  "$(diff-renamed)",
                  "$(diff)",
                  "$(discard)",
                  "$(editor-layout)",
                  "$(empty-window)",
                  "$(exclude)",
                  "$(extensions)",
                  "$(eye-closed)",
                  "$(file-binary)",
                  "$(file-code)",
                  "$(file-media)",
                  "$(file-pdf)",
                  "$(file-submodule)",
                  "$(file-symlink-directory)",
                  "$(file-symlink-file)",
                  "$(file-zip)",
                  "$(files)",
                  "$(filter)",
                  "$(flame)",
                  "$(fold-down)",
                  "$(fold-up)",
                  "$(fold)",
                  "$(folder-active)",
                  "$(folder-opened)",
                  "$(gear)",
                  "$(gift)",
                  "$(gist-secret)",
                  "$(gist)",
                  "$(git-commit)",
                  "$(git-compare)",
                  "$(git-merge)",
                  "$(github-action)",
                  "$(github-alt)",
                  "$(globe)",
                  "$(grabber)",
                  "$(graph)",
                  "$(gripper)",
                  "$(heart)",
                  "$(home)",
                  "$(horizontal-rule)",
                  "$(hubot)",
                  "$(inbox)",
                  "$(issue-closed)",
                  "$(issue-reopened)",
                  "$(issues)",
                  "$(italic)",
                  "$(jersey)",
                  "$(json)",
                  "$(kebab-vertical)",
                  "$(key)",
                  "$(law)",
                  "$(lightbulb-autofix)",
                  "$(link-external)",
                  "$(link)",
                  "$(list-ordered)",
                  "$(list-unordered)",
                  "$(live-share)",
                  "$(loading)",
                  "$(location)",
                  "$(mail-read)",
                  "$(mail)",
                  "$(markdown)",
                  "$(megaphone)",
                  "$(mention)",
                  "$(milestone)",
                  "$(mortar-board)",
                  "$(move)",
                  "$(multiple-windows)",
                  "$(mute)",
                  "$(no-newline)",
                  "$(note)",
                  "$(octoface)",
                  "$(open-preview)",
                  "$(package)",
                  "$(paintcan)",
                  "$(pin)",
                  "$(play)",
                  "$(run)",
                  "$(plug)",
                  "$(preserve-case)",
                  "$(preview)",
                  "$(project)",
                  "$(pulse)",
                  "$(question)",
                  "$(quote)",
                  "$(radio-tower)",
                  "$(reactions)",
                  "$(references)",
                  "$(refresh)",
                  "$(regex)",
                  "$(remote-explorer)",
                  "$(remote)",
                  "$(remove)",
                  "$(replace-all)",
                  "$(replace)",
                  "$(repo-clone)",
                  "$(repo-force-push)",
                  "$(repo-pull)",
                  "$(repo-push)",
                  "$(report)",
                  "$(request-changes)",
                  "$(rocket)",
                  "$(root-folder-opened)",
                  "$(root-folder)",
                  "$(rss)",
                  "$(ruby)",
                  "$(save-all)",
                  "$(save-as)",
                  "$(save)",
                  "$(screen-full)",
                  "$(screen-normal)",
                  "$(search-stop)",
                  "$(server)",
                  "$(settings-gear)",
                  "$(settings)",
                  "$(shield)",
                  "$(smiley)",
                  "$(sort-precedence)",
                  "$(split-horizontal)",
                  "$(split-vertical)",
                  "$(squirrel)",
                  "$(star-full)",
                  "$(star-half)",
                  "$(symbol-class)",
                  "$(symbol-color)",
                  "$(symbol-customcolor)",
                  "$(symbol-constant)",
                  "$(symbol-enum-member)",
                  "$(symbol-field)",
                  "$(symbol-file)",
                  "$(symbol-interface)",
                  "$(symbol-keyword)",
                  "$(symbol-misc)",
                  "$(symbol-operator)",
                  "$(symbol-property)",
                  "$(wrench)",
                  "$(wrench-subaction)",
                  "$(symbol-snippet)",
                  "$(tasklist)",
                  "$(telescope)",
                  "$(text-size)",
                  "$(three-bars)",
                  "$(thumbsdown)",
                  "$(thumbsup)",
                  "$(tools)",
                  "$(triangle-down)",
                  "$(triangle-left)",
                  "$(triangle-right)",
                  "$(triangle-up)",
                  "$(twitter)",
                  "$(unfold)",
                  "$(unlock)",
                  "$(unmute)",
                  "$(unverified)",
                  "$(verified)",
                  "$(versions)",
                  "$(vm-active)",
                  "$(vm-outline)",
                  "$(vm-running)",
                  "$(watch)",
                  "$(whitespace)",
                  "$(whole-word)",
                  "$(window)",
                  "$(word-wrap)",
                  "$(zoom-in)",
                  "$(zoom-out)",
                  "$(list-filter)",
                  "$(list-flat)",
                  "$(list-selection)",
                  "$(selection)",
                  "$(list-tree)",
                  "$(debug-breakpoint-function-unverified)",
                  "$(debug-breakpoint-function)",
                  "$(debug-breakpoint-function-disabled)",
                  "$(debug-stackframe-active)",
                  "$(debug-stackframe-dot)",
                  "$(debug-stackframe)",
                  "$(debug-stackframe-focused)",
                  "$(debug-breakpoint-unsupported)",
                  "$(symbol-string)",
                  "$(debug-reverse-continue)",
                  "$(debug-step-back)",
                  "$(debug-restart-frame)",
                  "$(call-incoming)",
                  "$(call-outgoing)",
                  "$(menu)",
                  "$(expand-all)",
                  "$(feedback)",
                  "$(group-by-ref-type)",
                  "$(ungroup-by-ref-type)",
                  "$(account)",
                  "$(bell-dot)",
                  "$(debug-console)",
                  "$(library)",
                  "$(output)",
                  "$(run-all)",
                  "$(sync-ignored)",
                  "$(pinned)",
                  "$(github-inverted)",
                  "$(debug-alt)",
                  "$(server-process)",
                  "$(server-environment)",
                  "$(pass)",
                  "$(stop-circle)",
                  "$(play-circle)",
                  "$(record)",
                  "$(debug-alt-small)",
                  "$(vm-connect)",
                  "$(cloud)",
                  "$(merge)",
                  "$(export)",
                  "$(graph-left)",
                  "$(magnet)",
                  "$(notebook)",
                  "$(redo)",
                  "$(check-all)",
                  "$(pinned-dirty)",
                  "$(pass-filled)",
                  "$(circle-large-filled)",
                  "$(circle-large-outline)",
                  "$(combine)",
                  "$(gather)",
                  "$(table)",
                  "$(variable-group)",
                  "$(type-hierarchy)",
                  "$(type-hierarchy-sub)",
                  "$(type-hierarchy-super)",
                  "$(git-pull-request-create)",
                  "$(run-above)",
                  "$(run-below)",
                  "$(notebook-template)",
                  "$(debug-rerun)",
                  "$(workspace-trusted)",
                  "$(workspace-untrusted)",
                  "$(workspace-unspecified)",
                  "$(terminal-cmd)",
                  "$(terminal-debian)",
                  "$(terminal-linux)",
                  "$(terminal-powershell)",
                  "$(terminal-tmux)",
                  "$(terminal-ubuntu)",
                  "$(terminal-bash)",
                  "$(arrow-swap)",
                  "$(copy)",
                  "$(person-add)",
                  "$(filter-filled)",
                  "$(wand)",
                  "$(debug-line-by-line)",
                  "$(inspect)",
                  "$(layers)",
                  "$(layers-dot)",
                  "$(layers-active)",
                  "$(compass)",
                  "$(compass-dot)",
                  "$(compass-active)",
                  "$(azure)",
                  "$(issue-draft)",
                  "$(git-pull-request-closed)",
                  "$(git-pull-request-draft)",
                  "$(debug-all)",
                  "$(debug-coverage)",
                  "$(run-errors)",
                  "$(folder-library)",
                  "$(debug-continue-small)",
                  "$(beaker-stop)",
                  "$(graph-line)",
                  "$(graph-scatter)",
                  "$(pie-chart)",
                  "$(bracket)",
                  "$(bracket-dot)",
                  "$(bracket-error)",
                  "$(lock-small)",
                  "$(azure-devops)",
                  "$(verified-filled)",
                  "$(newline)",
                  "$(layout)",
                  "$(layout-activitybar-left)",
                  "$(layout-activitybar-right)",
                  "$(layout-panel-left)",
                  "$(layout-panel-center)",
                  "$(layout-panel-justify)",
                  "$(layout-panel-right)",
                  "$(layout-panel)",
                  "$(layout-sidebar-left)",
                  "$(layout-sidebar-right)",
                  "$(layout-statusbar)",
                  "$(layout-menubar)",
                  "$(layout-centered)",
                  "$(target)",
                  "$(indent)",
                  "$(record-small)",
                  "$(error-small)",
                  "$(arrow-circle-down)",
                  "$(arrow-circle-left)",
                  "$(arrow-circle-right)",
                  "$(arrow-circle-up)",
                  "$(dialog-error)",
                  "$(dialog-warning)",
                  "$(dialog-info)",
                  "$(dialog-close)",
                  "$(tree-item-expanded)",
                  "$(tree-filter-on-type-on)",
                  "$(tree-filter-on-type-off)",
                  "$(tree-filter-clear)",
                  "$(tree-item-loading)",
                  "$(menu-selection)",
                  "$(menu-submenu)",
                  "$(menubar-more)",
                  "$(scrollbar-button-left)",
                  "$(scrollbar-button-right)",
                  "$(scrollbar-button-up)",
                  "$(scrollbar-button-down)",
                  "$(toolbar-more)",
                  "$(quick-input-back)"
                ]
              },
              "color": {
                "description": "A theme color ID to associate with this terminal.",
                "type": [
                  "string",
                  "null"
                ],
                "enum": [
                  "terminal.ansiBlack",
                  "terminal.ansiRed",
                  "terminal.ansiGreen",
                  "terminal.ansiYellow",
                  "terminal.ansiBlue",
                  "terminal.ansiMagenta",
                  "terminal.ansiCyan",
                  "terminal.ansiWhite"
                ],
                "default": null
              },
              "env": {
                "markdownDescription": "An object with environment variables that will be added to the terminal profile process. Set to `null` to delete environment variables from the base environment.",
                "type": "object",
                "additionalProperties": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "default": {}
              }
            }
          },
          {
            "type": "object",
            "required": [
              "extensionIdentifier",
              "id",
              "title"
            ],
            "properties": {
              "extensionIdentifier": {
                "description": "The extension that contributed this profile.",
                "type": "string"
              },
              "id": {
                "description": "The id of the extension terminal",
                "type": "string"
              },
              "title": {
                "description": "The name of the extension terminal",
                "type": "string"
              },
              "args": {
                "description": "An optional set of arguments to run the shell executable with.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "overrideName": {
                "description": "Controls whether or not the profile name overrides the auto detected one.",
                "type": "boolean"
              },
              "icon": {
                "description": "A codicon ID to associate with this terminal.",
                "type": "string",
                "enum": [
                  "add",
                  "plus",
                  "gist-new",
                  "repo-create",
                  "lightbulb",
                  "light-bulb",
                  "repo",
                  "repo-delete",
                  "gist-fork",
                  "repo-forked",
                  "git-pull-request",
                  "git-pull-request-abandoned",
                  "record-keys",
                  "keyboard",
                  "tag",
                  "tag-add",
                  "tag-remove",
                  "person",
                  "person-follow",
                  "person-outline",
                  "person-filled",
                  "git-branch",
                  "git-branch-create",
                  "git-branch-delete",
                  "source-control",
                  "mirror",
                  "mirror-public",
                  "star",
                  "star-add",
                  "star-delete",
                  "star-empty",
                  "comment",
                  "comment-add",
                  "alert",
                  "warning",
                  "search",
                  "search-save",
                  "log-out",
                  "sign-out",
                  "log-in",
                  "sign-in",
                  "eye",
                  "eye-unwatch",
                  "eye-watch",
                  "circle-filled",
                  "primitive-dot",
                  "close-dirty",
                  "debug-breakpoint",
                  "debug-breakpoint-disabled",
                  "debug-hint",
                  "primitive-square",
                  "edit",
                  "pencil",
                  "info",
                  "issue-opened",
                  "gist-private",
                  "git-fork-private",
                  "lock",
                  "mirror-private",
                  "close",
                  "remove-close",
                  "x",
                  "repo-sync",
                  "sync",
                  "clone",
                  "desktop-download",
                  "beaker",
                  "microscope",
                  "vm",
                  "device-desktop",
                  "file",
                  "file-text",
                  "more",
                  "ellipsis",
                  "kebab-horizontal",
                  "mail-reply",
                  "reply",
                  "organization",
                  "organization-filled",
                  "organization-outline",
                  "new-file",
                  "file-add",
                  "new-folder",
                  "file-directory-create",
                  "trash",
                  "trashcan",
                  "history",
                  "clock",
                  "folder",
                  "file-directory",
                  "symbol-folder",
                  "logo-github",
                  "mark-github",
                  "github",
                  "terminal",
                  "console",
                  "repl",
                  "zap",
                  "symbol-event",
                  "error",
                  "stop",
                  "variable",
                  "symbol-variable",
                  "array",
                  "symbol-array",
                  "symbol-module",
                  "symbol-package",
                  "symbol-namespace",
                  "symbol-object",
                  "symbol-method",
                  "symbol-function",
                  "symbol-constructor",
                  "symbol-boolean",
                  "symbol-null",
                  "symbol-numeric",
                  "symbol-number",
                  "symbol-structure",
                  "symbol-struct",
                  "symbol-parameter",
                  "symbol-type-parameter",
                  "symbol-key",
                  "symbol-text",
                  "symbol-reference",
                  "go-to-file",
                  "symbol-enum",
                  "symbol-value",
                  "symbol-ruler",
                  "symbol-unit",
                  "activate-breakpoints",
                  "archive",
                  "arrow-both",
                  "arrow-down",
                  "arrow-left",
                  "arrow-right",
                  "arrow-small-down",
                  "arrow-small-left",
                  "arrow-small-right",
                  "arrow-small-up",
                  "arrow-up",
                  "bell",
                  "bold",
                  "book",
                  "bookmark",
                  "debug-breakpoint-conditional-unverified",
                  "debug-breakpoint-conditional",
                  "debug-breakpoint-conditional-disabled",
                  "debug-breakpoint-data-unverified",
                  "debug-breakpoint-data",
                  "debug-breakpoint-data-disabled",
                  "debug-breakpoint-log-unverified",
                  "debug-breakpoint-log",
                  "debug-breakpoint-log-disabled",
                  "briefcase",
                  "broadcast",
                  "browser",
                  "bug",
                  "calendar",
                  "case-sensitive",
                  "check",
                  "checklist",
                  "chevron-down",
                  "drop-down-button",
                  "chevron-left",
                  "chevron-right",
                  "chevron-up",
                  "chrome-close",
                  "chrome-maximize",
                  "chrome-minimize",
                  "chrome-restore",
                  "circle-outline",
                  "debug-breakpoint-unverified",
                  "circle-slash",
                  "circuit-board",
                  "clear-all",
                  "clippy",
                  "close-all",
                  "cloud-download",
                  "cloud-upload",
                  "code",
                  "collapse-all",
                  "color-mode",
                  "comment-discussion",
                  "compare-changes",
                  "credit-card",
                  "dash",
                  "dashboard",
                  "database",
                  "debug-continue",
                  "debug-disconnect",
                  "debug-pause",
                  "debug-restart",
                  "debug-start",
                  "debug-step-into",
                  "debug-step-out",
                  "debug-step-over",
                  "debug-stop",
                  "debug",
                  "device-camera-video",
                  "device-camera",
                  "device-mobile",
                  "diff-added",
                  "diff-ignored",
                  "diff-modified",
                  "diff-removed",
                  "diff-renamed",
                  "diff",
                  "discard",
                  "editor-layout",
                  "empty-window",
                  "exclude",
                  "extensions",
                  "eye-closed",
                  "file-binary",
                  "file-code",
                  "file-media",
                  "file-pdf",
                  "file-submodule",
                  "file-symlink-directory",
                  "file-symlink-file",
                  "file-zip",
                  "files",
                  "filter",
                  "flame",
                  "fold-down",
                  "fold-up",
                  "fold",
                  "folder-active",
                  "folder-opened",
                  "gear",
                  "gift",
                  "gist-secret",
                  "gist",
                  "git-commit",
                  "git-compare",
                  "git-merge",
                  "github-action",
                  "github-alt",
                  "globe",
                  "grabber",
                  "graph",
                  "gripper",
                  "heart",
                  "home",
                  "horizontal-rule",
                  "hubot",
                  "inbox",
                  "issue-closed",
                  "issue-reopened",
                  "issues",
                  "italic",
                  "jersey",
                  "json",
                  "kebab-vertical",
                  "key",
                  "law",
                  "lightbulb-autofix",
                  "link-external",
                  "link",
                  "list-ordered",
                  "list-unordered",
                  "live-share",
                  "loading",
                  "location",
                  "mail-read",
                  "mail",
                  "markdown",
                  "megaphone",
                  "mention",
                  "milestone",
                  "mortar-board",
                  "move",
                  "multiple-windows",
                  "mute",
                  "no-newline",
                  "note",
                  "octoface",
                  "open-preview",
                  "package",
                  "paintcan",
                  "pin",
                  "play",
                  "run",
                  "plug",
                  "preserve-case",
                  "preview",
                  "project",
                  "pulse",
                  "question",
                  "quote",
                  "radio-tower",
                  "reactions",
                  "references",
                  "refresh",
                  "regex",
                  "remote-explorer",
                  "remote",
                  "remove",
                  "replace-all",
                  "replace",
                  "repo-clone",
                  "repo-force-push",
                  "repo-pull",
                  "repo-push",
                  "report",
                  "request-changes",
                  "rocket",
                  "root-folder-opened",
                  "root-folder",
                  "rss",
                  "ruby",
                  "save-all",
                  "save-as",
                  "save",
                  "screen-full",
                  "screen-normal",
                  "search-stop",
                  "server",
                  "settings-gear",
                  "settings",
                  "shield",
                  "smiley",
                  "sort-precedence",
                  "split-horizontal",
                  "split-vertical",
                  "squirrel",
                  "star-full",
                  "star-half",
                  "symbol-class",
                  "symbol-color",
                  "symbol-customcolor",
                  "symbol-constant",
                  "symbol-enum-member",
                  "symbol-field",
                  "symbol-file",
                  "symbol-interface",
                  "symbol-keyword",
                  "symbol-misc",
                  "symbol-operator",
                  "symbol-property",
                  "wrench",
                  "wrench-subaction",
                  "symbol-snippet",
                  "tasklist",
                  "telescope",
                  "text-size",
                  "three-bars",
                  "thumbsdown",
                  "thumbsup",
                  "tools",
                  "triangle-down",
                  "triangle-left",
                  "triangle-right",
                  "triangle-up",
                  "twitter",
                  "unfold",
                  "unlock",
                  "unmute",
                  "unverified",
                  "verified",
                  "versions",
                  "vm-active",
                  "vm-outline",
                  "vm-running",
                  "watch",
                  "whitespace",
                  "whole-word",
                  "window",
                  "word-wrap",
                  "zoom-in",
                  "zoom-out",
                  "list-filter",
                  "list-flat",
                  "list-selection",
                  "selection",
                  "list-tree",
                  "debug-breakpoint-function-unverified",
                  "debug-breakpoint-function",
                  "debug-breakpoint-function-disabled",
                  "debug-stackframe-active",
                  "debug-stackframe-dot",
                  "debug-stackframe",
                  "debug-stackframe-focused",
                  "debug-breakpoint-unsupported",
                  "symbol-string",
                  "debug-reverse-continue",
                  "debug-step-back",
                  "debug-restart-frame",
                  "call-incoming",
                  "call-outgoing",
                  "menu",
                  "expand-all",
                  "feedback",
                  "group-by-ref-type",
                  "ungroup-by-ref-type",
                  "account",
                  "bell-dot",
                  "debug-console",
                  "library",
                  "output",
                  "run-all",
                  "sync-ignored",
                  "pinned",
                  "github-inverted",
                  "debug-alt",
                  "server-process",
                  "server-environment",
                  "pass",
                  "stop-circle",
                  "play-circle",
                  "record",
                  "debug-alt-small",
                  "vm-connect",
                  "cloud",
                  "merge",
                  "export",
                  "graph-left",
                  "magnet",
                  "notebook",
                  "redo",
                  "check-all",
                  "pinned-dirty",
                  "pass-filled",
                  "circle-large-filled",
                  "circle-large-outline",
                  "combine",
                  "gather",
                  "table",
                  "variable-group",
                  "type-hierarchy",
                  "type-hierarchy-sub",
                  "type-hierarchy-super",
                  "git-pull-request-create",
                  "run-above",
                  "run-below",
                  "notebook-template",
                  "debug-rerun",
                  "workspace-trusted",
                  "workspace-untrusted",
                  "workspace-unspecified",
                  "terminal-cmd",
                  "terminal-debian",
                  "terminal-linux",
                  "terminal-powershell",
                  "terminal-tmux",
                  "terminal-ubuntu",
                  "terminal-bash",
                  "arrow-swap",
                  "copy",
                  "person-add",
                  "filter-filled",
                  "wand",
                  "debug-line-by-line",
                  "inspect",
                  "layers",
                  "layers-dot",
                  "layers-active",
                  "compass",
                  "compass-dot",
                  "compass-active",
                  "azure",
                  "issue-draft",
                  "git-pull-request-closed",
                  "git-pull-request-draft",
                  "debug-all",
                  "debug-coverage",
                  "run-errors",
                  "folder-library",
                  "debug-continue-small",
                  "beaker-stop",
                  "graph-line",
                  "graph-scatter",
                  "pie-chart",
                  "bracket",
                  "bracket-dot",
                  "bracket-error",
                  "lock-small",
                  "azure-devops",
                  "verified-filled",
                  "newline",
                  "layout",
                  "layout-activitybar-left",
                  "layout-activitybar-right",
                  "layout-panel-left",
                  "layout-panel-center",
                  "layout-panel-justify",
                  "layout-panel-right",
                  "layout-panel",
                  "layout-sidebar-left",
                  "layout-sidebar-right",
                  "layout-statusbar",
                  "layout-menubar",
                  "layout-centered",
                  "target",
                  "indent",
                  "record-small",
                  "error-small",
                  "arrow-circle-down",
                  "arrow-circle-left",
                  "arrow-circle-right",
                  "arrow-circle-up",
                  "dialog-error",
                  "dialog-warning",
                  "dialog-info",
                  "dialog-close",
                  "tree-item-expanded",
                  "tree-filter-on-type-on",
                  "tree-filter-on-type-off",
                  "tree-filter-clear",
                  "tree-item-loading",
                  "menu-selection",
                  "menu-submenu",
                  "menubar-more",
                  "scrollbar-button-left",
                  "scrollbar-button-right",
                  "scrollbar-button-up",
                  "scrollbar-button-down",
                  "toolbar-more",
                  "quick-input-back"
                ],
                "markdownEnumDescriptions": [
                  "$(add)",
                  "$(plus)",
                  "$(gist-new)",
                  "$(repo-create)",
                  "$(lightbulb)",
                  "$(light-bulb)",
                  "$(repo)",
                  "$(repo-delete)",
                  "$(gist-fork)",
                  "$(repo-forked)",
                  "$(git-pull-request)",
                  "$(git-pull-request-abandoned)",
                  "$(record-keys)",
                  "$(keyboard)",
                  "$(tag)",
                  "$(tag-add)",
                  "$(tag-remove)",
                  "$(person)",
                  "$(person-follow)",
                  "$(person-outline)",
                  "$(person-filled)",
                  "$(git-branch)",
                  "$(git-branch-create)",
                  "$(git-branch-delete)",
                  "$(source-control)",
                  "$(mirror)",
                  "$(mirror-public)",
                  "$(star)",
                  "$(star-add)",
                  "$(star-delete)",
                  "$(star-empty)",
                  "$(comment)",
                  "$(comment-add)",
                  "$(alert)",
                  "$(warning)",
                  "$(search)",
                  "$(search-save)",
                  "$(log-out)",
                  "$(sign-out)",
                  "$(log-in)",
                  "$(sign-in)",
                  "$(eye)",
                  "$(eye-unwatch)",
                  "$(eye-watch)",
                  "$(circle-filled)",
                  "$(primitive-dot)",
                  "$(close-dirty)",
                  "$(debug-breakpoint)",
                  "$(debug-breakpoint-disabled)",
                  "$(debug-hint)",
                  "$(primitive-square)",
                  "$(edit)",
                  "$(pencil)",
                  "$(info)",
                  "$(issue-opened)",
                  "$(gist-private)",
                  "$(git-fork-private)",
                  "$(lock)",
                  "$(mirror-private)",
                  "$(close)",
                  "$(remove-close)",
                  "$(x)",
                  "$(repo-sync)",
                  "$(sync)",
                  "$(clone)",
                  "$(desktop-download)",
                  "$(beaker)",
                  "$(microscope)",
                  "$(vm)",
                  "$(device-desktop)",
                  "$(file)",
                  "$(file-text)",
                  "$(more)",
                  "$(ellipsis)",
                  "$(kebab-horizontal)",
                  "$(mail-reply)",
                  "$(reply)",
                  "$(organization)",
                  "$(organization-filled)",
                  "$(organization-outline)",
                  "$(new-file)",
                  "$(file-add)",
                  "$(new-folder)",
                  "$(file-directory-create)",
                  "$(trash)",
                  "$(trashcan)",
                  "$(history)",
                  "$(clock)",
                  "$(folder)",
                  "$(file-directory)",
                  "$(symbol-folder)",
                  "$(logo-github)",
                  "$(mark-github)",
                  "$(github)",
                  "$(terminal)",
                  "$(console)",
                  "$(repl)",
                  "$(zap)",
                  "$(symbol-event)",
                  "$(error)",
                  "$(stop)",
                  "$(variable)",
                  "$(symbol-variable)",
                  "$(array)",
                  "$(symbol-array)",
                  "$(symbol-module)",
                  "$(symbol-package)",
                  "$(symbol-namespace)",
                  "$(symbol-object)",
                  "$(symbol-method)",
                  "$(symbol-function)",
                  "$(symbol-constructor)",
                  "$(symbol-boolean)",
                  "$(symbol-null)",
                  "$(symbol-numeric)",
                  "$(symbol-number)",
                  "$(symbol-structure)",
                  "$(symbol-struct)",
                  "$(symbol-parameter)",
                  "$(symbol-type-parameter)",
                  "$(symbol-key)",
                  "$(symbol-text)",
                  "$(symbol-reference)",
                  "$(go-to-file)",
                  "$(symbol-enum)",
                  "$(symbol-value)",
                  "$(symbol-ruler)",
                  "$(symbol-unit)",
                  "$(activate-breakpoints)",
                  "$(archive)",
                  "$(arrow-both)",
                  "$(arrow-down)",
                  "$(arrow-left)",
                  "$(arrow-right)",
                  "$(arrow-small-down)",
                  "$(arrow-small-left)",
                  "$(arrow-small-right)",
                  "$(arrow-small-up)",
                  "$(arrow-up)",
                  "$(bell)",
                  "$(bold)",
                  "$(book)",
                  "$(bookmark)",
                  "$(debug-breakpoint-conditional-unverified)",
                  "$(debug-breakpoint-conditional)",
                  "$(debug-breakpoint-conditional-disabled)",
                  "$(debug-breakpoint-data-unverified)",
                  "$(debug-breakpoint-data)",
                  "$(debug-breakpoint-data-disabled)",
                  "$(debug-breakpoint-log-unverified)",
                  "$(debug-breakpoint-log)",
                  "$(debug-breakpoint-log-disabled)",
                  "$(briefcase)",
                  "$(broadcast)",
                  "$(browser)",
                  "$(bug)",
                  "$(calendar)",
                  "$(case-sensitive)",
                  "$(check)",
                  "$(checklist)",
                  "$(chevron-down)",
                  "$(drop-down-button)",
                  "$(chevron-left)",
                  "$(chevron-right)",
                  "$(chevron-up)",
                  "$(chrome-close)",
                  "$(chrome-maximize)",
                  "$(chrome-minimize)",
                  "$(chrome-restore)",
                  "$(circle-outline)",
                  "$(debug-breakpoint-unverified)",
                  "$(circle-slash)",
                  "$(circuit-board)",
                  "$(clear-all)",
                  "$(clippy)",
                  "$(close-all)",
                  "$(cloud-download)",
                  "$(cloud-upload)",
                  "$(code)",
                  "$(collapse-all)",
                  "$(color-mode)",
                  "$(comment-discussion)",
                  "$(compare-changes)",
                  "$(credit-card)",
                  "$(dash)",
                  "$(dashboard)",
                  "$(database)",
                  "$(debug-continue)",
                  "$(debug-disconnect)",
                  "$(debug-pause)",
                  "$(debug-restart)",
                  "$(debug-start)",
                  "$(debug-step-into)",
                  "$(debug-step-out)",
                  "$(debug-step-over)",
                  "$(debug-stop)",
                  "$(debug)",
                  "$(device-camera-video)",
                  "$(device-camera)",
                  "$(device-mobile)",
                  "$(diff-added)",
                  "$(diff-ignored)",
                  "$(diff-modified)",
                  "$(diff-removed)",
                  "$(diff-renamed)",
                  "$(diff)",
                  "$(discard)",
                  "$(editor-layout)",
                  "$(empty-window)",
                  "$(exclude)",
                  "$(extensions)",
                  "$(eye-closed)",
                  "$(file-binary)",
                  "$(file-code)",
                  "$(file-media)",
                  "$(file-pdf)",
                  "$(file-submodule)",
                  "$(file-symlink-directory)",
                  "$(file-symlink-file)",
                  "$(file-zip)",
                  "$(files)",
                  "$(filter)",
                  "$(flame)",
                  "$(fold-down)",
                  "$(fold-up)",
                  "$(fold)",
                  "$(folder-active)",
                  "$(folder-opened)",
                  "$(gear)",
                  "$(gift)",
                  "$(gist-secret)",
                  "$(gist)",
                  "$(git-commit)",
                  "$(git-compare)",
                  "$(git-merge)",
                  "$(github-action)",
                  "$(github-alt)",
                  "$(globe)",
                  "$(grabber)",
                  "$(graph)",
                  "$(gripper)",
                  "$(heart)",
                  "$(home)",
                  "$(horizontal-rule)",
                  "$(hubot)",
                  "$(inbox)",
                  "$(issue-closed)",
                  "$(issue-reopened)",
                  "$(issues)",
                  "$(italic)",
                  "$(jersey)",
                  "$(json)",
                  "$(kebab-vertical)",
                  "$(key)",
                  "$(law)",
                  "$(lightbulb-autofix)",
                  "$(link-external)",
                  "$(link)",
                  "$(list-ordered)",
                  "$(list-unordered)",
                  "$(live-share)",
                  "$(loading)",
                  "$(location)",
                  "$(mail-read)",
                  "$(mail)",
                  "$(markdown)",
                  "$(megaphone)",
                  "$(mention)",
                  "$(milestone)",
                  "$(mortar-board)",
                  "$(move)",
                  "$(multiple-windows)",
                  "$(mute)",
                  "$(no-newline)",
                  "$(note)",
                  "$(octoface)",
                  "$(open-preview)",
                  "$(package)",
                  "$(paintcan)",
                  "$(pin)",
                  "$(play)",
                  "$(run)",
                  "$(plug)",
                  "$(preserve-case)",
                  "$(preview)",
                  "$(project)",
                  "$(pulse)",
                  "$(question)",
                  "$(quote)",
                  "$(radio-tower)",
                  "$(reactions)",
                  "$(references)",
                  "$(refresh)",
                  "$(regex)",
                  "$(remote-explorer)",
                  "$(remote)",
                  "$(remove)",
                  "$(replace-all)",
                  "$(replace)",
                  "$(repo-clone)",
                  "$(repo-force-push)",
                  "$(repo-pull)",
                  "$(repo-push)",
                  "$(report)",
                  "$(request-changes)",
                  "$(rocket)",
                  "$(root-folder-opened)",
                  "$(root-folder)",
                  "$(rss)",
                  "$(ruby)",
                  "$(save-all)",
                  "$(save-as)",
                  "$(save)",
                  "$(screen-full)",
                  "$(screen-normal)",
                  "$(search-stop)",
                  "$(server)",
                  "$(settings-gear)",
                  "$(settings)",
                  "$(shield)",
                  "$(smiley)",
                  "$(sort-precedence)",
                  "$(split-horizontal)",
                  "$(split-vertical)",
                  "$(squirrel)",
                  "$(star-full)",
                  "$(star-half)",
                  "$(symbol-class)",
                  "$(symbol-color)",
                  "$(symbol-customcolor)",
                  "$(symbol-constant)",
                  "$(symbol-enum-member)",
                  "$(symbol-field)",
                  "$(symbol-file)",
                  "$(symbol-interface)",
                  "$(symbol-keyword)",
                  "$(symbol-misc)",
                  "$(symbol-operator)",
                  "$(symbol-property)",
                  "$(wrench)",
                  "$(wrench-subaction)",
                  "$(symbol-snippet)",
                  "$(tasklist)",
                  "$(telescope)",
                  "$(text-size)",
                  "$(three-bars)",
                  "$(thumbsdown)",
                  "$(thumbsup)",
                  "$(tools)",
                  "$(triangle-down)",
                  "$(triangle-left)",
                  "$(triangle-right)",
                  "$(triangle-up)",
                  "$(twitter)",
                  "$(unfold)",
                  "$(unlock)",
                  "$(unmute)",
                  "$(unverified)",
                  "$(verified)",
                  "$(versions)",
                  "$(vm-active)",
                  "$(vm-outline)",
                  "$(vm-running)",
                  "$(watch)",
                  "$(whitespace)",
                  "$(whole-word)",
                  "$(window)",
                  "$(word-wrap)",
                  "$(zoom-in)",
                  "$(zoom-out)",
                  "$(list-filter)",
                  "$(list-flat)",
                  "$(list-selection)",
                  "$(selection)",
                  "$(list-tree)",
                  "$(debug-breakpoint-function-unverified)",
                  "$(debug-breakpoint-function)",
                  "$(debug-breakpoint-function-disabled)",
                  "$(debug-stackframe-active)",
                  "$(debug-stackframe-dot)",
                  "$(debug-stackframe)",
                  "$(debug-stackframe-focused)",
                  "$(debug-breakpoint-unsupported)",
                  "$(symbol-string)",
                  "$(debug-reverse-continue)",
                  "$(debug-step-back)",
                  "$(debug-restart-frame)",
                  "$(call-incoming)",
                  "$(call-outgoing)",
                  "$(menu)",
                  "$(expand-all)",
                  "$(feedback)",
                  "$(group-by-ref-type)",
                  "$(ungroup-by-ref-type)",
                  "$(account)",
                  "$(bell-dot)",
                  "$(debug-console)",
                  "$(library)",
                  "$(output)",
                  "$(run-all)",
                  "$(sync-ignored)",
                  "$(pinned)",
                  "$(github-inverted)",
                  "$(debug-alt)",
                  "$(server-process)",
                  "$(server-environment)",
                  "$(pass)",
                  "$(stop-circle)",
                  "$(play-circle)",
                  "$(record)",
                  "$(debug-alt-small)",
                  "$(vm-connect)",
                  "$(cloud)",
                  "$(merge)",
                  "$(export)",
                  "$(graph-left)",
                  "$(magnet)",
                  "$(notebook)",
                  "$(redo)",
                  "$(check-all)",
                  "$(pinned-dirty)",
                  "$(pass-filled)",
                  "$(circle-large-filled)",
                  "$(circle-large-outline)",
                  "$(combine)",
                  "$(gather)",
                  "$(table)",
                  "$(variable-group)",
                  "$(type-hierarchy)",
                  "$(type-hierarchy-sub)",
                  "$(type-hierarchy-super)",
                  "$(git-pull-request-create)",
                  "$(run-above)",
                  "$(run-below)",
                  "$(notebook-template)",
                  "$(debug-rerun)",
                  "$(workspace-trusted)",
                  "$(workspace-untrusted)",
                  "$(workspace-unspecified)",
                  "$(terminal-cmd)",
                  "$(terminal-debian)",
                  "$(terminal-linux)",
                  "$(terminal-powershell)",
                  "$(terminal-tmux)",
                  "$(terminal-ubuntu)",
                  "$(terminal-bash)",
                  "$(arrow-swap)",
                  "$(copy)",
                  "$(person-add)",
                  "$(filter-filled)",
                  "$(wand)",
                  "$(debug-line-by-line)",
                  "$(inspect)",
                  "$(layers)",
                  "$(layers-dot)",
                  "$(layers-active)",
                  "$(compass)",
                  "$(compass-dot)",
                  "$(compass-active)",
                  "$(azure)",
                  "$(issue-draft)",
                  "$(git-pull-request-closed)",
                  "$(git-pull-request-draft)",
                  "$(debug-all)",
                  "$(debug-coverage)",
                  "$(run-errors)",
                  "$(folder-library)",
                  "$(debug-continue-small)",
                  "$(beaker-stop)",
                  "$(graph-line)",
                  "$(graph-scatter)",
                  "$(pie-chart)",
                  "$(bracket)",
                  "$(bracket-dot)",
                  "$(bracket-error)",
                  "$(lock-small)",
                  "$(azure-devops)",
                  "$(verified-filled)",
                  "$(newline)",
                  "$(layout)",
                  "$(layout-activitybar-left)",
                  "$(layout-activitybar-right)",
                  "$(layout-panel-left)",
                  "$(layout-panel-center)",
                  "$(layout-panel-justify)",
                  "$(layout-panel-right)",
                  "$(layout-panel)",
                  "$(layout-sidebar-left)",
                  "$(layout-sidebar-right)",
                  "$(layout-statusbar)",
                  "$(layout-menubar)",
                  "$(layout-centered)",
                  "$(target)",
                  "$(indent)",
                  "$(record-small)",
                  "$(error-small)",
                  "$(arrow-circle-down)",
                  "$(arrow-circle-left)",
                  "$(arrow-circle-right)",
                  "$(arrow-circle-up)",
                  "$(dialog-error)",
                  "$(dialog-warning)",
                  "$(dialog-info)",
                  "$(dialog-close)",
                  "$(tree-item-expanded)",
                  "$(tree-filter-on-type-on)",
                  "$(tree-filter-on-type-off)",
                  "$(tree-filter-clear)",
                  "$(tree-item-loading)",
                  "$(menu-selection)",
                  "$(menu-submenu)",
                  "$(menubar-more)",
                  "$(scrollbar-button-left)",
                  "$(scrollbar-button-right)",
                  "$(scrollbar-button-up)",
                  "$(scrollbar-button-down)",
                  "$(toolbar-more)",
                  "$(quick-input-back)"
                ]
              },
              "color": {
                "description": "A theme color ID to associate with this terminal.",
                "type": [
                  "string",
                  "null"
                ],
                "enum": [
                  "terminal.ansiBlack",
                  "terminal.ansiRed",
                  "terminal.ansiGreen",
                  "terminal.ansiYellow",
                  "terminal.ansiBlue",
                  "terminal.ansiMagenta",
                  "terminal.ansiCyan",
                  "terminal.ansiWhite"
                ],
                "default": null
              },
              "env": {
                "markdownDescription": "An object with environment variables that will be added to the terminal profile process. Set to `null` to delete environment variables from the base environment.",
                "type": "object",
                "additionalProperties": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "default": {}
              }
            }
          },
          {
            "type": "null"
          },
          {
            "type": "object",
            "required": [
              "path"
            ],
            "properties": {
              "path": {
                "description": "A single path to a shell executable or an array of paths that will be used as fallbacks when one fails.",
                "type": [
                  "string",
                  "array"
                ],
                "items": {
                  "type": "string"
                }
              },
              "args": {
                "description": "An optional set of arguments to run the shell executable with.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "overrideName": {
                "description": "Controls whether or not the profile name overrides the auto detected one.",
                "type": "boolean"
              },
              "icon": {
                "description": "A codicon ID to associate with this terminal.",
                "type": "string",
                "enum": [
                  "add",
                  "plus",
                  "gist-new",
                  "repo-create",
                  "lightbulb",
                  "light-bulb",
                  "repo",
                  "repo-delete",
                  "gist-fork",
                  "repo-forked",
                  "git-pull-request",
                  "git-pull-request-abandoned",
                  "record-keys",
                  "keyboard",
                  "tag",
                  "tag-add",
                  "tag-remove",
                  "person",
                  "person-follow",
                  "person-outline",
                  "person-filled",
                  "git-branch",
                  "git-branch-create",
                  "git-branch-delete",
                  "source-control",
                  "mirror",
                  "mirror-public",
                  "star",
                  "star-add",
                  "star-delete",
                  "star-empty",
                  "comment",
                  "comment-add",
                  "alert",
                  "warning",
                  "search",
                  "search-save",
                  "log-out",
                  "sign-out",
                  "log-in",
                  "sign-in",
                  "eye",
                  "eye-unwatch",
                  "eye-watch",
                  "circle-filled",
                  "primitive-dot",
                  "close-dirty",
                  "debug-breakpoint",
                  "debug-breakpoint-disabled",
                  "debug-hint",
                  "primitive-square",
                  "edit",
                  "pencil",
                  "info",
                  "issue-opened",
                  "gist-private",
                  "git-fork-private",
                  "lock",
                  "mirror-private",
                  "close",
                  "remove-close",
                  "x",
                  "repo-sync",
                  "sync",
                  "clone",
                  "desktop-download",
                  "beaker",
                  "microscope",
                  "vm",
                  "device-desktop",
                  "file",
                  "file-text",
                  "more",
                  "ellipsis",
                  "kebab-horizontal",
                  "mail-reply",
                  "reply",
                  "organization",
                  "organization-filled",
                  "organization-outline",
                  "new-file",
                  "file-add",
                  "new-folder",
                  "file-directory-create",
                  "trash",
                  "trashcan",
                  "history",
                  "clock",
                  "folder",
                  "file-directory",
                  "symbol-folder",
                  "logo-github",
                  "mark-github",
                  "github",
                  "terminal",
                  "console",
                  "repl",
                  "zap",
                  "symbol-event",
                  "error",
                  "stop",
                  "variable",
                  "symbol-variable",
                  "array",
                  "symbol-array",
                  "symbol-module",
                  "symbol-package",
                  "symbol-namespace",
                  "symbol-object",
                  "symbol-method",
                  "symbol-function",
                  "symbol-constructor",
                  "symbol-boolean",
                  "symbol-null",
                  "symbol-numeric",
                  "symbol-number",
                  "symbol-structure",
                  "symbol-struct",
                  "symbol-parameter",
                  "symbol-type-parameter",
                  "symbol-key",
                  "symbol-text",
                  "symbol-reference",
                  "go-to-file",
                  "symbol-enum",
                  "symbol-value",
                  "symbol-ruler",
                  "symbol-unit",
                  "activate-breakpoints",
                  "archive",
                  "arrow-both",
                  "arrow-down",
                  "arrow-left",
                  "arrow-right",
                  "arrow-small-down",
                  "arrow-small-left",
                  "arrow-small-right",
                  "arrow-small-up",
                  "arrow-up",
                  "bell",
                  "bold",
                  "book",
                  "bookmark",
                  "debug-breakpoint-conditional-unverified",
                  "debug-breakpoint-conditional",
                  "debug-breakpoint-conditional-disabled",
                  "debug-breakpoint-data-unverified",
                  "debug-breakpoint-data",
                  "debug-breakpoint-data-disabled",
                  "debug-breakpoint-log-unverified",
                  "debug-breakpoint-log",
                  "debug-breakpoint-log-disabled",
                  "briefcase",
                  "broadcast",
                  "browser",
                  "bug",
                  "calendar",
                  "case-sensitive",
                  "check",
                  "checklist",
                  "chevron-down",
                  "drop-down-button",
                  "chevron-left",
                  "chevron-right",
                  "chevron-up",
                  "chrome-close",
                  "chrome-maximize",
                  "chrome-minimize",
                  "chrome-restore",
                  "circle-outline",
                  "debug-breakpoint-unverified",
                  "circle-slash",
                  "circuit-board",
                  "clear-all",
                  "clippy",
                  "close-all",
                  "cloud-download",
                  "cloud-upload",
                  "code",
                  "collapse-all",
                  "color-mode",
                  "comment-discussion",
                  "compare-changes",
                  "credit-card",
                  "dash",
                  "dashboard",
                  "database",
                  "debug-continue",
                  "debug-disconnect",
                  "debug-pause",
                  "debug-restart",
                  "debug-start",
                  "debug-step-into",
                  "debug-step-out",
                  "debug-step-over",
                  "debug-stop",
                  "debug",
                  "device-camera-video",
                  "device-camera",
                  "device-mobile",
                  "diff-added",
                  "diff-ignored",
                  "diff-modified",
                  "diff-removed",
                  "diff-renamed",
                  "diff",
                  "discard",
                  "editor-layout",
                  "empty-window",
                  "exclude",
                  "extensions",
                  "eye-closed",
                  "file-binary",
                  "file-code",
                  "file-media",
                  "file-pdf",
                  "file-submodule",
                  "file-symlink-directory",
                  "file-symlink-file",
                  "file-zip",
                  "files",
                  "filter",
                  "flame",
                  "fold-down",
                  "fold-up",
                  "fold",
                  "folder-active",
                  "folder-opened",
                  "gear",
                  "gift",
                  "gist-secret",
                  "gist",
                  "git-commit",
                  "git-compare",
                  "git-merge",
                  "github-action",
                  "github-alt",
                  "globe",
                  "grabber",
                  "graph",
                  "gripper",
                  "heart",
                  "home",
                  "horizontal-rule",
                  "hubot",
                  "inbox",
                  "issue-closed",
                  "issue-reopened",
                  "issues",
                  "italic",
                  "jersey",
                  "json",
                  "kebab-vertical",
                  "key",
                  "law",
                  "lightbulb-autofix",
                  "link-external",
                  "link",
                  "list-ordered",
                  "list-unordered",
                  "live-share",
                  "loading",
                  "location",
                  "mail-read",
                  "mail",
                  "markdown",
                  "megaphone",
                  "mention",
                  "milestone",
                  "mortar-board",
                  "move",
                  "multiple-windows",
                  "mute",
                  "no-newline",
                  "note",
                  "octoface",
                  "open-preview",
                  "package",
                  "paintcan",
                  "pin",
                  "play",
                  "run",
                  "plug",
                  "preserve-case",
                  "preview",
                  "project",
                  "pulse",
                  "question",
                  "quote",
                  "radio-tower",
                  "reactions",
                  "references",
                  "refresh",
                  "regex",
                  "remote-explorer",
                  "remote",
                  "remove",
                  "replace-all",
                  "replace",
                  "repo-clone",
                  "repo-force-push",
                  "repo-pull",
                  "repo-push",
                  "report",
                  "request-changes",
                  "rocket",
                  "root-folder-opened",
                  "root-folder",
                  "rss",
                  "ruby",
                  "save-all",
                  "save-as",
                  "save",
                  "screen-full",
                  "screen-normal",
                  "search-stop",
                  "server",
                  "settings-gear",
                  "settings",
                  "shield",
                  "smiley",
                  "sort-precedence",
                  "split-horizontal",
                  "split-vertical",
                  "squirrel",
                  "star-full",
                  "star-half",
                  "symbol-class",
                  "symbol-color",
                  "symbol-customcolor",
                  "symbol-constant",
                  "symbol-enum-member",
                  "symbol-field",
                  "symbol-file",
                  "symbol-interface",
                  "symbol-keyword",
                  "symbol-misc",
                  "symbol-operator",
                  "symbol-property",
                  "wrench",
                  "wrench-subaction",
                  "symbol-snippet",
                  "tasklist",
                  "telescope",
                  "text-size",
                  "three-bars",
                  "thumbsdown",
                  "thumbsup",
                  "tools",
                  "triangle-down",
                  "triangle-left",
                  "triangle-right",
                  "triangle-up",
                  "twitter",
                  "unfold",
                  "unlock",
                  "unmute",
                  "unverified",
                  "verified",
                  "versions",
                  "vm-active",
                  "vm-outline",
                  "vm-running",
                  "watch",
                  "whitespace",
                  "whole-word",
                  "window",
                  "word-wrap",
                  "zoom-in",
                  "zoom-out",
                  "list-filter",
                  "list-flat",
                  "list-selection",
                  "selection",
                  "list-tree",
                  "debug-breakpoint-function-unverified",
                  "debug-breakpoint-function",
                  "debug-breakpoint-function-disabled",
                  "debug-stackframe-active",
                  "debug-stackframe-dot",
                  "debug-stackframe",
                  "debug-stackframe-focused",
                  "debug-breakpoint-unsupported",
                  "symbol-string",
                  "debug-reverse-continue",
                  "debug-step-back",
                  "debug-restart-frame",
                  "call-incoming",
                  "call-outgoing",
                  "menu",
                  "expand-all",
                  "feedback",
                  "group-by-ref-type",
                  "ungroup-by-ref-type",
                  "account",
                  "bell-dot",
                  "debug-console",
                  "library",
                  "output",
                  "run-all",
                  "sync-ignored",
                  "pinned",
                  "github-inverted",
                  "debug-alt",
                  "server-process",
                  "server-environment",
                  "pass",
                  "stop-circle",
                  "play-circle",
                  "record",
                  "debug-alt-small",
                  "vm-connect",
                  "cloud",
                  "merge",
                  "export",
                  "graph-left",
                  "magnet",
                  "notebook",
                  "redo",
                  "check-all",
                  "pinned-dirty",
                  "pass-filled",
                  "circle-large-filled",
                  "circle-large-outline",
                  "combine",
                  "gather",
                  "table",
                  "variable-group",
                  "type-hierarchy",
                  "type-hierarchy-sub",
                  "type-hierarchy-super",
                  "git-pull-request-create",
                  "run-above",
                  "run-below",
                  "notebook-template",
                  "debug-rerun",
                  "workspace-trusted",
                  "workspace-untrusted",
                  "workspace-unspecified",
                  "terminal-cmd",
                  "terminal-debian",
                  "terminal-linux",
                  "terminal-powershell",
                  "terminal-tmux",
                  "terminal-ubuntu",
                  "terminal-bash",
                  "arrow-swap",
                  "copy",
                  "person-add",
                  "filter-filled",
                  "wand",
                  "debug-line-by-line",
                  "inspect",
                  "layers",
                  "layers-dot",
                  "layers-active",
                  "compass",
                  "compass-dot",
                  "compass-active",
                  "azure",
                  "issue-draft",
                  "git-pull-request-closed",
                  "git-pull-request-draft",
                  "debug-all",
                  "debug-coverage",
                  "run-errors",
                  "folder-library",
                  "debug-continue-small",
                  "beaker-stop",
                  "graph-line",
                  "graph-scatter",
                  "pie-chart",
                  "bracket",
                  "bracket-dot",
                  "bracket-error",
                  "lock-small",
                  "azure-devops",
                  "verified-filled",
                  "newline",
                  "layout",
                  "layout-activitybar-left",
                  "layout-activitybar-right",
                  "layout-panel-left",
                  "layout-panel-center",
                  "layout-panel-justify",
                  "layout-panel-right",
                  "layout-panel",
                  "layout-sidebar-left",
                  "layout-sidebar-right",
                  "layout-statusbar",
                  "layout-menubar",
                  "layout-centered",
                  "target",
                  "indent",
                  "record-small",
                  "error-small",
                  "arrow-circle-down",
                  "arrow-circle-left",
                  "arrow-circle-right",
                  "arrow-circle-up",
                  "dialog-error",
                  "dialog-warning",
                  "dialog-info",
                  "dialog-close",
                  "tree-item-expanded",
                  "tree-filter-on-type-on",
                  "tree-filter-on-type-off",
                  "tree-filter-clear",
                  "tree-item-loading",
                  "menu-selection",
                  "menu-submenu",
                  "menubar-more",
                  "scrollbar-button-left",
                  "scrollbar-button-right",
                  "scrollbar-button-up",
                  "scrollbar-button-down",
                  "toolbar-more",
                  "quick-input-back"
                ],
                "markdownEnumDescriptions": [
                  "$(add)",
                  "$(plus)",
                  "$(gist-new)",
                  "$(repo-create)",
                  "$(lightbulb)",
                  "$(light-bulb)",
                  "$(repo)",
                  "$(repo-delete)",
                  "$(gist-fork)",
                  "$(repo-forked)",
                  "$(git-pull-request)",
                  "$(git-pull-request-abandoned)",
                  "$(record-keys)",
                  "$(keyboard)",
                  "$(tag)",
                  "$(tag-add)",
                  "$(tag-remove)",
                  "$(person)",
                  "$(person-follow)",
                  "$(person-outline)",
                  "$(person-filled)",
                  "$(git-branch)",
                  "$(git-branch-create)",
                  "$(git-branch-delete)",
                  "$(source-control)",
                  "$(mirror)",
                  "$(mirror-public)",
                  "$(star)",
                  "$(star-add)",
                  "$(star-delete)",
                  "$(star-empty)",
                  "$(comment)",
                  "$(comment-add)",
                  "$(alert)",
                  "$(warning)",
                  "$(search)",
                  "$(search-save)",
                  "$(log-out)",
                  "$(sign-out)",
                  "$(log-in)",
                  "$(sign-in)",
                  "$(eye)",
                  "$(eye-unwatch)",
                  "$(eye-watch)",
                  "$(circle-filled)",
                  "$(primitive-dot)",
                  "$(close-dirty)",
                  "$(debug-breakpoint)",
                  "$(debug-breakpoint-disabled)",
                  "$(debug-hint)",
                  "$(primitive-square)",
                  "$(edit)",
                  "$(pencil)",
                  "$(info)",
                  "$(issue-opened)",
                  "$(gist-private)",
                  "$(git-fork-private)",
                  "$(lock)",
                  "$(mirror-private)",
                  "$(close)",
                  "$(remove-close)",
                  "$(x)",
                  "$(repo-sync)",
                  "$(sync)",
                  "$(clone)",
                  "$(desktop-download)",
                  "$(beaker)",
                  "$(microscope)",
                  "$(vm)",
                  "$(device-desktop)",
                  "$(file)",
                  "$(file-text)",
                  "$(more)",
                  "$(ellipsis)",
                  "$(kebab-horizontal)",
                  "$(mail-reply)",
                  "$(reply)",
                  "$(organization)",
                  "$(organization-filled)",
                  "$(organization-outline)",
                  "$(new-file)",
                  "$(file-add)",
                  "$(new-folder)",
                  "$(file-directory-create)",
                  "$(trash)",
                  "$(trashcan)",
                  "$(history)",
                  "$(clock)",
                  "$(folder)",
                  "$(file-directory)",
                  "$(symbol-folder)",
                  "$(logo-github)",
                  "$(mark-github)",
                  "$(github)",
                  "$(terminal)",
                  "$(console)",
                  "$(repl)",
                  "$(zap)",
                  "$(symbol-event)",
                  "$(error)",
                  "$(stop)",
                  "$(variable)",
                  "$(symbol-variable)",
                  "$(array)",
                  "$(symbol-array)",
                  "$(symbol-module)",
                  "$(symbol-package)",
                  "$(symbol-namespace)",
                  "$(symbol-object)",
                  "$(symbol-method)",
                  "$(symbol-function)",
                  "$(symbol-constructor)",
                  "$(symbol-boolean)",
                  "$(symbol-null)",
                  "$(symbol-numeric)",
                  "$(symbol-number)",
                  "$(symbol-structure)",
                  "$(symbol-struct)",
                  "$(symbol-parameter)",
                  "$(symbol-type-parameter)",
                  "$(symbol-key)",
                  "$(symbol-text)",
                  "$(symbol-reference)",
                  "$(go-to-file)",
                  "$(symbol-enum)",
                  "$(symbol-value)",
                  "$(symbol-ruler)",
                  "$(symbol-unit)",
                  "$(activate-breakpoints)",
                  "$(archive)",
                  "$(arrow-both)",
                  "$(arrow-down)",
                  "$(arrow-left)",
                  "$(arrow-right)",
                  "$(arrow-small-down)",
                  "$(arrow-small-left)",
                  "$(arrow-small-right)",
                  "$(arrow-small-up)",
                  "$(arrow-up)",
                  "$(bell)",
                  "$(bold)",
                  "$(book)",
                  "$(bookmark)",
                  "$(debug-breakpoint-conditional-unverified)",
                  "$(debug-breakpoint-conditional)",
                  "$(debug-breakpoint-conditional-disabled)",
                  "$(debug-breakpoint-data-unverified)",
                  "$(debug-breakpoint-data)",
                  "$(debug-breakpoint-data-disabled)",
                  "$(debug-breakpoint-log-unverified)",
                  "$(debug-breakpoint-log)",
                  "$(debug-breakpoint-log-disabled)",
                  "$(briefcase)",
                  "$(broadcast)",
                  "$(browser)",
                  "$(bug)",
                  "$(calendar)",
                  "$(case-sensitive)",
                  "$(check)",
                  "$(checklist)",
                  "$(chevron-down)",
                  "$(drop-down-button)",
                  "$(chevron-left)",
                  "$(chevron-right)",
                  "$(chevron-up)",
                  "$(chrome-close)",
                  "$(chrome-maximize)",
                  "$(chrome-minimize)",
                  "$(chrome-restore)",
                  "$(circle-outline)",
                  "$(debug-breakpoint-unverified)",
                  "$(circle-slash)",
                  "$(circuit-board)",
                  "$(clear-all)",
                  "$(clippy)",
                  "$(close-all)",
                  "$(cloud-download)",
                  "$(cloud-upload)",
                  "$(code)",
                  "$(collapse-all)",
                  "$(color-mode)",
                  "$(comment-discussion)",
                  "$(compare-changes)",
                  "$(credit-card)",
                  "$(dash)",
                  "$(dashboard)",
                  "$(database)",
                  "$(debug-continue)",
                  "$(debug-disconnect)",
                  "$(debug-pause)",
                  "$(debug-restart)",
                  "$(debug-start)",
                  "$(debug-step-into)",
                  "$(debug-step-out)",
                  "$(debug-step-over)",
                  "$(debug-stop)",
                  "$(debug)",
                  "$(device-camera-video)",
                  "$(device-camera)",
                  "$(device-mobile)",
                  "$(diff-added)",
                  "$(diff-ignored)",
                  "$(diff-modified)",
                  "$(diff-removed)",
                  "$(diff-renamed)",
                  "$(diff)",
                  "$(discard)",
                  "$(editor-layout)",
                  "$(empty-window)",
                  "$(exclude)",
                  "$(extensions)",
                  "$(eye-closed)",
                  "$(file-binary)",
                  "$(file-code)",
                  "$(file-media)",
                  "$(file-pdf)",
                  "$(file-submodule)",
                  "$(file-symlink-directory)",
                  "$(file-symlink-file)",
                  "$(file-zip)",
                  "$(files)",
                  "$(filter)",
                  "$(flame)",
                  "$(fold-down)",
                  "$(fold-up)",
                  "$(fold)",
                  "$(folder-active)",
                  "$(folder-opened)",
                  "$(gear)",
                  "$(gift)",
                  "$(gist-secret)",
                  "$(gist)",
                  "$(git-commit)",
                  "$(git-compare)",
                  "$(git-merge)",
                  "$(github-action)",
                  "$(github-alt)",
                  "$(globe)",
                  "$(grabber)",
                  "$(graph)",
                  "$(gripper)",
                  "$(heart)",
                  "$(home)",
                  "$(horizontal-rule)",
                  "$(hubot)",
                  "$(inbox)",
                  "$(issue-closed)",
                  "$(issue-reopened)",
                  "$(issues)",
                  "$(italic)",
                  "$(jersey)",
                  "$(json)",
                  "$(kebab-vertical)",
                  "$(key)",
                  "$(law)",
                  "$(lightbulb-autofix)",
                  "$(link-external)",
                  "$(link)",
                  "$(list-ordered)",
                  "$(list-unordered)",
                  "$(live-share)",
                  "$(loading)",
                  "$(location)",
                  "$(mail-read)",
                  "$(mail)",
                  "$(markdown)",
                  "$(megaphone)",
                  "$(mention)",
                  "$(milestone)",
                  "$(mortar-board)",
                  "$(move)",
                  "$(multiple-windows)",
                  "$(mute)",
                  "$(no-newline)",
                  "$(note)",
                  "$(octoface)",
                  "$(open-preview)",
                  "$(package)",
                  "$(paintcan)",
                  "$(pin)",
                  "$(play)",
                  "$(run)",
                  "$(plug)",
                  "$(preserve-case)",
                  "$(preview)",
                  "$(project)",
                  "$(pulse)",
                  "$(question)",
                  "$(quote)",
                  "$(radio-tower)",
                  "$(reactions)",
                  "$(references)",
                  "$(refresh)",
                  "$(regex)",
                  "$(remote-explorer)",
                  "$(remote)",
                  "$(remove)",
                  "$(replace-all)",
                  "$(replace)",
                  "$(repo-clone)",
                  "$(repo-force-push)",
                  "$(repo-pull)",
                  "$(repo-push)",
                  "$(report)",
                  "$(request-changes)",
                  "$(rocket)",
                  "$(root-folder-opened)",
                  "$(root-folder)",
                  "$(rss)",
                  "$(ruby)",
                  "$(save-all)",
                  "$(save-as)",
                  "$(save)",
                  "$(screen-full)",
                  "$(screen-normal)",
                  "$(search-stop)",
                  "$(server)",
                  "$(settings-gear)",
                  "$(settings)",
                  "$(shield)",
                  "$(smiley)",
                  "$(sort-precedence)",
                  "$(split-horizontal)",
                  "$(split-vertical)",
                  "$(squirrel)",
                  "$(star-full)",
                  "$(star-half)",
                  "$(symbol-class)",
                  "$(symbol-color)",
                  "$(symbol-customcolor)",
                  "$(symbol-constant)",
                  "$(symbol-enum-member)",
                  "$(symbol-field)",
                  "$(symbol-file)",
                  "$(symbol-interface)",
                  "$(symbol-keyword)",
                  "$(symbol-misc)",
                  "$(symbol-operator)",
                  "$(symbol-property)",
                  "$(wrench)",
                  "$(wrench-subaction)",
                  "$(symbol-snippet)",
                  "$(tasklist)",
                  "$(telescope)",
                  "$(text-size)",
                  "$(three-bars)",
                  "$(thumbsdown)",
                  "$(thumbsup)",
                  "$(tools)",
                  "$(triangle-down)",
                  "$(triangle-left)",
                  "$(triangle-right)",
                  "$(triangle-up)",
                  "$(twitter)",
                  "$(unfold)",
                  "$(unlock)",
                  "$(unmute)",
                  "$(unverified)",
                  "$(verified)",
                  "$(versions)",
                  "$(vm-active)",
                  "$(vm-outline)",
                  "$(vm-running)",
                  "$(watch)",
                  "$(whitespace)",
                  "$(whole-word)",
                  "$(window)",
                  "$(word-wrap)",
                  "$(zoom-in)",
                  "$(zoom-out)",
                  "$(list-filter)",
                  "$(list-flat)",
                  "$(list-selection)",
                  "$(selection)",
                  "$(list-tree)",
                  "$(debug-breakpoint-function-unverified)",
                  "$(debug-breakpoint-function)",
                  "$(debug-breakpoint-function-disabled)",
                  "$(debug-stackframe-active)",
                  "$(debug-stackframe-dot)",
                  "$(debug-stackframe)",
                  "$(debug-stackframe-focused)",
                  "$(debug-breakpoint-unsupported)",
                  "$(symbol-string)",
                  "$(debug-reverse-continue)",
                  "$(debug-step-back)",
                  "$(debug-restart-frame)",
                  "$(call-incoming)",
                  "$(call-outgoing)",
                  "$(menu)",
                  "$(expand-all)",
                  "$(feedback)",
                  "$(group-by-ref-type)",
                  "$(ungroup-by-ref-type)",
                  "$(account)",
                  "$(bell-dot)",
                  "$(debug-console)",
                  "$(library)",
                  "$(output)",
                  "$(run-all)",
                  "$(sync-ignored)",
                  "$(pinned)",
                  "$(github-inverted)",
                  "$(debug-alt)",
                  "$(server-process)",
                  "$(server-environment)",
                  "$(pass)",
                  "$(stop-circle)",
                  "$(play-circle)",
                  "$(record)",
                  "$(debug-alt-small)",
                  "$(vm-connect)",
                  "$(cloud)",
                  "$(merge)",
                  "$(export)",
                  "$(graph-left)",
                  "$(magnet)",
                  "$(notebook)",
                  "$(redo)",
                  "$(check-all)",
                  "$(pinned-dirty)",
                  "$(pass-filled)",
                  "$(circle-large-filled)",
                  "$(circle-large-outline)",
                  "$(combine)",
                  "$(gather)",
                  "$(table)",
                  "$(variable-group)",
                  "$(type-hierarchy)",
                  "$(type-hierarchy-sub)",
                  "$(type-hierarchy-super)",
                  "$(git-pull-request-create)",
                  "$(run-above)",
                  "$(run-below)",
                  "$(notebook-template)",
                  "$(debug-rerun)",
                  "$(workspace-trusted)",
                  "$(workspace-untrusted)",
                  "$(workspace-unspecified)",
                  "$(terminal-cmd)",
                  "$(terminal-debian)",
                  "$(terminal-linux)",
                  "$(terminal-powershell)",
                  "$(terminal-tmux)",
                  "$(terminal-ubuntu)",
                  "$(terminal-bash)",
                  "$(arrow-swap)",
                  "$(copy)",
                  "$(person-add)",
                  "$(filter-filled)",
                  "$(wand)",
                  "$(debug-line-by-line)",
                  "$(inspect)",
                  "$(layers)",
                  "$(layers-dot)",
                  "$(layers-active)",
                  "$(compass)",
                  "$(compass-dot)",
                  "$(compass-active)",
                  "$(azure)",
                  "$(issue-draft)",
                  "$(git-pull-request-closed)",
                  "$(git-pull-request-draft)",
                  "$(debug-all)",
                  "$(debug-coverage)",
                  "$(run-errors)",
                  "$(folder-library)",
                  "$(debug-continue-small)",
                  "$(beaker-stop)",
                  "$(graph-line)",
                  "$(graph-scatter)",
                  "$(pie-chart)",
                  "$(bracket)",
                  "$(bracket-dot)",
                  "$(bracket-error)",
                  "$(lock-small)",
                  "$(azure-devops)",
                  "$(verified-filled)",
                  "$(newline)",
                  "$(layout)",
                  "$(layout-activitybar-left)",
                  "$(layout-activitybar-right)",
                  "$(layout-panel-left)",
                  "$(layout-panel-center)",
                  "$(layout-panel-justify)",
                  "$(layout-panel-right)",
                  "$(layout-panel)",
                  "$(layout-sidebar-left)",
                  "$(layout-sidebar-right)",
                  "$(layout-statusbar)",
                  "$(layout-menubar)",
                  "$(layout-centered)",
                  "$(target)",
                  "$(indent)",
                  "$(record-small)",
                  "$(error-small)",
                  "$(arrow-circle-down)",
                  "$(arrow-circle-left)",
                  "$(arrow-circle-right)",
                  "$(arrow-circle-up)",
                  "$(dialog-error)",
                  "$(dialog-warning)",
                  "$(dialog-info)",
                  "$(dialog-close)",
                  "$(tree-item-expanded)",
                  "$(tree-filter-on-type-on)",
                  "$(tree-filter-on-type-off)",
                  "$(tree-filter-clear)",
                  "$(tree-item-loading)",
                  "$(menu-selection)",
                  "$(menu-submenu)",
                  "$(menubar-more)",
                  "$(scrollbar-button-left)",
                  "$(scrollbar-button-right)",
                  "$(scrollbar-button-up)",
                  "$(scrollbar-button-down)",
                  "$(toolbar-more)",
                  "$(quick-input-back)"
                ]
              },
              "color": {
                "description": "A theme color ID to associate with this terminal.",
                "type": [
                  "string",
                  "null"
                ],
                "enum": [
                  "terminal.ansiBlack",
                  "terminal.ansiRed",
                  "terminal.ansiGreen",
                  "terminal.ansiYellow",
                  "terminal.ansiBlue",
                  "terminal.ansiMagenta",
                  "terminal.ansiCyan",
                  "terminal.ansiWhite"
                ],
                "default": null
              },
              "env": {
                "markdownDescription": "An object with environment variables that will be added to the terminal profile process. Set to `null` to delete environment variables from the base environment.",
                "type": "object",
                "additionalProperties": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "default": {}
              }
            }
          }
        ]
      },
      "defaultDefaultValue": {
        "PowerShell": {
          "source": "PowerShell",
          "icon": "terminal-powershell"
        },
        "Command Prompt": {
          "path": [
            "${env:windir}\\Sysnative\\cmd.exe",
            "${env:windir}\\System32\\cmd.exe"
          ],
          "args": [],
          "icon": "terminal-cmd"
        },
        "Git Bash": {
          "source": "Git Bash"
        }
      },
      "scope": 3
    },
    "terminal.integrated.profiles.osx": {
      "restricted": true,
      "markdownDescription": "The macOS profiles to present when creating a new terminal via the terminal dropdown. Set the `path` property manually with an optional `args`.\n\nSet an existing profile to `null` to hide the profile from the list, for example: `\"bash\": null`.",
      "type": "object",
      "default": {
        "bash": {
          "path": "bash",
          "args": [
            "-l"
          ],
          "icon": "terminal-bash"
        },
        "zsh": {
          "path": "zsh",
          "args": [
            "-l"
          ]
        },
        "fish": {
          "path": "fish",
          "args": [
            "-l"
          ]
        },
        "tmux": {
          "path": "tmux",
          "icon": "terminal-tmux"
        },
        "pwsh": {
          "path": "pwsh",
          "icon": "terminal-powershell"
        }
      },
      "additionalProperties": {
        "anyOf": [
          {
            "type": "object",
            "required": [
              "extensionIdentifier",
              "id",
              "title"
            ],
            "properties": {
              "extensionIdentifier": {
                "description": "The extension that contributed this profile.",
                "type": "string"
              },
              "id": {
                "description": "The id of the extension terminal",
                "type": "string"
              },
              "title": {
                "description": "The name of the extension terminal",
                "type": "string"
              },
              "args": {
                "description": "An optional set of arguments to run the shell executable with.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "overrideName": {
                "description": "Controls whether or not the profile name overrides the auto detected one.",
                "type": "boolean"
              },
              "icon": {
                "description": "A codicon ID to associate with this terminal.",
                "type": "string",
                "enum": [
                  "add",
                  "plus",
                  "gist-new",
                  "repo-create",
                  "lightbulb",
                  "light-bulb",
                  "repo",
                  "repo-delete",
                  "gist-fork",
                  "repo-forked",
                  "git-pull-request",
                  "git-pull-request-abandoned",
                  "record-keys",
                  "keyboard",
                  "tag",
                  "tag-add",
                  "tag-remove",
                  "person",
                  "person-follow",
                  "person-outline",
                  "person-filled",
                  "git-branch",
                  "git-branch-create",
                  "git-branch-delete",
                  "source-control",
                  "mirror",
                  "mirror-public",
                  "star",
                  "star-add",
                  "star-delete",
                  "star-empty",
                  "comment",
                  "comment-add",
                  "alert",
                  "warning",
                  "search",
                  "search-save",
                  "log-out",
                  "sign-out",
                  "log-in",
                  "sign-in",
                  "eye",
                  "eye-unwatch",
                  "eye-watch",
                  "circle-filled",
                  "primitive-dot",
                  "close-dirty",
                  "debug-breakpoint",
                  "debug-breakpoint-disabled",
                  "debug-hint",
                  "primitive-square",
                  "edit",
                  "pencil",
                  "info",
                  "issue-opened",
                  "gist-private",
                  "git-fork-private",
                  "lock",
                  "mirror-private",
                  "close",
                  "remove-close",
                  "x",
                  "repo-sync",
                  "sync",
                  "clone",
                  "desktop-download",
                  "beaker",
                  "microscope",
                  "vm",
                  "device-desktop",
                  "file",
                  "file-text",
                  "more",
                  "ellipsis",
                  "kebab-horizontal",
                  "mail-reply",
                  "reply",
                  "organization",
                  "organization-filled",
                  "organization-outline",
                  "new-file",
                  "file-add",
                  "new-folder",
                  "file-directory-create",
                  "trash",
                  "trashcan",
                  "history",
                  "clock",
                  "folder",
                  "file-directory",
                  "symbol-folder",
                  "logo-github",
                  "mark-github",
                  "github",
                  "terminal",
                  "console",
                  "repl",
                  "zap",
                  "symbol-event",
                  "error",
                  "stop",
                  "variable",
                  "symbol-variable",
                  "array",
                  "symbol-array",
                  "symbol-module",
                  "symbol-package",
                  "symbol-namespace",
                  "symbol-object",
                  "symbol-method",
                  "symbol-function",
                  "symbol-constructor",
                  "symbol-boolean",
                  "symbol-null",
                  "symbol-numeric",
                  "symbol-number",
                  "symbol-structure",
                  "symbol-struct",
                  "symbol-parameter",
                  "symbol-type-parameter",
                  "symbol-key",
                  "symbol-text",
                  "symbol-reference",
                  "go-to-file",
                  "symbol-enum",
                  "symbol-value",
                  "symbol-ruler",
                  "symbol-unit",
                  "activate-breakpoints",
                  "archive",
                  "arrow-both",
                  "arrow-down",
                  "arrow-left",
                  "arrow-right",
                  "arrow-small-down",
                  "arrow-small-left",
                  "arrow-small-right",
                  "arrow-small-up",
                  "arrow-up",
                  "bell",
                  "bold",
                  "book",
                  "bookmark",
                  "debug-breakpoint-conditional-unverified",
                  "debug-breakpoint-conditional",
                  "debug-breakpoint-conditional-disabled",
                  "debug-breakpoint-data-unverified",
                  "debug-breakpoint-data",
                  "debug-breakpoint-data-disabled",
                  "debug-breakpoint-log-unverified",
                  "debug-breakpoint-log",
                  "debug-breakpoint-log-disabled",
                  "briefcase",
                  "broadcast",
                  "browser",
                  "bug",
                  "calendar",
                  "case-sensitive",
                  "check",
                  "checklist",
                  "chevron-down",
                  "drop-down-button",
                  "chevron-left",
                  "chevron-right",
                  "chevron-up",
                  "chrome-close",
                  "chrome-maximize",
                  "chrome-minimize",
                  "chrome-restore",
                  "circle-outline",
                  "debug-breakpoint-unverified",
                  "circle-slash",
                  "circuit-board",
                  "clear-all",
                  "clippy",
                  "close-all",
                  "cloud-download",
                  "cloud-upload",
                  "code",
                  "collapse-all",
                  "color-mode",
                  "comment-discussion",
                  "compare-changes",
                  "credit-card",
                  "dash",
                  "dashboard",
                  "database",
                  "debug-continue",
                  "debug-disconnect",
                  "debug-pause",
                  "debug-restart",
                  "debug-start",
                  "debug-step-into",
                  "debug-step-out",
                  "debug-step-over",
                  "debug-stop",
                  "debug",
                  "device-camera-video",
                  "device-camera",
                  "device-mobile",
                  "diff-added",
                  "diff-ignored",
                  "diff-modified",
                  "diff-removed",
                  "diff-renamed",
                  "diff",
                  "discard",
                  "editor-layout",
                  "empty-window",
                  "exclude",
                  "extensions",
                  "eye-closed",
                  "file-binary",
                  "file-code",
                  "file-media",
                  "file-pdf",
                  "file-submodule",
                  "file-symlink-directory",
                  "file-symlink-file",
                  "file-zip",
                  "files",
                  "filter",
                  "flame",
                  "fold-down",
                  "fold-up",
                  "fold",
                  "folder-active",
                  "folder-opened",
                  "gear",
                  "gift",
                  "gist-secret",
                  "gist",
                  "git-commit",
                  "git-compare",
                  "git-merge",
                  "github-action",
                  "github-alt",
                  "globe",
                  "grabber",
                  "graph",
                  "gripper",
                  "heart",
                  "home",
                  "horizontal-rule",
                  "hubot",
                  "inbox",
                  "issue-closed",
                  "issue-reopened",
                  "issues",
                  "italic",
                  "jersey",
                  "json",
                  "kebab-vertical",
                  "key",
                  "law",
                  "lightbulb-autofix",
                  "link-external",
                  "link",
                  "list-ordered",
                  "list-unordered",
                  "live-share",
                  "loading",
                  "location",
                  "mail-read",
                  "mail",
                  "markdown",
                  "megaphone",
                  "mention",
                  "milestone",
                  "mortar-board",
                  "move",
                  "multiple-windows",
                  "mute",
                  "no-newline",
                  "note",
                  "octoface",
                  "open-preview",
                  "package",
                  "paintcan",
                  "pin",
                  "play",
                  "run",
                  "plug",
                  "preserve-case",
                  "preview",
                  "project",
                  "pulse",
                  "question",
                  "quote",
                  "radio-tower",
                  "reactions",
                  "references",
                  "refresh",
                  "regex",
                  "remote-explorer",
                  "remote",
                  "remove",
                  "replace-all",
                  "replace",
                  "repo-clone",
                  "repo-force-push",
                  "repo-pull",
                  "repo-push",
                  "report",
                  "request-changes",
                  "rocket",
                  "root-folder-opened",
                  "root-folder",
                  "rss",
                  "ruby",
                  "save-all",
                  "save-as",
                  "save",
                  "screen-full",
                  "screen-normal",
                  "search-stop",
                  "server",
                  "settings-gear",
                  "settings",
                  "shield",
                  "smiley",
                  "sort-precedence",
                  "split-horizontal",
                  "split-vertical",
                  "squirrel",
                  "star-full",
                  "star-half",
                  "symbol-class",
                  "symbol-color",
                  "symbol-customcolor",
                  "symbol-constant",
                  "symbol-enum-member",
                  "symbol-field",
                  "symbol-file",
                  "symbol-interface",
                  "symbol-keyword",
                  "symbol-misc",
                  "symbol-operator",
                  "symbol-property",
                  "wrench",
                  "wrench-subaction",
                  "symbol-snippet",
                  "tasklist",
                  "telescope",
                  "text-size",
                  "three-bars",
                  "thumbsdown",
                  "thumbsup",
                  "tools",
                  "triangle-down",
                  "triangle-left",
                  "triangle-right",
                  "triangle-up",
                  "twitter",
                  "unfold",
                  "unlock",
                  "unmute",
                  "unverified",
                  "verified",
                  "versions",
                  "vm-active",
                  "vm-outline",
                  "vm-running",
                  "watch",
                  "whitespace",
                  "whole-word",
                  "window",
                  "word-wrap",
                  "zoom-in",
                  "zoom-out",
                  "list-filter",
                  "list-flat",
                  "list-selection",
                  "selection",
                  "list-tree",
                  "debug-breakpoint-function-unverified",
                  "debug-breakpoint-function",
                  "debug-breakpoint-function-disabled",
                  "debug-stackframe-active",
                  "debug-stackframe-dot",
                  "debug-stackframe",
                  "debug-stackframe-focused",
                  "debug-breakpoint-unsupported",
                  "symbol-string",
                  "debug-reverse-continue",
                  "debug-step-back",
                  "debug-restart-frame",
                  "call-incoming",
                  "call-outgoing",
                  "menu",
                  "expand-all",
                  "feedback",
                  "group-by-ref-type",
                  "ungroup-by-ref-type",
                  "account",
                  "bell-dot",
                  "debug-console",
                  "library",
                  "output",
                  "run-all",
                  "sync-ignored",
                  "pinned",
                  "github-inverted",
                  "debug-alt",
                  "server-process",
                  "server-environment",
                  "pass",
                  "stop-circle",
                  "play-circle",
                  "record",
                  "debug-alt-small",
                  "vm-connect",
                  "cloud",
                  "merge",
                  "export",
                  "graph-left",
                  "magnet",
                  "notebook",
                  "redo",
                  "check-all",
                  "pinned-dirty",
                  "pass-filled",
                  "circle-large-filled",
                  "circle-large-outline",
                  "combine",
                  "gather",
                  "table",
                  "variable-group",
                  "type-hierarchy",
                  "type-hierarchy-sub",
                  "type-hierarchy-super",
                  "git-pull-request-create",
                  "run-above",
                  "run-below",
                  "notebook-template",
                  "debug-rerun",
                  "workspace-trusted",
                  "workspace-untrusted",
                  "workspace-unspecified",
                  "terminal-cmd",
                  "terminal-debian",
                  "terminal-linux",
                  "terminal-powershell",
                  "terminal-tmux",
                  "terminal-ubuntu",
                  "terminal-bash",
                  "arrow-swap",
                  "copy",
                  "person-add",
                  "filter-filled",
                  "wand",
                  "debug-line-by-line",
                  "inspect",
                  "layers",
                  "layers-dot",
                  "layers-active",
                  "compass",
                  "compass-dot",
                  "compass-active",
                  "azure",
                  "issue-draft",
                  "git-pull-request-closed",
                  "git-pull-request-draft",
                  "debug-all",
                  "debug-coverage",
                  "run-errors",
                  "folder-library",
                  "debug-continue-small",
                  "beaker-stop",
                  "graph-line",
                  "graph-scatter",
                  "pie-chart",
                  "bracket",
                  "bracket-dot",
                  "bracket-error",
                  "lock-small",
                  "azure-devops",
                  "verified-filled",
                  "newline",
                  "layout",
                  "layout-activitybar-left",
                  "layout-activitybar-right",
                  "layout-panel-left",
                  "layout-panel-center",
                  "layout-panel-justify",
                  "layout-panel-right",
                  "layout-panel",
                  "layout-sidebar-left",
                  "layout-sidebar-right",
                  "layout-statusbar",
                  "layout-menubar",
                  "layout-centered",
                  "target",
                  "indent",
                  "record-small",
                  "error-small",
                  "arrow-circle-down",
                  "arrow-circle-left",
                  "arrow-circle-right",
                  "arrow-circle-up",
                  "dialog-error",
                  "dialog-warning",
                  "dialog-info",
                  "dialog-close",
                  "tree-item-expanded",
                  "tree-filter-on-type-on",
                  "tree-filter-on-type-off",
                  "tree-filter-clear",
                  "tree-item-loading",
                  "menu-selection",
                  "menu-submenu",
                  "menubar-more",
                  "scrollbar-button-left",
                  "scrollbar-button-right",
                  "scrollbar-button-up",
                  "scrollbar-button-down",
                  "toolbar-more",
                  "quick-input-back"
                ],
                "markdownEnumDescriptions": [
                  "$(add)",
                  "$(plus)",
                  "$(gist-new)",
                  "$(repo-create)",
                  "$(lightbulb)",
                  "$(light-bulb)",
                  "$(repo)",
                  "$(repo-delete)",
                  "$(gist-fork)",
                  "$(repo-forked)",
                  "$(git-pull-request)",
                  "$(git-pull-request-abandoned)",
                  "$(record-keys)",
                  "$(keyboard)",
                  "$(tag)",
                  "$(tag-add)",
                  "$(tag-remove)",
                  "$(person)",
                  "$(person-follow)",
                  "$(person-outline)",
                  "$(person-filled)",
                  "$(git-branch)",
                  "$(git-branch-create)",
                  "$(git-branch-delete)",
                  "$(source-control)",
                  "$(mirror)",
                  "$(mirror-public)",
                  "$(star)",
                  "$(star-add)",
                  "$(star-delete)",
                  "$(star-empty)",
                  "$(comment)",
                  "$(comment-add)",
                  "$(alert)",
                  "$(warning)",
                  "$(search)",
                  "$(search-save)",
                  "$(log-out)",
                  "$(sign-out)",
                  "$(log-in)",
                  "$(sign-in)",
                  "$(eye)",
                  "$(eye-unwatch)",
                  "$(eye-watch)",
                  "$(circle-filled)",
                  "$(primitive-dot)",
                  "$(close-dirty)",
                  "$(debug-breakpoint)",
                  "$(debug-breakpoint-disabled)",
                  "$(debug-hint)",
                  "$(primitive-square)",
                  "$(edit)",
                  "$(pencil)",
                  "$(info)",
                  "$(issue-opened)",
                  "$(gist-private)",
                  "$(git-fork-private)",
                  "$(lock)",
                  "$(mirror-private)",
                  "$(close)",
                  "$(remove-close)",
                  "$(x)",
                  "$(repo-sync)",
                  "$(sync)",
                  "$(clone)",
                  "$(desktop-download)",
                  "$(beaker)",
                  "$(microscope)",
                  "$(vm)",
                  "$(device-desktop)",
                  "$(file)",
                  "$(file-text)",
                  "$(more)",
                  "$(ellipsis)",
                  "$(kebab-horizontal)",
                  "$(mail-reply)",
                  "$(reply)",
                  "$(organization)",
                  "$(organization-filled)",
                  "$(organization-outline)",
                  "$(new-file)",
                  "$(file-add)",
                  "$(new-folder)",
                  "$(file-directory-create)",
                  "$(trash)",
                  "$(trashcan)",
                  "$(history)",
                  "$(clock)",
                  "$(folder)",
                  "$(file-directory)",
                  "$(symbol-folder)",
                  "$(logo-github)",
                  "$(mark-github)",
                  "$(github)",
                  "$(terminal)",
                  "$(console)",
                  "$(repl)",
                  "$(zap)",
                  "$(symbol-event)",
                  "$(error)",
                  "$(stop)",
                  "$(variable)",
                  "$(symbol-variable)",
                  "$(array)",
                  "$(symbol-array)",
                  "$(symbol-module)",
                  "$(symbol-package)",
                  "$(symbol-namespace)",
                  "$(symbol-object)",
                  "$(symbol-method)",
                  "$(symbol-function)",
                  "$(symbol-constructor)",
                  "$(symbol-boolean)",
                  "$(symbol-null)",
                  "$(symbol-numeric)",
                  "$(symbol-number)",
                  "$(symbol-structure)",
                  "$(symbol-struct)",
                  "$(symbol-parameter)",
                  "$(symbol-type-parameter)",
                  "$(symbol-key)",
                  "$(symbol-text)",
                  "$(symbol-reference)",
                  "$(go-to-file)",
                  "$(symbol-enum)",
                  "$(symbol-value)",
                  "$(symbol-ruler)",
                  "$(symbol-unit)",
                  "$(activate-breakpoints)",
                  "$(archive)",
                  "$(arrow-both)",
                  "$(arrow-down)",
                  "$(arrow-left)",
                  "$(arrow-right)",
                  "$(arrow-small-down)",
                  "$(arrow-small-left)",
                  "$(arrow-small-right)",
                  "$(arrow-small-up)",
                  "$(arrow-up)",
                  "$(bell)",
                  "$(bold)",
                  "$(book)",
                  "$(bookmark)",
                  "$(debug-breakpoint-conditional-unverified)",
                  "$(debug-breakpoint-conditional)",
                  "$(debug-breakpoint-conditional-disabled)",
                  "$(debug-breakpoint-data-unverified)",
                  "$(debug-breakpoint-data)",
                  "$(debug-breakpoint-data-disabled)",
                  "$(debug-breakpoint-log-unverified)",
                  "$(debug-breakpoint-log)",
                  "$(debug-breakpoint-log-disabled)",
                  "$(briefcase)",
                  "$(broadcast)",
                  "$(browser)",
                  "$(bug)",
                  "$(calendar)",
                  "$(case-sensitive)",
                  "$(check)",
                  "$(checklist)",
                  "$(chevron-down)",
                  "$(drop-down-button)",
                  "$(chevron-left)",
                  "$(chevron-right)",
                  "$(chevron-up)",
                  "$(chrome-close)",
                  "$(chrome-maximize)",
                  "$(chrome-minimize)",
                  "$(chrome-restore)",
                  "$(circle-outline)",
                  "$(debug-breakpoint-unverified)",
                  "$(circle-slash)",
                  "$(circuit-board)",
                  "$(clear-all)",
                  "$(clippy)",
                  "$(close-all)",
                  "$(cloud-download)",
                  "$(cloud-upload)",
                  "$(code)",
                  "$(collapse-all)",
                  "$(color-mode)",
                  "$(comment-discussion)",
                  "$(compare-changes)",
                  "$(credit-card)",
                  "$(dash)",
                  "$(dashboard)",
                  "$(database)",
                  "$(debug-continue)",
                  "$(debug-disconnect)",
                  "$(debug-pause)",
                  "$(debug-restart)",
                  "$(debug-start)",
                  "$(debug-step-into)",
                  "$(debug-step-out)",
                  "$(debug-step-over)",
                  "$(debug-stop)",
                  "$(debug)",
                  "$(device-camera-video)",
                  "$(device-camera)",
                  "$(device-mobile)",
                  "$(diff-added)",
                  "$(diff-ignored)",
                  "$(diff-modified)",
                  "$(diff-removed)",
                  "$(diff-renamed)",
                  "$(diff)",
                  "$(discard)",
                  "$(editor-layout)",
                  "$(empty-window)",
                  "$(exclude)",
                  "$(extensions)",
                  "$(eye-closed)",
                  "$(file-binary)",
                  "$(file-code)",
                  "$(file-media)",
                  "$(file-pdf)",
                  "$(file-submodule)",
                  "$(file-symlink-directory)",
                  "$(file-symlink-file)",
                  "$(file-zip)",
                  "$(files)",
                  "$(filter)",
                  "$(flame)",
                  "$(fold-down)",
                  "$(fold-up)",
                  "$(fold)",
                  "$(folder-active)",
                  "$(folder-opened)",
                  "$(gear)",
                  "$(gift)",
                  "$(gist-secret)",
                  "$(gist)",
                  "$(git-commit)",
                  "$(git-compare)",
                  "$(git-merge)",
                  "$(github-action)",
                  "$(github-alt)",
                  "$(globe)",
                  "$(grabber)",
                  "$(graph)",
                  "$(gripper)",
                  "$(heart)",
                  "$(home)",
                  "$(horizontal-rule)",
                  "$(hubot)",
                  "$(inbox)",
                  "$(issue-closed)",
                  "$(issue-reopened)",
                  "$(issues)",
                  "$(italic)",
                  "$(jersey)",
                  "$(json)",
                  "$(kebab-vertical)",
                  "$(key)",
                  "$(law)",
                  "$(lightbulb-autofix)",
                  "$(link-external)",
                  "$(link)",
                  "$(list-ordered)",
                  "$(list-unordered)",
                  "$(live-share)",
                  "$(loading)",
                  "$(location)",
                  "$(mail-read)",
                  "$(mail)",
                  "$(markdown)",
                  "$(megaphone)",
                  "$(mention)",
                  "$(milestone)",
                  "$(mortar-board)",
                  "$(move)",
                  "$(multiple-windows)",
                  "$(mute)",
                  "$(no-newline)",
                  "$(note)",
                  "$(octoface)",
                  "$(open-preview)",
                  "$(package)",
                  "$(paintcan)",
                  "$(pin)",
                  "$(play)",
                  "$(run)",
                  "$(plug)",
                  "$(preserve-case)",
                  "$(preview)",
                  "$(project)",
                  "$(pulse)",
                  "$(question)",
                  "$(quote)",
                  "$(radio-tower)",
                  "$(reactions)",
                  "$(references)",
                  "$(refresh)",
                  "$(regex)",
                  "$(remote-explorer)",
                  "$(remote)",
                  "$(remove)",
                  "$(replace-all)",
                  "$(replace)",
                  "$(repo-clone)",
                  "$(repo-force-push)",
                  "$(repo-pull)",
                  "$(repo-push)",
                  "$(report)",
                  "$(request-changes)",
                  "$(rocket)",
                  "$(root-folder-opened)",
                  "$(root-folder)",
                  "$(rss)",
                  "$(ruby)",
                  "$(save-all)",
                  "$(save-as)",
                  "$(save)",
                  "$(screen-full)",
                  "$(screen-normal)",
                  "$(search-stop)",
                  "$(server)",
                  "$(settings-gear)",
                  "$(settings)",
                  "$(shield)",
                  "$(smiley)",
                  "$(sort-precedence)",
                  "$(split-horizontal)",
                  "$(split-vertical)",
                  "$(squirrel)",
                  "$(star-full)",
                  "$(star-half)",
                  "$(symbol-class)",
                  "$(symbol-color)",
                  "$(symbol-customcolor)",
                  "$(symbol-constant)",
                  "$(symbol-enum-member)",
                  "$(symbol-field)",
                  "$(symbol-file)",
                  "$(symbol-interface)",
                  "$(symbol-keyword)",
                  "$(symbol-misc)",
                  "$(symbol-operator)",
                  "$(symbol-property)",
                  "$(wrench)",
                  "$(wrench-subaction)",
                  "$(symbol-snippet)",
                  "$(tasklist)",
                  "$(telescope)",
                  "$(text-size)",
                  "$(three-bars)",
                  "$(thumbsdown)",
                  "$(thumbsup)",
                  "$(tools)",
                  "$(triangle-down)",
                  "$(triangle-left)",
                  "$(triangle-right)",
                  "$(triangle-up)",
                  "$(twitter)",
                  "$(unfold)",
                  "$(unlock)",
                  "$(unmute)",
                  "$(unverified)",
                  "$(verified)",
                  "$(versions)",
                  "$(vm-active)",
                  "$(vm-outline)",
                  "$(vm-running)",
                  "$(watch)",
                  "$(whitespace)",
                  "$(whole-word)",
                  "$(window)",
                  "$(word-wrap)",
                  "$(zoom-in)",
                  "$(zoom-out)",
                  "$(list-filter)",
                  "$(list-flat)",
                  "$(list-selection)",
                  "$(selection)",
                  "$(list-tree)",
                  "$(debug-breakpoint-function-unverified)",
                  "$(debug-breakpoint-function)",
                  "$(debug-breakpoint-function-disabled)",
                  "$(debug-stackframe-active)",
                  "$(debug-stackframe-dot)",
                  "$(debug-stackframe)",
                  "$(debug-stackframe-focused)",
                  "$(debug-breakpoint-unsupported)",
                  "$(symbol-string)",
                  "$(debug-reverse-continue)",
                  "$(debug-step-back)",
                  "$(debug-restart-frame)",
                  "$(call-incoming)",
                  "$(call-outgoing)",
                  "$(menu)",
                  "$(expand-all)",
                  "$(feedback)",
                  "$(group-by-ref-type)",
                  "$(ungroup-by-ref-type)",
                  "$(account)",
                  "$(bell-dot)",
                  "$(debug-console)",
                  "$(library)",
                  "$(output)",
                  "$(run-all)",
                  "$(sync-ignored)",
                  "$(pinned)",
                  "$(github-inverted)",
                  "$(debug-alt)",
                  "$(server-process)",
                  "$(server-environment)",
                  "$(pass)",
                  "$(stop-circle)",
                  "$(play-circle)",
                  "$(record)",
                  "$(debug-alt-small)",
                  "$(vm-connect)",
                  "$(cloud)",
                  "$(merge)",
                  "$(export)",
                  "$(graph-left)",
                  "$(magnet)",
                  "$(notebook)",
                  "$(redo)",
                  "$(check-all)",
                  "$(pinned-dirty)",
                  "$(pass-filled)",
                  "$(circle-large-filled)",
                  "$(circle-large-outline)",
                  "$(combine)",
                  "$(gather)",
                  "$(table)",
                  "$(variable-group)",
                  "$(type-hierarchy)",
                  "$(type-hierarchy-sub)",
                  "$(type-hierarchy-super)",
                  "$(git-pull-request-create)",
                  "$(run-above)",
                  "$(run-below)",
                  "$(notebook-template)",
                  "$(debug-rerun)",
                  "$(workspace-trusted)",
                  "$(workspace-untrusted)",
                  "$(workspace-unspecified)",
                  "$(terminal-cmd)",
                  "$(terminal-debian)",
                  "$(terminal-linux)",
                  "$(terminal-powershell)",
                  "$(terminal-tmux)",
                  "$(terminal-ubuntu)",
                  "$(terminal-bash)",
                  "$(arrow-swap)",
                  "$(copy)",
                  "$(person-add)",
                  "$(filter-filled)",
                  "$(wand)",
                  "$(debug-line-by-line)",
                  "$(inspect)",
                  "$(layers)",
                  "$(layers-dot)",
                  "$(layers-active)",
                  "$(compass)",
                  "$(compass-dot)",
                  "$(compass-active)",
                  "$(azure)",
                  "$(issue-draft)",
                  "$(git-pull-request-closed)",
                  "$(git-pull-request-draft)",
                  "$(debug-all)",
                  "$(debug-coverage)",
                  "$(run-errors)",
                  "$(folder-library)",
                  "$(debug-continue-small)",
                  "$(beaker-stop)",
                  "$(graph-line)",
                  "$(graph-scatter)",
                  "$(pie-chart)",
                  "$(bracket)",
                  "$(bracket-dot)",
                  "$(bracket-error)",
                  "$(lock-small)",
                  "$(azure-devops)",
                  "$(verified-filled)",
                  "$(newline)",
                  "$(layout)",
                  "$(layout-activitybar-left)",
                  "$(layout-activitybar-right)",
                  "$(layout-panel-left)",
                  "$(layout-panel-center)",
                  "$(layout-panel-justify)",
                  "$(layout-panel-right)",
                  "$(layout-panel)",
                  "$(layout-sidebar-left)",
                  "$(layout-sidebar-right)",
                  "$(layout-statusbar)",
                  "$(layout-menubar)",
                  "$(layout-centered)",
                  "$(target)",
                  "$(indent)",
                  "$(record-small)",
                  "$(error-small)",
                  "$(arrow-circle-down)",
                  "$(arrow-circle-left)",
                  "$(arrow-circle-right)",
                  "$(arrow-circle-up)",
                  "$(dialog-error)",
                  "$(dialog-warning)",
                  "$(dialog-info)",
                  "$(dialog-close)",
                  "$(tree-item-expanded)",
                  "$(tree-filter-on-type-on)",
                  "$(tree-filter-on-type-off)",
                  "$(tree-filter-clear)",
                  "$(tree-item-loading)",
                  "$(menu-selection)",
                  "$(menu-submenu)",
                  "$(menubar-more)",
                  "$(scrollbar-button-left)",
                  "$(scrollbar-button-right)",
                  "$(scrollbar-button-up)",
                  "$(scrollbar-button-down)",
                  "$(toolbar-more)",
                  "$(quick-input-back)"
                ]
              },
              "color": {
                "description": "A theme color ID to associate with this terminal.",
                "type": [
                  "string",
                  "null"
                ],
                "enum": [
                  "terminal.ansiBlack",
                  "terminal.ansiRed",
                  "terminal.ansiGreen",
                  "terminal.ansiYellow",
                  "terminal.ansiBlue",
                  "terminal.ansiMagenta",
                  "terminal.ansiCyan",
                  "terminal.ansiWhite"
                ],
                "default": null
              },
              "env": {
                "markdownDescription": "An object with environment variables that will be added to the terminal profile process. Set to `null` to delete environment variables from the base environment.",
                "type": "object",
                "additionalProperties": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "default": {}
              }
            }
          },
          {
            "type": "null"
          },
          {
            "type": "object",
            "required": [
              "path"
            ],
            "properties": {
              "path": {
                "description": "A single path to a shell executable or an array of paths that will be used as fallbacks when one fails.",
                "type": [
                  "string",
                  "array"
                ],
                "items": {
                  "type": "string"
                }
              },
              "args": {
                "description": "An optional set of arguments to run the shell executable with.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "overrideName": {
                "description": "Controls whether or not the profile name overrides the auto detected one.",
                "type": "boolean"
              },
              "icon": {
                "description": "A codicon ID to associate with this terminal.",
                "type": "string",
                "enum": [
                  "add",
                  "plus",
                  "gist-new",
                  "repo-create",
                  "lightbulb",
                  "light-bulb",
                  "repo",
                  "repo-delete",
                  "gist-fork",
                  "repo-forked",
                  "git-pull-request",
                  "git-pull-request-abandoned",
                  "record-keys",
                  "keyboard",
                  "tag",
                  "tag-add",
                  "tag-remove",
                  "person",
                  "person-follow",
                  "person-outline",
                  "person-filled",
                  "git-branch",
                  "git-branch-create",
                  "git-branch-delete",
                  "source-control",
                  "mirror",
                  "mirror-public",
                  "star",
                  "star-add",
                  "star-delete",
                  "star-empty",
                  "comment",
                  "comment-add",
                  "alert",
                  "warning",
                  "search",
                  "search-save",
                  "log-out",
                  "sign-out",
                  "log-in",
                  "sign-in",
                  "eye",
                  "eye-unwatch",
                  "eye-watch",
                  "circle-filled",
                  "primitive-dot",
                  "close-dirty",
                  "debug-breakpoint",
                  "debug-breakpoint-disabled",
                  "debug-hint",
                  "primitive-square",
                  "edit",
                  "pencil",
                  "info",
                  "issue-opened",
                  "gist-private",
                  "git-fork-private",
                  "lock",
                  "mirror-private",
                  "close",
                  "remove-close",
                  "x",
                  "repo-sync",
                  "sync",
                  "clone",
                  "desktop-download",
                  "beaker",
                  "microscope",
                  "vm",
                  "device-desktop",
                  "file",
                  "file-text",
                  "more",
                  "ellipsis",
                  "kebab-horizontal",
                  "mail-reply",
                  "reply",
                  "organization",
                  "organization-filled",
                  "organization-outline",
                  "new-file",
                  "file-add",
                  "new-folder",
                  "file-directory-create",
                  "trash",
                  "trashcan",
                  "history",
                  "clock",
                  "folder",
                  "file-directory",
                  "symbol-folder",
                  "logo-github",
                  "mark-github",
                  "github",
                  "terminal",
                  "console",
                  "repl",
                  "zap",
                  "symbol-event",
                  "error",
                  "stop",
                  "variable",
                  "symbol-variable",
                  "array",
                  "symbol-array",
                  "symbol-module",
                  "symbol-package",
                  "symbol-namespace",
                  "symbol-object",
                  "symbol-method",
                  "symbol-function",
                  "symbol-constructor",
                  "symbol-boolean",
                  "symbol-null",
                  "symbol-numeric",
                  "symbol-number",
                  "symbol-structure",
                  "symbol-struct",
                  "symbol-parameter",
                  "symbol-type-parameter",
                  "symbol-key",
                  "symbol-text",
                  "symbol-reference",
                  "go-to-file",
                  "symbol-enum",
                  "symbol-value",
                  "symbol-ruler",
                  "symbol-unit",
                  "activate-breakpoints",
                  "archive",
                  "arrow-both",
                  "arrow-down",
                  "arrow-left",
                  "arrow-right",
                  "arrow-small-down",
                  "arrow-small-left",
                  "arrow-small-right",
                  "arrow-small-up",
                  "arrow-up",
                  "bell",
                  "bold",
                  "book",
                  "bookmark",
                  "debug-breakpoint-conditional-unverified",
                  "debug-breakpoint-conditional",
                  "debug-breakpoint-conditional-disabled",
                  "debug-breakpoint-data-unverified",
                  "debug-breakpoint-data",
                  "debug-breakpoint-data-disabled",
                  "debug-breakpoint-log-unverified",
                  "debug-breakpoint-log",
                  "debug-breakpoint-log-disabled",
                  "briefcase",
                  "broadcast",
                  "browser",
                  "bug",
                  "calendar",
                  "case-sensitive",
                  "check",
                  "checklist",
                  "chevron-down",
                  "drop-down-button",
                  "chevron-left",
                  "chevron-right",
                  "chevron-up",
                  "chrome-close",
                  "chrome-maximize",
                  "chrome-minimize",
                  "chrome-restore",
                  "circle-outline",
                  "debug-breakpoint-unverified",
                  "circle-slash",
                  "circuit-board",
                  "clear-all",
                  "clippy",
                  "close-all",
                  "cloud-download",
                  "cloud-upload",
                  "code",
                  "collapse-all",
                  "color-mode",
                  "comment-discussion",
                  "compare-changes",
                  "credit-card",
                  "dash",
                  "dashboard",
                  "database",
                  "debug-continue",
                  "debug-disconnect",
                  "debug-pause",
                  "debug-restart",
                  "debug-start",
                  "debug-step-into",
                  "debug-step-out",
                  "debug-step-over",
                  "debug-stop",
                  "debug",
                  "device-camera-video",
                  "device-camera",
                  "device-mobile",
                  "diff-added",
                  "diff-ignored",
                  "diff-modified",
                  "diff-removed",
                  "diff-renamed",
                  "diff",
                  "discard",
                  "editor-layout",
                  "empty-window",
                  "exclude",
                  "extensions",
                  "eye-closed",
                  "file-binary",
                  "file-code",
                  "file-media",
                  "file-pdf",
                  "file-submodule",
                  "file-symlink-directory",
                  "file-symlink-file",
                  "file-zip",
                  "files",
                  "filter",
                  "flame",
                  "fold-down",
                  "fold-up",
                  "fold",
                  "folder-active",
                  "folder-opened",
                  "gear",
                  "gift",
                  "gist-secret",
                  "gist",
                  "git-commit",
                  "git-compare",
                  "git-merge",
                  "github-action",
                  "github-alt",
                  "globe",
                  "grabber",
                  "graph",
                  "gripper",
                  "heart",
                  "home",
                  "horizontal-rule",
                  "hubot",
                  "inbox",
                  "issue-closed",
                  "issue-reopened",
                  "issues",
                  "italic",
                  "jersey",
                  "json",
                  "kebab-vertical",
                  "key",
                  "law",
                  "lightbulb-autofix",
                  "link-external",
                  "link",
                  "list-ordered",
                  "list-unordered",
                  "live-share",
                  "loading",
                  "location",
                  "mail-read",
                  "mail",
                  "markdown",
                  "megaphone",
                  "mention",
                  "milestone",
                  "mortar-board",
                  "move",
                  "multiple-windows",
                  "mute",
                  "no-newline",
                  "note",
                  "octoface",
                  "open-preview",
                  "package",
                  "paintcan",
                  "pin",
                  "play",
                  "run",
                  "plug",
                  "preserve-case",
                  "preview",
                  "project",
                  "pulse",
                  "question",
                  "quote",
                  "radio-tower",
                  "reactions",
                  "references",
                  "refresh",
                  "regex",
                  "remote-explorer",
                  "remote",
                  "remove",
                  "replace-all",
                  "replace",
                  "repo-clone",
                  "repo-force-push",
                  "repo-pull",
                  "repo-push",
                  "report",
                  "request-changes",
                  "rocket",
                  "root-folder-opened",
                  "root-folder",
                  "rss",
                  "ruby",
                  "save-all",
                  "save-as",
                  "save",
                  "screen-full",
                  "screen-normal",
                  "search-stop",
                  "server",
                  "settings-gear",
                  "settings",
                  "shield",
                  "smiley",
                  "sort-precedence",
                  "split-horizontal",
                  "split-vertical",
                  "squirrel",
                  "star-full",
                  "star-half",
                  "symbol-class",
                  "symbol-color",
                  "symbol-customcolor",
                  "symbol-constant",
                  "symbol-enum-member",
                  "symbol-field",
                  "symbol-file",
                  "symbol-interface",
                  "symbol-keyword",
                  "symbol-misc",
                  "symbol-operator",
                  "symbol-property",
                  "wrench",
                  "wrench-subaction",
                  "symbol-snippet",
                  "tasklist",
                  "telescope",
                  "text-size",
                  "three-bars",
                  "thumbsdown",
                  "thumbsup",
                  "tools",
                  "triangle-down",
                  "triangle-left",
                  "triangle-right",
                  "triangle-up",
                  "twitter",
                  "unfold",
                  "unlock",
                  "unmute",
                  "unverified",
                  "verified",
                  "versions",
                  "vm-active",
                  "vm-outline",
                  "vm-running",
                  "watch",
                  "whitespace",
                  "whole-word",
                  "window",
                  "word-wrap",
                  "zoom-in",
                  "zoom-out",
                  "list-filter",
                  "list-flat",
                  "list-selection",
                  "selection",
                  "list-tree",
                  "debug-breakpoint-function-unverified",
                  "debug-breakpoint-function",
                  "debug-breakpoint-function-disabled",
                  "debug-stackframe-active",
                  "debug-stackframe-dot",
                  "debug-stackframe",
                  "debug-stackframe-focused",
                  "debug-breakpoint-unsupported",
                  "symbol-string",
                  "debug-reverse-continue",
                  "debug-step-back",
                  "debug-restart-frame",
                  "call-incoming",
                  "call-outgoing",
                  "menu",
                  "expand-all",
                  "feedback",
                  "group-by-ref-type",
                  "ungroup-by-ref-type",
                  "account",
                  "bell-dot",
                  "debug-console",
                  "library",
                  "output",
                  "run-all",
                  "sync-ignored",
                  "pinned",
                  "github-inverted",
                  "debug-alt",
                  "server-process",
                  "server-environment",
                  "pass",
                  "stop-circle",
                  "play-circle",
                  "record",
                  "debug-alt-small",
                  "vm-connect",
                  "cloud",
                  "merge",
                  "export",
                  "graph-left",
                  "magnet",
                  "notebook",
                  "redo",
                  "check-all",
                  "pinned-dirty",
                  "pass-filled",
                  "circle-large-filled",
                  "circle-large-outline",
                  "combine",
                  "gather",
                  "table",
                  "variable-group",
                  "type-hierarchy",
                  "type-hierarchy-sub",
                  "type-hierarchy-super",
                  "git-pull-request-create",
                  "run-above",
                  "run-below",
                  "notebook-template",
                  "debug-rerun",
                  "workspace-trusted",
                  "workspace-untrusted",
                  "workspace-unspecified",
                  "terminal-cmd",
                  "terminal-debian",
                  "terminal-linux",
                  "terminal-powershell",
                  "terminal-tmux",
                  "terminal-ubuntu",
                  "terminal-bash",
                  "arrow-swap",
                  "copy",
                  "person-add",
                  "filter-filled",
                  "wand",
                  "debug-line-by-line",
                  "inspect",
                  "layers",
                  "layers-dot",
                  "layers-active",
                  "compass",
                  "compass-dot",
                  "compass-active",
                  "azure",
                  "issue-draft",
                  "git-pull-request-closed",
                  "git-pull-request-draft",
                  "debug-all",
                  "debug-coverage",
                  "run-errors",
                  "folder-library",
                  "debug-continue-small",
                  "beaker-stop",
                  "graph-line",
                  "graph-scatter",
                  "pie-chart",
                  "bracket",
                  "bracket-dot",
                  "bracket-error",
                  "lock-small",
                  "azure-devops",
                  "verified-filled",
                  "newline",
                  "layout",
                  "layout-activitybar-left",
                  "layout-activitybar-right",
                  "layout-panel-left",
                  "layout-panel-center",
                  "layout-panel-justify",
                  "layout-panel-right",
                  "layout-panel",
                  "layout-sidebar-left",
                  "layout-sidebar-right",
                  "layout-statusbar",
                  "layout-menubar",
                  "layout-centered",
                  "target",
                  "indent",
                  "record-small",
                  "error-small",
                  "arrow-circle-down",
                  "arrow-circle-left",
                  "arrow-circle-right",
                  "arrow-circle-up",
                  "dialog-error",
                  "dialog-warning",
                  "dialog-info",
                  "dialog-close",
                  "tree-item-expanded",
                  "tree-filter-on-type-on",
                  "tree-filter-on-type-off",
                  "tree-filter-clear",
                  "tree-item-loading",
                  "menu-selection",
                  "menu-submenu",
                  "menubar-more",
                  "scrollbar-button-left",
                  "scrollbar-button-right",
                  "scrollbar-button-up",
                  "scrollbar-button-down",
                  "toolbar-more",
                  "quick-input-back"
                ],
                "markdownEnumDescriptions": [
                  "$(add)",
                  "$(plus)",
                  "$(gist-new)",
                  "$(repo-create)",
                  "$(lightbulb)",
                  "$(light-bulb)",
                  "$(repo)",
                  "$(repo-delete)",
                  "$(gist-fork)",
                  "$(repo-forked)",
                  "$(git-pull-request)",
                  "$(git-pull-request-abandoned)",
                  "$(record-keys)",
                  "$(keyboard)",
                  "$(tag)",
                  "$(tag-add)",
                  "$(tag-remove)",
                  "$(person)",
                  "$(person-follow)",
                  "$(person-outline)",
                  "$(person-filled)",
                  "$(git-branch)",
                  "$(git-branch-create)",
                  "$(git-branch-delete)",
                  "$(source-control)",
                  "$(mirror)",
                  "$(mirror-public)",
                  "$(star)",
                  "$(star-add)",
                  "$(star-delete)",
                  "$(star-empty)",
                  "$(comment)",
                  "$(comment-add)",
                  "$(alert)",
                  "$(warning)",
                  "$(search)",
                  "$(search-save)",
                  "$(log-out)",
                  "$(sign-out)",
                  "$(log-in)",
                  "$(sign-in)",
                  "$(eye)",
                  "$(eye-unwatch)",
                  "$(eye-watch)",
                  "$(circle-filled)",
                  "$(primitive-dot)",
                  "$(close-dirty)",
                  "$(debug-breakpoint)",
                  "$(debug-breakpoint-disabled)",
                  "$(debug-hint)",
                  "$(primitive-square)",
                  "$(edit)",
                  "$(pencil)",
                  "$(info)",
                  "$(issue-opened)",
                  "$(gist-private)",
                  "$(git-fork-private)",
                  "$(lock)",
                  "$(mirror-private)",
                  "$(close)",
                  "$(remove-close)",
                  "$(x)",
                  "$(repo-sync)",
                  "$(sync)",
                  "$(clone)",
                  "$(desktop-download)",
                  "$(beaker)",
                  "$(microscope)",
                  "$(vm)",
                  "$(device-desktop)",
                  "$(file)",
                  "$(file-text)",
                  "$(more)",
                  "$(ellipsis)",
                  "$(kebab-horizontal)",
                  "$(mail-reply)",
                  "$(reply)",
                  "$(organization)",
                  "$(organization-filled)",
                  "$(organization-outline)",
                  "$(new-file)",
                  "$(file-add)",
                  "$(new-folder)",
                  "$(file-directory-create)",
                  "$(trash)",
                  "$(trashcan)",
                  "$(history)",
                  "$(clock)",
                  "$(folder)",
                  "$(file-directory)",
                  "$(symbol-folder)",
                  "$(logo-github)",
                  "$(mark-github)",
                  "$(github)",
                  "$(terminal)",
                  "$(console)",
                  "$(repl)",
                  "$(zap)",
                  "$(symbol-event)",
                  "$(error)",
                  "$(stop)",
                  "$(variable)",
                  "$(symbol-variable)",
                  "$(array)",
                  "$(symbol-array)",
                  "$(symbol-module)",
                  "$(symbol-package)",
                  "$(symbol-namespace)",
                  "$(symbol-object)",
                  "$(symbol-method)",
                  "$(symbol-function)",
                  "$(symbol-constructor)",
                  "$(symbol-boolean)",
                  "$(symbol-null)",
                  "$(symbol-numeric)",
                  "$(symbol-number)",
                  "$(symbol-structure)",
                  "$(symbol-struct)",
                  "$(symbol-parameter)",
                  "$(symbol-type-parameter)",
                  "$(symbol-key)",
                  "$(symbol-text)",
                  "$(symbol-reference)",
                  "$(go-to-file)",
                  "$(symbol-enum)",
                  "$(symbol-value)",
                  "$(symbol-ruler)",
                  "$(symbol-unit)",
                  "$(activate-breakpoints)",
                  "$(archive)",
                  "$(arrow-both)",
                  "$(arrow-down)",
                  "$(arrow-left)",
                  "$(arrow-right)",
                  "$(arrow-small-down)",
                  "$(arrow-small-left)",
                  "$(arrow-small-right)",
                  "$(arrow-small-up)",
                  "$(arrow-up)",
                  "$(bell)",
                  "$(bold)",
                  "$(book)",
                  "$(bookmark)",
                  "$(debug-breakpoint-conditional-unverified)",
                  "$(debug-breakpoint-conditional)",
                  "$(debug-breakpoint-conditional-disabled)",
                  "$(debug-breakpoint-data-unverified)",
                  "$(debug-breakpoint-data)",
                  "$(debug-breakpoint-data-disabled)",
                  "$(debug-breakpoint-log-unverified)",
                  "$(debug-breakpoint-log)",
                  "$(debug-breakpoint-log-disabled)",
                  "$(briefcase)",
                  "$(broadcast)",
                  "$(browser)",
                  "$(bug)",
                  "$(calendar)",
                  "$(case-sensitive)",
                  "$(check)",
                  "$(checklist)",
                  "$(chevron-down)",
                  "$(drop-down-button)",
                  "$(chevron-left)",
                  "$(chevron-right)",
                  "$(chevron-up)",
                  "$(chrome-close)",
                  "$(chrome-maximize)",
                  "$(chrome-minimize)",
                  "$(chrome-restore)",
                  "$(circle-outline)",
                  "$(debug-breakpoint-unverified)",
                  "$(circle-slash)",
                  "$(circuit-board)",
                  "$(clear-all)",
                  "$(clippy)",
                  "$(close-all)",
                  "$(cloud-download)",
                  "$(cloud-upload)",
                  "$(code)",
                  "$(collapse-all)",
                  "$(color-mode)",
                  "$(comment-discussion)",
                  "$(compare-changes)",
                  "$(credit-card)",
                  "$(dash)",
                  "$(dashboard)",
                  "$(database)",
                  "$(debug-continue)",
                  "$(debug-disconnect)",
                  "$(debug-pause)",
                  "$(debug-restart)",
                  "$(debug-start)",
                  "$(debug-step-into)",
                  "$(debug-step-out)",
                  "$(debug-step-over)",
                  "$(debug-stop)",
                  "$(debug)",
                  "$(device-camera-video)",
                  "$(device-camera)",
                  "$(device-mobile)",
                  "$(diff-added)",
                  "$(diff-ignored)",
                  "$(diff-modified)",
                  "$(diff-removed)",
                  "$(diff-renamed)",
                  "$(diff)",
                  "$(discard)",
                  "$(editor-layout)",
                  "$(empty-window)",
                  "$(exclude)",
                  "$(extensions)",
                  "$(eye-closed)",
                  "$(file-binary)",
                  "$(file-code)",
                  "$(file-media)",
                  "$(file-pdf)",
                  "$(file-submodule)",
                  "$(file-symlink-directory)",
                  "$(file-symlink-file)",
                  "$(file-zip)",
                  "$(files)",
                  "$(filter)",
                  "$(flame)",
                  "$(fold-down)",
                  "$(fold-up)",
                  "$(fold)",
                  "$(folder-active)",
                  "$(folder-opened)",
                  "$(gear)",
                  "$(gift)",
                  "$(gist-secret)",
                  "$(gist)",
                  "$(git-commit)",
                  "$(git-compare)",
                  "$(git-merge)",
                  "$(github-action)",
                  "$(github-alt)",
                  "$(globe)",
                  "$(grabber)",
                  "$(graph)",
                  "$(gripper)",
                  "$(heart)",
                  "$(home)",
                  "$(horizontal-rule)",
                  "$(hubot)",
                  "$(inbox)",
                  "$(issue-closed)",
                  "$(issue-reopened)",
                  "$(issues)",
                  "$(italic)",
                  "$(jersey)",
                  "$(json)",
                  "$(kebab-vertical)",
                  "$(key)",
                  "$(law)",
                  "$(lightbulb-autofix)",
                  "$(link-external)",
                  "$(link)",
                  "$(list-ordered)",
                  "$(list-unordered)",
                  "$(live-share)",
                  "$(loading)",
                  "$(location)",
                  "$(mail-read)",
                  "$(mail)",
                  "$(markdown)",
                  "$(megaphone)",
                  "$(mention)",
                  "$(milestone)",
                  "$(mortar-board)",
                  "$(move)",
                  "$(multiple-windows)",
                  "$(mute)",
                  "$(no-newline)",
                  "$(note)",
                  "$(octoface)",
                  "$(open-preview)",
                  "$(package)",
                  "$(paintcan)",
                  "$(pin)",
                  "$(play)",
                  "$(run)",
                  "$(plug)",
                  "$(preserve-case)",
                  "$(preview)",
                  "$(project)",
                  "$(pulse)",
                  "$(question)",
                  "$(quote)",
                  "$(radio-tower)",
                  "$(reactions)",
                  "$(references)",
                  "$(refresh)",
                  "$(regex)",
                  "$(remote-explorer)",
                  "$(remote)",
                  "$(remove)",
                  "$(replace-all)",
                  "$(replace)",
                  "$(repo-clone)",
                  "$(repo-force-push)",
                  "$(repo-pull)",
                  "$(repo-push)",
                  "$(report)",
                  "$(request-changes)",
                  "$(rocket)",
                  "$(root-folder-opened)",
                  "$(root-folder)",
                  "$(rss)",
                  "$(ruby)",
                  "$(save-all)",
                  "$(save-as)",
                  "$(save)",
                  "$(screen-full)",
                  "$(screen-normal)",
                  "$(search-stop)",
                  "$(server)",
                  "$(settings-gear)",
                  "$(settings)",
                  "$(shield)",
                  "$(smiley)",
                  "$(sort-precedence)",
                  "$(split-horizontal)",
                  "$(split-vertical)",
                  "$(squirrel)",
                  "$(star-full)",
                  "$(star-half)",
                  "$(symbol-class)",
                  "$(symbol-color)",
                  "$(symbol-customcolor)",
                  "$(symbol-constant)",
                  "$(symbol-enum-member)",
                  "$(symbol-field)",
                  "$(symbol-file)",
                  "$(symbol-interface)",
                  "$(symbol-keyword)",
                  "$(symbol-misc)",
                  "$(symbol-operator)",
                  "$(symbol-property)",
                  "$(wrench)",
                  "$(wrench-subaction)",
                  "$(symbol-snippet)",
                  "$(tasklist)",
                  "$(telescope)",
                  "$(text-size)",
                  "$(three-bars)",
                  "$(thumbsdown)",
                  "$(thumbsup)",
                  "$(tools)",
                  "$(triangle-down)",
                  "$(triangle-left)",
                  "$(triangle-right)",
                  "$(triangle-up)",
                  "$(twitter)",
                  "$(unfold)",
                  "$(unlock)",
                  "$(unmute)",
                  "$(unverified)",
                  "$(verified)",
                  "$(versions)",
                  "$(vm-active)",
                  "$(vm-outline)",
                  "$(vm-running)",
                  "$(watch)",
                  "$(whitespace)",
                  "$(whole-word)",
                  "$(window)",
                  "$(word-wrap)",
                  "$(zoom-in)",
                  "$(zoom-out)",
                  "$(list-filter)",
                  "$(list-flat)",
                  "$(list-selection)",
                  "$(selection)",
                  "$(list-tree)",
                  "$(debug-breakpoint-function-unverified)",
                  "$(debug-breakpoint-function)",
                  "$(debug-breakpoint-function-disabled)",
                  "$(debug-stackframe-active)",
                  "$(debug-stackframe-dot)",
                  "$(debug-stackframe)",
                  "$(debug-stackframe-focused)",
                  "$(debug-breakpoint-unsupported)",
                  "$(symbol-string)",
                  "$(debug-reverse-continue)",
                  "$(debug-step-back)",
                  "$(debug-restart-frame)",
                  "$(call-incoming)",
                  "$(call-outgoing)",
                  "$(menu)",
                  "$(expand-all)",
                  "$(feedback)",
                  "$(group-by-ref-type)",
                  "$(ungroup-by-ref-type)",
                  "$(account)",
                  "$(bell-dot)",
                  "$(debug-console)",
                  "$(library)",
                  "$(output)",
                  "$(run-all)",
                  "$(sync-ignored)",
                  "$(pinned)",
                  "$(github-inverted)",
                  "$(debug-alt)",
                  "$(server-process)",
                  "$(server-environment)",
                  "$(pass)",
                  "$(stop-circle)",
                  "$(play-circle)",
                  "$(record)",
                  "$(debug-alt-small)",
                  "$(vm-connect)",
                  "$(cloud)",
                  "$(merge)",
                  "$(export)",
                  "$(graph-left)",
                  "$(magnet)",
                  "$(notebook)",
                  "$(redo)",
                  "$(check-all)",
                  "$(pinned-dirty)",
                  "$(pass-filled)",
                  "$(circle-large-filled)",
                  "$(circle-large-outline)",
                  "$(combine)",
                  "$(gather)",
                  "$(table)",
                  "$(variable-group)",
                  "$(type-hierarchy)",
                  "$(type-hierarchy-sub)",
                  "$(type-hierarchy-super)",
                  "$(git-pull-request-create)",
                  "$(run-above)",
                  "$(run-below)",
                  "$(notebook-template)",
                  "$(debug-rerun)",
                  "$(workspace-trusted)",
                  "$(workspace-untrusted)",
                  "$(workspace-unspecified)",
                  "$(terminal-cmd)",
                  "$(terminal-debian)",
                  "$(terminal-linux)",
                  "$(terminal-powershell)",
                  "$(terminal-tmux)",
                  "$(terminal-ubuntu)",
                  "$(terminal-bash)",
                  "$(arrow-swap)",
                  "$(copy)",
                  "$(person-add)",
                  "$(filter-filled)",
                  "$(wand)",
                  "$(debug-line-by-line)",
                  "$(inspect)",
                  "$(layers)",
                  "$(layers-dot)",
                  "$(layers-active)",
                  "$(compass)",
                  "$(compass-dot)",
                  "$(compass-active)",
                  "$(azure)",
                  "$(issue-draft)",
                  "$(git-pull-request-closed)",
                  "$(git-pull-request-draft)",
                  "$(debug-all)",
                  "$(debug-coverage)",
                  "$(run-errors)",
                  "$(folder-library)",
                  "$(debug-continue-small)",
                  "$(beaker-stop)",
                  "$(graph-line)",
                  "$(graph-scatter)",
                  "$(pie-chart)",
                  "$(bracket)",
                  "$(bracket-dot)",
                  "$(bracket-error)",
                  "$(lock-small)",
                  "$(azure-devops)",
                  "$(verified-filled)",
                  "$(newline)",
                  "$(layout)",
                  "$(layout-activitybar-left)",
                  "$(layout-activitybar-right)",
                  "$(layout-panel-left)",
                  "$(layout-panel-center)",
                  "$(layout-panel-justify)",
                  "$(layout-panel-right)",
                  "$(layout-panel)",
                  "$(layout-sidebar-left)",
                  "$(layout-sidebar-right)",
                  "$(layout-statusbar)",
                  "$(layout-menubar)",
                  "$(layout-centered)",
                  "$(target)",
                  "$(indent)",
                  "$(record-small)",
                  "$(error-small)",
                  "$(arrow-circle-down)",
                  "$(arrow-circle-left)",
                  "$(arrow-circle-right)",
                  "$(arrow-circle-up)",
                  "$(dialog-error)",
                  "$(dialog-warning)",
                  "$(dialog-info)",
                  "$(dialog-close)",
                  "$(tree-item-expanded)",
                  "$(tree-filter-on-type-on)",
                  "$(tree-filter-on-type-off)",
                  "$(tree-filter-clear)",
                  "$(tree-item-loading)",
                  "$(menu-selection)",
                  "$(menu-submenu)",
                  "$(menubar-more)",
                  "$(scrollbar-button-left)",
                  "$(scrollbar-button-right)",
                  "$(scrollbar-button-up)",
                  "$(scrollbar-button-down)",
                  "$(toolbar-more)",
                  "$(quick-input-back)"
                ]
              },
              "color": {
                "description": "A theme color ID to associate with this terminal.",
                "type": [
                  "string",
                  "null"
                ],
                "enum": [
                  "terminal.ansiBlack",
                  "terminal.ansiRed",
                  "terminal.ansiGreen",
                  "terminal.ansiYellow",
                  "terminal.ansiBlue",
                  "terminal.ansiMagenta",
                  "terminal.ansiCyan",
                  "terminal.ansiWhite"
                ],
                "default": null
              },
              "env": {
                "markdownDescription": "An object with environment variables that will be added to the terminal profile process. Set to `null` to delete environment variables from the base environment.",
                "type": "object",
                "additionalProperties": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "default": {}
              }
            }
          }
        ]
      },
      "defaultDefaultValue": {
        "bash": {
          "path": "bash",
          "args": [
            "-l"
          ],
          "icon": "terminal-bash"
        },
        "zsh": {
          "path": "zsh",
          "args": [
            "-l"
          ]
        },
        "fish": {
          "path": "fish",
          "args": [
            "-l"
          ]
        },
        "tmux": {
          "path": "tmux",
          "icon": "terminal-tmux"
        },
        "pwsh": {
          "path": "pwsh",
          "icon": "terminal-powershell"
        }
      },
      "scope": 3
    },
    "terminal.integrated.profiles.linux": {
      "restricted": true,
      "markdownDescription": "The Linux profiles to present when creating a new terminal via the terminal dropdown. Set the `path` property manually with an optional `args`.\n\nSet an existing profile to `null` to hide the profile from the list, for example: `\"bash\": null`.",
      "type": "object",
      "default": {
        "bash": {
          "path": "bash",
          "icon": "terminal-bash"
        },
        "zsh": {
          "path": "zsh"
        },
        "fish": {
          "path": "fish"
        },
        "tmux": {
          "path": "tmux",
          "icon": "terminal-tmux"
        },
        "pwsh": {
          "path": "pwsh",
          "icon": "terminal-powershell"
        }
      },
      "additionalProperties": {
        "anyOf": [
          {
            "type": "object",
            "required": [
              "extensionIdentifier",
              "id",
              "title"
            ],
            "properties": {
              "extensionIdentifier": {
                "description": "The extension that contributed this profile.",
                "type": "string"
              },
              "id": {
                "description": "The id of the extension terminal",
                "type": "string"
              },
              "title": {
                "description": "The name of the extension terminal",
                "type": "string"
              },
              "args": {
                "description": "An optional set of arguments to run the shell executable with.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "overrideName": {
                "description": "Controls whether or not the profile name overrides the auto detected one.",
                "type": "boolean"
              },
              "icon": {
                "description": "A codicon ID to associate with this terminal.",
                "type": "string",
                "enum": [
                  "add",
                  "plus",
                  "gist-new",
                  "repo-create",
                  "lightbulb",
                  "light-bulb",
                  "repo",
                  "repo-delete",
                  "gist-fork",
                  "repo-forked",
                  "git-pull-request",
                  "git-pull-request-abandoned",
                  "record-keys",
                  "keyboard",
                  "tag",
                  "tag-add",
                  "tag-remove",
                  "person",
                  "person-follow",
                  "person-outline",
                  "person-filled",
                  "git-branch",
                  "git-branch-create",
                  "git-branch-delete",
                  "source-control",
                  "mirror",
                  "mirror-public",
                  "star",
                  "star-add",
                  "star-delete",
                  "star-empty",
                  "comment",
                  "comment-add",
                  "alert",
                  "warning",
                  "search",
                  "search-save",
                  "log-out",
                  "sign-out",
                  "log-in",
                  "sign-in",
                  "eye",
                  "eye-unwatch",
                  "eye-watch",
                  "circle-filled",
                  "primitive-dot",
                  "close-dirty",
                  "debug-breakpoint",
                  "debug-breakpoint-disabled",
                  "debug-hint",
                  "primitive-square",
                  "edit",
                  "pencil",
                  "info",
                  "issue-opened",
                  "gist-private",
                  "git-fork-private",
                  "lock",
                  "mirror-private",
                  "close",
                  "remove-close",
                  "x",
                  "repo-sync",
                  "sync",
                  "clone",
                  "desktop-download",
                  "beaker",
                  "microscope",
                  "vm",
                  "device-desktop",
                  "file",
                  "file-text",
                  "more",
                  "ellipsis",
                  "kebab-horizontal",
                  "mail-reply",
                  "reply",
                  "organization",
                  "organization-filled",
                  "organization-outline",
                  "new-file",
                  "file-add",
                  "new-folder",
                  "file-directory-create",
                  "trash",
                  "trashcan",
                  "history",
                  "clock",
                  "folder",
                  "file-directory",
                  "symbol-folder",
                  "logo-github",
                  "mark-github",
                  "github",
                  "terminal",
                  "console",
                  "repl",
                  "zap",
                  "symbol-event",
                  "error",
                  "stop",
                  "variable",
                  "symbol-variable",
                  "array",
                  "symbol-array",
                  "symbol-module",
                  "symbol-package",
                  "symbol-namespace",
                  "symbol-object",
                  "symbol-method",
                  "symbol-function",
                  "symbol-constructor",
                  "symbol-boolean",
                  "symbol-null",
                  "symbol-numeric",
                  "symbol-number",
                  "symbol-structure",
                  "symbol-struct",
                  "symbol-parameter",
                  "symbol-type-parameter",
                  "symbol-key",
                  "symbol-text",
                  "symbol-reference",
                  "go-to-file",
                  "symbol-enum",
                  "symbol-value",
                  "symbol-ruler",
                  "symbol-unit",
                  "activate-breakpoints",
                  "archive",
                  "arrow-both",
                  "arrow-down",
                  "arrow-left",
                  "arrow-right",
                  "arrow-small-down",
                  "arrow-small-left",
                  "arrow-small-right",
                  "arrow-small-up",
                  "arrow-up",
                  "bell",
                  "bold",
                  "book",
                  "bookmark",
                  "debug-breakpoint-conditional-unverified",
                  "debug-breakpoint-conditional",
                  "debug-breakpoint-conditional-disabled",
                  "debug-breakpoint-data-unverified",
                  "debug-breakpoint-data",
                  "debug-breakpoint-data-disabled",
                  "debug-breakpoint-log-unverified",
                  "debug-breakpoint-log",
                  "debug-breakpoint-log-disabled",
                  "briefcase",
                  "broadcast",
                  "browser",
                  "bug",
                  "calendar",
                  "case-sensitive",
                  "check",
                  "checklist",
                  "chevron-down",
                  "drop-down-button",
                  "chevron-left",
                  "chevron-right",
                  "chevron-up",
                  "chrome-close",
                  "chrome-maximize",
                  "chrome-minimize",
                  "chrome-restore",
                  "circle-outline",
                  "debug-breakpoint-unverified",
                  "circle-slash",
                  "circuit-board",
                  "clear-all",
                  "clippy",
                  "close-all",
                  "cloud-download",
                  "cloud-upload",
                  "code",
                  "collapse-all",
                  "color-mode",
                  "comment-discussion",
                  "compare-changes",
                  "credit-card",
                  "dash",
                  "dashboard",
                  "database",
                  "debug-continue",
                  "debug-disconnect",
                  "debug-pause",
                  "debug-restart",
                  "debug-start",
                  "debug-step-into",
                  "debug-step-out",
                  "debug-step-over",
                  "debug-stop",
                  "debug",
                  "device-camera-video",
                  "device-camera",
                  "device-mobile",
                  "diff-added",
                  "diff-ignored",
                  "diff-modified",
                  "diff-removed",
                  "diff-renamed",
                  "diff",
                  "discard",
                  "editor-layout",
                  "empty-window",
                  "exclude",
                  "extensions",
                  "eye-closed",
                  "file-binary",
                  "file-code",
                  "file-media",
                  "file-pdf",
                  "file-submodule",
                  "file-symlink-directory",
                  "file-symlink-file",
                  "file-zip",
                  "files",
                  "filter",
                  "flame",
                  "fold-down",
                  "fold-up",
                  "fold",
                  "folder-active",
                  "folder-opened",
                  "gear",
                  "gift",
                  "gist-secret",
                  "gist",
                  "git-commit",
                  "git-compare",
                  "git-merge",
                  "github-action",
                  "github-alt",
                  "globe",
                  "grabber",
                  "graph",
                  "gripper",
                  "heart",
                  "home",
                  "horizontal-rule",
                  "hubot",
                  "inbox",
                  "issue-closed",
                  "issue-reopened",
                  "issues",
                  "italic",
                  "jersey",
                  "json",
                  "kebab-vertical",
                  "key",
                  "law",
                  "lightbulb-autofix",
                  "link-external",
                  "link",
                  "list-ordered",
                  "list-unordered",
                  "live-share",
                  "loading",
                  "location",
                  "mail-read",
                  "mail",
                  "markdown",
                  "megaphone",
                  "mention",
                  "milestone",
                  "mortar-board",
                  "move",
                  "multiple-windows",
                  "mute",
                  "no-newline",
                  "note",
                  "octoface",
                  "open-preview",
                  "package",
                  "paintcan",
                  "pin",
                  "play",
                  "run",
                  "plug",
                  "preserve-case",
                  "preview",
                  "project",
                  "pulse",
                  "question",
                  "quote",
                  "radio-tower",
                  "reactions",
                  "references",
                  "refresh",
                  "regex",
                  "remote-explorer",
                  "remote",
                  "remove",
                  "replace-all",
                  "replace",
                  "repo-clone",
                  "repo-force-push",
                  "repo-pull",
                  "repo-push",
                  "report",
                  "request-changes",
                  "rocket",
                  "root-folder-opened",
                  "root-folder",
                  "rss",
                  "ruby",
                  "save-all",
                  "save-as",
                  "save",
                  "screen-full",
                  "screen-normal",
                  "search-stop",
                  "server",
                  "settings-gear",
                  "settings",
                  "shield",
                  "smiley",
                  "sort-precedence",
                  "split-horizontal",
                  "split-vertical",
                  "squirrel",
                  "star-full",
                  "star-half",
                  "symbol-class",
                  "symbol-color",
                  "symbol-customcolor",
                  "symbol-constant",
                  "symbol-enum-member",
                  "symbol-field",
                  "symbol-file",
                  "symbol-interface",
                  "symbol-keyword",
                  "symbol-misc",
                  "symbol-operator",
                  "symbol-property",
                  "wrench",
                  "wrench-subaction",
                  "symbol-snippet",
                  "tasklist",
                  "telescope",
                  "text-size",
                  "three-bars",
                  "thumbsdown",
                  "thumbsup",
                  "tools",
                  "triangle-down",
                  "triangle-left",
                  "triangle-right",
                  "triangle-up",
                  "twitter",
                  "unfold",
                  "unlock",
                  "unmute",
                  "unverified",
                  "verified",
                  "versions",
                  "vm-active",
                  "vm-outline",
                  "vm-running",
                  "watch",
                  "whitespace",
                  "whole-word",
                  "window",
                  "word-wrap",
                  "zoom-in",
                  "zoom-out",
                  "list-filter",
                  "list-flat",
                  "list-selection",
                  "selection",
                  "list-tree",
                  "debug-breakpoint-function-unverified",
                  "debug-breakpoint-function",
                  "debug-breakpoint-function-disabled",
                  "debug-stackframe-active",
                  "debug-stackframe-dot",
                  "debug-stackframe",
                  "debug-stackframe-focused",
                  "debug-breakpoint-unsupported",
                  "symbol-string",
                  "debug-reverse-continue",
                  "debug-step-back",
                  "debug-restart-frame",
                  "call-incoming",
                  "call-outgoing",
                  "menu",
                  "expand-all",
                  "feedback",
                  "group-by-ref-type",
                  "ungroup-by-ref-type",
                  "account",
                  "bell-dot",
                  "debug-console",
                  "library",
                  "output",
                  "run-all",
                  "sync-ignored",
                  "pinned",
                  "github-inverted",
                  "debug-alt",
                  "server-process",
                  "server-environment",
                  "pass",
                  "stop-circle",
                  "play-circle",
                  "record",
                  "debug-alt-small",
                  "vm-connect",
                  "cloud",
                  "merge",
                  "export",
                  "graph-left",
                  "magnet",
                  "notebook",
                  "redo",
                  "check-all",
                  "pinned-dirty",
                  "pass-filled",
                  "circle-large-filled",
                  "circle-large-outline",
                  "combine",
                  "gather",
                  "table",
                  "variable-group",
                  "type-hierarchy",
                  "type-hierarchy-sub",
                  "type-hierarchy-super",
                  "git-pull-request-create",
                  "run-above",
                  "run-below",
                  "notebook-template",
                  "debug-rerun",
                  "workspace-trusted",
                  "workspace-untrusted",
                  "workspace-unspecified",
                  "terminal-cmd",
                  "terminal-debian",
                  "terminal-linux",
                  "terminal-powershell",
                  "terminal-tmux",
                  "terminal-ubuntu",
                  "terminal-bash",
                  "arrow-swap",
                  "copy",
                  "person-add",
                  "filter-filled",
                  "wand",
                  "debug-line-by-line",
                  "inspect",
                  "layers",
                  "layers-dot",
                  "layers-active",
                  "compass",
                  "compass-dot",
                  "compass-active",
                  "azure",
                  "issue-draft",
                  "git-pull-request-closed",
                  "git-pull-request-draft",
                  "debug-all",
                  "debug-coverage",
                  "run-errors",
                  "folder-library",
                  "debug-continue-small",
                  "beaker-stop",
                  "graph-line",
                  "graph-scatter",
                  "pie-chart",
                  "bracket",
                  "bracket-dot",
                  "bracket-error",
                  "lock-small",
                  "azure-devops",
                  "verified-filled",
                  "newline",
                  "layout",
                  "layout-activitybar-left",
                  "layout-activitybar-right",
                  "layout-panel-left",
                  "layout-panel-center",
                  "layout-panel-justify",
                  "layout-panel-right",
                  "layout-panel",
                  "layout-sidebar-left",
                  "layout-sidebar-right",
                  "layout-statusbar",
                  "layout-menubar",
                  "layout-centered",
                  "target",
                  "indent",
                  "record-small",
                  "error-small",
                  "arrow-circle-down",
                  "arrow-circle-left",
                  "arrow-circle-right",
                  "arrow-circle-up",
                  "dialog-error",
                  "dialog-warning",
                  "dialog-info",
                  "dialog-close",
                  "tree-item-expanded",
                  "tree-filter-on-type-on",
                  "tree-filter-on-type-off",
                  "tree-filter-clear",
                  "tree-item-loading",
                  "menu-selection",
                  "menu-submenu",
                  "menubar-more",
                  "scrollbar-button-left",
                  "scrollbar-button-right",
                  "scrollbar-button-up",
                  "scrollbar-button-down",
                  "toolbar-more",
                  "quick-input-back"
                ],
                "markdownEnumDescriptions": [
                  "$(add)",
                  "$(plus)",
                  "$(gist-new)",
                  "$(repo-create)",
                  "$(lightbulb)",
                  "$(light-bulb)",
                  "$(repo)",
                  "$(repo-delete)",
                  "$(gist-fork)",
                  "$(repo-forked)",
                  "$(git-pull-request)",
                  "$(git-pull-request-abandoned)",
                  "$(record-keys)",
                  "$(keyboard)",
                  "$(tag)",
                  "$(tag-add)",
                  "$(tag-remove)",
                  "$(person)",
                  "$(person-follow)",
                  "$(person-outline)",
                  "$(person-filled)",
                  "$(git-branch)",
                  "$(git-branch-create)",
                  "$(git-branch-delete)",
                  "$(source-control)",
                  "$(mirror)",
                  "$(mirror-public)",
                  "$(star)",
                  "$(star-add)",
                  "$(star-delete)",
                  "$(star-empty)",
                  "$(comment)",
                  "$(comment-add)",
                  "$(alert)",
                  "$(warning)",
                  "$(search)",
                  "$(search-save)",
                  "$(log-out)",
                  "$(sign-out)",
                  "$(log-in)",
                  "$(sign-in)",
                  "$(eye)",
                  "$(eye-unwatch)",
                  "$(eye-watch)",
                  "$(circle-filled)",
                  "$(primitive-dot)",
                  "$(close-dirty)",
                  "$(debug-breakpoint)",
                  "$(debug-breakpoint-disabled)",
                  "$(debug-hint)",
                  "$(primitive-square)",
                  "$(edit)",
                  "$(pencil)",
                  "$(info)",
                  "$(issue-opened)",
                  "$(gist-private)",
                  "$(git-fork-private)",
                  "$(lock)",
                  "$(mirror-private)",
                  "$(close)",
                  "$(remove-close)",
                  "$(x)",
                  "$(repo-sync)",
                  "$(sync)",
                  "$(clone)",
                  "$(desktop-download)",
                  "$(beaker)",
                  "$(microscope)",
                  "$(vm)",
                  "$(device-desktop)",
                  "$(file)",
                  "$(file-text)",
                  "$(more)",
                  "$(ellipsis)",
                  "$(kebab-horizontal)",
                  "$(mail-reply)",
                  "$(reply)",
                  "$(organization)",
                  "$(organization-filled)",
                  "$(organization-outline)",
                  "$(new-file)",
                  "$(file-add)",
                  "$(new-folder)",
                  "$(file-directory-create)",
                  "$(trash)",
                  "$(trashcan)",
                  "$(history)",
                  "$(clock)",
                  "$(folder)",
                  "$(file-directory)",
                  "$(symbol-folder)",
                  "$(logo-github)",
                  "$(mark-github)",
                  "$(github)",
                  "$(terminal)",
                  "$(console)",
                  "$(repl)",
                  "$(zap)",
                  "$(symbol-event)",
                  "$(error)",
                  "$(stop)",
                  "$(variable)",
                  "$(symbol-variable)",
                  "$(array)",
                  "$(symbol-array)",
                  "$(symbol-module)",
                  "$(symbol-package)",
                  "$(symbol-namespace)",
                  "$(symbol-object)",
                  "$(symbol-method)",
                  "$(symbol-function)",
                  "$(symbol-constructor)",
                  "$(symbol-boolean)",
                  "$(symbol-null)",
                  "$(symbol-numeric)",
                  "$(symbol-number)",
                  "$(symbol-structure)",
                  "$(symbol-struct)",
                  "$(symbol-parameter)",
                  "$(symbol-type-parameter)",
                  "$(symbol-key)",
                  "$(symbol-text)",
                  "$(symbol-reference)",
                  "$(go-to-file)",
                  "$(symbol-enum)",
                  "$(symbol-value)",
                  "$(symbol-ruler)",
                  "$(symbol-unit)",
                  "$(activate-breakpoints)",
                  "$(archive)",
                  "$(arrow-both)",
                  "$(arrow-down)",
                  "$(arrow-left)",
                  "$(arrow-right)",
                  "$(arrow-small-down)",
                  "$(arrow-small-left)",
                  "$(arrow-small-right)",
                  "$(arrow-small-up)",
                  "$(arrow-up)",
                  "$(bell)",
                  "$(bold)",
                  "$(book)",
                  "$(bookmark)",
                  "$(debug-breakpoint-conditional-unverified)",
                  "$(debug-breakpoint-conditional)",
                  "$(debug-breakpoint-conditional-disabled)",
                  "$(debug-breakpoint-data-unverified)",
                  "$(debug-breakpoint-data)",
                  "$(debug-breakpoint-data-disabled)",
                  "$(debug-breakpoint-log-unverified)",
                  "$(debug-breakpoint-log)",
                  "$(debug-breakpoint-log-disabled)",
                  "$(briefcase)",
                  "$(broadcast)",
                  "$(browser)",
                  "$(bug)",
                  "$(calendar)",
                  "$(case-sensitive)",
                  "$(check)",
                  "$(checklist)",
                  "$(chevron-down)",
                  "$(drop-down-button)",
                  "$(chevron-left)",
                  "$(chevron-right)",
                  "$(chevron-up)",
                  "$(chrome-close)",
                  "$(chrome-maximize)",
                  "$(chrome-minimize)",
                  "$(chrome-restore)",
                  "$(circle-outline)",
                  "$(debug-breakpoint-unverified)",
                  "$(circle-slash)",
                  "$(circuit-board)",
                  "$(clear-all)",
                  "$(clippy)",
                  "$(close-all)",
                  "$(cloud-download)",
                  "$(cloud-upload)",
                  "$(code)",
                  "$(collapse-all)",
                  "$(color-mode)",
                  "$(comment-discussion)",
                  "$(compare-changes)",
                  "$(credit-card)",
                  "$(dash)",
                  "$(dashboard)",
                  "$(database)",
                  "$(debug-continue)",
                  "$(debug-disconnect)",
                  "$(debug-pause)",
                  "$(debug-restart)",
                  "$(debug-start)",
                  "$(debug-step-into)",
                  "$(debug-step-out)",
                  "$(debug-step-over)",
                  "$(debug-stop)",
                  "$(debug)",
                  "$(device-camera-video)",
                  "$(device-camera)",
                  "$(device-mobile)",
                  "$(diff-added)",
                  "$(diff-ignored)",
                  "$(diff-modified)",
                  "$(diff-removed)",
                  "$(diff-renamed)",
                  "$(diff)",
                  "$(discard)",
                  "$(editor-layout)",
                  "$(empty-window)",
                  "$(exclude)",
                  "$(extensions)",
                  "$(eye-closed)",
                  "$(file-binary)",
                  "$(file-code)",
                  "$(file-media)",
                  "$(file-pdf)",
                  "$(file-submodule)",
                  "$(file-symlink-directory)",
                  "$(file-symlink-file)",
                  "$(file-zip)",
                  "$(files)",
                  "$(filter)",
                  "$(flame)",
                  "$(fold-down)",
                  "$(fold-up)",
                  "$(fold)",
                  "$(folder-active)",
                  "$(folder-opened)",
                  "$(gear)",
                  "$(gift)",
                  "$(gist-secret)",
                  "$(gist)",
                  "$(git-commit)",
                  "$(git-compare)",
                  "$(git-merge)",
                  "$(github-action)",
                  "$(github-alt)",
                  "$(globe)",
                  "$(grabber)",
                  "$(graph)",
                  "$(gripper)",
                  "$(heart)",
                  "$(home)",
                  "$(horizontal-rule)",
                  "$(hubot)",
                  "$(inbox)",
                  "$(issue-closed)",
                  "$(issue-reopened)",
                  "$(issues)",
                  "$(italic)",
                  "$(jersey)",
                  "$(json)",
                  "$(kebab-vertical)",
                  "$(key)",
                  "$(law)",
                  "$(lightbulb-autofix)",
                  "$(link-external)",
                  "$(link)",
                  "$(list-ordered)",
                  "$(list-unordered)",
                  "$(live-share)",
                  "$(loading)",
                  "$(location)",
                  "$(mail-read)",
                  "$(mail)",
                  "$(markdown)",
                  "$(megaphone)",
                  "$(mention)",
                  "$(milestone)",
                  "$(mortar-board)",
                  "$(move)",
                  "$(multiple-windows)",
                  "$(mute)",
                  "$(no-newline)",
                  "$(note)",
                  "$(octoface)",
                  "$(open-preview)",
                  "$(package)",
                  "$(paintcan)",
                  "$(pin)",
                  "$(play)",
                  "$(run)",
                  "$(plug)",
                  "$(preserve-case)",
                  "$(preview)",
                  "$(project)",
                  "$(pulse)",
                  "$(question)",
                  "$(quote)",
                  "$(radio-tower)",
                  "$(reactions)",
                  "$(references)",
                  "$(refresh)",
                  "$(regex)",
                  "$(remote-explorer)",
                  "$(remote)",
                  "$(remove)",
                  "$(replace-all)",
                  "$(replace)",
                  "$(repo-clone)",
                  "$(repo-force-push)",
                  "$(repo-pull)",
                  "$(repo-push)",
                  "$(report)",
                  "$(request-changes)",
                  "$(rocket)",
                  "$(root-folder-opened)",
                  "$(root-folder)",
                  "$(rss)",
                  "$(ruby)",
                  "$(save-all)",
                  "$(save-as)",
                  "$(save)",
                  "$(screen-full)",
                  "$(screen-normal)",
                  "$(search-stop)",
                  "$(server)",
                  "$(settings-gear)",
                  "$(settings)",
                  "$(shield)",
                  "$(smiley)",
                  "$(sort-precedence)",
                  "$(split-horizontal)",
                  "$(split-vertical)",
                  "$(squirrel)",
                  "$(star-full)",
                  "$(star-half)",
                  "$(symbol-class)",
                  "$(symbol-color)",
                  "$(symbol-customcolor)",
                  "$(symbol-constant)",
                  "$(symbol-enum-member)",
                  "$(symbol-field)",
                  "$(symbol-file)",
                  "$(symbol-interface)",
                  "$(symbol-keyword)",
                  "$(symbol-misc)",
                  "$(symbol-operator)",
                  "$(symbol-property)",
                  "$(wrench)",
                  "$(wrench-subaction)",
                  "$(symbol-snippet)",
                  "$(tasklist)",
                  "$(telescope)",
                  "$(text-size)",
                  "$(three-bars)",
                  "$(thumbsdown)",
                  "$(thumbsup)",
                  "$(tools)",
                  "$(triangle-down)",
                  "$(triangle-left)",
                  "$(triangle-right)",
                  "$(triangle-up)",
                  "$(twitter)",
                  "$(unfold)",
                  "$(unlock)",
                  "$(unmute)",
                  "$(unverified)",
                  "$(verified)",
                  "$(versions)",
                  "$(vm-active)",
                  "$(vm-outline)",
                  "$(vm-running)",
                  "$(watch)",
                  "$(whitespace)",
                  "$(whole-word)",
                  "$(window)",
                  "$(word-wrap)",
                  "$(zoom-in)",
                  "$(zoom-out)",
                  "$(list-filter)",
                  "$(list-flat)",
                  "$(list-selection)",
                  "$(selection)",
                  "$(list-tree)",
                  "$(debug-breakpoint-function-unverified)",
                  "$(debug-breakpoint-function)",
                  "$(debug-breakpoint-function-disabled)",
                  "$(debug-stackframe-active)",
                  "$(debug-stackframe-dot)",
                  "$(debug-stackframe)",
                  "$(debug-stackframe-focused)",
                  "$(debug-breakpoint-unsupported)",
                  "$(symbol-string)",
                  "$(debug-reverse-continue)",
                  "$(debug-step-back)",
                  "$(debug-restart-frame)",
                  "$(call-incoming)",
                  "$(call-outgoing)",
                  "$(menu)",
                  "$(expand-all)",
                  "$(feedback)",
                  "$(group-by-ref-type)",
                  "$(ungroup-by-ref-type)",
                  "$(account)",
                  "$(bell-dot)",
                  "$(debug-console)",
                  "$(library)",
                  "$(output)",
                  "$(run-all)",
                  "$(sync-ignored)",
                  "$(pinned)",
                  "$(github-inverted)",
                  "$(debug-alt)",
                  "$(server-process)",
                  "$(server-environment)",
                  "$(pass)",
                  "$(stop-circle)",
                  "$(play-circle)",
                  "$(record)",
                  "$(debug-alt-small)",
                  "$(vm-connect)",
                  "$(cloud)",
                  "$(merge)",
                  "$(export)",
                  "$(graph-left)",
                  "$(magnet)",
                  "$(notebook)",
                  "$(redo)",
                  "$(check-all)",
                  "$(pinned-dirty)",
                  "$(pass-filled)",
                  "$(circle-large-filled)",
                  "$(circle-large-outline)",
                  "$(combine)",
                  "$(gather)",
                  "$(table)",
                  "$(variable-group)",
                  "$(type-hierarchy)",
                  "$(type-hierarchy-sub)",
                  "$(type-hierarchy-super)",
                  "$(git-pull-request-create)",
                  "$(run-above)",
                  "$(run-below)",
                  "$(notebook-template)",
                  "$(debug-rerun)",
                  "$(workspace-trusted)",
                  "$(workspace-untrusted)",
                  "$(workspace-unspecified)",
                  "$(terminal-cmd)",
                  "$(terminal-debian)",
                  "$(terminal-linux)",
                  "$(terminal-powershell)",
                  "$(terminal-tmux)",
                  "$(terminal-ubuntu)",
                  "$(terminal-bash)",
                  "$(arrow-swap)",
                  "$(copy)",
                  "$(person-add)",
                  "$(filter-filled)",
                  "$(wand)",
                  "$(debug-line-by-line)",
                  "$(inspect)",
                  "$(layers)",
                  "$(layers-dot)",
                  "$(layers-active)",
                  "$(compass)",
                  "$(compass-dot)",
                  "$(compass-active)",
                  "$(azure)",
                  "$(issue-draft)",
                  "$(git-pull-request-closed)",
                  "$(git-pull-request-draft)",
                  "$(debug-all)",
                  "$(debug-coverage)",
                  "$(run-errors)",
                  "$(folder-library)",
                  "$(debug-continue-small)",
                  "$(beaker-stop)",
                  "$(graph-line)",
                  "$(graph-scatter)",
                  "$(pie-chart)",
                  "$(bracket)",
                  "$(bracket-dot)",
                  "$(bracket-error)",
                  "$(lock-small)",
                  "$(azure-devops)",
                  "$(verified-filled)",
                  "$(newline)",
                  "$(layout)",
                  "$(layout-activitybar-left)",
                  "$(layout-activitybar-right)",
                  "$(layout-panel-left)",
                  "$(layout-panel-center)",
                  "$(layout-panel-justify)",
                  "$(layout-panel-right)",
                  "$(layout-panel)",
                  "$(layout-sidebar-left)",
                  "$(layout-sidebar-right)",
                  "$(layout-statusbar)",
                  "$(layout-menubar)",
                  "$(layout-centered)",
                  "$(target)",
                  "$(indent)",
                  "$(record-small)",
                  "$(error-small)",
                  "$(arrow-circle-down)",
                  "$(arrow-circle-left)",
                  "$(arrow-circle-right)",
                  "$(arrow-circle-up)",
                  "$(dialog-error)",
                  "$(dialog-warning)",
                  "$(dialog-info)",
                  "$(dialog-close)",
                  "$(tree-item-expanded)",
                  "$(tree-filter-on-type-on)",
                  "$(tree-filter-on-type-off)",
                  "$(tree-filter-clear)",
                  "$(tree-item-loading)",
                  "$(menu-selection)",
                  "$(menu-submenu)",
                  "$(menubar-more)",
                  "$(scrollbar-button-left)",
                  "$(scrollbar-button-right)",
                  "$(scrollbar-button-up)",
                  "$(scrollbar-button-down)",
                  "$(toolbar-more)",
                  "$(quick-input-back)"
                ]
              },
              "color": {
                "description": "A theme color ID to associate with this terminal.",
                "type": [
                  "string",
                  "null"
                ],
                "enum": [
                  "terminal.ansiBlack",
                  "terminal.ansiRed",
                  "terminal.ansiGreen",
                  "terminal.ansiYellow",
                  "terminal.ansiBlue",
                  "terminal.ansiMagenta",
                  "terminal.ansiCyan",
                  "terminal.ansiWhite"
                ],
                "default": null
              },
              "env": {
                "markdownDescription": "An object with environment variables that will be added to the terminal profile process. Set to `null` to delete environment variables from the base environment.",
                "type": "object",
                "additionalProperties": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "default": {}
              }
            }
          },
          {
            "type": "null"
          },
          {
            "type": "object",
            "required": [
              "path"
            ],
            "properties": {
              "path": {
                "description": "A single path to a shell executable or an array of paths that will be used as fallbacks when one fails.",
                "type": [
                  "string",
                  "array"
                ],
                "items": {
                  "type": "string"
                }
              },
              "args": {
                "description": "An optional set of arguments to run the shell executable with.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "overrideName": {
                "description": "Controls whether or not the profile name overrides the auto detected one.",
                "type": "boolean"
              },
              "icon": {
                "description": "A codicon ID to associate with this terminal.",
                "type": "string",
                "enum": [
                  "add",
                  "plus",
                  "gist-new",
                  "repo-create",
                  "lightbulb",
                  "light-bulb",
                  "repo",
                  "repo-delete",
                  "gist-fork",
                  "repo-forked",
                  "git-pull-request",
                  "git-pull-request-abandoned",
                  "record-keys",
                  "keyboard",
                  "tag",
                  "tag-add",
                  "tag-remove",
                  "person",
                  "person-follow",
                  "person-outline",
                  "person-filled",
                  "git-branch",
                  "git-branch-create",
                  "git-branch-delete",
                  "source-control",
                  "mirror",
                  "mirror-public",
                  "star",
                  "star-add",
                  "star-delete",
                  "star-empty",
                  "comment",
                  "comment-add",
                  "alert",
                  "warning",
                  "search",
                  "search-save",
                  "log-out",
                  "sign-out",
                  "log-in",
                  "sign-in",
                  "eye",
                  "eye-unwatch",
                  "eye-watch",
                  "circle-filled",
                  "primitive-dot",
                  "close-dirty",
                  "debug-breakpoint",
                  "debug-breakpoint-disabled",
                  "debug-hint",
                  "primitive-square",
                  "edit",
                  "pencil",
                  "info",
                  "issue-opened",
                  "gist-private",
                  "git-fork-private",
                  "lock",
                  "mirror-private",
                  "close",
                  "remove-close",
                  "x",
                  "repo-sync",
                  "sync",
                  "clone",
                  "desktop-download",
                  "beaker",
                  "microscope",
                  "vm",
                  "device-desktop",
                  "file",
                  "file-text",
                  "more",
                  "ellipsis",
                  "kebab-horizontal",
                  "mail-reply",
                  "reply",
                  "organization",
                  "organization-filled",
                  "organization-outline",
                  "new-file",
                  "file-add",
                  "new-folder",
                  "file-directory-create",
                  "trash",
                  "trashcan",
                  "history",
                  "clock",
                  "folder",
                  "file-directory",
                  "symbol-folder",
                  "logo-github",
                  "mark-github",
                  "github",
                  "terminal",
                  "console",
                  "repl",
                  "zap",
                  "symbol-event",
                  "error",
                  "stop",
                  "variable",
                  "symbol-variable",
                  "array",
                  "symbol-array",
                  "symbol-module",
                  "symbol-package",
                  "symbol-namespace",
                  "symbol-object",
                  "symbol-method",
                  "symbol-function",
                  "symbol-constructor",
                  "symbol-boolean",
                  "symbol-null",
                  "symbol-numeric",
                  "symbol-number",
                  "symbol-structure",
                  "symbol-struct",
                  "symbol-parameter",
                  "symbol-type-parameter",
                  "symbol-key",
                  "symbol-text",
                  "symbol-reference",
                  "go-to-file",
                  "symbol-enum",
                  "symbol-value",
                  "symbol-ruler",
                  "symbol-unit",
                  "activate-breakpoints",
                  "archive",
                  "arrow-both",
                  "arrow-down",
                  "arrow-left",
                  "arrow-right",
                  "arrow-small-down",
                  "arrow-small-left",
                  "arrow-small-right",
                  "arrow-small-up",
                  "arrow-up",
                  "bell",
                  "bold",
                  "book",
                  "bookmark",
                  "debug-breakpoint-conditional-unverified",
                  "debug-breakpoint-conditional",
                  "debug-breakpoint-conditional-disabled",
                  "debug-breakpoint-data-unverified",
                  "debug-breakpoint-data",
                  "debug-breakpoint-data-disabled",
                  "debug-breakpoint-log-unverified",
                  "debug-breakpoint-log",
                  "debug-breakpoint-log-disabled",
                  "briefcase",
                  "broadcast",
                  "browser",
                  "bug",
                  "calendar",
                  "case-sensitive",
                  "check",
                  "checklist",
                  "chevron-down",
                  "drop-down-button",
                  "chevron-left",
                  "chevron-right",
                  "chevron-up",
                  "chrome-close",
                  "chrome-maximize",
                  "chrome-minimize",
                  "chrome-restore",
                  "circle-outline",
                  "debug-breakpoint-unverified",
                  "circle-slash",
                  "circuit-board",
                  "clear-all",
                  "clippy",
                  "close-all",
                  "cloud-download",
                  "cloud-upload",
                  "code",
                  "collapse-all",
                  "color-mode",
                  "comment-discussion",
                  "compare-changes",
                  "credit-card",
                  "dash",
                  "dashboard",
                  "database",
                  "debug-continue",
                  "debug-disconnect",
                  "debug-pause",
                  "debug-restart",
                  "debug-start",
                  "debug-step-into",
                  "debug-step-out",
                  "debug-step-over",
                  "debug-stop",
                  "debug",
                  "device-camera-video",
                  "device-camera",
                  "device-mobile",
                  "diff-added",
                  "diff-ignored",
                  "diff-modified",
                  "diff-removed",
                  "diff-renamed",
                  "diff",
                  "discard",
                  "editor-layout",
                  "empty-window",
                  "exclude",
                  "extensions",
                  "eye-closed",
                  "file-binary",
                  "file-code",
                  "file-media",
                  "file-pdf",
                  "file-submodule",
                  "file-symlink-directory",
                  "file-symlink-file",
                  "file-zip",
                  "files",
                  "filter",
                  "flame",
                  "fold-down",
                  "fold-up",
                  "fold",
                  "folder-active",
                  "folder-opened",
                  "gear",
                  "gift",
                  "gist-secret",
                  "gist",
                  "git-commit",
                  "git-compare",
                  "git-merge",
                  "github-action",
                  "github-alt",
                  "globe",
                  "grabber",
                  "graph",
                  "gripper",
                  "heart",
                  "home",
                  "horizontal-rule",
                  "hubot",
                  "inbox",
                  "issue-closed",
                  "issue-reopened",
                  "issues",
                  "italic",
                  "jersey",
                  "json",
                  "kebab-vertical",
                  "key",
                  "law",
                  "lightbulb-autofix",
                  "link-external",
                  "link",
                  "list-ordered",
                  "list-unordered",
                  "live-share",
                  "loading",
                  "location",
                  "mail-read",
                  "mail",
                  "markdown",
                  "megaphone",
                  "mention",
                  "milestone",
                  "mortar-board",
                  "move",
                  "multiple-windows",
                  "mute",
                  "no-newline",
                  "note",
                  "octoface",
                  "open-preview",
                  "package",
                  "paintcan",
                  "pin",
                  "play",
                  "run",
                  "plug",
                  "preserve-case",
                  "preview",
                  "project",
                  "pulse",
                  "question",
                  "quote",
                  "radio-tower",
                  "reactions",
                  "references",
                  "refresh",
                  "regex",
                  "remote-explorer",
                  "remote",
                  "remove",
                  "replace-all",
                  "replace",
                  "repo-clone",
                  "repo-force-push",
                  "repo-pull",
                  "repo-push",
                  "report",
                  "request-changes",
                  "rocket",
                  "root-folder-opened",
                  "root-folder",
                  "rss",
                  "ruby",
                  "save-all",
                  "save-as",
                  "save",
                  "screen-full",
                  "screen-normal",
                  "search-stop",
                  "server",
                  "settings-gear",
                  "settings",
                  "shield",
                  "smiley",
                  "sort-precedence",
                  "split-horizontal",
                  "split-vertical",
                  "squirrel",
                  "star-full",
                  "star-half",
                  "symbol-class",
                  "symbol-color",
                  "symbol-customcolor",
                  "symbol-constant",
                  "symbol-enum-member",
                  "symbol-field",
                  "symbol-file",
                  "symbol-interface",
                  "symbol-keyword",
                  "symbol-misc",
                  "symbol-operator",
                  "symbol-property",
                  "wrench",
                  "wrench-subaction",
                  "symbol-snippet",
                  "tasklist",
                  "telescope",
                  "text-size",
                  "three-bars",
                  "thumbsdown",
                  "thumbsup",
                  "tools",
                  "triangle-down",
                  "triangle-left",
                  "triangle-right",
                  "triangle-up",
                  "twitter",
                  "unfold",
                  "unlock",
                  "unmute",
                  "unverified",
                  "verified",
                  "versions",
                  "vm-active",
                  "vm-outline",
                  "vm-running",
                  "watch",
                  "whitespace",
                  "whole-word",
                  "window",
                  "word-wrap",
                  "zoom-in",
                  "zoom-out",
                  "list-filter",
                  "list-flat",
                  "list-selection",
                  "selection",
                  "list-tree",
                  "debug-breakpoint-function-unverified",
                  "debug-breakpoint-function",
                  "debug-breakpoint-function-disabled",
                  "debug-stackframe-active",
                  "debug-stackframe-dot",
                  "debug-stackframe",
                  "debug-stackframe-focused",
                  "debug-breakpoint-unsupported",
                  "symbol-string",
                  "debug-reverse-continue",
                  "debug-step-back",
                  "debug-restart-frame",
                  "call-incoming",
                  "call-outgoing",
                  "menu",
                  "expand-all",
                  "feedback",
                  "group-by-ref-type",
                  "ungroup-by-ref-type",
                  "account",
                  "bell-dot",
                  "debug-console",
                  "library",
                  "output",
                  "run-all",
                  "sync-ignored",
                  "pinned",
                  "github-inverted",
                  "debug-alt",
                  "server-process",
                  "server-environment",
                  "pass",
                  "stop-circle",
                  "play-circle",
                  "record",
                  "debug-alt-small",
                  "vm-connect",
                  "cloud",
                  "merge",
                  "export",
                  "graph-left",
                  "magnet",
                  "notebook",
                  "redo",
                  "check-all",
                  "pinned-dirty",
                  "pass-filled",
                  "circle-large-filled",
                  "circle-large-outline",
                  "combine",
                  "gather",
                  "table",
                  "variable-group",
                  "type-hierarchy",
                  "type-hierarchy-sub",
                  "type-hierarchy-super",
                  "git-pull-request-create",
                  "run-above",
                  "run-below",
                  "notebook-template",
                  "debug-rerun",
                  "workspace-trusted",
                  "workspace-untrusted",
                  "workspace-unspecified",
                  "terminal-cmd",
                  "terminal-debian",
                  "terminal-linux",
                  "terminal-powershell",
                  "terminal-tmux",
                  "terminal-ubuntu",
                  "terminal-bash",
                  "arrow-swap",
                  "copy",
                  "person-add",
                  "filter-filled",
                  "wand",
                  "debug-line-by-line",
                  "inspect",
                  "layers",
                  "layers-dot",
                  "layers-active",
                  "compass",
                  "compass-dot",
                  "compass-active",
                  "azure",
                  "issue-draft",
                  "git-pull-request-closed",
                  "git-pull-request-draft",
                  "debug-all",
                  "debug-coverage",
                  "run-errors",
                  "folder-library",
                  "debug-continue-small",
                  "beaker-stop",
                  "graph-line",
                  "graph-scatter",
                  "pie-chart",
                  "bracket",
                  "bracket-dot",
                  "bracket-error",
                  "lock-small",
                  "azure-devops",
                  "verified-filled",
                  "newline",
                  "layout",
                  "layout-activitybar-left",
                  "layout-activitybar-right",
                  "layout-panel-left",
                  "layout-panel-center",
                  "layout-panel-justify",
                  "layout-panel-right",
                  "layout-panel",
                  "layout-sidebar-left",
                  "layout-sidebar-right",
                  "layout-statusbar",
                  "layout-menubar",
                  "layout-centered",
                  "target",
                  "indent",
                  "record-small",
                  "error-small",
                  "arrow-circle-down",
                  "arrow-circle-left",
                  "arrow-circle-right",
                  "arrow-circle-up",
                  "dialog-error",
                  "dialog-warning",
                  "dialog-info",
                  "dialog-close",
                  "tree-item-expanded",
                  "tree-filter-on-type-on",
                  "tree-filter-on-type-off",
                  "tree-filter-clear",
                  "tree-item-loading",
                  "menu-selection",
                  "menu-submenu",
                  "menubar-more",
                  "scrollbar-button-left",
                  "scrollbar-button-right",
                  "scrollbar-button-up",
                  "scrollbar-button-down",
                  "toolbar-more",
                  "quick-input-back"
                ],
                "markdownEnumDescriptions": [
                  "$(add)",
                  "$(plus)",
                  "$(gist-new)",
                  "$(repo-create)",
                  "$(lightbulb)",
                  "$(light-bulb)",
                  "$(repo)",
                  "$(repo-delete)",
                  "$(gist-fork)",
                  "$(repo-forked)",
                  "$(git-pull-request)",
                  "$(git-pull-request-abandoned)",
                  "$(record-keys)",
                  "$(keyboard)",
                  "$(tag)",
                  "$(tag-add)",
                  "$(tag-remove)",
                  "$(person)",
                  "$(person-follow)",
                  "$(person-outline)",
                  "$(person-filled)",
                  "$(git-branch)",
                  "$(git-branch-create)",
                  "$(git-branch-delete)",
                  "$(source-control)",
                  "$(mirror)",
                  "$(mirror-public)",
                  "$(star)",
                  "$(star-add)",
                  "$(star-delete)",
                  "$(star-empty)",
                  "$(comment)",
                  "$(comment-add)",
                  "$(alert)",
                  "$(warning)",
                  "$(search)",
                  "$(search-save)",
                  "$(log-out)",
                  "$(sign-out)",
                  "$(log-in)",
                  "$(sign-in)",
                  "$(eye)",
                  "$(eye-unwatch)",
                  "$(eye-watch)",
                  "$(circle-filled)",
                  "$(primitive-dot)",
                  "$(close-dirty)",
                  "$(debug-breakpoint)",
                  "$(debug-breakpoint-disabled)",
                  "$(debug-hint)",
                  "$(primitive-square)",
                  "$(edit)",
                  "$(pencil)",
                  "$(info)",
                  "$(issue-opened)",
                  "$(gist-private)",
                  "$(git-fork-private)",
                  "$(lock)",
                  "$(mirror-private)",
                  "$(close)",
                  "$(remove-close)",
                  "$(x)",
                  "$(repo-sync)",
                  "$(sync)",
                  "$(clone)",
                  "$(desktop-download)",
                  "$(beaker)",
                  "$(microscope)",
                  "$(vm)",
                  "$(device-desktop)",
                  "$(file)",
                  "$(file-text)",
                  "$(more)",
                  "$(ellipsis)",
                  "$(kebab-horizontal)",
                  "$(mail-reply)",
                  "$(reply)",
                  "$(organization)",
                  "$(organization-filled)",
                  "$(organization-outline)",
                  "$(new-file)",
                  "$(file-add)",
                  "$(new-folder)",
                  "$(file-directory-create)",
                  "$(trash)",
                  "$(trashcan)",
                  "$(history)",
                  "$(clock)",
                  "$(folder)",
                  "$(file-directory)",
                  "$(symbol-folder)",
                  "$(logo-github)",
                  "$(mark-github)",
                  "$(github)",
                  "$(terminal)",
                  "$(console)",
                  "$(repl)",
                  "$(zap)",
                  "$(symbol-event)",
                  "$(error)",
                  "$(stop)",
                  "$(variable)",
                  "$(symbol-variable)",
                  "$(array)",
                  "$(symbol-array)",
                  "$(symbol-module)",
                  "$(symbol-package)",
                  "$(symbol-namespace)",
                  "$(symbol-object)",
                  "$(symbol-method)",
                  "$(symbol-function)",
                  "$(symbol-constructor)",
                  "$(symbol-boolean)",
                  "$(symbol-null)",
                  "$(symbol-numeric)",
                  "$(symbol-number)",
                  "$(symbol-structure)",
                  "$(symbol-struct)",
                  "$(symbol-parameter)",
                  "$(symbol-type-parameter)",
                  "$(symbol-key)",
                  "$(symbol-text)",
                  "$(symbol-reference)",
                  "$(go-to-file)",
                  "$(symbol-enum)",
                  "$(symbol-value)",
                  "$(symbol-ruler)",
                  "$(symbol-unit)",
                  "$(activate-breakpoints)",
                  "$(archive)",
                  "$(arrow-both)",
                  "$(arrow-down)",
                  "$(arrow-left)",
                  "$(arrow-right)",
                  "$(arrow-small-down)",
                  "$(arrow-small-left)",
                  "$(arrow-small-right)",
                  "$(arrow-small-up)",
                  "$(arrow-up)",
                  "$(bell)",
                  "$(bold)",
                  "$(book)",
                  "$(bookmark)",
                  "$(debug-breakpoint-conditional-unverified)",
                  "$(debug-breakpoint-conditional)",
                  "$(debug-breakpoint-conditional-disabled)",
                  "$(debug-breakpoint-data-unverified)",
                  "$(debug-breakpoint-data)",
                  "$(debug-breakpoint-data-disabled)",
                  "$(debug-breakpoint-log-unverified)",
                  "$(debug-breakpoint-log)",
                  "$(debug-breakpoint-log-disabled)",
                  "$(briefcase)",
                  "$(broadcast)",
                  "$(browser)",
                  "$(bug)",
                  "$(calendar)",
                  "$(case-sensitive)",
                  "$(check)",
                  "$(checklist)",
                  "$(chevron-down)",
                  "$(drop-down-button)",
                  "$(chevron-left)",
                  "$(chevron-right)",
                  "$(chevron-up)",
                  "$(chrome-close)",
                  "$(chrome-maximize)",
                  "$(chrome-minimize)",
                  "$(chrome-restore)",
                  "$(circle-outline)",
                  "$(debug-breakpoint-unverified)",
                  "$(circle-slash)",
                  "$(circuit-board)",
                  "$(clear-all)",
                  "$(clippy)",
                  "$(close-all)",
                  "$(cloud-download)",
                  "$(cloud-upload)",
                  "$(code)",
                  "$(collapse-all)",
                  "$(color-mode)",
                  "$(comment-discussion)",
                  "$(compare-changes)",
                  "$(credit-card)",
                  "$(dash)",
                  "$(dashboard)",
                  "$(database)",
                  "$(debug-continue)",
                  "$(debug-disconnect)",
                  "$(debug-pause)",
                  "$(debug-restart)",
                  "$(debug-start)",
                  "$(debug-step-into)",
                  "$(debug-step-out)",
                  "$(debug-step-over)",
                  "$(debug-stop)",
                  "$(debug)",
                  "$(device-camera-video)",
                  "$(device-camera)",
                  "$(device-mobile)",
                  "$(diff-added)",
                  "$(diff-ignored)",
                  "$(diff-modified)",
                  "$(diff-removed)",
                  "$(diff-renamed)",
                  "$(diff)",
                  "$(discard)",
                  "$(editor-layout)",
                  "$(empty-window)",
                  "$(exclude)",
                  "$(extensions)",
                  "$(eye-closed)",
                  "$(file-binary)",
                  "$(file-code)",
                  "$(file-media)",
                  "$(file-pdf)",
                  "$(file-submodule)",
                  "$(file-symlink-directory)",
                  "$(file-symlink-file)",
                  "$(file-zip)",
                  "$(files)",
                  "$(filter)",
                  "$(flame)",
                  "$(fold-down)",
                  "$(fold-up)",
                  "$(fold)",
                  "$(folder-active)",
                  "$(folder-opened)",
                  "$(gear)",
                  "$(gift)",
                  "$(gist-secret)",
                  "$(gist)",
                  "$(git-commit)",
                  "$(git-compare)",
                  "$(git-merge)",
                  "$(github-action)",
                  "$(github-alt)",
                  "$(globe)",
                  "$(grabber)",
                  "$(graph)",
                  "$(gripper)",
                  "$(heart)",
                  "$(home)",
                  "$(horizontal-rule)",
                  "$(hubot)",
                  "$(inbox)",
                  "$(issue-closed)",
                  "$(issue-reopened)",
                  "$(issues)",
                  "$(italic)",
                  "$(jersey)",
                  "$(json)",
                  "$(kebab-vertical)",
                  "$(key)",
                  "$(law)",
                  "$(lightbulb-autofix)",
                  "$(link-external)",
                  "$(link)",
                  "$(list-ordered)",
                  "$(list-unordered)",
                  "$(live-share)",
                  "$(loading)",
                  "$(location)",
                  "$(mail-read)",
                  "$(mail)",
                  "$(markdown)",
                  "$(megaphone)",
                  "$(mention)",
                  "$(milestone)",
                  "$(mortar-board)",
                  "$(move)",
                  "$(multiple-windows)",
                  "$(mute)",
                  "$(no-newline)",
                  "$(note)",
                  "$(octoface)",
                  "$(open-preview)",
                  "$(package)",
                  "$(paintcan)",
                  "$(pin)",
                  "$(play)",
                  "$(run)",
                  "$(plug)",
                  "$(preserve-case)",
                  "$(preview)",
                  "$(project)",
                  "$(pulse)",
                  "$(question)",
                  "$(quote)",
                  "$(radio-tower)",
                  "$(reactions)",
                  "$(references)",
                  "$(refresh)",
                  "$(regex)",
                  "$(remote-explorer)",
                  "$(remote)",
                  "$(remove)",
                  "$(replace-all)",
                  "$(replace)",
                  "$(repo-clone)",
                  "$(repo-force-push)",
                  "$(repo-pull)",
                  "$(repo-push)",
                  "$(report)",
                  "$(request-changes)",
                  "$(rocket)",
                  "$(root-folder-opened)",
                  "$(root-folder)",
                  "$(rss)",
                  "$(ruby)",
                  "$(save-all)",
                  "$(save-as)",
                  "$(save)",
                  "$(screen-full)",
                  "$(screen-normal)",
                  "$(search-stop)",
                  "$(server)",
                  "$(settings-gear)",
                  "$(settings)",
                  "$(shield)",
                  "$(smiley)",
                  "$(sort-precedence)",
                  "$(split-horizontal)",
                  "$(split-vertical)",
                  "$(squirrel)",
                  "$(star-full)",
                  "$(star-half)",
                  "$(symbol-class)",
                  "$(symbol-color)",
                  "$(symbol-customcolor)",
                  "$(symbol-constant)",
                  "$(symbol-enum-member)",
                  "$(symbol-field)",
                  "$(symbol-file)",
                  "$(symbol-interface)",
                  "$(symbol-keyword)",
                  "$(symbol-misc)",
                  "$(symbol-operator)",
                  "$(symbol-property)",
                  "$(wrench)",
                  "$(wrench-subaction)",
                  "$(symbol-snippet)",
                  "$(tasklist)",
                  "$(telescope)",
                  "$(text-size)",
                  "$(three-bars)",
                  "$(thumbsdown)",
                  "$(thumbsup)",
                  "$(tools)",
                  "$(triangle-down)",
                  "$(triangle-left)",
                  "$(triangle-right)",
                  "$(triangle-up)",
                  "$(twitter)",
                  "$(unfold)",
                  "$(unlock)",
                  "$(unmute)",
                  "$(unverified)",
                  "$(verified)",
                  "$(versions)",
                  "$(vm-active)",
                  "$(vm-outline)",
                  "$(vm-running)",
                  "$(watch)",
                  "$(whitespace)",
                  "$(whole-word)",
                  "$(window)",
                  "$(word-wrap)",
                  "$(zoom-in)",
                  "$(zoom-out)",
                  "$(list-filter)",
                  "$(list-flat)",
                  "$(list-selection)",
                  "$(selection)",
                  "$(list-tree)",
                  "$(debug-breakpoint-function-unverified)",
                  "$(debug-breakpoint-function)",
                  "$(debug-breakpoint-function-disabled)",
                  "$(debug-stackframe-active)",
                  "$(debug-stackframe-dot)",
                  "$(debug-stackframe)",
                  "$(debug-stackframe-focused)",
                  "$(debug-breakpoint-unsupported)",
                  "$(symbol-string)",
                  "$(debug-reverse-continue)",
                  "$(debug-step-back)",
                  "$(debug-restart-frame)",
                  "$(call-incoming)",
                  "$(call-outgoing)",
                  "$(menu)",
                  "$(expand-all)",
                  "$(feedback)",
                  "$(group-by-ref-type)",
                  "$(ungroup-by-ref-type)",
                  "$(account)",
                  "$(bell-dot)",
                  "$(debug-console)",
                  "$(library)",
                  "$(output)",
                  "$(run-all)",
                  "$(sync-ignored)",
                  "$(pinned)",
                  "$(github-inverted)",
                  "$(debug-alt)",
                  "$(server-process)",
                  "$(server-environment)",
                  "$(pass)",
                  "$(stop-circle)",
                  "$(play-circle)",
                  "$(record)",
                  "$(debug-alt-small)",
                  "$(vm-connect)",
                  "$(cloud)",
                  "$(merge)",
                  "$(export)",
                  "$(graph-left)",
                  "$(magnet)",
                  "$(notebook)",
                  "$(redo)",
                  "$(check-all)",
                  "$(pinned-dirty)",
                  "$(pass-filled)",
                  "$(circle-large-filled)",
                  "$(circle-large-outline)",
                  "$(combine)",
                  "$(gather)",
                  "$(table)",
                  "$(variable-group)",
                  "$(type-hierarchy)",
                  "$(type-hierarchy-sub)",
                  "$(type-hierarchy-super)",
                  "$(git-pull-request-create)",
                  "$(run-above)",
                  "$(run-below)",
                  "$(notebook-template)",
                  "$(debug-rerun)",
                  "$(workspace-trusted)",
                  "$(workspace-untrusted)",
                  "$(workspace-unspecified)",
                  "$(terminal-cmd)",
                  "$(terminal-debian)",
                  "$(terminal-linux)",
                  "$(terminal-powershell)",
                  "$(terminal-tmux)",
                  "$(terminal-ubuntu)",
                  "$(terminal-bash)",
                  "$(arrow-swap)",
                  "$(copy)",
                  "$(person-add)",
                  "$(filter-filled)",
                  "$(wand)",
                  "$(debug-line-by-line)",
                  "$(inspect)",
                  "$(layers)",
                  "$(layers-dot)",
                  "$(layers-active)",
                  "$(compass)",
                  "$(compass-dot)",
                  "$(compass-active)",
                  "$(azure)",
                  "$(issue-draft)",
                  "$(git-pull-request-closed)",
                  "$(git-pull-request-draft)",
                  "$(debug-all)",
                  "$(debug-coverage)",
                  "$(run-errors)",
                  "$(folder-library)",
                  "$(debug-continue-small)",
                  "$(beaker-stop)",
                  "$(graph-line)",
                  "$(graph-scatter)",
                  "$(pie-chart)",
                  "$(bracket)",
                  "$(bracket-dot)",
                  "$(bracket-error)",
                  "$(lock-small)",
                  "$(azure-devops)",
                  "$(verified-filled)",
                  "$(newline)",
                  "$(layout)",
                  "$(layout-activitybar-left)",
                  "$(layout-activitybar-right)",
                  "$(layout-panel-left)",
                  "$(layout-panel-center)",
                  "$(layout-panel-justify)",
                  "$(layout-panel-right)",
                  "$(layout-panel)",
                  "$(layout-sidebar-left)",
                  "$(layout-sidebar-right)",
                  "$(layout-statusbar)",
                  "$(layout-menubar)",
                  "$(layout-centered)",
                  "$(target)",
                  "$(indent)",
                  "$(record-small)",
                  "$(error-small)",
                  "$(arrow-circle-down)",
                  "$(arrow-circle-left)",
                  "$(arrow-circle-right)",
                  "$(arrow-circle-up)",
                  "$(dialog-error)",
                  "$(dialog-warning)",
                  "$(dialog-info)",
                  "$(dialog-close)",
                  "$(tree-item-expanded)",
                  "$(tree-filter-on-type-on)",
                  "$(tree-filter-on-type-off)",
                  "$(tree-filter-clear)",
                  "$(tree-item-loading)",
                  "$(menu-selection)",
                  "$(menu-submenu)",
                  "$(menubar-more)",
                  "$(scrollbar-button-left)",
                  "$(scrollbar-button-right)",
                  "$(scrollbar-button-up)",
                  "$(scrollbar-button-down)",
                  "$(toolbar-more)",
                  "$(quick-input-back)"
                ]
              },
              "color": {
                "description": "A theme color ID to associate with this terminal.",
                "type": [
                  "string",
                  "null"
                ],
                "enum": [
                  "terminal.ansiBlack",
                  "terminal.ansiRed",
                  "terminal.ansiGreen",
                  "terminal.ansiYellow",
                  "terminal.ansiBlue",
                  "terminal.ansiMagenta",
                  "terminal.ansiCyan",
                  "terminal.ansiWhite"
                ],
                "default": null
              },
              "env": {
                "markdownDescription": "An object with environment variables that will be added to the terminal profile process. Set to `null` to delete environment variables from the base environment.",
                "type": "object",
                "additionalProperties": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "default": {}
              }
            }
          }
        ]
      },
      "defaultDefaultValue": {
        "bash": {
          "path": "bash",
          "icon": "terminal-bash"
        },
        "zsh": {
          "path": "zsh"
        },
        "fish": {
          "path": "fish"
        },
        "tmux": {
          "path": "tmux",
          "icon": "terminal-tmux"
        },
        "pwsh": {
          "path": "pwsh",
          "icon": "terminal-powershell"
        }
      },
      "scope": 3
    },
    "terminal.integrated.useWslProfiles": {
      "description": "Controls whether or not WSL distros are shown in the terminal dropdown",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.inheritEnv": {
      "scope": 1,
      "description": "Whether new shells should inherit their environment from VS Code, which may source a login shell to ensure $PATH and other development variables are initialized. This has no effect on Windows.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "restricted": false
    },
    "terminal.integrated.persistentSessionScrollback": {
      "scope": 1,
      "markdownDescription": "Controls the maximum amount of lines that will be restored when reconnecting to a persistent terminal session. Increasing this will restore more lines of scrollback at the cost of more memory and increase the time it takes to connect to terminals on start up. This setting requires a restart to take effect and should be set to a value less than or equal to `#terminal.integrated.scrollback#`.",
      "type": "number",
      "default": 100,
      "defaultDefaultValue": 100,
      "restricted": false
    },
    "terminal.integrated.showLinkHover": {
      "scope": 1,
      "description": "Whether to show hovers for links in the terminal output.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "restricted": false
    },
    "terminal.integrated.ignoreProcessNames": {
      "description": "A set of process names to ignore when using the `terminal.integrated.confirmOnKill` setting.",
      "type": "array",
      "items": {
        "type": "string",
        "uniqueItems": true
      },
      "default": [
        "starship",
        "oh-my-posh",
        "bash",
        "zsh"
      ],
      "defaultDefaultValue": [
        "starship",
        "oh-my-posh",
        "bash",
        "zsh"
      ],
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.sendKeybindingsToShell": {
      "markdownDescription": "Dispatches most keybindings to the terminal instead of the workbench, overriding `#terminal.integrated.commandsToSkipShell#`, which can be used alternatively for fine tuning.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.tabs.enabled": {
      "description": "Controls whether terminal tabs display as a list to the side of the terminal. When this is disabled a dropdown will display instead.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.tabs.enableAnimation": {
      "description": "Controls whether terminal tab statuses support animation (eg. in progress tasks).",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.tabs.hideCondition": {
      "description": "Controls whether the terminal tabs view will hide under certain conditions.",
      "type": "string",
      "enum": [
        "never",
        "singleTerminal",
        "singleGroup"
      ],
      "enumDescriptions": [
        "Never hide the terminal tabs view",
        "Hide the terminal tabs view when there is only a single terminal opened",
        "Hide the terminal tabs view when there is only a single terminal group opened"
      ],
      "default": "singleTerminal",
      "defaultDefaultValue": "singleTerminal",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.tabs.showActiveTerminal": {
      "description": "Shows the active terminal information in the view, this is particularly useful when the title within the tabs aren't visible.",
      "type": "string",
      "enum": [
        "always",
        "singleTerminal",
        "singleTerminalOrNarrow",
        "never"
      ],
      "enumDescriptions": [
        "Always show the active terminal",
        "Show the active terminal when it is the only terminal opened",
        "Show the active terminal when it is the only terminal opened or when the tabs view is in its narrow textless state",
        "Never show the active terminal"
      ],
      "default": "singleTerminalOrNarrow",
      "defaultDefaultValue": "singleTerminalOrNarrow",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.tabs.showActions": {
      "description": "Controls whether terminal split and kill buttons are displays next to the new terminal button.",
      "type": "string",
      "enum": [
        "always",
        "singleTerminal",
        "singleTerminalOrNarrow",
        "never"
      ],
      "enumDescriptions": [
        "Always show the actions",
        "Show the actions when it is the only terminal opened",
        "Show the actions when it is the only terminal opened or when the tabs view is in its narrow textless state",
        "Never show the actions"
      ],
      "default": "singleTerminalOrNarrow",
      "defaultDefaultValue": "singleTerminalOrNarrow",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.tabs.location": {
      "type": "string",
      "enum": [
        "left",
        "right"
      ],
      "enumDescriptions": [
        "Show the terminal tabs view to the left of the terminal",
        "Show the terminal tabs view to the right of the terminal"
      ],
      "default": "right",
      "description": "Controls the location of the terminal tabs, either to the left or right of the actual terminal(s).",
      "defaultDefaultValue": "right",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.defaultLocation": {
      "type": "string",
      "enum": [
        "editor",
        "view"
      ],
      "enumDescriptions": [
        "Create terminals in the editor",
        "Create terminals in the terminal view"
      ],
      "default": "view",
      "description": "Controls where newly created terminals will appear.",
      "defaultDefaultValue": "view",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.shellIntegration.decorationIconSuccess": {
      "type": "string",
      "default": "primitive-dot",
      "markdownDescription": "Controls the icon that will be used for each command in terminals with shell integration enabled that do not have an associated exit code. Set to `''` to hide the icon or disable decorations with `#terminal.integrated.shellIntegration.decorationsEnabled#`",
      "defaultDefaultValue": "primitive-dot",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.shellIntegration.decorationIconError": {
      "type": "string",
      "default": "error-small",
      "markdownDescription": "Controls the icon that will be used for each command in terminals with shell integration enabled that do have an associated exit code. Set to `''` to hide the icon or disable decorations with `#terminal.integrated.shellIntegration.decorationsEnabled#`.",
      "defaultDefaultValue": "error-small",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.shellIntegration.decorationIcon": {
      "type": "string",
      "default": "circle-outline",
      "markdownDescription": "Controls the icon that will be used for skipped/empty commands. Set to `''` to hide the icon or disable decorations with `#terminal.integrated.shellIntegration.decorationsEnabled#`",
      "defaultDefaultValue": "circle-outline",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.tabs.focusMode": {
      "type": "string",
      "enum": [
        "singleClick",
        "doubleClick"
      ],
      "enumDescriptions": [
        "Focus the terminal when clicking a terminal tab",
        "Focus the terminal when double clicking a terminal tab"
      ],
      "default": "doubleClick",
      "description": "Controls whether focusing the terminal of a tab happens on double or single click.",
      "defaultDefaultValue": "doubleClick",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.macOptionIsMeta": {
      "description": "Controls whether to treat the option key as the meta key in the terminal on macOS.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.macOptionClickForcesSelection": {
      "description": "Controls whether to force selection when using Option+click on macOS. This will force a regular (line) selection and disallow the use of column selection mode. This enables copying and pasting using the regular terminal selection, for example, when mouse mode is enabled in tmux.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.altClickMovesCursor": {
      "markdownDescription": "If enabled, alt/option + click will reposition the prompt cursor to underneath the mouse when `#editor.multiCursorModifier#` is set to `'alt'` (the default value). This may not work reliably depending on your shell.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.copyOnSelection": {
      "description": "Controls whether text selected in the terminal will be copied to the clipboard.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.enableMultiLinePasteWarning": {
      "markdownDescription": "Show a warning dialog when pasting multiple lines into the terminal. The dialog does not show when:\n\n- Bracketed paste mode is enabled (the shell supports multi-line paste natively)\n- The paste is handled by the shell's readline (in the case of pwsh)",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.drawBoldTextInBrightColors": {
      "description": "Controls whether bold text in the terminal will always use the \"bright\" ANSI color variant.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.fontFamily": {
      "markdownDescription": "Controls the font family of the terminal, this defaults to `#editor.fontFamily#`'s value.",
      "type": "string",
      "default": "",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.fontSize": {
      "description": "Controls the font size in pixels of the terminal.",
      "type": "number",
      "default": 14,
      "minimum": 6,
      "maximum": 100,
      "defaultDefaultValue": 14,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.letterSpacing": {
      "description": "Controls the letter spacing of the terminal, this is an integer value which represents the amount of additional pixels to add between characters.",
      "type": "number",
      "default": 0,
      "defaultDefaultValue": 0,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.lineHeight": {
      "description": "Controls the line height of the terminal, this number is multiplied by the terminal font size to get the actual line-height in pixels.",
      "type": "number",
      "default": 1,
      "defaultDefaultValue": 1,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.minimumContrastRatio": {
      "markdownDescription": "When set the foreground color of each cell will change to try meet the contrast ratio specified. Example values:\n\n- 1: The default, do nothing.\n- 4.5: [WCAG AA compliance (minimum)](https://www.w3.org/TR/UNDERSTANDING-WCAG20/visual-audio-contrast-contrast.html).\n- 7: [WCAG AAA compliance (enhanced)](https://www.w3.org/TR/UNDERSTANDING-WCAG20/visual-audio-contrast7.html).\n- 21: White on black or black on white.",
      "type": "number",
      "default": 1,
      "defaultDefaultValue": 1,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.fastScrollSensitivity": {
      "markdownDescription": "Scrolling speed multiplier when pressing `Alt`.",
      "type": "number",
      "default": 5,
      "defaultDefaultValue": 5,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.mouseWheelScrollSensitivity": {
      "markdownDescription": "A multiplier to be used on the `deltaY` of mouse wheel scroll events.",
      "type": "number",
      "default": 1,
      "defaultDefaultValue": 1,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.bellDuration": {
      "markdownDescription": "The number of milliseconds to show the bell within a terminal tab when triggered.",
      "type": "number",
      "default": 1000,
      "defaultDefaultValue": 1000,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.fontWeight": {
      "anyOf": [
        {
          "type": "number",
          "minimum": 1,
          "maximum": 1000,
          "errorMessage": "Only \"normal\" and \"bold\" keywords or numbers between 1 and 1000 are allowed."
        },
        {
          "type": "string",
          "pattern": "^(normal|bold|1000|[1-9][0-9]{0,2})$"
        },
        {
          "enum": [
            "normal",
            "bold",
            "100",
            "200",
            "300",
            "400",
            "500",
            "600",
            "700",
            "800",
            "900"
          ]
        }
      ],
      "description": "The font weight to use within the terminal for non-bold text. Accepts \"normal\" and \"bold\" keywords or numbers between 1 and 1000.",
      "default": "normal",
      "defaultDefaultValue": "normal",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.fontWeightBold": {
      "anyOf": [
        {
          "type": "number",
          "minimum": 1,
          "maximum": 1000,
          "errorMessage": "Only \"normal\" and \"bold\" keywords or numbers between 1 and 1000 are allowed."
        },
        {
          "type": "string",
          "pattern": "^(normal|bold|1000|[1-9][0-9]{0,2})$"
        },
        {
          "enum": [
            "normal",
            "bold",
            "100",
            "200",
            "300",
            "400",
            "500",
            "600",
            "700",
            "800",
            "900"
          ]
        }
      ],
      "description": "The font weight to use within the terminal for bold text. Accepts \"normal\" and \"bold\" keywords or numbers between 1 and 1000.",
      "default": "bold",
      "defaultDefaultValue": "bold",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.cursorBlinking": {
      "description": "Controls whether the terminal cursor blinks.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.cursorStyle": {
      "description": "Controls the style of terminal cursor.",
      "enum": [
        "block",
        "line",
        "underline"
      ],
      "default": "block",
      "defaultDefaultValue": "block",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.cursorWidth": {
      "markdownDescription": "Controls the width of the cursor when `#terminal.integrated.cursorStyle#` is set to `line`.",
      "type": "number",
      "default": 1,
      "defaultDefaultValue": 1,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.scrollback": {
      "description": "Controls the maximum amount of lines the terminal keeps in its buffer.",
      "type": "number",
      "default": 1000,
      "defaultDefaultValue": 1000,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.detectLocale": {
      "markdownDescription": "Controls whether to detect and set the `$LANG` environment variable to a UTF-8 compliant option since VS Code's terminal only supports UTF-8 encoded data coming from the shell.",
      "type": "string",
      "enum": [
        "auto",
        "off",
        "on"
      ],
      "markdownEnumDescriptions": [
        "Set the `$LANG` environment variable if the existing variable does not exist or it does not end in `'.UTF-8'`.",
        "Do not set the `$LANG` environment variable.",
        "Always set the `$LANG` environment variable."
      ],
      "default": "auto",
      "defaultDefaultValue": "auto",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.gpuAcceleration": {
      "type": "string",
      "enum": [
        "auto",
        "on",
        "off",
        "canvas"
      ],
      "markdownEnumDescriptions": [
        "Let VS Code detect which renderer will give the best experience.",
        "Enable GPU acceleration within the terminal.",
        "Disable GPU acceleration within the terminal.",
        "Use the fallback canvas renderer within the terminal. This uses a 2d context instead of webgl and may be better on some systems."
      ],
      "default": "auto",
      "description": "Controls whether the terminal will leverage the GPU to do its rendering.",
      "defaultDefaultValue": "auto",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.tabs.separator": {
      "type": "string",
      "default": " - ",
      "markdownDescription": "Separator used by `terminal.integrated.tabs.title` and `terminal.integrated.tabs.title`.",
      "defaultDefaultValue": " - ",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.tabs.title": {
      "type": "string",
      "default": "${process}",
      "markdownDescription": "Controls the terminal title. Variables are substituted based on the context:\n- `${cwd}`: the terminal's current working directory\n- `${cwdFolder}`: the terminal's current working directory, displayed for multi-root workspaces or in a single root workspace when the value differs from the initial working directory. On Windows, this will only be displayed when shell integration is enabled.\n- `${workspaceFolder}`: the workspace in which the terminal was launched\n- `${local}`: indicates a local terminal in a remote workspace\n- `${process}`: the name of the terminal process\n- `${separator}`: a conditional separator (\" - \") that only shows when surrounded by variables with values or static text.\n- `${sequence}`: the name provided to xterm.js by the process\n- `${task}`: indicates this terminal is associated with a task",
      "defaultDefaultValue": "${process}",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.tabs.description": {
      "type": "string",
      "default": "${task}${separator}${local}${separator}${cwdFolder}",
      "markdownDescription": "Controls the terminal description, which appears to the right of the title. Variables are substituted based on the context:\n- `${cwd}`: the terminal's current working directory\n- `${cwdFolder}`: the terminal's current working directory, displayed for multi-root workspaces or in a single root workspace when the value differs from the initial working directory. On Windows, this will only be displayed when shell integration is enabled.\n- `${workspaceFolder}`: the workspace in which the terminal was launched\n- `${local}`: indicates a local terminal in a remote workspace\n- `${process}`: the name of the terminal process\n- `${separator}`: a conditional separator (\" - \") that only shows when surrounded by variables with values or static text.\n- `${sequence}`: the name provided to xterm.js by the process\n- `${task}`: indicates this terminal is associated with a task",
      "defaultDefaultValue": "${task}${separator}${local}${separator}${cwdFolder}",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.rightClickBehavior": {
      "type": "string",
      "enum": [
        "default",
        "copyPaste",
        "paste",
        "selectWord"
      ],
      "enumDescriptions": [
        "Show the context menu.",
        "Copy when there is a selection, otherwise paste.",
        "Paste on right click.",
        "Select the word under the cursor and show the context menu."
      ],
      "default": "copyPaste",
      "description": "Controls how terminal reacts to right click.",
      "defaultDefaultValue": "copyPaste",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.cwd": {
      "restricted": true,
      "description": "An explicit start path where the terminal will be launched, this is used as the current working directory (cwd) for the shell process. This may be particularly useful in workspace settings if the root directory is not a convenient cwd.",
      "type": "string",
      "default": "",
      "scope": 4
    },
    "terminal.integrated.confirmOnExit": {
      "description": "Controls whether to confirm when the window closes if there are active terminal sessions.",
      "type": "string",
      "enum": [
        "never",
        "always",
        "hasChildProcesses"
      ],
      "enumDescriptions": [
        "Never confirm.",
        "Always confirm if there are terminals.",
        "Confirm if there are any terminals that have child processes."
      ],
      "default": "never",
      "defaultDefaultValue": "never",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.confirmOnKill": {
      "description": "Controls whether to confirm killing terminals when they have child processes. When set to editor, terminals in the editor area will be marked as changed when they have child processes. Note that child process detection may not work well for shells like Git Bash which don't run their processes as child processes of the shell.",
      "type": "string",
      "enum": [
        "never",
        "editor",
        "panel",
        "always"
      ],
      "enumDescriptions": [
        "Never confirm.",
        "Confirm if the terminal is in the editor.",
        "Confirm if the terminal is in the panel.",
        "Confirm if the terminal is either in the editor or panel."
      ],
      "default": "editor",
      "defaultDefaultValue": "editor",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.enableBell": {
      "description": "Controls whether the terminal bell is enabled, this shows up as a visual bell next to the terminal's name.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.commandsToSkipShell": {
      "markdownDescription": "A set of command IDs whose keybindings will not be sent to the shell but instead always be handled by VS Code. This allows keybindings that would normally be consumed by the shell to act instead the same as when the terminal is not focused, for example `Ctrl+P` to launch Quick Open.\n\n&nbsp;\n\nMany commands are skipped by default. To override a default and pass that command's keybinding to the shell instead, add the command prefixed with the `-` character. For example add `-workbench.action.quickOpen` to allow `Ctrl+P` to reach the shell.\n\n&nbsp;\n\nThe following list of default skipped commands is truncated when viewed in Settings Editor. To see the full list, [open the default settings JSON](command:workbench.action.openRawDefaultSettings 'Open Default Settings (JSON)') and search for the first command from the list below.\n\n&nbsp;\n\nDefault Skipped Commands:\n\n- editor.action.toggleTabFocusMode\n- notifications.hideList\n- notifications.hideToasts\n- workbench.action.debug.continue\n- workbench.action.debug.pause\n- workbench.action.debug.restart\n- workbench.action.debug.run\n- workbench.action.debug.start\n- workbench.action.debug.stepInto\n- workbench.action.debug.stepOut\n- workbench.action.debug.stepOver\n- workbench.action.debug.stop\n- workbench.action.firstEditorInGroup\n- workbench.action.focusActiveEditorGroup\n- workbench.action.focusEighthEditorGroup\n- workbench.action.focusFifthEditorGroup\n- workbench.action.focusFirstEditorGroup\n- workbench.action.focusFourthEditorGroup\n- workbench.action.focusLastEditorGroup\n- workbench.action.focusNextPart\n- workbench.action.focusPreviousPart\n- workbench.action.focusSecondEditorGroup\n- workbench.action.focusSeventhEditorGroup\n- workbench.action.focusSixthEditorGroup\n- workbench.action.focusThirdEditorGroup\n- workbench.action.lastEditorInGroup\n- workbench.action.navigateDown\n- workbench.action.navigateLeft\n- workbench.action.navigateRight\n- workbench.action.navigateUp\n- workbench.action.nextEditor\n- workbench.action.nextEditorInGroup\n- workbench.action.nextPanelView\n- workbench.action.nextSideBarView\n- workbench.action.openNextRecentlyUsedEditor\n- workbench.action.openNextRecentlyUsedEditorInGroup\n- workbench.action.openPreviousRecentlyUsedEditor\n- workbench.action.openPreviousRecentlyUsedEditorInGroup\n- workbench.action.previousEditor\n- workbench.action.previousEditorInGroup\n- workbench.action.previousPanelView\n- workbench.action.previousSideBarView\n- workbench.action.quickOpen\n- workbench.action.quickOpenLeastRecentlyUsedEditor\n- workbench.action.quickOpenLeastRecentlyUsedEditorInGroup\n- workbench.action.quickOpenPreviousEditor\n- workbench.action.quickOpenPreviousRecentlyUsedEditor\n- workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup\n- workbench.action.quickOpenView\n- workbench.action.showCommands\n- workbench.action.tasks.build\n- workbench.action.tasks.reRunTask\n- workbench.action.tasks.restartTask\n- workbench.action.tasks.runTask\n- workbench.action.tasks.showLog\n- workbench.action.tasks.showTasks\n- workbench.action.tasks.terminate\n- workbench.action.tasks.test\n- workbench.action.terminal.clear\n- workbench.action.terminal.clearSelection\n- workbench.action.terminal.copySelection\n- workbench.action.terminal.deleteToLineStart\n- workbench.action.terminal.deleteWordLeft\n- workbench.action.terminal.deleteWordRight\n- workbench.action.terminal.findNext\n- workbench.action.terminal.findPrevious\n- workbench.action.terminal.focus\n- workbench.action.terminal.focusAtIndex1\n- workbench.action.terminal.focusAtIndex2\n- workbench.action.terminal.focusAtIndex3\n- workbench.action.terminal.focusAtIndex4\n- workbench.action.terminal.focusAtIndex5\n- workbench.action.terminal.focusAtIndex6\n- workbench.action.terminal.focusAtIndex7\n- workbench.action.terminal.focusAtIndex8\n- workbench.action.terminal.focusAtIndex9\n- workbench.action.terminal.focusFind\n- workbench.action.terminal.focusNext\n- workbench.action.terminal.focusNextPane\n- workbench.action.terminal.focusPrevious\n- workbench.action.terminal.focusPreviousPane\n- workbench.action.terminal.goToRecentDirectory\n- workbench.action.terminal.hideFind\n- workbench.action.terminal.kill\n- workbench.action.terminal.killEditor\n- workbench.action.terminal.moveToEditor\n- workbench.action.terminal.moveToLineEnd\n- workbench.action.terminal.moveToLineStart\n- workbench.action.terminal.moveToTerminalPanel\n- workbench.action.terminal.navigationModeExit\n- workbench.action.terminal.navigationModeFocusNext\n- workbench.action.terminal.navigationModeFocusPrevious\n- workbench.action.terminal.new\n- workbench.action.terminal.newInActiveWorkspace\n- workbench.action.terminal.paste\n- workbench.action.terminal.pasteSelection\n- workbench.action.terminal.resizePaneDown\n- workbench.action.terminal.resizePaneLeft\n- workbench.action.terminal.resizePaneRight\n- workbench.action.terminal.resizePaneUp\n- workbench.action.terminal.runActiveFile\n- workbench.action.terminal.runRecentCommand\n- workbench.action.terminal.runSelectedText\n- workbench.action.terminal.scrollDown\n- workbench.action.terminal.scrollDownPage\n- workbench.action.terminal.scrollToBottom\n- workbench.action.terminal.scrollToNextCommand\n- workbench.action.terminal.scrollToPreviousCommand\n- workbench.action.terminal.scrollToTop\n- workbench.action.terminal.scrollUp\n- workbench.action.terminal.scrollUpPage\n- workbench.action.terminal.selectAll\n- workbench.action.terminal.selectToNextCommand\n- workbench.action.terminal.selectToNextLine\n- workbench.action.terminal.selectToPreviousCommand\n- workbench.action.terminal.selectToPreviousLine\n- workbench.action.terminal.sendSequence\n- workbench.action.terminal.sizeToContentWidth\n- workbench.action.terminal.split\n- workbench.action.terminal.splitInActiveWorkspace\n- workbench.action.terminal.toggleFindCaseSensitive\n- workbench.action.terminal.toggleFindRegex\n- workbench.action.terminal.toggleFindWholeWord\n- workbench.action.terminal.toggleTerminal\n- workbench.action.toggleFullScreen\n- workbench.action.toggleMaximizedPanel\n- workbench.action.togglePanel",
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": [],
      "defaultDefaultValue": [],
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.allowChords": {
      "markdownDescription": "Whether or not to allow chord keybindings in the terminal. Note that when this is true and the keystroke results in a chord it will bypass `#terminal.integrated.commandsToSkipShell#`, setting this to false is particularly useful when you want ctrl+k to go to your shell (not VS Code).",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.allowMnemonics": {
      "markdownDescription": "Whether to allow menubar mnemonics (eg. alt+f) to trigger the open the menubar. Note that this will cause all alt keystrokes to skip the shell when true. This does nothing on macOS.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.env.osx": {
      "restricted": true,
      "markdownDescription": "Object with environment variables that will be added to the VS Code process to be used by the terminal on macOS. Set to `null` to delete the environment variable.",
      "type": "object",
      "additionalProperties": {
        "type": [
          "string",
          "null"
        ]
      },
      "default": {},
      "defaultDefaultValue": {},
      "scope": 3
    },
    "terminal.integrated.env.linux": {
      "restricted": true,
      "markdownDescription": "Object with environment variables that will be added to the VS Code process to be used by the terminal on Linux. Set to `null` to delete the environment variable.",
      "type": "object",
      "additionalProperties": {
        "type": [
          "string",
          "null"
        ]
      },
      "default": {},
      "defaultDefaultValue": {},
      "scope": 3
    },
    "terminal.integrated.env.windows": {
      "restricted": true,
      "markdownDescription": "Object with environment variables that will be added to the VS Code process to be used by the terminal on Windows. Set to `null` to delete the environment variable.",
      "type": "object",
      "additionalProperties": {
        "type": [
          "string",
          "null"
        ]
      },
      "default": {},
      "defaultDefaultValue": {},
      "scope": 3
    },
    "terminal.integrated.environmentChangesIndicator": {
      "markdownDescription": "Whether to display the environment changes indicator on each terminal which explains whether extensions have made, or want to make changes to the terminal's environment.",
      "type": "string",
      "enum": [
        "off",
        "on",
        "warnonly"
      ],
      "enumDescriptions": [
        "Disable the indicator.",
        "Enable the indicator.",
        "Only show the warning indicator when a terminal's environment is 'stale', not the information indicator that shows a terminal has had its environment modified by an extension."
      ],
      "default": "warnonly",
      "defaultDefaultValue": "warnonly",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.environmentChangesRelaunch": {
      "markdownDescription": "Whether to relaunch terminals automatically if extension want to contribute to their environment and have not been interacted with yet.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.showExitAlert": {
      "description": "Controls whether to show the alert \"The terminal process terminated with exit code\" when exit code is non-zero.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.splitCwd": {
      "description": "Controls the working directory a split terminal starts with.",
      "type": "string",
      "enum": [
        "workspaceRoot",
        "initial",
        "inherited"
      ],
      "enumDescriptions": [
        "A new split terminal will use the workspace root as the working directory. In a multi-root workspace a choice for which root folder to use is offered.",
        "A new split terminal will use the working directory that the parent terminal started with.",
        "On macOS and Linux, a new split terminal will use the working directory of the parent terminal. On Windows, this behaves the same as initial."
      ],
      "default": "inherited",
      "defaultDefaultValue": "inherited",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.windowsEnableConpty": {
      "description": "Whether to use ConPTY for Windows terminal process communication (requires Windows 10 build number 18309+). Winpty will be used if this is false.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.wordSeparators": {
      "description": "A string containing all characters to be considered word separators by the double click to select word feature.",
      "type": "string",
      "default": " ()[]{}',\"`─‘’",
      "defaultDefaultValue": " ()[]{}',\"`─‘’",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.enableFileLinks": {
      "description": "Whether to enable file links in the terminal. Links can be slow when working on a network drive in particular because each file link is verified against the file system. Changing this will take effect only in new terminals.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.unicodeVersion": {
      "type": "string",
      "enum": [
        "6",
        "11"
      ],
      "enumDescriptions": [
        "Version 6 of unicode, this is an older version which should work better on older systems.",
        "Version 11 of unicode, this version provides better support on modern systems that use modern versions of unicode."
      ],
      "default": "11",
      "description": "Controls what version of unicode to use when evaluating the width of characters in the terminal. If you experience emoji or other wide characters not taking up the right amount of space or backspace either deleting too much or too little then you may want to try tweaking this setting.",
      "defaultDefaultValue": "11",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.localEchoLatencyThreshold": {
      "description": "Length of network delay, in milliseconds, where local edits will be echoed on the terminal without waiting for server acknowledgement. If '0', local echo will always be on, and if '-1' it will be disabled.",
      "type": "integer",
      "minimum": -1,
      "default": 30,
      "defaultDefaultValue": 30,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.localEchoEnabled": {
      "markdownDescription": "When local echo should be enabled. This will override `#terminal.integrated.localEchoLatencyThreshold#`",
      "type": "string",
      "enum": [
        "on",
        "off",
        "auto"
      ],
      "enumDescriptions": [
        "Always enabled",
        "Always disabled",
        "Enabled only for remote workspaces"
      ],
      "default": "auto",
      "defaultDefaultValue": "auto",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.localEchoExcludePrograms": {
      "description": "Local echo will be disabled when any of these program names are found in the terminal title.",
      "type": "array",
      "items": {
        "type": "string",
        "uniqueItems": true
      },
      "default": [
        "vim",
        "vi",
        "nano",
        "tmux"
      ],
      "defaultDefaultValue": [
        "vim",
        "vi",
        "nano",
        "tmux"
      ],
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.localEchoStyle": {
      "description": "Terminal style of locally echoed text; either a font style or an RGB color.",
      "default": "dim",
      "oneOf": [
        {
          "type": "string",
          "default": "dim",
          "enum": [
            "bold",
            "dim",
            "italic",
            "underlined",
            "inverted"
          ]
        },
        {
          "type": "string",
          "format": "color-hex",
          "default": "#ff0000"
        }
      ],
      "defaultDefaultValue": "dim",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.enablePersistentSessions": {
      "description": "Persist terminal sessions for the workspace across window reloads.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.persistentSessionReviveProcess": {
      "markdownDescription": "When the terminal process must be shutdown (eg. on window or application close), this determines when the previous terminal session contents should be restored and processes be recreated when the workspace is next opened.\n\nCaveats:\n\n- Restoring of the process current working directory depends on whether it is supported by the shell.\n- Time to persist the session during shutdown is limited, so it may be aborted when using high-latency remote connections.",
      "type": "string",
      "enum": [
        "onExit",
        "onExitAndWindowClose",
        "never"
      ],
      "markdownEnumDescriptions": [
        "Revive the processes after the last window is closed on Windows/Linux or when the `workbench.action.quit` command is triggered (command palette, keybinding, menu).",
        "Revive the processes after the last window is closed on Windows/Linux or when the `workbench.action.quit` command is triggered (command palette, keybinding, menu), or when the window is closed.",
        "Never restore the terminal buffers or recreate the process."
      ],
      "default": "onExit",
      "defaultDefaultValue": "onExit",
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.customGlyphs": {
      "description": "Whether to draw custom glyphs for block element and box drawing characters instead of using the font, which typically yields better rendering with continuous lines. Note that this doesn't work with the DOM renderer",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.autoReplies": {
      "markdownDescription": "A set of messages that when encountered in the terminal will be automatically responded to. Provided the message is specific enough, this can help automate away common responses.\n\nRemarks:\n\n- Use `\"Terminate batch job (Y/N)\": \"\\r\"` to automatically respond to the terminate batch job prompt on Windows.\n- The message includes escape sequences so the reply might not happen with styled text.\n- Each reply can only happen once every second.\n- Use `\"\\r\"` in the reply to mean the enter key.\n- To unset a default key, set the value to null.\n- Restart VS Code if new don't apply.",
      "type": "object",
      "additionalProperties": {
        "oneOf": [
          {
            "type": "string",
            "description": "The reply to send to the process."
          },
          {
            "type": "null"
          }
        ]
      },
      "default": {},
      "defaultDefaultValue": {},
      "scope": 3,
      "restricted": false
    },
    "terminal.integrated.shellIntegration.enabled": {
      "restricted": true,
      "markdownDescription": "Enable the experimental shell integration feature which will turn on certain features like enhanced command tracking and current working directory detection. Shell integration works by injecting a script that is run when the shell is initialized which lets the terminal gain additional insights into what is happening within the terminal, the script injection may not work if you have custom arguments defined in the terminal profile.\n\nSupported shells:\n\n- Linux/macOS: bash, pwsh, zsh\n - Windows: pwsh\n\nThis setting applies only when terminals are created, you will need to restart terminals for the setting to take effect.",
      "type": "boolean",
      "default": false,
      "defaultDefaultValue": false,
      "scope": 3
    },
    "terminal.integrated.shellIntegration.decorationsEnabled": {
      "restricted": true,
      "markdownDescription": "When shell integration is enabled, adds a decoration for each command.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3
    },
    "terminal.integrated.shellIntegration.showWelcome": {
      "restricted": true,
      "markdownDescription": "Whether to show the shell integration activated welcome message in the terminal when the feature is enabled.",
      "type": "boolean",
      "default": true,
      "defaultDefaultValue": true,
      "scope": 3
    },
    "terminal.integrated.shellIntegration.history": {
      "restricted": true,
      "markdownDescription": "Controls the number of recently used commands to keep in the terminal command history. Set to 0 to disable terminal command history.",
      "type": "number",
      "default": 100,
      "defaultDefaultValue": 100,
      "scope": 3
    },
    "security.workspace.trust.enabled": {
      "type": "boolean",
      "default": true,
      "included": true,
      "description": "Controls whether or not workspace trust is enabled within VS Code.",
      "tags": [
        "workspaceTrust"
      ],
      "scope": 1,
      "defaultDefaultValue": true,
      "restricted": false
    },
    "security.workspace.trust.startupPrompt": {
      "type": "string",
      "default": "once",
      "included": true,
      "description": "Controls when the startup prompt to trust a workspace is shown.",
      "tags": [
        "workspaceTrust"
      ],
      "scope": 1,
      "enum": [
        "always",
        "once",
        "never"
      ],
      "enumDescriptions": [
        "Ask for trust every time an untrusted workspace is opened.",
        "Ask for trust the first time an untrusted workspace is opened.",
        "Do not ask for trust when an untrusted workspace is opened."
      ],
      "defaultDefaultValue": "once",
      "restricted": false
    },
    "security.workspace.trust.banner": {
      "type": "string",
      "default": "untilDismissed",
      "included": true,
      "description": "Controls when the restricted mode banner is shown.",
      "tags": [
        "workspaceTrust"
      ],
      "scope": 1,
      "enum": [
        "always",
        "untilDismissed",
        "never"
      ],
      "enumDescriptions": [
        "Show the banner every time an untrusted workspace is open.",
        "Show the banner when an untrusted workspace is opened until dismissed.",
        "Do not show the banner when an untrusted workspace is open."
      ],
      "defaultDefaultValue": "untilDismissed",
      "restricted": false
    },
    "security.workspace.trust.untrustedFiles": {
      "type": "string",
      "default": "prompt",
      "included": true,
      "markdownDescription": "Controls how to handle opening untrusted files in a trusted workspace. This setting also applies to opening files in an empty window which is trusted via `#security.workspace.trust.emptyWindow#`.",
      "tags": [
        "workspaceTrust"
      ],
      "scope": 1,
      "enum": [
        "prompt",
        "open",
        "newWindow"
      ],
      "enumDescriptions": [
        "Ask how to handle untrusted files for each workspace. Once untrusted files are introduced to a trusted workspace, you will not be prompted again.",
        "Always allow untrusted files to be introduced to a trusted workspace without prompting.",
        "Always open untrusted files in a separate window in restricted mode without prompting."
      ],
      "defaultDefaultValue": "prompt",
      "restricted": false
    },
    "security.workspace.trust.emptyWindow": {
      "type": "boolean",
      "default": true,
      "included": true,
      "markdownDescription": "Controls whether or not the empty window is trusted by default within VS Code. When used with `#security.workspace.trust.untrustedFiles#`, you can enable the full functionality of VS Code without prompting in an empty window.",
      "tags": [
        "workspaceTrust"
      ],
      "scope": 1,
      "defaultDefaultValue": true,
      "restricted": false
    },
    "[code-text-binary]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[Log]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[log]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[scminput]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "settingsSync.keybindingsPerPlatform": {
      "type": "boolean",
      "description": "Synchronize keybindings for each platform.",
      "default": true,
      "scope": 1,
      "tags": [
        "sync",
        "usesOnlineServices"
      ],
      "defaultDefaultValue": true,
      "restricted": false
    },
    "settingsSync.ignoredExtensions": {
      "type": "array",
      "markdownDescription": "List of extensions to be ignored while synchronizing. The identifier of an extension is always `${publisher}.${name}`. For example: `vscode.csharp`.",
      "items": [
        {
          "type": "string",
          "pattern": "^([a-z0-9A-Z][a-z0-9-A-Z]*)\\.([a-z0-9A-Z][a-z0-9-A-Z]*)$",
          "errorMessage": "Expected format '${publisher}.${name}'. Example: 'vscode.csharp'."
        }
      ],
      "default": [],
      "scope": 1,
      "uniqueItems": true,
      "disallowSyncIgnore": true,
      "tags": [
        "sync",
        "usesOnlineServices"
      ],
      "defaultDefaultValue": [],
      "restricted": false
    },
    "settingsSync.ignoredSettings": {
      "type": "array",
      "description": "Configure settings to be ignored while synchronizing.",
      "default": [],
      "scope": 1,
      "$ref": "vscode://schemas/ignoredSettings",
      "additionalProperties": true,
      "uniqueItems": true,
      "disallowSyncIgnore": true,
      "tags": [
        "sync",
        "usesOnlineServices"
      ],
      "defaultDefaultValue": [],
      "restricted": false
    },
    "terminal.explorerKind": {
      "type": "string",
      "enum": [
        "integrated",
        "external"
      ],
      "enumDescriptions": [
        "Use VS Code's integrated terminal.",
        "Use the configured external terminal."
      ],
      "description": "When opening a file from the explorer in a terminal, determines what kind of terminal will be launched",
      "default": "integrated",
      "defaultDefaultValue": "integrated",
      "scope": 3,
      "restricted": false
    },
    "terminal.external.windowsExec": {
      "type": "string",
      "description": "Customizes which terminal to run on Windows.",
      "default": "C:\\WINDOWS\\System32\\cmd.exe",
      "scope": 1,
      "defaultDefaultValue": "C:\\WINDOWS\\System32\\cmd.exe",
      "restricted": false
    },
    "terminal.external.osxExec": {
      "type": "string",
      "description": "Customizes which terminal application to run on macOS.",
      "default": "Terminal.app",
      "scope": 1,
      "defaultDefaultValue": "Terminal.app",
      "restricted": false
    },
    "terminal.external.linuxExec": {
      "type": "string",
      "description": "Customizes which terminal to run on Linux.",
      "default": "xterm",
      "scope": 1,
      "defaultDefaultValue": "xterm",
      "restricted": false
    },
    "[css]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "editor.suggest.insertMode": "replace",
        "gitlens.codeLens.scopes": [
          "document"
        ]
      },
      "defaultValueSource": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      }
    },
    "[scss]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "editor.suggest.insertMode": "replace",
        "gitlens.codeLens.scopes": [
          "document"
        ]
      },
      "defaultValueSource": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      }
    },
    "[less]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "editor.suggest.insertMode": "replace",
        "gitlens.codeLens.scopes": [
          "document"
        ]
      },
      "defaultValueSource": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      }
    },
    "[dockerfile]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "editor.quickSuggestions": {
          "strings": true
        }
      },
      "defaultValueSource": {
        "id": "vscode.docker",
        "displayName": "Docker Language Basics"
      }
    },
    "[git-commit]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "editor.rulers": [
          72
        ],
        "workbench.editor.restoreViewState": false
      },
      "defaultValueSource": {
        "id": "vscode.git",
        "displayName": "Git"
      }
    },
    "[git-rebase]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "workbench.editor.restoreViewState": false
      },
      "defaultValueSource": {
        "id": "vscode.git",
        "displayName": "Git"
      }
    },
    "[go]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "editor.insertSpaces": false,
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
          "source.organizeImports": true
        },
        "editor.suggest.snippetsPreventQuickSuggestions": false
      },
      "defaultValueSource": {
        "id": "golang.go",
        "displayName": "Go"
      }
    },
    "[html]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "editor.suggest.insertMode": "replace",
        "gitlens.codeLens.scopes": [
          "document"
        ]
      },
      "defaultValueSource": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      }
    },
    "[handlebars]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "editor.suggest.insertMode": "replace"
      },
      "defaultValueSource": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      }
    },
    "[javascript]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "editor.maxTokenizationLineLength": 2500
      },
      "defaultValueSource": {
        "id": "vscode.javascript",
        "displayName": "JavaScript Language Basics"
      }
    },
    "[json]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "editor.quickSuggestions": {
          "strings": true
        },
        "editor.suggest.insertMode": "replace",
        "gitlens.codeLens.scopes": [
          "document"
        ]
      },
      "defaultValueSource": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      }
    },
    "[jsonc]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "editor.quickSuggestions": {
          "strings": true
        },
        "editor.suggest.insertMode": "replace",
        "gitlens.codeLens.scopes": [
          "document"
        ]
      },
      "defaultValueSource": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      }
    },
    "[makefile]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "editor.insertSpaces": false
      },
      "defaultValueSource": {
        "id": "vscode.make",
        "displayName": "Make Language Basics"
      }
    },
    "[markdown]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "editor.unicodeHighlight.ambiguousCharacters": false,
        "editor.unicodeHighlight.invisibleCharacters": false,
        "editor.wordWrap": "on",
        "editor.quickSuggestions": false
      },
      "defaultValueSource": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      }
    },
    "[search-result]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "editor.lineNumbers": "off"
      },
      "defaultValueSource": {
        "id": "vscode.search-result",
        "displayName": "Search Result"
      }
    },
    "[shellscript]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "files.eol": "\n"
      },
      "defaultValueSource": {
        "id": "vscode.shellscript",
        "displayName": "Shell Script Language Basics"
      }
    },
    "[yaml]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "editor.insertSpaces": true,
        "editor.tabSize": 2,
        "editor.autoIndent": "advanced",
        "gitlens.codeLens.scopes": [
          "document"
        ]
      },
      "defaultValueSource": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      }
    },
    "[dockercompose]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "editor.insertSpaces": true,
        "editor.tabSize": 2,
        "editor.autoIndent": "advanced",
        "editor.quickSuggestions": {
          "other": true,
          "comments": false,
          "strings": true
        }
      },
      "defaultValueSource": {
        "id": "ms-azuretools.vscode-docker",
        "displayName": "Docker"
      }
    },
    "[azure-pipelines]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "gitlens.codeLens.scopes": [
          "document"
        ]
      },
      "defaultValueSource": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      }
    },
    "[ansible]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "gitlens.codeLens.scopes": [
          "document"
        ]
      },
      "defaultValueSource": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      }
    },
    "[postcss]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "gitlens.codeLens.scopes": [
          "document"
        ]
      },
      "defaultValueSource": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      }
    },
    "[python]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "gitlens.codeLens.symbolScopes": [
          "!Module"
        ],
        "editor.wordBasedSuggestions": false
      },
      "defaultValueSource": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      }
    },
    "[stylus]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "gitlens.codeLens.scopes": [
          "document"
        ]
      },
      "defaultValueSource": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      }
    },
    "[vue]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {
        "gitlens.codeLens.scopes": [
          "document"
        ]
      },
      "defaultValueSource": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      }
    },
    "css.customData": {
      "type": "array",
      "markdownDescription": "A list of relative file paths pointing to JSON files following the [custom data format](https://github.com/microsoft/vscode-css-languageservice/blob/master/docs/customData.md).\n\nVS Code loads custom data on startup to enhance its CSS support for the custom CSS properties, at directives, pseudo classes and pseudo elements you specify in the JSON files.\n\nThe file paths are relative to workspace and only workspace folder settings are considered.",
      "default": [],
      "items": {
        "type": "string"
      },
      "scope": 4,
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "css.completion.triggerPropertyValueCompletion": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "By default, VS Code triggers property value completion after selecting a CSS property. Use this setting to disable this behavior.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "css.completion.completePropertyWithSemicolon": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Insert semicolon at end of line when completing CSS properties.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "css.validate": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Enables or disables all validations.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "css.hover.documentation": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Show tag and attribute documentation in CSS hovers.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "css.hover.references": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Show references to MDN in CSS hovers.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "css.lint.compatibleVendorPrefixes": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "When using a vendor-specific prefix make sure to also include all other vendor-specific properties.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "css.lint.vendorPrefix": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "warning",
      "description": "When using a vendor-specific prefix, also include the standard property.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "css.lint.duplicateProperties": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "Do not use duplicate style definitions.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "css.lint.emptyRules": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "warning",
      "description": "Do not use empty rulesets.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "css.lint.importStatement": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "Import statements do not load in parallel.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "css.lint.boxModel": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "markdownDescription": "Do not use `width` or `height` when using `padding` or `border`.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "css.lint.universalSelector": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "markdownDescription": "The universal selector (`*`) is known to be slow.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "css.lint.zeroUnits": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "No unit for zero needed.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "css.lint.fontFaceProperties": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "warning",
      "markdownDescription": "`@font-face` rule must define `src` and `font-family` properties.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "css.lint.hexColorLength": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "error",
      "description": "Hex colors must consist of three or six hex numbers.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "error",
      "restricted": false
    },
    "css.lint.argumentsInColorFunction": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "error",
      "description": "Invalid number of parameters.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "error",
      "restricted": false
    },
    "css.lint.unknownProperties": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "warning",
      "description": "Unknown property.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "css.lint.validProperties": {
      "type": "array",
      "uniqueItems": true,
      "items": {
        "type": "string"
      },
      "scope": 4,
      "default": [],
      "description": "A list of properties that are not validated against the `unknownProperties` rule.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "css.lint.ieHack": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "IE hacks are only necessary when supporting IE7 and older.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "css.lint.unknownVendorSpecificProperties": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "Unknown vendor specific property.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "css.lint.propertyIgnoredDueToDisplay": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "warning",
      "markdownDescription": "Property is ignored due to the display. E.g. with `display: inline`, the `width`, `height`, `margin-top`, `margin-bottom`, and `float` properties have no effect.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "css.lint.important": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "markdownDescription": "Avoid using `!important`. It is an indication that the specificity of the entire CSS has gotten out of control and needs to be refactored.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "css.lint.float": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "markdownDescription": "Avoid using `float`. Floats lead to fragile CSS that is easy to break if one aspect of the layout changes.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "css.lint.idSelector": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "Selectors should not contain IDs because these rules are too tightly coupled with the HTML.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "css.lint.unknownAtRules": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "warning",
      "description": "Unknown at-rule.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "css.trace.server": {
      "type": "string",
      "scope": 3,
      "enum": [
        "off",
        "messages",
        "verbose"
      ],
      "default": "off",
      "description": "Traces the communication between VS Code and the CSS language server.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "off",
      "restricted": false
    },
    "scss.completion.triggerPropertyValueCompletion": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "By default, VS Code triggers property value completion after selecting a CSS property. Use this setting to disable this behavior.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "scss.completion.completePropertyWithSemicolon": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Insert semicolon at end of line when completing CSS properties.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "scss.validate": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Enables or disables all validations.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "scss.hover.documentation": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Show tag and attribute documentation in SCSS hovers.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "scss.hover.references": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Show references to MDN in SCSS hovers.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "scss.lint.compatibleVendorPrefixes": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "When using a vendor-specific prefix make sure to also include all other vendor-specific properties.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "scss.lint.vendorPrefix": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "warning",
      "description": "When using a vendor-specific prefix, also include the standard property.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "scss.lint.duplicateProperties": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "Do not use duplicate style definitions.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "scss.lint.emptyRules": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "warning",
      "description": "Do not use empty rulesets.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "scss.lint.importStatement": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "Import statements do not load in parallel.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "scss.lint.boxModel": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "markdownDescription": "Do not use `width` or `height` when using `padding` or `border`.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "scss.lint.universalSelector": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "markdownDescription": "The universal selector (`*`) is known to be slow.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "scss.lint.zeroUnits": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "No unit for zero needed.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "scss.lint.fontFaceProperties": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "warning",
      "markdownDescription": "`@font-face` rule must define `src` and `font-family` properties.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "scss.lint.hexColorLength": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "error",
      "description": "Hex colors must consist of three or six hex numbers.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "error",
      "restricted": false
    },
    "scss.lint.argumentsInColorFunction": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "error",
      "description": "Invalid number of parameters.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "error",
      "restricted": false
    },
    "scss.lint.unknownProperties": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "warning",
      "description": "Unknown property.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "scss.lint.validProperties": {
      "type": "array",
      "uniqueItems": true,
      "items": {
        "type": "string"
      },
      "scope": 4,
      "default": [],
      "description": "A list of properties that are not validated against the `unknownProperties` rule.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "scss.lint.ieHack": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "IE hacks are only necessary when supporting IE7 and older.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "scss.lint.unknownVendorSpecificProperties": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "Unknown vendor specific property.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "scss.lint.propertyIgnoredDueToDisplay": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "warning",
      "markdownDescription": "Property is ignored due to the display. E.g. with `display: inline`, the `width`, `height`, `margin-top`, `margin-bottom`, and `float` properties have no effect.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "scss.lint.important": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "markdownDescription": "Avoid using `!important`. It is an indication that the specificity of the entire CSS has gotten out of control and needs to be refactored.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "scss.lint.float": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "markdownDescription": "Avoid using `float`. Floats lead to fragile CSS that is easy to break if one aspect of the layout changes.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "scss.lint.idSelector": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "Selectors should not contain IDs because these rules are too tightly coupled with the HTML.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "scss.lint.unknownAtRules": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "warning",
      "description": "Unknown at-rule.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "less.completion.triggerPropertyValueCompletion": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "By default, VS Code triggers property value completion after selecting a CSS property. Use this setting to disable this behavior.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "less.completion.completePropertyWithSemicolon": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Insert semicolon at end of line when completing CSS properties.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "less.validate": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Enables or disables all validations.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "less.hover.documentation": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Show tag and attribute documentation in LESS hovers.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "less.hover.references": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Show references to MDN in LESS hovers.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "less.lint.compatibleVendorPrefixes": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "When using a vendor-specific prefix make sure to also include all other vendor-specific properties.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "less.lint.vendorPrefix": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "warning",
      "description": "When using a vendor-specific prefix, also include the standard property.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "less.lint.duplicateProperties": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "Do not use duplicate style definitions.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "less.lint.emptyRules": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "warning",
      "description": "Do not use empty rulesets.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "less.lint.importStatement": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "Import statements do not load in parallel.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "less.lint.boxModel": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "markdownDescription": "Do not use `width` or `height` when using `padding` or `border`.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "less.lint.universalSelector": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "markdownDescription": "The universal selector (`*`) is known to be slow.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "less.lint.zeroUnits": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "No unit for zero needed.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "less.lint.fontFaceProperties": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "warning",
      "markdownDescription": "`@font-face` rule must define `src` and `font-family` properties.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "less.lint.hexColorLength": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "error",
      "description": "Hex colors must consist of three or six hex numbers.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "error",
      "restricted": false
    },
    "less.lint.argumentsInColorFunction": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "error",
      "description": "Invalid number of parameters.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "error",
      "restricted": false
    },
    "less.lint.unknownProperties": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "warning",
      "description": "Unknown property.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "less.lint.validProperties": {
      "type": "array",
      "uniqueItems": true,
      "items": {
        "type": "string"
      },
      "scope": 4,
      "default": [],
      "description": "A list of properties that are not validated against the `unknownProperties` rule.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "less.lint.ieHack": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "IE hacks are only necessary when supporting IE7 and older.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "less.lint.unknownVendorSpecificProperties": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "Unknown vendor specific property.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "less.lint.propertyIgnoredDueToDisplay": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "warning",
      "markdownDescription": "Property is ignored due to the display. E.g. with `display: inline`, the `width`, `height`, `margin-top`, `margin-bottom`, and `float` properties have no effect.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "less.lint.important": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "markdownDescription": "Avoid using `!important`. It is an indication that the specificity of the entire CSS has gotten out of control and needs to be refactored.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "less.lint.float": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "markdownDescription": "Avoid using `float`. Floats lead to fragile CSS that is easy to break if one aspect of the layout changes.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "less.lint.idSelector": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "ignore",
      "description": "Selectors should not contain IDs because these rules are too tightly coupled with the HTML.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "less.lint.unknownAtRules": {
      "type": "string",
      "scope": 4,
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "warning",
      "description": "Unknown at-rule.",
      "source": {
        "id": "vscode.css-language-features",
        "displayName": "CSS Language Features"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "emmet.showExpandedAbbreviation": {
      "type": [
        "string"
      ],
      "enum": [
        "never",
        "always",
        "inMarkupAndStylesheetFilesOnly"
      ],
      "default": "always",
      "markdownDescription": "Shows expanded Emmet abbreviations as suggestions.\nThe option `\"inMarkupAndStylesheetFilesOnly\"` applies to html, haml, jade, slim, xml, xsl, css, scss, sass, less and stylus.\nThe option `\"always\"` applies to all parts of the file regardless of markup/css.",
      "scope": 3,
      "source": {
        "id": "vscode.emmet",
        "displayName": "Emmet"
      },
      "defaultDefaultValue": "always",
      "restricted": false
    },
    "emmet.showAbbreviationSuggestions": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Shows possible Emmet abbreviations as suggestions. Not applicable in stylesheets or when emmet.showExpandedAbbreviation is set to `\"never\"`.",
      "scope": 3,
      "source": {
        "id": "vscode.emmet",
        "displayName": "Emmet"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "emmet.includeLanguages": {
      "type": "object",
      "additionalProperties": {
        "type": "string"
      },
      "default": {},
      "scope": 4,
      "markdownDescription": "Enable Emmet abbreviations in languages that are not supported by default. Add a mapping here between the language and Emmet supported language.\n For example: `{\"vue-html\": \"html\", \"javascript\": \"javascriptreact\"}`",
      "source": {
        "id": "vscode.emmet",
        "displayName": "Emmet"
      },
      "defaultDefaultValue": {},
      "restricted": false
    },
    "emmet.variables": {
      "type": "object",
      "properties": {
        "lang": {
          "type": "string",
          "default": "en"
        },
        "charset": {
          "type": "string",
          "default": "UTF-8"
        }
      },
      "additionalProperties": {
        "type": "string"
      },
      "default": {},
      "scope": 4,
      "markdownDescription": "Variables to be used in Emmet snippets.",
      "source": {
        "id": "vscode.emmet",
        "displayName": "Emmet"
      },
      "defaultDefaultValue": {},
      "restricted": false
    },
    "emmet.syntaxProfiles": {
      "type": "object",
      "default": {},
      "scope": 4,
      "markdownDescription": "Define profile for specified syntax or use your own profile with specific rules.",
      "source": {
        "id": "vscode.emmet",
        "displayName": "Emmet"
      },
      "defaultDefaultValue": {},
      "restricted": false
    },
    "emmet.excludeLanguages": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": [
        "markdown"
      ],
      "scope": 4,
      "markdownDescription": "An array of languages where Emmet abbreviations should not be expanded.",
      "source": {
        "id": "vscode.emmet",
        "displayName": "Emmet"
      },
      "defaultDefaultValue": [
        "markdown"
      ],
      "restricted": false
    },
    "emmet.extensionsPath": {
      "type": "array",
      "items": {
        "type": "string",
        "markdownDescription": "A path containing Emmet syntaxProfiles and/or snippets."
      },
      "default": [],
      "scope": 6,
      "markdownDescription": "An array of paths, where each path can contain Emmet syntaxProfiles and/or snippet files.\nIn case of conflicts, the profiles/snippets of later paths will override those of earlier paths.\nSee https://code.visualstudio.com/docs/editor/emmet for more information and an example snippet file.",
      "source": {
        "id": "vscode.emmet",
        "displayName": "Emmet"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "emmet.triggerExpansionOnTab": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "When enabled, Emmet abbreviations are expanded when pressing TAB.",
      "scope": 3,
      "source": {
        "id": "vscode.emmet",
        "displayName": "Emmet"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "emmet.preferences": {
      "type": "object",
      "default": {},
      "scope": 4,
      "markdownDescription": "Preferences used to modify behavior of some actions and resolvers of Emmet.",
      "properties": {
        "css.intUnit": {
          "type": "string",
          "default": "px",
          "markdownDescription": "Default unit for integer values."
        },
        "css.floatUnit": {
          "type": "string",
          "default": "em",
          "markdownDescription": "Default unit for float values."
        },
        "css.propertyEnd": {
          "type": "string",
          "default": ";",
          "markdownDescription": "Symbol to be placed at the end of CSS property when expanding CSS abbreviations."
        },
        "sass.propertyEnd": {
          "type": "string",
          "default": "",
          "markdownDescription": "Symbol to be placed at the end of CSS property when expanding CSS abbreviations in Sass files."
        },
        "stylus.propertyEnd": {
          "type": "string",
          "default": "",
          "markdownDescription": "Symbol to be placed at the end of CSS property when expanding CSS abbreviations in Stylus files."
        },
        "css.valueSeparator": {
          "type": "string",
          "default": ": ",
          "markdownDescription": "Symbol to be placed at the between CSS property and value when expanding CSS abbreviations."
        },
        "sass.valueSeparator": {
          "type": "string",
          "default": ": ",
          "markdownDescription": "Symbol to be placed at the between CSS property and value when expanding CSS abbreviations in Sass files."
        },
        "stylus.valueSeparator": {
          "type": "string",
          "default": " ",
          "markdownDescription": "Symbol to be placed at the between CSS property and value when expanding CSS abbreviations in Stylus files."
        },
        "bem.elementSeparator": {
          "type": "string",
          "default": "__",
          "markdownDescription": "Element separator used for classes when using the BEM filter."
        },
        "bem.modifierSeparator": {
          "type": "string",
          "default": "_",
          "markdownDescription": "Modifier separator used for classes when using the BEM filter."
        },
        "filter.commentBefore": {
          "type": "string",
          "default": "",
          "markdownDescription": "A definition of comment that should be placed before matched element when comment filter is applied."
        },
        "filter.commentAfter": {
          "type": "string",
          "default": "\n<!-- /[#ID][.CLASS] -->",
          "markdownDescription": "A definition of comment that should be placed after matched element when comment filter is applied."
        },
        "filter.commentTrigger": {
          "type": "array",
          "default": [
            "id",
            "class"
          ],
          "markdownDescription": "A comma-separated list of attribute names that should exist in the abbreviation for the comment filter to be applied."
        },
        "format.noIndentTags": {
          "type": "array",
          "default": [
            "html"
          ],
          "markdownDescription": "An array of tag names that should never get inner indentation."
        },
        "format.forceIndentationForTags": {
          "type": "array",
          "default": [
            "body"
          ],
          "markdownDescription": "An array of tag names that should always get inner indentation."
        },
        "profile.allowCompactBoolean": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "If `true`, compact notation of boolean attributes are produced."
        },
        "css.webkitProperties": {
          "type": "string",
          "default": null,
          "markdownDescription": "Comma separated CSS properties that get the 'webkit' vendor prefix when used in Emmet abbreviation that starts with `-`. Set to empty string to always avoid the 'webkit' prefix."
        },
        "css.mozProperties": {
          "type": "string",
          "default": null,
          "markdownDescription": "Comma separated CSS properties that get the 'moz' vendor prefix when used in Emmet abbreviation that starts with `-`. Set to empty string to always avoid the 'moz' prefix."
        },
        "css.oProperties": {
          "type": "string",
          "default": null,
          "markdownDescription": "Comma separated CSS properties that get the 'o' vendor prefix when used in Emmet abbreviation that starts with `-`. Set to empty string to always avoid the 'o' prefix."
        },
        "css.msProperties": {
          "type": "string",
          "default": null,
          "markdownDescription": "Comma separated CSS properties that get the 'ms' vendor prefix when used in Emmet abbreviation that starts with `-`. Set to empty string to always avoid the 'ms' prefix."
        },
        "css.fuzzySearchMinScore": {
          "type": "number",
          "default": 0.3,
          "markdownDescription": "The minimum score (from 0 to 1) that fuzzy-matched abbreviation should achieve. Lower values may produce many false-positive matches, higher values may reduce possible matches."
        },
        "output.inlineBreak": {
          "type": "number",
          "default": 0,
          "markdownDescription": "The number of sibling inline elements needed for line breaks to be placed between those elements. If `0`, inline elements are always expanded onto a single line."
        },
        "output.reverseAttributes": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "If `true`, reverses attribute merging directions when resolving snippets."
        },
        "output.selfClosingStyle": {
          "type": "string",
          "enum": [
            "html",
            "xhtml",
            "xml"
          ],
          "default": "html",
          "markdownDescription": "Style of self-closing tags: html (`<br>`), xml (`<br/>`) or xhtml (`<br />`)."
        },
        "css.color.short": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "If `true`, color values like `#f` will be expanded to `#fff` instead of `#ffffff`."
        }
      },
      "source": {
        "id": "vscode.emmet",
        "displayName": "Emmet"
      },
      "defaultDefaultValue": {},
      "restricted": false
    },
    "emmet.showSuggestionsAsSnippets": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "If `true`, then Emmet suggestions will show up as snippets allowing you to order them as per `#editor.snippetSuggestions#` setting.",
      "scope": 3,
      "source": {
        "id": "vscode.emmet",
        "displayName": "Emmet"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "emmet.optimizeStylesheetParsing": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When set to `false`, the whole file is parsed to determine if current position is valid for expanding Emmet abbreviations. When set to `true`, only the content around the current position in CSS/SCSS/Less files is parsed.",
      "scope": 3,
      "source": {
        "id": "vscode.emmet",
        "displayName": "Emmet"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.enabled": {
      "type": "boolean",
      "scope": 4,
      "description": "Whether git is enabled.",
      "default": true,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.path": {
      "type": [
        "string",
        "null",
        "array"
      ],
      "markdownDescription": "Path and filename of the git executable, e.g. `C:\\Program Files\\Git\\bin\\git.exe` (Windows). This can also be an array of string values containing multiple paths to look up.",
      "default": null,
      "scope": 2,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "git.autoRepositoryDetection": {
      "type": [
        "boolean",
        "string"
      ],
      "enum": [
        true,
        false,
        "subFolders",
        "openEditors"
      ],
      "enumDescriptions": [
        "Scan for both subfolders of the current opened folder and parent folders of open files.",
        "Disable automatic repository scanning.",
        "Scan for subfolders of the currently opened folder.",
        "Scan for parent folders of open files."
      ],
      "description": "Configures when repositories should be automatically detected.",
      "default": true,
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.autorefresh": {
      "type": "boolean",
      "description": "Whether auto refreshing is enabled.",
      "default": true,
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.autofetch": {
      "type": [
        "boolean",
        "string"
      ],
      "enum": [
        true,
        false,
        "all"
      ],
      "scope": 4,
      "markdownDescription": "When set to true, commits will automatically be fetched from the default remote of the current Git repository. Setting to `all` will fetch from all remotes.",
      "default": false,
      "tags": [
        "usesOnlineServices"
      ],
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.autofetchPeriod": {
      "type": "number",
      "scope": 4,
      "markdownDescription": "Duration in seconds between each automatic git fetch, when `#git.autofetch#` is enabled.",
      "default": 180,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": 180,
      "restricted": false
    },
    "git.branchValidationRegex": {
      "type": "string",
      "description": "A regular expression to validate new branch names.",
      "default": "",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": "",
      "restricted": false
    },
    "git.branchWhitespaceChar": {
      "type": "string",
      "description": "The character to replace whitespace in new branch names.",
      "default": "-",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": "-",
      "restricted": false
    },
    "git.confirmSync": {
      "type": "boolean",
      "description": "Confirm before synchronizing git repositories.",
      "default": true,
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.countBadge": {
      "type": "string",
      "enum": [
        "all",
        "tracked",
        "off"
      ],
      "enumDescriptions": [
        "Count all changes.",
        "Count only tracked changes.",
        "Turn off counter."
      ],
      "description": "Controls the Git count badge.",
      "default": "all",
      "scope": 4,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": "all",
      "restricted": false
    },
    "git.checkoutType": {
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "local",
          "tags",
          "remote"
        ],
        "enumDescriptions": [
          "Local branches",
          "Tags",
          "Remote branches"
        ]
      },
      "uniqueItems": true,
      "markdownDescription": "Controls what type of git refs are listed when running `Checkout to...`.",
      "default": [
        "local",
        "remote",
        "tags"
      ],
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": [
        "local",
        "remote",
        "tags"
      ],
      "restricted": false
    },
    "git.ignoreLegacyWarning": {
      "type": "boolean",
      "description": "Ignores the legacy Git warning.",
      "default": false,
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.ignoreMissingGitWarning": {
      "type": "boolean",
      "description": "Ignores the warning when Git is missing.",
      "default": false,
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.ignoreWindowsGit27Warning": {
      "type": "boolean",
      "description": "Ignores the warning when Git 2.25 - 2.26 is installed on Windows.",
      "default": false,
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.ignoreLimitWarning": {
      "type": "boolean",
      "description": "Ignores the warning when there are too many changes in a repository.",
      "default": false,
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.ignoreRebaseWarning": {
      "type": "boolean",
      "description": "Ignores the warning when it looks like the branch might have been rebased when pulling.",
      "default": false,
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.defaultCloneDirectory": {
      "type": [
        "string",
        "null"
      ],
      "default": null,
      "scope": 2,
      "description": "The default location to clone a git repository.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "git.enableSmartCommit": {
      "type": "boolean",
      "scope": 4,
      "description": "Commit all changes when there are no staged changes.",
      "default": false,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.smartCommitChanges": {
      "type": "string",
      "enum": [
        "all",
        "tracked"
      ],
      "enumDescriptions": [
        "Automatically stage all changes.",
        "Automatically stage tracked changes only."
      ],
      "scope": 4,
      "description": "Control which changes are automatically staged by Smart Commit.",
      "default": "all",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": "all",
      "restricted": false
    },
    "git.suggestSmartCommit": {
      "type": "boolean",
      "scope": 4,
      "description": "Suggests to enable smart commit (commit all changes when there are no staged changes).",
      "default": true,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.enableCommitSigning": {
      "type": "boolean",
      "scope": 4,
      "description": "Enables commit signing with GPG or X.509.",
      "default": false,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.confirmEmptyCommits": {
      "type": "boolean",
      "scope": 4,
      "description": "Always confirm the creation of empty commits for the 'Git: Commit Empty' command.",
      "default": true,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.decorations.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether Git contributes colors and badges to the Explorer and the Open Editors view.",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.enableStatusBarSync": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether the Git Sync command appears in the status bar.",
      "scope": 4,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.followTagsWhenSync": {
      "type": "boolean",
      "scope": 4,
      "default": false,
      "description": "Follow push all tags when running the sync command.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.promptToSaveFilesBeforeStash": {
      "type": "string",
      "enum": [
        "always",
        "staged",
        "never"
      ],
      "enumDescriptions": [
        "Check for any unsaved files.",
        "Check only for unsaved staged files.",
        "Disable this check."
      ],
      "scope": 4,
      "default": "always",
      "description": "Controls whether Git should check for unsaved files before stashing changes.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": "always",
      "restricted": false
    },
    "git.promptToSaveFilesBeforeCommit": {
      "type": "string",
      "enum": [
        "always",
        "staged",
        "never"
      ],
      "enumDescriptions": [
        "Check for any unsaved files.",
        "Check only for unsaved staged files.",
        "Disable this check."
      ],
      "scope": 4,
      "default": "always",
      "description": "Controls whether Git should check for unsaved files before committing.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": "always",
      "restricted": false
    },
    "git.postCommitCommand": {
      "type": "string",
      "enum": [
        "none",
        "push",
        "sync"
      ],
      "enumDescriptions": [
        "Don't run any command after a commit.",
        "Run 'Git Push' after a successful commit.",
        "Run 'Git Sync' after a successful commit."
      ],
      "markdownDescription": "Runs a git command after a successful commit.",
      "scope": 4,
      "default": "none",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": "none",
      "restricted": false
    },
    "git.openAfterClone": {
      "type": "string",
      "enum": [
        "always",
        "alwaysNewWindow",
        "whenNoFolderOpen",
        "prompt"
      ],
      "enumDescriptions": [
        "Always open in current window.",
        "Always open in a new window.",
        "Only open in current window when no folder is opened.",
        "Always prompt for action."
      ],
      "default": "prompt",
      "description": "Controls whether to open a repository automatically after cloning.",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": "prompt",
      "restricted": false
    },
    "git.showInlineOpenFileAction": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether to show an inline Open File action in the Git changes view.",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.showPushSuccessNotification": {
      "type": "boolean",
      "description": "Controls whether to show a notification when a push is successful.",
      "default": false,
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.inputValidation": {
      "type": "string",
      "enum": [
        "always",
        "warn",
        "off"
      ],
      "default": "warn",
      "description": "Controls when to show commit message input validation.",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": "warn",
      "restricted": false
    },
    "git.inputValidationLength": {
      "type": "number",
      "default": 72,
      "description": "Controls the commit message length threshold for showing a warning.",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": 72,
      "restricted": false
    },
    "git.inputValidationSubjectLength": {
      "type": [
        "number",
        "null"
      ],
      "default": 50,
      "description": "Controls the commit message subject length threshold for showing a warning. Unset it to inherit the value of `config.inputValidationLength`.",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": 50,
      "restricted": false
    },
    "git.detectSubmodules": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Controls whether to automatically detect git submodules.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.detectSubmodulesLimit": {
      "type": "number",
      "scope": 4,
      "default": 10,
      "description": "Controls the limit of git submodules detected.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": 10,
      "restricted": false
    },
    "git.alwaysShowStagedChangesResourceGroup": {
      "type": "boolean",
      "scope": 4,
      "default": false,
      "description": "Always show the Staged Changes resource group.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.alwaysSignOff": {
      "type": "boolean",
      "scope": 4,
      "default": false,
      "description": "Controls the signoff flag for all commits.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.ignoreSubmodules": {
      "type": "boolean",
      "scope": 4,
      "default": false,
      "description": "Ignore modifications to submodules in the file tree.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.ignoredRepositories": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": [],
      "scope": 3,
      "description": "List of git repositories to ignore.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "git.scanRepositories": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": [],
      "scope": 4,
      "description": "List of paths to search for git repositories in.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "git.showProgress": {
      "type": "boolean",
      "description": "Controls whether git actions should show progress.",
      "default": true,
      "scope": 4,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.rebaseWhenSync": {
      "type": "boolean",
      "scope": 4,
      "default": false,
      "description": "Force git to use rebase when running the sync command.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.fetchOnPull": {
      "type": "boolean",
      "scope": 4,
      "default": false,
      "description": "When enabled, fetch all branches when pulling. Otherwise, fetch just the current one.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.pruneOnFetch": {
      "type": "boolean",
      "scope": 4,
      "default": false,
      "description": "Prune when fetching.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.pullTags": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Fetch all tags when pulling.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.autoStash": {
      "type": "boolean",
      "scope": 4,
      "default": false,
      "description": "Stash any changes before pulling and restore them after successful pull.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.allowForcePush": {
      "type": "boolean",
      "default": false,
      "description": "Controls whether force push (with or without lease) is enabled.",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.useForcePushWithLease": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether force pushing uses the safer force-with-lease variant.",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.confirmForcePush": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether to ask for confirmation before force-pushing.",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.allowNoVerifyCommit": {
      "type": "boolean",
      "default": false,
      "description": "Controls whether commits without running pre-commit and commit-msg hooks are allowed.",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.confirmNoVerifyCommit": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether to ask for confirmation before committing without verification.",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.closeDiffOnOperation": {
      "type": "boolean",
      "scope": 4,
      "default": false,
      "description": "Controls whether the diff editor should be automatically closed when changes are stashed, committed, discarded, staged, or unstaged.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.openDiffOnClick": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Controls whether the diff editor should be opened when clicking a change. Otherwise the regular editor will be opened.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.supportCancellation": {
      "type": "boolean",
      "scope": 4,
      "default": false,
      "description": "Controls whether a notification comes up when running the Sync action, which allows the user to cancel the operation.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.branchSortOrder": {
      "type": "string",
      "enum": [
        "committerdate",
        "alphabetically"
      ],
      "default": "committerdate",
      "description": "Controls the sort order for branches.",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": "committerdate",
      "restricted": false
    },
    "git.untrackedChanges": {
      "type": "string",
      "enum": [
        "mixed",
        "separate",
        "hidden"
      ],
      "enumDescriptions": [
        "All changes, tracked and untracked, appear together and behave equally.",
        "Untracked changes appear separately in the Source Control view. They are also excluded from several actions.",
        "Untracked changes are hidden and excluded from several actions."
      ],
      "default": "mixed",
      "description": "Controls how untracked changes behave.",
      "scope": 4,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": "mixed",
      "restricted": false
    },
    "git.requireGitUserConfig": {
      "type": "boolean",
      "description": "Controls whether to require explicit Git user configuration or allow Git to guess if missing.",
      "default": true,
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.showCommitInput": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Controls whether to show the commit input in the Git source control panel.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.terminalAuthentication": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Controls whether to enable VS Code to be the authentication handler for git processes spawned in the integrated terminal. Note: terminals need to be restarted to pick up a change in this setting.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.useCommitInputAsStashMessage": {
      "type": "boolean",
      "scope": 4,
      "default": false,
      "description": "Controls whether to use the message from the commit input box as the default stash message.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "git.githubAuthentication": {
      "deprecationMessage": "This setting is now deprecated, please use `github.gitAuthentication` instead.",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "default": null,
      "restricted": false
    },
    "git.timeline.date": {
      "type": "string",
      "enum": [
        "committed",
        "authored"
      ],
      "enumDescriptions": [
        "Use the committed date",
        "Use the authored date"
      ],
      "default": "committed",
      "description": "Controls which date to use for items in the Timeline view.",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": "committed",
      "restricted": false
    },
    "git.timeline.showAuthor": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether to show the commit author in the Timeline view.",
      "scope": 3,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "git.showUnpublishedCommitsButton": {
      "type": "string",
      "enum": [
        "always",
        "whenEmpty",
        "never"
      ],
      "enumDescriptions": [
        "Always shows the action button, if there are unpublished commits.",
        "Only shows the action button if there are no other changes and there are unpublished commits.",
        "Never shows the action button."
      ],
      "default": "whenEmpty",
      "description": "Controls whether to show an action button to sync or publish, if there are unpublished commits.",
      "scope": 4,
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": "whenEmpty",
      "restricted": false
    },
    "git.statusLimit": {
      "type": "number",
      "scope": 4,
      "default": 10000,
      "description": "Controls how to limit the number of changes that can be parsed from Git status command. Can be set to 0 for no limit.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": 10000,
      "restricted": false
    },
    "git.experimental.installGuide": {
      "type": "string",
      "enum": [
        "default",
        "download"
      ],
      "tags": [
        "experimental"
      ],
      "scope": 2,
      "description": "Experimental improvements for the git setup flow.",
      "default": "default",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": "default",
      "restricted": false
    },
    "git.repositoryScanIgnoredFolders": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": [
        "node_modules"
      ],
      "scope": 4,
      "markdownDescription": "List of folders that are ignored while scanning for Git repositories when `#git.autoRepositoryDetection#` is set to `true` or `subFolders`.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": [
        "node_modules"
      ],
      "restricted": false
    },
    "git.repositoryScanMaxDepth": {
      "type": "number",
      "scope": 4,
      "default": 1,
      "markdownDescription": "Controls the depth used when scanning workspace folders for Git repositories when `#git.autoRepositoryDetection#` is set to `true` or `subFolders`. Can be set to `-1` for no limit.",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": 1,
      "restricted": false
    },
    "git.commandsToLog": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": [],
      "scope": 4,
      "markdownDescription": "List of git commands (ex: commit, push) that would have their `stdout` logged to the [git output](command:git.showOutput). If the git command has a client-side hook configured, the client-side hook's `stdout` will also be logged to the [git output](command:git.showOutput).",
      "source": {
        "id": "vscode.git",
        "displayName": "Git"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "github.gitAuthentication": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Controls whether to enable automatic GitHub authentication for git commands within VS Code.",
      "source": {
        "id": "vscode.github",
        "displayName": "GitHub"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "github-enterprise.uri": {
      "type": "string",
      "description": "URI of your GitHub Enterprise Instance",
      "scope": 3,
      "source": {
        "id": "vscode.github-authentication",
        "displayName": "GitHub Authentication"
      },
      "default": "",
      "restricted": false
    },
    "grunt.autoDetect": {
      "scope": 1,
      "type": "string",
      "enum": [
        "off",
        "on"
      ],
      "default": "off",
      "description": "Controls enablement of Grunt task detection. Grunt task detection can cause files in any open workspace to be executed.",
      "source": {
        "id": "vscode.grunt",
        "displayName": "Grunt support for VS Code"
      },
      "defaultDefaultValue": "off",
      "restricted": false
    },
    "gulp.autoDetect": {
      "scope": 1,
      "type": "string",
      "enum": [
        "off",
        "on"
      ],
      "default": "off",
      "description": "Controls enablement of Gulp task detection. Gulp task detection can cause files in any open workspace to be executed.",
      "source": {
        "id": "vscode.gulp",
        "displayName": "Gulp support for VSCode"
      },
      "defaultDefaultValue": "off",
      "restricted": false
    },
    "html.completion.attributeDefaultValue": {
      "type": "string",
      "scope": 4,
      "enum": [
        "doublequotes",
        "singlequotes",
        "empty"
      ],
      "enumDescriptions": [
        "Attribute value is set to \"\".",
        "Attribute value is set to ''.",
        "Attribute value is not set."
      ],
      "default": "doublequotes",
      "description": "Controls the default value for attributes when completion is accepted.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": "doublequotes",
      "restricted": false
    },
    "html.customData": {
      "type": "array",
      "markdownDescription": "A list of relative file paths pointing to JSON files following the [custom data format](https://github.com/microsoft/vscode-html-languageservice/blob/master/docs/customData.md).\n\nVS Code loads custom data on startup to enhance its HTML support for the custom HTML tags, attributes and attribute values you specify in the JSON files.\n\nThe file paths are relative to workspace and only workspace folder settings are considered.",
      "default": [],
      "items": {
        "type": "string"
      },
      "scope": 4,
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "html.format.enable": {
      "type": "boolean",
      "scope": 3,
      "default": true,
      "description": "Enable/disable default HTML formatter.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "html.format.wrapLineLength": {
      "type": "integer",
      "scope": 4,
      "default": 120,
      "description": "Maximum amount of characters per line (0 = disable).",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": 120,
      "restricted": false
    },
    "html.format.unformatted": {
      "type": [
        "string",
        "null"
      ],
      "scope": 4,
      "default": "wbr",
      "markdownDescription": "List of tags, comma separated, that shouldn't be reformatted. `null` defaults to all tags listed at https://www.w3.org/TR/html5/dom.html#phrasing-content.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": "wbr",
      "restricted": false
    },
    "html.format.contentUnformatted": {
      "type": [
        "string",
        "null"
      ],
      "scope": 4,
      "default": "pre,code,textarea",
      "markdownDescription": "List of tags, comma separated, where the content shouldn't be reformatted. `null` defaults to the `pre` tag.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": "pre,code,textarea",
      "restricted": false
    },
    "html.format.indentInnerHtml": {
      "type": "boolean",
      "scope": 4,
      "default": false,
      "markdownDescription": "Indent `<head>` and `<body>` sections.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "html.format.preserveNewLines": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Controls whether existing line breaks before elements should be preserved. Only works before elements, not inside tags or for text.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "html.format.maxPreserveNewLines": {
      "type": [
        "number",
        "null"
      ],
      "scope": 4,
      "default": null,
      "markdownDescription": "Maximum number of line breaks to be preserved in one chunk. Use `null` for unlimited.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "html.format.indentHandlebars": {
      "type": "boolean",
      "scope": 4,
      "default": false,
      "markdownDescription": "Format and indent `{{#foo}}` and `{{/foo}}`.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "html.format.endWithNewline": {
      "type": "boolean",
      "scope": 4,
      "default": false,
      "description": "End with a newline.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "html.format.extraLiners": {
      "type": [
        "string",
        "null"
      ],
      "scope": 4,
      "default": "head, body, /html",
      "markdownDescription": "List of tags, comma separated, that should have an extra newline before them. `null` defaults to `\"head, body, /html\"`.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": "head, body, /html",
      "restricted": false
    },
    "html.format.wrapAttributes": {
      "type": "string",
      "scope": 4,
      "default": "auto",
      "enum": [
        "auto",
        "force",
        "force-aligned",
        "force-expand-multiline",
        "aligned-multiple",
        "preserve",
        "preserve-aligned"
      ],
      "enumDescriptions": [
        "Wrap attributes only when line length is exceeded.",
        "Wrap each attribute except first.",
        "Wrap each attribute except first and keep aligned.",
        "Wrap each attribute.",
        "Wrap when line length is exceeded, align attributes vertically.",
        "Preserve wrapping of attributes.",
        "Preserve wrapping of attributes but align."
      ],
      "description": "Wrap attributes.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": "auto",
      "restricted": false
    },
    "html.format.wrapAttributesIndentSize": {
      "type": [
        "number",
        "null"
      ],
      "scope": 4,
      "default": null,
      "markdownDescription": "Indent wrapped attributes to after N characters. Use `null` to use the default indent size. Ignored if `#html.format.wrapAttributes#` is set to 'aligned'.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "html.format.templating": {
      "type": "boolean",
      "scope": 4,
      "default": false,
      "description": "Honor django, erb, handlebars and php templating language tags.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "html.format.unformattedContentDelimiter": {
      "type": "string",
      "scope": 4,
      "default": "",
      "markdownDescription": "Keep text content together between this string.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": "",
      "restricted": false
    },
    "html.suggest.html5": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Controls whether the built-in HTML language support suggests HTML5 tags, properties and values.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "html.validate.scripts": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Controls whether the built-in HTML language support validates embedded scripts.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "html.validate.styles": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Controls whether the built-in HTML language support validates embedded styles.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "html.autoCreateQuotes": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Enable/disable auto creation of quotes for HTML attribute assignment. The type of quotes can be configured by `#html.completion.attributeDefaultValue#`.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "html.autoClosingTags": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Enable/disable autoclosing of HTML tags.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "html.hover.documentation": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Show tag and attribute documentation in hover.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "html.hover.references": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Show references to MDN in hover.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "html.mirrorCursorOnMatchingTag": {
      "type": "boolean",
      "scope": 4,
      "default": false,
      "description": "Enable/disable mirroring cursor on matching HTML tag.",
      "deprecationMessage": "Deprecated in favor of `editor.linkedEditing`",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "html.trace.server": {
      "type": "string",
      "scope": 3,
      "enum": [
        "off",
        "messages",
        "verbose"
      ],
      "default": "off",
      "description": "Traces the communication between VS Code and the HTML language server.",
      "source": {
        "id": "vscode.html-language-features",
        "displayName": "HTML Language Features"
      },
      "defaultDefaultValue": "off",
      "restricted": false
    },
    "jake.autoDetect": {
      "scope": 1,
      "type": "string",
      "enum": [
        "off",
        "on"
      ],
      "default": "off",
      "description": "Controls enablement of Jake task detection. Jake task detection can cause files in any open workspace to be executed.",
      "source": {
        "id": "vscode.jake",
        "displayName": "Jake support for VS Code"
      },
      "defaultDefaultValue": "off",
      "restricted": false
    },
    "json.schemas": {
      "type": "array",
      "scope": 4,
      "description": "Associate schemas to JSON files in the current project.",
      "items": {
        "type": "object",
        "default": {
          "fileMatch": [
            "/myfile"
          ],
          "url": "schemaURL"
        },
        "properties": {
          "url": {
            "type": "string",
            "default": "/user.schema.json",
            "description": "A URL to a schema or a relative path to a schema in the current directory"
          },
          "fileMatch": {
            "type": "array",
            "items": {
              "type": "string",
              "default": "MyFile.json",
              "description": "A file pattern that can contain '*' to match against when resolving JSON files to schemas."
            },
            "minItems": 1,
            "description": "An array of file patterns to match against when resolving JSON files to schemas. `*` can be used as a wildcard. Exclusion patterns can also be defined and start with '!'. A file matches when there is at least one matching pattern and the last matching pattern is not an exclusion pattern."
          },
          "schema": {
            "$ref": "http://json-schema.org/draft-07/schema#",
            "description": "The schema definition for the given URL. The schema only needs to be provided to avoid accesses to the schema URL."
          }
        }
      },
      "source": {
        "id": "vscode.json-language-features",
        "displayName": "JSON Language Features"
      },
      "default": [],
      "restricted": false
    },
    "json.format.enable": {
      "type": "boolean",
      "scope": 3,
      "default": true,
      "description": "Enable/disable default JSON formatter",
      "source": {
        "id": "vscode.json-language-features",
        "displayName": "JSON Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "json.trace.server": {
      "type": "string",
      "scope": 3,
      "enum": [
        "off",
        "messages",
        "verbose"
      ],
      "default": "off",
      "description": "Traces the communication between VS Code and the JSON language server.",
      "source": {
        "id": "vscode.json-language-features",
        "displayName": "JSON Language Features"
      },
      "defaultDefaultValue": "off",
      "restricted": false
    },
    "json.colorDecorators.enable": {
      "type": "boolean",
      "scope": 3,
      "default": true,
      "description": "Enables or disables color decorators",
      "deprecationMessage": "The setting `json.colorDecorators.enable` has been deprecated in favor of `editor.colorDecorators`.",
      "source": {
        "id": "vscode.json-language-features",
        "displayName": "JSON Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "json.maxItemsComputed": {
      "type": "number",
      "default": 5000,
      "description": "The maximum number of outline symbols and folding regions computed (limited for performance reasons).",
      "scope": 3,
      "source": {
        "id": "vscode.json-language-features",
        "displayName": "JSON Language Features"
      },
      "defaultDefaultValue": 5000,
      "restricted": false
    },
    "json.schemaDownload.enable": {
      "type": "boolean",
      "default": true,
      "description": "When enabled, JSON schemas can be fetched from http and https locations.",
      "tags": [
        "usesOnlineServices"
      ],
      "scope": 3,
      "source": {
        "id": "vscode.json-language-features",
        "displayName": "JSON Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "markdown.styles": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": [],
      "description": "A list of URLs or local paths to CSS style sheets to use from the Markdown preview. Relative paths are interpreted relative to the folder open in the Explorer. If there is no open folder, they are interpreted relative to the location of the Markdown file. All '\\' need to be written as '\\\\'.",
      "scope": 4,
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": [],
      "restricted": true
    },
    "markdown.preview.breaks": {
      "type": "boolean",
      "default": false,
      "description": "Sets how line-breaks are rendered in the Markdown preview. Setting it to 'true' creates a <br> for newlines inside paragraphs.",
      "scope": 4,
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "markdown.preview.linkify": {
      "type": "boolean",
      "default": true,
      "description": "Enable or disable conversion of URL-like text to links in the Markdown preview.",
      "scope": 4,
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "markdown.preview.typographer": {
      "type": "boolean",
      "default": false,
      "description": "Enable or disable some language-neutral replacement and quotes beautification in the Markdown preview.",
      "scope": 4,
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "markdown.preview.fontFamily": {
      "type": "string",
      "default": "-apple-system, BlinkMacSystemFont, 'Segoe WPC', 'Segoe UI', system-ui, 'Ubuntu', 'Droid Sans', sans-serif",
      "description": "Controls the font family used in the Markdown preview.",
      "scope": 4,
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": "-apple-system, BlinkMacSystemFont, 'Segoe WPC', 'Segoe UI', system-ui, 'Ubuntu', 'Droid Sans', sans-serif",
      "restricted": false
    },
    "markdown.preview.fontSize": {
      "type": "number",
      "default": 14,
      "description": "Controls the font size in pixels used in the Markdown preview.",
      "scope": 4,
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": 14,
      "restricted": false
    },
    "markdown.preview.lineHeight": {
      "type": "number",
      "default": 1.6,
      "description": "Controls the line height used in the Markdown preview. This number is relative to the font size.",
      "scope": 4,
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": 1.6,
      "restricted": false
    },
    "markdown.preview.scrollPreviewWithEditor": {
      "type": "boolean",
      "default": true,
      "description": "When a Markdown editor is scrolled, update the view of the preview.",
      "scope": 4,
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "markdown.preview.markEditorSelection": {
      "type": "boolean",
      "default": true,
      "description": "Mark the current editor selection in the Markdown preview.",
      "scope": 4,
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "markdown.preview.scrollEditorWithPreview": {
      "type": "boolean",
      "default": true,
      "description": "When a Markdown preview is scrolled, update the view of the editor.",
      "scope": 4,
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "markdown.preview.doubleClickToSwitchToEditor": {
      "type": "boolean",
      "default": true,
      "description": "Double click in the Markdown preview to switch to the editor.",
      "scope": 4,
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "markdown.preview.openMarkdownLinks": {
      "type": "string",
      "default": "inPreview",
      "description": "Controls how links to other Markdown files in the Markdown preview should be opened.",
      "scope": 4,
      "enum": [
        "inPreview",
        "inEditor"
      ],
      "enumDescriptions": [
        "Try to open links in the Markdown preview.",
        "Try to open links in the editor."
      ],
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": "inPreview",
      "restricted": false
    },
    "markdown.links.openLocation": {
      "type": "string",
      "default": "currentGroup",
      "description": "Controls where links in Markdown files should be opened.",
      "scope": 4,
      "enum": [
        "currentGroup",
        "beside"
      ],
      "enumDescriptions": [
        "Open links in the active editor group.",
        "Open links beside the active editor."
      ],
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": "currentGroup",
      "restricted": false
    },
    "markdown.suggest.paths.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable path suggestions for markdown links",
      "scope": 4,
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "markdown.trace": {
      "type": "string",
      "enum": [
        "off",
        "verbose"
      ],
      "default": "off",
      "description": "Enable debug logging for the Markdown extension.",
      "scope": 3,
      "source": {
        "id": "vscode.markdown-language-features",
        "displayName": "Markdown Language Features"
      },
      "defaultDefaultValue": "off",
      "restricted": false
    },
    "markdown.math.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable rendering math in the built-in Markdown preview.",
      "scope": 3,
      "source": {
        "id": "vscode.markdown-math",
        "displayName": "Markdown Math"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "merge-conflict.codeLens.enabled": {
      "type": "boolean",
      "description": "Create a CodeLens for merge conflict blocks within editor.",
      "default": true,
      "scope": 3,
      "source": {
        "id": "vscode.merge-conflict",
        "displayName": "Merge Conflict"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "merge-conflict.decorators.enabled": {
      "type": "boolean",
      "description": "Create decorators for merge conflict blocks within editor.",
      "default": true,
      "scope": 3,
      "source": {
        "id": "vscode.merge-conflict",
        "displayName": "Merge Conflict"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "merge-conflict.autoNavigateNextConflict.enabled": {
      "type": "boolean",
      "description": "Whether to automatically navigate to the next merge conflict after resolving a merge conflict.",
      "default": false,
      "scope": 3,
      "source": {
        "id": "vscode.merge-conflict",
        "displayName": "Merge Conflict"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "merge-conflict.diffViewPosition": {
      "type": "string",
      "enum": [
        "Current",
        "Beside",
        "Below"
      ],
      "description": "Controls where the diff view should be opened when comparing changes in merge conflicts.",
      "enumDescriptions": [
        "Open the diff view in the current editor group.",
        "Open the diff view next to the current editor group.",
        "Open the diff view below the current editor group."
      ],
      "default": "Current",
      "scope": 3,
      "source": {
        "id": "vscode.merge-conflict",
        "displayName": "Merge Conflict"
      },
      "defaultDefaultValue": "Current",
      "restricted": false
    },
    "debug.javascript.codelens.npmScripts": {
      "enum": [
        "top",
        "all",
        "never"
      ],
      "default": "top",
      "description": "Where a \"Run\" and \"Debug\" code lens should be shown in your npm scripts. It may be on \"all\", scripts, on \"top\" of the script section, or \"never\".",
      "scope": 3,
      "source": {
        "id": "ms-vscode.js-debug",
        "displayName": "JavaScript Debugger"
      },
      "defaultDefaultValue": "top",
      "restricted": false
    },
    "debug.javascript.terminalOptions": {
      "type": "object",
      "description": "Default launch options for the JavaScript debug terminal and npm scripts.",
      "default": {},
      "properties": {
        "resolveSourceMapLocations": {
          "type": [
            "array",
            "null"
          ],
          "description": "A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.",
          "default": [
            "${workspaceFolder}/**",
            "!**/node_modules/**"
          ],
          "items": {
            "type": "string"
          }
        },
        "outFiles": {
          "type": [
            "array"
          ],
          "description": "If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.",
          "default": [
            "${workspaceFolder}/**/*.js",
            "!**/node_modules/**"
          ],
          "items": {
            "type": "string"
          }
        },
        "pauseForSourceMap": {
          "type": "boolean",
          "markdownDescription": "Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.",
          "default": false
        },
        "showAsyncStacks": {
          "description": "Show the async calls that led to the current call stack.",
          "default": true,
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "object",
              "required": [
                "onAttach"
              ],
              "properties": {
                "onAttach": {
                  "type": "number",
                  "default": 32
                }
              }
            },
            {
              "type": "object",
              "required": [
                "onceBreakpointResolved"
              ],
              "properties": {
                "onceBreakpointResolved": {
                  "type": "number",
                  "default": 32
                }
              }
            }
          ]
        },
        "skipFiles": {
          "type": "array",
          "description": "An array of file or folder names, or path globs, to skip when debugging.",
          "default": [
            "<node_internals>/**"
          ]
        },
        "smartStep": {
          "type": "boolean",
          "description": "Automatically step through generated code that cannot be mapped back to the original source.",
          "default": true
        },
        "sourceMaps": {
          "type": "boolean",
          "description": "Use JavaScript source maps (if they exist).",
          "default": true
        },
        "sourceMapRenames": {
          "type": "boolean",
          "default": true,
          "description": "Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers."
        },
        "sourceMapPathOverrides": {
          "type": "object",
          "description": "A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.",
          "default": {
            "webpack://?:*/*": "${workspaceFolder}/*",
            "webpack:///./~/*": "${workspaceFolder}/node_modules/*",
            "meteor://💻app/*": "${workspaceFolder}/*"
          }
        },
        "timeout": {
          "type": "number",
          "description": "Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.",
          "default": 10000
        },
        "timeouts": {
          "type": "object",
          "description": "Timeouts for several debugger operations.",
          "default": {},
          "properties": {
            "sourceMapMinPause": {
              "type": "number",
              "description": "Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed",
              "default": 1000
            },
            "sourceMapCumulativePause": {
              "type": "number",
              "description": "Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted",
              "default": 1000
            }
          },
          "additionalProperties": false,
          "markdownDescription": "Timeouts for several debugger operations."
        },
        "trace": {
          "description": "Configures what diagnostic output is produced.",
          "default": true,
          "oneOf": [
            {
              "type": "boolean",
              "description": "Trace may be set to 'true' to write diagnostic logs to the disk."
            },
            {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "console": {
                  "type": "boolean",
                  "description": "Whether to return trace data from the launched application or browser."
                },
                "stdio": {
                  "type": "boolean",
                  "description": "Configures whether logs are also returned to the debug console."
                },
                "level": {
                  "enum": [
                    "fatal",
                    "error",
                    "warn",
                    "info",
                    "verbose"
                  ],
                  "description": "Configures the level of logs recorded."
                },
                "logFile": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Configures where on disk logs are written."
                },
                "tags": {
                  "type": "array",
                  "description": "Configures what types of logs are recorded.",
                  "items": {
                    "enum": [
                      "cdp",
                      "dap",
                      "runtime"
                    ]
                  }
                }
              }
            }
          ]
        },
        "outputCapture": {
          "enum": [
            "console",
            "std"
          ],
          "markdownDescription": "From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`.",
          "default": "console"
        },
        "enableContentValidation": {
          "default": true,
          "type": "boolean",
          "description": "Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example."
        },
        "customDescriptionGenerator": {
          "type": "string",
          "description": "Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      "
        },
        "customPropertiesGenerator": {
          "type": "string",
          "deprecated": true,
          "description": "Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181"
        },
        "cascadeTerminateToConfigurations": {
          "type": "array",
          "items": {
            "type": "string",
            "uniqueItems": true
          },
          "default": [],
          "description": "A list of debug sessions which, when this debug session is terminated, will also be stopped."
        },
        "cwd": {
          "type": "string",
          "description": "Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder",
          "default": "${workspaceFolder}",
          "docDefault": "localRoot || ${workspaceFolder}"
        },
        "localRoot": {
          "type": [
            "string",
            "null"
          ],
          "description": "Path to the local directory containing the program.",
          "default": null
        },
        "remoteRoot": {
          "type": [
            "string",
            "null"
          ],
          "description": "Absolute path to the remote directory containing the program.",
          "default": null
        },
        "autoAttachChildProcesses": {
          "type": "boolean",
          "description": "Attach debugger to new child processes automatically.",
          "default": true
        },
        "env": {
          "type": "object",
          "additionalProperties": {
            "type": [
              "string",
              "null"
            ]
          },
          "markdownDescription": "Environment variables passed to the program. The value `null` removes the variable from the environment.",
          "default": {}
        },
        "envFile": {
          "type": "string",
          "description": "Absolute path to a file containing environment variable definitions.",
          "default": "${workspaceFolder}/.env"
        },
        "runtimeSourcemapPausePatterns": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "markdownDescription": "A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).",
          "default": []
        },
        "nodeVersionHint": {
          "type": "number",
          "minimum": 8,
          "description": "Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.",
          "default": 12
        },
        "command": {
          "type": [
            "string",
            "null"
          ],
          "description": "Command to run in the launched terminal. If not provided, the terminal will open without launching a program.",
          "default": "npm start"
        }
      },
      "scope": 3,
      "source": {
        "id": "ms-vscode.js-debug",
        "displayName": "JavaScript Debugger"
      },
      "defaultDefaultValue": {},
      "restricted": false
    },
    "debug.javascript.suggestPrettyPrinting": {
      "type": "boolean",
      "description": "Whether to suggest pretty printing JavaScript code that looks minified when you step into it.",
      "default": true,
      "scope": 3,
      "source": {
        "id": "ms-vscode.js-debug",
        "displayName": "JavaScript Debugger"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "debug.javascript.automaticallyTunnelRemoteServer": {
      "type": "boolean",
      "description": "When debugging a remote web app, configures whether to automatically tunnel the remote server to your local machine.",
      "default": true,
      "scope": 3,
      "source": {
        "id": "ms-vscode.js-debug",
        "displayName": "JavaScript Debugger"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "debug.javascript.debugByLinkOptions": {
      "default": "on",
      "description": "Options used when debugging open links clicked from inside the JavaScript Debug Terminal. Can be set to \"off\" to disable this behavior, or \"always\" to enable debugging in all terminals.",
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "on",
            "off",
            "always"
          ]
        },
        {
          "type": "object",
          "properties": {
            "resolveSourceMapLocations": {
              "type": [
                "array",
                "null"
              ],
              "description": "A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.",
              "default": null,
              "items": {
                "type": "string"
              }
            },
            "outFiles": {
              "type": [
                "array"
              ],
              "description": "If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.",
              "default": [
                "${workspaceFolder}/**/*.js",
                "!**/node_modules/**"
              ],
              "items": {
                "type": "string"
              }
            },
            "pauseForSourceMap": {
              "type": "boolean",
              "markdownDescription": "Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.",
              "default": false
            },
            "showAsyncStacks": {
              "description": "Show the async calls that led to the current call stack.",
              "default": true,
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "object",
                  "required": [
                    "onAttach"
                  ],
                  "properties": {
                    "onAttach": {
                      "type": "number",
                      "default": 32
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "onceBreakpointResolved"
                  ],
                  "properties": {
                    "onceBreakpointResolved": {
                      "type": "number",
                      "default": 32
                    }
                  }
                }
              ]
            },
            "skipFiles": {
              "type": "array",
              "description": "An array of file or folder names, or path globs, to skip when debugging.",
              "default": [
                "<node_internals>/**"
              ]
            },
            "smartStep": {
              "type": "boolean",
              "description": "Automatically step through generated code that cannot be mapped back to the original source.",
              "default": true
            },
            "sourceMaps": {
              "type": "boolean",
              "description": "Use JavaScript source maps (if they exist).",
              "default": true
            },
            "sourceMapRenames": {
              "type": "boolean",
              "default": true,
              "description": "Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers."
            },
            "sourceMapPathOverrides": {
              "type": "object",
              "description": "A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.",
              "default": {
                "webpack://?:*/*": "${workspaceFolder}/*",
                "webpack:///./~/*": "${workspaceFolder}/node_modules/*",
                "meteor://💻app/*": "${workspaceFolder}/*"
              }
            },
            "timeout": {
              "type": "number",
              "description": "Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.",
              "default": 10000
            },
            "timeouts": {
              "type": "object",
              "description": "Timeouts for several debugger operations.",
              "default": {},
              "properties": {
                "sourceMapMinPause": {
                  "type": "number",
                  "description": "Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed",
                  "default": 1000
                },
                "sourceMapCumulativePause": {
                  "type": "number",
                  "description": "Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted",
                  "default": 1000
                }
              },
              "additionalProperties": false,
              "markdownDescription": "Timeouts for several debugger operations."
            },
            "trace": {
              "description": "Configures what diagnostic output is produced.",
              "default": true,
              "oneOf": [
                {
                  "type": "boolean",
                  "description": "Trace may be set to 'true' to write diagnostic logs to the disk."
                },
                {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "console": {
                      "type": "boolean",
                      "description": "Whether to return trace data from the launched application or browser."
                    },
                    "stdio": {
                      "type": "boolean",
                      "description": "Configures whether logs are also returned to the debug console."
                    },
                    "level": {
                      "enum": [
                        "fatal",
                        "error",
                        "warn",
                        "info",
                        "verbose"
                      ],
                      "description": "Configures the level of logs recorded."
                    },
                    "logFile": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "Configures where on disk logs are written."
                    },
                    "tags": {
                      "type": "array",
                      "description": "Configures what types of logs are recorded.",
                      "items": {
                        "enum": [
                          "cdp",
                          "dap",
                          "runtime"
                        ]
                      }
                    }
                  }
                }
              ]
            },
            "outputCapture": {
              "enum": [
                "console",
                "std"
              ],
              "markdownDescription": "From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`.",
              "default": "console"
            },
            "enableContentValidation": {
              "default": true,
              "type": "boolean",
              "description": "Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example."
            },
            "customDescriptionGenerator": {
              "type": "string",
              "description": "Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      "
            },
            "customPropertiesGenerator": {
              "type": "string",
              "deprecated": true,
              "description": "Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181"
            },
            "cascadeTerminateToConfigurations": {
              "type": "array",
              "items": {
                "type": "string",
                "uniqueItems": true
              },
              "default": [],
              "description": "A list of debug sessions which, when this debug session is terminated, will also be stopped."
            },
            "disableNetworkCache": {
              "type": "boolean",
              "description": "Controls whether to skip the network cache for each request",
              "default": true
            },
            "pathMapping": {
              "type": "object",
              "description": "A mapping of URLs/paths to local folders, to resolve scripts in the Browser to scripts on disk",
              "default": {}
            },
            "webRoot": {
              "type": "string",
              "description": "This specifies the workspace absolute path to the webserver root. Used to resolve paths like `/app.js` to files on disk. Shorthand for a pathMapping for \"/\"",
              "default": "${workspaceFolder}"
            },
            "urlFilter": {
              "type": "string",
              "description": "Will search for a page with this url and attach to it, if found. Can have * wildcards.",
              "default": ""
            },
            "url": {
              "type": "string",
              "description": "Will search for a tab with this exact url and attach to it, if found",
              "default": "http://localhost:8080"
            },
            "inspectUri": {
              "type": [
                "string",
                "null"
              ],
              "description": "Format to use to rewrite the inspectUri: It's a template string that interpolates keys in `{curlyBraces}`. Available keys are:\n - `url.*` is the parsed address of the running application. For instance, `{url.port}`, `{url.hostname}`\n - `port` is the debug port that Chrome is listening on.\n - `browserInspectUri` is the inspector URI on the launched browser\n - `browserInspectUriPath` is the path part of the inspector URI on the launched browser (e.g.: \"/devtools/browser/e9ec0098-306e-472a-8133-5e42488929c2\").\n - `wsProtocol` is the hinted websocket protocol. This is set to `wss` if the original URL is `https`, or `ws` otherwise.\n",
              "default": null
            },
            "vueComponentPaths": {
              "type": "array",
              "description": "A list of file glob patterns to find `*.vue` components. By default, searches the entire workspace. This needs to be specified due to extra lookups that Vue's sourcemaps require in Vue CLI 4. You can disable this special handling by setting this to an empty array.",
              "default": [
                "${workspaceFolder}/**/*.vue"
              ]
            },
            "server": {
              "oneOf": [
                {
                  "type": "object",
                  "description": "Configures a web server to start up. Takes the same configuration as the 'node' launch task.",
                  "additionalProperties": false,
                  "default": {
                    "program": "node my-server.js"
                  },
                  "properties": {
                    "resolveSourceMapLocations": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "description": "A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.",
                      "default": [
                        "${workspaceFolder}/**",
                        "!**/node_modules/**"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "outFiles": {
                      "type": [
                        "array"
                      ],
                      "description": "If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.",
                      "default": [
                        "${workspaceFolder}/**/*.js",
                        "!**/node_modules/**"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "pauseForSourceMap": {
                      "type": "boolean",
                      "markdownDescription": "Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.",
                      "default": false
                    },
                    "showAsyncStacks": {
                      "description": "Show the async calls that led to the current call stack.",
                      "default": true,
                      "oneOf": [
                        {
                          "type": "boolean"
                        },
                        {
                          "type": "object",
                          "required": [
                            "onAttach"
                          ],
                          "properties": {
                            "onAttach": {
                              "type": "number",
                              "default": 32
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "onceBreakpointResolved"
                          ],
                          "properties": {
                            "onceBreakpointResolved": {
                              "type": "number",
                              "default": 32
                            }
                          }
                        }
                      ]
                    },
                    "skipFiles": {
                      "type": "array",
                      "description": "An array of file or folder names, or path globs, to skip when debugging.",
                      "default": [
                        "<node_internals>/**"
                      ]
                    },
                    "smartStep": {
                      "type": "boolean",
                      "description": "Automatically step through generated code that cannot be mapped back to the original source.",
                      "default": true
                    },
                    "sourceMaps": {
                      "type": "boolean",
                      "description": "Use JavaScript source maps (if they exist).",
                      "default": true
                    },
                    "sourceMapRenames": {
                      "type": "boolean",
                      "default": true,
                      "description": "Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers."
                    },
                    "sourceMapPathOverrides": {
                      "type": "object",
                      "description": "A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.",
                      "default": {
                        "webpack://?:*/*": "${workspaceFolder}/*",
                        "webpack:///./~/*": "${workspaceFolder}/node_modules/*",
                        "meteor://💻app/*": "${workspaceFolder}/*"
                      }
                    },
                    "timeout": {
                      "type": "number",
                      "description": "Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.",
                      "default": 10000
                    },
                    "timeouts": {
                      "type": "object",
                      "description": "Timeouts for several debugger operations.",
                      "default": {},
                      "properties": {
                        "sourceMapMinPause": {
                          "type": "number",
                          "description": "Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed",
                          "default": 1000
                        },
                        "sourceMapCumulativePause": {
                          "type": "number",
                          "description": "Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted",
                          "default": 1000
                        }
                      },
                      "additionalProperties": false,
                      "markdownDescription": "Timeouts for several debugger operations."
                    },
                    "trace": {
                      "description": "Configures what diagnostic output is produced.",
                      "default": true,
                      "oneOf": [
                        {
                          "type": "boolean",
                          "description": "Trace may be set to 'true' to write diagnostic logs to the disk."
                        },
                        {
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "console": {
                              "type": "boolean",
                              "description": "Whether to return trace data from the launched application or browser."
                            },
                            "stdio": {
                              "type": "boolean",
                              "description": "Configures whether logs are also returned to the debug console."
                            },
                            "level": {
                              "enum": [
                                "fatal",
                                "error",
                                "warn",
                                "info",
                                "verbose"
                              ],
                              "description": "Configures the level of logs recorded."
                            },
                            "logFile": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "Configures where on disk logs are written."
                            },
                            "tags": {
                              "type": "array",
                              "description": "Configures what types of logs are recorded.",
                              "items": {
                                "enum": [
                                  "cdp",
                                  "dap",
                                  "runtime"
                                ]
                              }
                            }
                          }
                        }
                      ]
                    },
                    "outputCapture": {
                      "enum": [
                        "console",
                        "std"
                      ],
                      "markdownDescription": "From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`.",
                      "default": "console"
                    },
                    "enableContentValidation": {
                      "default": true,
                      "type": "boolean",
                      "description": "Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example."
                    },
                    "customDescriptionGenerator": {
                      "type": "string",
                      "description": "Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      "
                    },
                    "customPropertiesGenerator": {
                      "type": "string",
                      "deprecated": true,
                      "description": "Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181"
                    },
                    "cascadeTerminateToConfigurations": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "uniqueItems": true
                      },
                      "default": [],
                      "description": "A list of debug sessions which, when this debug session is terminated, will also be stopped."
                    },
                    "cwd": {
                      "type": "string",
                      "description": "Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder",
                      "default": "${workspaceFolder}"
                    },
                    "localRoot": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "Path to the local directory containing the program.",
                      "default": null
                    },
                    "remoteRoot": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "Absolute path to the remote directory containing the program.",
                      "default": null
                    },
                    "autoAttachChildProcesses": {
                      "type": "boolean",
                      "description": "Attach debugger to new child processes automatically.",
                      "default": true
                    },
                    "env": {
                      "type": "object",
                      "additionalProperties": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "markdownDescription": "Environment variables passed to the program. The value `null` removes the variable from the environment.",
                      "default": {}
                    },
                    "envFile": {
                      "type": "string",
                      "description": "Absolute path to a file containing environment variable definitions.",
                      "default": "${workspaceFolder}/.env"
                    },
                    "runtimeSourcemapPausePatterns": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "markdownDescription": "A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).",
                      "default": []
                    },
                    "nodeVersionHint": {
                      "type": "number",
                      "minimum": 8,
                      "description": "Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.",
                      "default": 12
                    },
                    "program": {
                      "type": "string",
                      "description": "Absolute path to the program. Generated value is guessed by looking at package.json and opened files. Edit this attribute.",
                      "default": ""
                    },
                    "stopOnEntry": {
                      "type": [
                        "boolean",
                        "string"
                      ],
                      "description": "Automatically stop program after launch.",
                      "default": true
                    },
                    "console": {
                      "type": "string",
                      "enum": [
                        "internalConsole",
                        "integratedTerminal",
                        "externalTerminal"
                      ],
                      "enumDescriptions": [
                        "VS Code Debug Console (which doesn't support to read input from a program)",
                        "VS Code's integrated terminal",
                        "External terminal that can be configured via user settings"
                      ],
                      "description": "Where to launch the debug target.",
                      "default": "internalConsole"
                    },
                    "args": {
                      "type": "array",
                      "description": "Command line arguments passed to the program.",
                      "items": {
                        "type": "string"
                      },
                      "default": []
                    },
                    "restart": {
                      "description": "Try to reconnect to the program if we lose connection. If set to `true`, we'll try once a second, forever. You can customize the interval and maximum number of attempts by specifying the `delay` and `maxAttempts` in an object instead.",
                      "default": true,
                      "oneOf": [
                        {
                          "type": "boolean"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "delay": {
                              "type": "number",
                              "minimum": 0,
                              "default": 1000
                            },
                            "maxAttempts": {
                              "type": "number",
                              "minimum": 0,
                              "default": 10
                            }
                          }
                        }
                      ]
                    },
                    "runtimeExecutable": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "markdownDescription": "Runtime to use. Either an absolute path or the name of a runtime available on the PATH. If omitted `node` is assumed.",
                      "default": "node"
                    },
                    "runtimeVersion": {
                      "type": "string",
                      "markdownDescription": "Version of `node` runtime to use. Requires `nvm`.",
                      "default": "default"
                    },
                    "runtimeArgs": {
                      "type": "array",
                      "description": "Optional arguments passed to the runtime executable.",
                      "items": {
                        "type": "string"
                      },
                      "default": []
                    },
                    "profileStartup": {
                      "type": "boolean",
                      "description": "If true, will start profiling as soon as the process launches",
                      "default": true
                    },
                    "attachSimplePort": {
                      "type": "integer",
                      "description": "If set, attaches to the process via the given port. This is generally no longer necessary for Node.js programs and loses the ability to debug child processes, but can be useful in more esoteric scenarios such as with Deno and Docker launches. If set to 0, a random port will be chosen and --inspect-brk added to the launch arguments automatically.",
                      "default": 9229
                    },
                    "killBehavior": {
                      "type": "string",
                      "enum": [
                        "forceful",
                        "polite",
                        "none"
                      ],
                      "default": "forceful",
                      "markdownDescription": "Configures how debug processes are killed when stopping the session. Can be:\n\n- forceful (default): forcefully tears down the process tree. Sends SIGKILL on posix, or `taskkill.exe /F` on Windows.\n- polite: gracefully tears down the process tree. It's possible that misbehaving processes continue to run after shutdown in this way. Sends SIGTERM on posix, or `taskkill.exe` with no `/F` (force) flag on Windows.\n- none: no termination will happen."
                    }
                  }
                },
                {
                  "type": "object",
                  "description": "JavaScript Debug Terminal",
                  "additionalProperties": false,
                  "default": {
                    "program": "npm start"
                  },
                  "properties": {
                    "resolveSourceMapLocations": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "description": "A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.",
                      "default": [
                        "${workspaceFolder}/**",
                        "!**/node_modules/**"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "outFiles": {
                      "type": [
                        "array"
                      ],
                      "description": "If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.",
                      "default": [
                        "${workspaceFolder}/**/*.js",
                        "!**/node_modules/**"
                      ],
                      "items": {
                        "type": "string"
                      }
                    },
                    "pauseForSourceMap": {
                      "type": "boolean",
                      "markdownDescription": "Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.",
                      "default": false
                    },
                    "showAsyncStacks": {
                      "description": "Show the async calls that led to the current call stack.",
                      "default": true,
                      "oneOf": [
                        {
                          "type": "boolean"
                        },
                        {
                          "type": "object",
                          "required": [
                            "onAttach"
                          ],
                          "properties": {
                            "onAttach": {
                              "type": "number",
                              "default": 32
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "onceBreakpointResolved"
                          ],
                          "properties": {
                            "onceBreakpointResolved": {
                              "type": "number",
                              "default": 32
                            }
                          }
                        }
                      ]
                    },
                    "skipFiles": {
                      "type": "array",
                      "description": "An array of file or folder names, or path globs, to skip when debugging.",
                      "default": [
                        "<node_internals>/**"
                      ]
                    },
                    "smartStep": {
                      "type": "boolean",
                      "description": "Automatically step through generated code that cannot be mapped back to the original source.",
                      "default": true
                    },
                    "sourceMaps": {
                      "type": "boolean",
                      "description": "Use JavaScript source maps (if they exist).",
                      "default": true
                    },
                    "sourceMapRenames": {
                      "type": "boolean",
                      "default": true,
                      "description": "Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers."
                    },
                    "sourceMapPathOverrides": {
                      "type": "object",
                      "description": "A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.",
                      "default": {
                        "webpack://?:*/*": "${workspaceFolder}/*",
                        "webpack:///./~/*": "${workspaceFolder}/node_modules/*",
                        "meteor://💻app/*": "${workspaceFolder}/*"
                      }
                    },
                    "timeout": {
                      "type": "number",
                      "description": "Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.",
                      "default": 10000
                    },
                    "timeouts": {
                      "type": "object",
                      "description": "Timeouts for several debugger operations.",
                      "default": {},
                      "properties": {
                        "sourceMapMinPause": {
                          "type": "number",
                          "description": "Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed",
                          "default": 1000
                        },
                        "sourceMapCumulativePause": {
                          "type": "number",
                          "description": "Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted",
                          "default": 1000
                        }
                      },
                      "additionalProperties": false,
                      "markdownDescription": "Timeouts for several debugger operations."
                    },
                    "trace": {
                      "description": "Configures what diagnostic output is produced.",
                      "default": true,
                      "oneOf": [
                        {
                          "type": "boolean",
                          "description": "Trace may be set to 'true' to write diagnostic logs to the disk."
                        },
                        {
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "console": {
                              "type": "boolean",
                              "description": "Whether to return trace data from the launched application or browser."
                            },
                            "stdio": {
                              "type": "boolean",
                              "description": "Configures whether logs are also returned to the debug console."
                            },
                            "level": {
                              "enum": [
                                "fatal",
                                "error",
                                "warn",
                                "info",
                                "verbose"
                              ],
                              "description": "Configures the level of logs recorded."
                            },
                            "logFile": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "Configures where on disk logs are written."
                            },
                            "tags": {
                              "type": "array",
                              "description": "Configures what types of logs are recorded.",
                              "items": {
                                "enum": [
                                  "cdp",
                                  "dap",
                                  "runtime"
                                ]
                              }
                            }
                          }
                        }
                      ]
                    },
                    "outputCapture": {
                      "enum": [
                        "console",
                        "std"
                      ],
                      "markdownDescription": "From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`.",
                      "default": "console"
                    },
                    "enableContentValidation": {
                      "default": true,
                      "type": "boolean",
                      "description": "Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example."
                    },
                    "customDescriptionGenerator": {
                      "type": "string",
                      "description": "Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      "
                    },
                    "customPropertiesGenerator": {
                      "type": "string",
                      "deprecated": true,
                      "description": "Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181"
                    },
                    "cascadeTerminateToConfigurations": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "uniqueItems": true
                      },
                      "default": [],
                      "description": "A list of debug sessions which, when this debug session is terminated, will also be stopped."
                    },
                    "cwd": {
                      "type": "string",
                      "description": "Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder",
                      "default": "${workspaceFolder}",
                      "docDefault": "localRoot || ${workspaceFolder}"
                    },
                    "localRoot": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "Path to the local directory containing the program.",
                      "default": null
                    },
                    "remoteRoot": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "Absolute path to the remote directory containing the program.",
                      "default": null
                    },
                    "autoAttachChildProcesses": {
                      "type": "boolean",
                      "description": "Attach debugger to new child processes automatically.",
                      "default": true
                    },
                    "env": {
                      "type": "object",
                      "additionalProperties": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "markdownDescription": "Environment variables passed to the program. The value `null` removes the variable from the environment.",
                      "default": {}
                    },
                    "envFile": {
                      "type": "string",
                      "description": "Absolute path to a file containing environment variable definitions.",
                      "default": "${workspaceFolder}/.env"
                    },
                    "runtimeSourcemapPausePatterns": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "markdownDescription": "A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).",
                      "default": []
                    },
                    "nodeVersionHint": {
                      "type": "number",
                      "minimum": 8,
                      "description": "Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.",
                      "default": 12
                    },
                    "command": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "Command to run in the launched terminal. If not provided, the terminal will open without launching a program.",
                      "default": "npm start"
                    }
                  }
                }
              ]
            },
            "perScriptSourcemaps": {
              "type": "string",
              "default": "auto",
              "enum": [
                "yes",
                "no",
                "auto"
              ],
              "description": "Whether scripts are loaded individually with unique sourcemaps containing the basename of the source file. This can be set to optimize sourcemap handling when dealing with lots of small scripts. If set to \"auto\", we'll detect known cases where this is appropriate."
            },
            "port": {
              "type": "number",
              "description": "Port for the browser to listen on. Defaults to \"0\", which will cause the browser to be debugged via pipes, which is generally more secure and should be chosen unless you need to attach to the browser from another tool.",
              "default": 0
            },
            "file": {
              "type": "string",
              "description": "A local html file to open in the browser",
              "default": "${workspaceFolder}/index.html"
            },
            "userDataDir": {
              "type": [
                "string",
                "boolean"
              ],
              "description": "By default, the browser is launched with a separate user profile in a temp folder. Use this option to override it. Set to false to launch with your default user profile. A new browser can't be launched if an instance is already running from `userDataDir`.",
              "default": true
            },
            "includeDefaultArgs": {
              "type": "boolean",
              "description": "Whether default browser launch arguments (to disable features that may make debugging harder) will be included in the launch.",
              "default": true
            },
            "runtimeExecutable": {
              "type": [
                "string",
                "null"
              ],
              "description": "Either 'canary', 'stable', 'custom' or path to the browser executable. Custom means a custom wrapper, custom build or CHROME_PATH environment variable.",
              "default": "stable"
            },
            "runtimeArgs": {
              "type": "array",
              "description": "Optional arguments passed to the runtime executable.",
              "items": {
                "type": "string"
              },
              "default": []
            },
            "env": {
              "type": "object",
              "description": "Optional dictionary of environment key/value pairs for the browser.",
              "default": {}
            },
            "cwd": {
              "type": "string",
              "description": "Optional working directory for the runtime executable.",
              "default": null
            },
            "profileStartup": {
              "type": "boolean",
              "description": "If true, will start profiling soon as the process launches",
              "default": true
            },
            "cleanUp": {
              "type": "string",
              "enum": [
                "wholeBrowser",
                "onlyTab"
              ],
              "description": "What clean-up to do after the debugging session finishes. Close only the tab being debug, vs. close the whole browser.",
              "default": "wholeBrowser"
            },
            "browserLaunchLocation": {
              "description": "Forces the browser to be launched in one location. In a remote workspace (through ssh or WSL, for example) this can be used to open the browser on the remote machine rather than locally.",
              "default": null,
              "oneOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "enum": [
                    "ui",
                    "workspace"
                  ]
                }
              ]
            },
            "enabled": {
              "type": "string",
              "enum": [
                "on",
                "off",
                "always"
              ]
            }
          }
        }
      ],
      "scope": 3,
      "source": {
        "id": "ms-vscode.js-debug",
        "displayName": "JavaScript Debugger"
      },
      "defaultDefaultValue": "on",
      "restricted": false
    },
    "debug.javascript.pickAndAttachOptions": {
      "type": "object",
      "default": {},
      "markdownDescription": "Default options used when debugging a process through the `Debug: Attach to Node.js Process` command",
      "properties": {
        "resolveSourceMapLocations": {
          "type": [
            "array",
            "null"
          ],
          "description": "A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with \"!\" to exclude them. May be set to an empty array or null to avoid restriction.",
          "default": [
            "${workspaceFolder}/**",
            "!**/node_modules/**"
          ],
          "items": {
            "type": "string"
          }
        },
        "outFiles": {
          "type": [
            "array"
          ],
          "description": "If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.",
          "default": [
            "${workspaceFolder}/**/*.js",
            "!**/node_modules/**"
          ],
          "items": {
            "type": "string"
          }
        },
        "pauseForSourceMap": {
          "type": "boolean",
          "markdownDescription": "Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.",
          "default": false
        },
        "showAsyncStacks": {
          "description": "Show the async calls that led to the current call stack.",
          "default": true,
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "object",
              "required": [
                "onAttach"
              ],
              "properties": {
                "onAttach": {
                  "type": "number",
                  "default": 32
                }
              }
            },
            {
              "type": "object",
              "required": [
                "onceBreakpointResolved"
              ],
              "properties": {
                "onceBreakpointResolved": {
                  "type": "number",
                  "default": 32
                }
              }
            }
          ]
        },
        "skipFiles": {
          "type": "array",
          "description": "An array of file or folder names, or path globs, to skip when debugging.",
          "default": [
            "<node_internals>/**"
          ]
        },
        "smartStep": {
          "type": "boolean",
          "description": "Automatically step through generated code that cannot be mapped back to the original source.",
          "default": true
        },
        "sourceMaps": {
          "type": "boolean",
          "description": "Use JavaScript source maps (if they exist).",
          "default": true
        },
        "sourceMapRenames": {
          "type": "boolean",
          "default": true,
          "description": "Whether to use the \"names\" mapping in sourcemaps. This requires requesting source content, which can be slow with certain debuggers."
        },
        "sourceMapPathOverrides": {
          "type": "object",
          "description": "A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.",
          "default": {
            "webpack://?:*/*": "${workspaceFolder}/*",
            "webpack:///./~/*": "${workspaceFolder}/node_modules/*",
            "meteor://💻app/*": "${workspaceFolder}/*"
          }
        },
        "timeout": {
          "type": "number",
          "description": "Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.",
          "default": 10000
        },
        "timeouts": {
          "type": "object",
          "description": "Timeouts for several debugger operations.",
          "default": {},
          "properties": {
            "sourceMapMinPause": {
              "type": "number",
              "description": "Minimum time in milliseconds spent waiting for each source-map to be processed when a script is being parsed",
              "default": 1000
            },
            "sourceMapCumulativePause": {
              "type": "number",
              "description": "Extra time in milliseconds allowed per session to be spent waiting for source-maps to be processed, after the minimum time (sourceMapMinPause) has been exhausted",
              "default": 1000
            }
          },
          "additionalProperties": false,
          "markdownDescription": "Timeouts for several debugger operations."
        },
        "trace": {
          "description": "Configures what diagnostic output is produced.",
          "default": true,
          "oneOf": [
            {
              "type": "boolean",
              "description": "Trace may be set to 'true' to write diagnostic logs to the disk."
            },
            {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "console": {
                  "type": "boolean",
                  "description": "Whether to return trace data from the launched application or browser."
                },
                "stdio": {
                  "type": "boolean",
                  "description": "Configures whether logs are also returned to the debug console."
                },
                "level": {
                  "enum": [
                    "fatal",
                    "error",
                    "warn",
                    "info",
                    "verbose"
                  ],
                  "description": "Configures the level of logs recorded."
                },
                "logFile": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Configures where on disk logs are written."
                },
                "tags": {
                  "type": "array",
                  "description": "Configures what types of logs are recorded.",
                  "items": {
                    "enum": [
                      "cdp",
                      "dap",
                      "runtime"
                    ]
                  }
                }
              }
            }
          ]
        },
        "outputCapture": {
          "enum": [
            "console",
            "std"
          ],
          "markdownDescription": "From where to capture output messages: the default debug API if set to `console`, or stdout/stderr streams if set to `std`.",
          "default": "console"
        },
        "enableContentValidation": {
          "default": true,
          "type": "boolean",
          "description": "Toggles whether we verify the contents of files on disk match the ones loaded in the runtime. This is useful in a variety of scenarios and required in some, but can cause issues if you have server-side transformation of scripts, for example."
        },
        "customDescriptionGenerator": {
          "type": "string",
          "description": "Customize the textual description the debugger shows for objects (local variables, etc...). Samples:\n      1. this.toString() // will call toString to print all objects\n      2. this.customDescription ? this.customDescription() : defaultValue // Use customDescription method if available, if not return defaultValue\n      3. function (def) { return this.customDescription ? this.customDescription() : def } // Use customDescription method if available, if not return defaultValue\n      "
        },
        "customPropertiesGenerator": {
          "type": "string",
          "deprecated": true,
          "description": "Customize the properties shown for an object in the debugger (local variables, etc...). Samples:\n    1. { ...this, extraProperty: '12345' } // Add an extraProperty 12345 to all objects\n    2. this.customProperties ? this.customProperties() : this // Use customProperties method if available, if not use the properties in this (the default properties)\n    3. function () { return this.customProperties ? this.customProperties() : this } // Use customDescription method if available, if not return the default properties\n\n    Deprecated: This is a temporary implementation of this feature until we have time to implement it in the way described here: https://github.com/microsoft/vscode/issues/102181"
        },
        "cascadeTerminateToConfigurations": {
          "type": "array",
          "items": {
            "type": "string",
            "uniqueItems": true
          },
          "default": [],
          "description": "A list of debug sessions which, when this debug session is terminated, will also be stopped."
        },
        "cwd": {
          "type": "string",
          "description": "Absolute path to the working directory of the program being debugged. If you've set localRoot then cwd will match that value otherwise it falls back to your workspaceFolder",
          "default": "${workspaceFolder}",
          "docDefault": "localRoot || ${workspaceFolder}"
        },
        "localRoot": {
          "type": [
            "string",
            "null"
          ],
          "description": "Path to the local directory containing the program.",
          "default": null
        },
        "remoteRoot": {
          "type": [
            "string",
            "null"
          ],
          "description": "Absolute path to the remote directory containing the program.",
          "default": null
        },
        "autoAttachChildProcesses": {
          "type": "boolean",
          "description": "Attach debugger to new child processes automatically.",
          "default": true
        },
        "env": {
          "type": "object",
          "additionalProperties": {
            "type": [
              "string",
              "null"
            ]
          },
          "markdownDescription": "Environment variables passed to the program. The value `null` removes the variable from the environment.",
          "default": {}
        },
        "envFile": {
          "type": "string",
          "description": "Absolute path to a file containing environment variable definitions.",
          "default": "${workspaceFolder}/.env"
        },
        "runtimeSourcemapPausePatterns": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "markdownDescription": "A list of patterns at which to manually insert entrypoint breakpoints. This can be useful to give the debugger an opportunity to set breakpoints when using sourcemaps that don't exist or can't be detected before launch, such as [with the Serverless framework](https://github.com/microsoft/vscode-js-debug/issues/492).",
          "default": []
        },
        "nodeVersionHint": {
          "type": "number",
          "minimum": 8,
          "description": "Allows you to explicitly specify the Node version that's running, which can be used to disable or enable certain behaviors in cases where the automatic version detection does not work.",
          "default": 12
        },
        "address": {
          "type": "string",
          "description": "TCP/IP address of process to be debugged. Default is 'localhost'.",
          "default": "localhost"
        },
        "port": {
          "type": "number",
          "description": "Debug port to attach to. Default is 9229.",
          "default": 9229
        },
        "websocketAddress": {
          "type": "string",
          "description": "Exact websocket address to attach to. If unspecified, it will be discovered from the address and port."
        },
        "restart": {
          "description": "Try to reconnect to the program if we lose connection. If set to `true`, we'll try once a second, forever. You can customize the interval and maximum number of attempts by specifying the `delay` and `maxAttempts` in an object instead.",
          "default": true,
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "object",
              "properties": {
                "delay": {
                  "type": "number",
                  "minimum": 0,
                  "default": 1000
                },
                "maxAttempts": {
                  "type": "number",
                  "minimum": 0,
                  "default": 10
                }
              }
            }
          ]
        },
        "processId": {
          "type": "string",
          "description": "ID of process to attach to.",
          "default": "${command:PickProcess}"
        },
        "attachExistingChildren": {
          "type": "boolean",
          "description": "Whether to attempt to attach to already-spawned child processes.",
          "default": false
        },
        "continueOnAttach": {
          "type": "boolean",
          "markdownDescription": "If true, we'll automatically resume programs launched and waiting on `--inspect-brk`",
          "default": true
        }
      },
      "scope": 3,
      "source": {
        "id": "ms-vscode.js-debug",
        "displayName": "JavaScript Debugger"
      },
      "defaultDefaultValue": {},
      "restricted": false
    },
    "debug.javascript.autoAttachFilter": {
      "type": "string",
      "default": "disabled",
      "enum": [
        "always",
        "smart",
        "onlyWithFlag",
        "disabled"
      ],
      "enumDescriptions": [
        "Auto attach to every Node.js process launched in the terminal.",
        "Auto attach when running scripts that aren't in a node_modules folder.",
        "Only auto attach when the `--inspect` is given.",
        "Auto attach is disabled and not shown in status bar."
      ],
      "markdownDescription": "Configures which processes to automatically attach and debug when `#debug.node.autoAttach#` is on. A Node process launched with the `--inspect` flag will always be attached to, regardless of this setting.",
      "scope": 3,
      "source": {
        "id": "ms-vscode.js-debug",
        "displayName": "JavaScript Debugger"
      },
      "defaultDefaultValue": "disabled",
      "restricted": false
    },
    "debug.javascript.autoAttachSmartPattern": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": [
        "${workspaceFolder}/**",
        "!**/node_modules/**",
        "**/$KNOWN_TOOLS$/**"
      ],
      "markdownDescription": "Configures glob patterns for determining when to attach in \"smart\" `#debug.javascript.autoAttachFilter#` mode. `$KNOWN_TOOLS$` is replaced with a list of names of common test and code runners. [Read more on the VS Code docs](https://code.visualstudio.com/docs/nodejs/nodejs-debugging#_auto-attach-smart-patterns).",
      "scope": 3,
      "source": {
        "id": "ms-vscode.js-debug",
        "displayName": "JavaScript Debugger"
      },
      "defaultDefaultValue": [
        "${workspaceFolder}/**",
        "!**/node_modules/**",
        "**/$KNOWN_TOOLS$/**"
      ],
      "restricted": false
    },
    "debug.javascript.breakOnConditionalError": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Whether to stop when conditional breakpoints throw an error.",
      "scope": 3,
      "source": {
        "id": "ms-vscode.js-debug",
        "displayName": "JavaScript Debugger"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "debug.javascript.unmapMissingSources": {
      "type": "boolean",
      "default": false,
      "description": "Configures whether sourcemapped file where the original file can't be read will automatically be unmapped. If this is false (default), a prompt is shown.",
      "scope": 3,
      "source": {
        "id": "ms-vscode.js-debug",
        "displayName": "JavaScript Debugger"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "debug.javascript.defaultRuntimeExecutable": {
      "type": "object",
      "default": {
        "pwa-node": "node"
      },
      "markdownDescription": "The default `runtimeExecutable` used for launch configurations, if unspecified. This can be used to config custom paths to Node.js or browser installations.",
      "properties": {
        "pwa-node": {
          "type": "string"
        },
        "pwa-chrome": {
          "type": "string"
        },
        "pwa-msedge": {
          "type": "string"
        }
      },
      "scope": 3,
      "source": {
        "id": "ms-vscode.js-debug",
        "displayName": "JavaScript Debugger"
      },
      "defaultDefaultValue": {
        "pwa-node": "node"
      },
      "restricted": false
    },
    "debug.javascript.resourceRequestOptions": {
      "type": "object",
      "default": {},
      "markdownDescription": "Request options to use when loading resources, such as source maps, in the debugger. You may need to configure this if your sourcemaps require authentication or use a self-signed certificate, for instance. Options are used to create a request using the [`got`](https://github.com/sindresorhus/got) library.\n\nA common case to disable certificate verification can be done by passing `{ \"https\": { \"rejectUnauthorized\": false } }`.",
      "scope": 3,
      "source": {
        "id": "ms-vscode.js-debug",
        "displayName": "JavaScript Debugger"
      },
      "defaultDefaultValue": {},
      "restricted": false
    },
    "references.preferredLocation": {
      "description": "Controls whether 'Peek References' or 'Find References' is invoked when selecting code lens references",
      "type": "string",
      "default": "peek",
      "enum": [
        "peek",
        "view"
      ],
      "enumDescriptions": [
        "Show references in peek editor.",
        "Show references in separate view."
      ],
      "scope": 3,
      "source": {
        "id": "ms-vscode.references-view",
        "displayName": "Reference Search View"
      },
      "defaultDefaultValue": "peek",
      "restricted": false
    },
    "npm.autoDetect": {
      "type": "string",
      "enum": [
        "off",
        "on"
      ],
      "default": "on",
      "scope": 4,
      "description": "Controls whether npm scripts should be automatically detected.",
      "source": {
        "id": "vscode.npm",
        "displayName": "NPM support for VS Code"
      },
      "defaultDefaultValue": "on",
      "restricted": false
    },
    "npm.runSilent": {
      "type": "boolean",
      "default": false,
      "scope": 4,
      "markdownDescription": "Run npm commands with the `--silent` option.",
      "source": {
        "id": "vscode.npm",
        "displayName": "NPM support for VS Code"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "npm.packageManager": {
      "scope": 4,
      "type": "string",
      "enum": [
        "auto",
        "npm",
        "yarn",
        "pnpm"
      ],
      "enumDescriptions": [
        "Auto-detect which package manager to use for running scripts based on lock files and installed package managers.",
        "Use npm as the package manager for running scripts.",
        "Use yarn as the package manager for running scripts.",
        "Use pnpm as the package manager for running scripts."
      ],
      "default": "auto",
      "description": "The package manager used to run scripts.",
      "source": {
        "id": "vscode.npm",
        "displayName": "NPM support for VS Code"
      },
      "defaultDefaultValue": "auto",
      "restricted": false
    },
    "npm.exclude": {
      "type": [
        "string",
        "array"
      ],
      "items": {
        "type": "string"
      },
      "description": "Configure glob patterns for folders that should be excluded from automatic script detection.",
      "scope": 4,
      "source": {
        "id": "vscode.npm",
        "displayName": "NPM support for VS Code"
      },
      "default": "",
      "restricted": false
    },
    "npm.enableScriptExplorer": {
      "type": "boolean",
      "default": false,
      "scope": 4,
      "deprecationMessage": "The NPM Script Explorer is now available in 'Views' menu in the Explorer in all folders.",
      "description": "Enable an explorer view for npm scripts when there is no top-level 'package.json' file.",
      "source": {
        "id": "vscode.npm",
        "displayName": "NPM support for VS Code"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "npm.enableRunFromFolder": {
      "type": "boolean",
      "default": false,
      "scope": 4,
      "description": "Enable running npm scripts contained in a folder from the Explorer context menu.",
      "source": {
        "id": "vscode.npm",
        "displayName": "NPM support for VS Code"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "npm.scriptExplorerAction": {
      "type": "string",
      "enum": [
        "open",
        "run"
      ],
      "markdownDescription": "The default click action used in the npm scripts explorer: `open` or `run`, the default is `open`.",
      "scope": 3,
      "default": "open",
      "source": {
        "id": "vscode.npm",
        "displayName": "NPM support for VS Code"
      },
      "defaultDefaultValue": "open",
      "restricted": false
    },
    "npm.scriptExplorerExclude": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "markdownDescription": "An array of regular expressions that indicate which scripts should be excluded from the NPM Scripts view.",
      "scope": 4,
      "default": [],
      "source": {
        "id": "vscode.npm",
        "displayName": "NPM support for VS Code"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "npm.fetchOnlinePackageInfo": {
      "type": "boolean",
      "description": "Fetch data from https://registry.npmjs.org and https://registry.bower.io to provide auto-completion and information on hover features on npm dependencies.",
      "default": true,
      "scope": 3,
      "tags": [
        "usesOnlineServices"
      ],
      "source": {
        "id": "vscode.npm",
        "displayName": "NPM support for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "php.suggest.basic": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether the built-in PHP language suggestions are enabled. The support suggests PHP globals and variables.",
      "scope": 3,
      "source": {
        "id": "vscode.php-language-features",
        "displayName": "PHP Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "php.validate.enable": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable built-in PHP validation.",
      "scope": 3,
      "source": {
        "id": "vscode.php-language-features",
        "displayName": "PHP Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "php.validate.executablePath": {
      "type": [
        "string",
        "null"
      ],
      "default": null,
      "description": "Points to the PHP executable.",
      "scope": 6,
      "source": {
        "id": "vscode.php-language-features",
        "displayName": "PHP Language Features"
      },
      "defaultDefaultValue": null,
      "restricted": true
    },
    "php.validate.run": {
      "type": "string",
      "enum": [
        "onSave",
        "onType"
      ],
      "default": "onSave",
      "description": "Whether the linter is run on save or on type.",
      "scope": 3,
      "source": {
        "id": "vscode.php-language-features",
        "displayName": "PHP Language Features"
      },
      "defaultDefaultValue": "onSave",
      "restricted": false
    },
    "simpleBrowser.focusLockIndicator.enabled": {
      "type": "boolean",
      "default": true,
      "title": "Focus Lock Indicator Enabled",
      "description": "Enable/disable the floating indicator that shows when focused in the simple browser.",
      "scope": 3,
      "source": {
        "id": "vscode.simple-browser",
        "displayName": "Simple Browser"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.tsdk": {
      "type": "string",
      "markdownDescription": "Specifies the folder path to the tsserver and `lib*.d.ts` files under a TypeScript install to use for IntelliSense, for example: `./node_modules/typescript/lib`.\n\n- When specified as a user setting, the TypeScript version from `typescript.tsdk` automatically replaces the built-in TypeScript version.\n- When specified as a workspace setting, `typescript.tsdk` allows you to switch to use that workspace version of TypeScript for IntelliSense with the `TypeScript: Select TypeScript version` command.\n\nSee the [TypeScript documentation](https://code.visualstudio.com/docs/typescript/typescript-compiling#_using-newer-typescript-versions) for more detail about managing TypeScript versions.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "default": "",
      "restricted": true
    },
    "typescript.disableAutomaticTypeAcquisition": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Disables [automatic type acquisition](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition). Automatic type acquisition fetches `@types` packages from npm to improve IntelliSense for external libraries.",
      "scope": 3,
      "tags": [
        "usesOnlineServices"
      ],
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.enablePromptUseWorkspaceTsdk": {
      "type": "boolean",
      "default": false,
      "description": "Enables prompting of users to use the TypeScript version configured in the workspace for Intellisense.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.npm": {
      "type": "string",
      "markdownDescription": "Specifies the path to the npm executable used for [Automatic Type Acquisition](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition).",
      "scope": 2,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "default": "",
      "restricted": true
    },
    "typescript.check.npmIsInstalled": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Check if npm is installed for [Automatic Type Acquisition](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition).",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.referencesCodeLens.enabled": {
      "type": "boolean",
      "default": false,
      "description": "Enable/disable references CodeLens in JavaScript files.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "javascript.referencesCodeLens.showOnAllFunctions": {
      "type": "boolean",
      "default": false,
      "description": "Enable/disable references CodeLens on all functions in JavaScript files.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.referencesCodeLens.enabled": {
      "type": "boolean",
      "default": false,
      "description": "Enable/disable references CodeLens in TypeScript files.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.referencesCodeLens.showOnAllFunctions": {
      "type": "boolean",
      "default": false,
      "description": "Enable/disable references CodeLens on all functions in TypeScript files.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.implementationsCodeLens.enabled": {
      "type": "boolean",
      "default": false,
      "description": "Enable/disable implementations CodeLens. This CodeLens shows the implementers of an interface.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.tsserver.enableTracing": {
      "type": "boolean",
      "default": false,
      "description": "Enables tracing TS server performance to a directory. These trace files can be used to diagnose TS Server performance issues. The log may contain file paths, source code, and other potentially sensitive information from your project.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.tsserver.log": {
      "type": "string",
      "enum": [
        "off",
        "terse",
        "normal",
        "verbose"
      ],
      "default": "off",
      "description": "Enables logging of the TS server to a file. This log can be used to diagnose TS Server issues. The log may contain file paths, source code, and other potentially sensitive information from your project.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "off",
      "restricted": false
    },
    "typescript.tsserver.pluginPaths": {
      "type": "array",
      "items": {
        "type": "string",
        "description": "Either an absolute or relative path. Relative path will be resolved against workspace folder(s)."
      },
      "default": [],
      "description": "Additional paths to discover TypeScript Language Service plugins.",
      "scope": 2,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": [],
      "restricted": true
    },
    "typescript.tsserver.trace": {
      "type": "string",
      "enum": [
        "off",
        "messages",
        "verbose"
      ],
      "default": "off",
      "description": "Enables tracing of messages sent to the TS server. This trace can be used to diagnose TS Server issues. The trace may contain file paths, source code, and other potentially sensitive information from your project.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "off",
      "restricted": false
    },
    "javascript.suggest.completeFunctionCalls": {
      "type": "boolean",
      "default": false,
      "description": "Complete functions with their parameter signature.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.suggest.completeFunctionCalls": {
      "type": "boolean",
      "default": false,
      "description": "Complete functions with their parameter signature.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "javascript.suggest.includeAutomaticOptionalChainCompletions": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable showing completions on potentially undefined values that insert an optional chain call. Requires TS 3.7+ and strict null checks to be enabled.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.suggest.includeAutomaticOptionalChainCompletions": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable showing completions on potentially undefined values that insert an optional chain call. Requires TS 3.7+ and strict null checks to be enabled.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.inlayHints.parameterNames.enabled": {
      "type": "string",
      "enum": [
        "none",
        "literals",
        "all"
      ],
      "enumDescriptions": [
        "Disable parameter name hints.",
        "Enable parameter name hints only for literal arguments.",
        "Enable parameter name hints for literal and non-literal arguments."
      ],
      "default": "none",
      "markdownDescription": "Enable/disable inlay hints for parameter names:\n```typescript\n\nparseInt(/* str: */ '123', /* radix: */ 8)\n \n```\nRequires using TypeScript 4.4+ in the workspace.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "none",
      "restricted": false
    },
    "typescript.inlayHints.parameterNames.suppressWhenArgumentMatchesName": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Suppress parameter name hints on arguments whose text is identical to the parameter name.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.inlayHints.parameterTypes.enabled": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Enable/disable inlay hints for implicit parameter types:\n```typescript\n\nel.addEventListener('click', e /* :MouseEvent */ => ...)\n \n```\nRequires using TypeScript 4.4+ in the workspace.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.inlayHints.variableTypes.enabled": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Enable/disable inlay hints for implicit variable types:\n```typescript\n\nconst foo /* :number */ = Date.now();\n \n```\nRequires using TypeScript 4.4+ in the workspace.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.inlayHints.propertyDeclarationTypes.enabled": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Enable/disable inlay hints for implicit types on property declarations:\n```typescript\n\nclass Foo {\n\tprop /* :number */ = Date.now();\n}\n \n```\nRequires using TypeScript 4.4+ in the workspace.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.inlayHints.functionLikeReturnTypes.enabled": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Enable/disable inlay hints for implicit return types on function signatures:\n```typescript\n\nfunction foo() /* :number */ {\n\treturn Date.now();\n} \n \n```\nRequires using TypeScript 4.4+ in the workspace.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.inlayHints.enumMemberValues.enabled": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Enable/disable inlay hints for member values in enum declarations:\n```typescript\n\nenum MyValue {\n\tA /* = 0 */;\n\tB /* = 1 */;\n}\n \n```\nRequires using TypeScript 4.4+ in the workspace.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "javascript.inlayHints.parameterNames.enabled": {
      "type": "string",
      "enum": [
        "none",
        "literals",
        "all"
      ],
      "enumDescriptions": [
        "Disable parameter name hints.",
        "Enable parameter name hints only for literal arguments.",
        "Enable parameter name hints for literal and non-literal arguments."
      ],
      "default": "none",
      "markdownDescription": "Enable/disable inlay hints for parameter names:\n```typescript\n\nparseInt(/* str: */ '123', /* radix: */ 8)\n \n```\nRequires using TypeScript 4.4+ in the workspace.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "none",
      "restricted": false
    },
    "javascript.inlayHints.parameterNames.suppressWhenArgumentMatchesName": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Suppress parameter name hints on arguments whose text is identical to the parameter name.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.inlayHints.parameterTypes.enabled": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Enable/disable inlay hints for implicit parameter types:\n```typescript\n\nel.addEventListener('click', e /* :MouseEvent */ => ...)\n \n```\nRequires using TypeScript 4.4+ in the workspace.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "javascript.inlayHints.variableTypes.enabled": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Enable/disable inlay hints for implicit variable types:\n```typescript\n\nconst foo /* :number */ = Date.now();\n \n```\nRequires using TypeScript 4.4+ in the workspace.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "javascript.inlayHints.propertyDeclarationTypes.enabled": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Enable/disable inlay hints for implicit types on property declarations:\n```typescript\n\nclass Foo {\n\tprop /* :number */ = Date.now();\n}\n \n```\nRequires using TypeScript 4.4+ in the workspace.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "javascript.inlayHints.functionLikeReturnTypes.enabled": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Enable/disable inlay hints for implicit return types on function signatures:\n```typescript\n\nfunction foo() /* :number */ {\n\treturn Date.now();\n} \n \n```\nRequires using TypeScript 4.4+ in the workspace.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "javascript.inlayHints.enumMemberValues.enabled": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Enable/disable inlay hints for member values in enum declarations:\n```typescript\n\nenum MyValue {\n\tA /* = 0 */;\n\tB /* = 1 */;\n}\n \n```\nRequires using TypeScript 4.4+ in the workspace.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "javascript.suggest.includeCompletionsForImportStatements": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable auto-import-style completions on partially-typed import statements. Requires using TypeScript 4.3+ in the workspace.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.suggest.includeCompletionsForImportStatements": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable auto-import-style completions on partially-typed import statements. Requires using TypeScript 4.3+ in the workspace.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.suggest.includeCompletionsWithSnippetText": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable snippet completions from TS Server. Requires using TypeScript 4.3+ in the workspace.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.reportStyleChecksAsWarnings": {
      "type": "boolean",
      "default": true,
      "description": "Report style checks as warnings.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.validate.enable": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable TypeScript validation.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.format.enable": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable default TypeScript formatter.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.format.insertSpaceAfterCommaDelimiter": {
      "type": "boolean",
      "default": true,
      "description": "Defines space handling after a comma delimiter.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.format.insertSpaceAfterConstructor": {
      "type": "boolean",
      "default": false,
      "description": "Defines space handling after the constructor keyword.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.format.insertSpaceAfterSemicolonInForStatements": {
      "type": "boolean",
      "default": true,
      "description": "Defines space handling after a semicolon in a for statement.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.format.insertSpaceBeforeAndAfterBinaryOperators": {
      "type": "boolean",
      "default": true,
      "description": "Defines space handling after a binary operator.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.format.insertSpaceAfterKeywordsInControlFlowStatements": {
      "type": "boolean",
      "default": true,
      "description": "Defines space handling after keywords in a control flow statement.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": {
      "type": "boolean",
      "default": true,
      "description": "Defines space handling after function keyword for anonymous functions.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.format.insertSpaceBeforeFunctionParenthesis": {
      "type": "boolean",
      "default": false,
      "description": "Defines space handling before function argument parentheses.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": {
      "type": "boolean",
      "default": false,
      "description": "Defines space handling after opening and before closing non-empty parenthesis.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": {
      "type": "boolean",
      "default": false,
      "description": "Defines space handling after opening and before closing non-empty brackets.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": {
      "type": "boolean",
      "default": true,
      "description": "Defines space handling after opening and before closing non-empty braces.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces": {
      "type": "boolean",
      "default": true,
      "description": "Defines space handling after opening and before closing empty braces.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": {
      "type": "boolean",
      "default": false,
      "description": "Defines space handling after opening and before closing template string braces.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": {
      "type": "boolean",
      "default": false,
      "description": "Defines space handling after opening and before closing JSX expression braces.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.format.insertSpaceAfterTypeAssertion": {
      "type": "boolean",
      "default": false,
      "description": "Defines space handling after type assertions in TypeScript.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.format.placeOpenBraceOnNewLineForFunctions": {
      "type": "boolean",
      "default": false,
      "description": "Defines whether an open brace is put onto a new line for functions or not.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.format.placeOpenBraceOnNewLineForControlBlocks": {
      "type": "boolean",
      "default": false,
      "description": "Defines whether an open brace is put onto a new line for control blocks or not.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.format.semicolons": {
      "type": "string",
      "default": "ignore",
      "description": "Defines handling of optional semicolons. Requires using TypeScript 3.7 or newer in the workspace.",
      "scope": 4,
      "enum": [
        "ignore",
        "insert",
        "remove"
      ],
      "enumDescriptions": [
        "Don't insert or remove any semicolons.",
        "Insert semicolons at statement ends.",
        "Remove unnecessary semicolons."
      ],
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "javascript.validate.enable": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable JavaScript validation.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.format.enable": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable default JavaScript formatter.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.format.insertSpaceAfterCommaDelimiter": {
      "type": "boolean",
      "default": true,
      "description": "Defines space handling after a comma delimiter.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.format.insertSpaceAfterConstructor": {
      "type": "boolean",
      "default": false,
      "description": "Defines space handling after the constructor keyword.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "javascript.format.insertSpaceAfterSemicolonInForStatements": {
      "type": "boolean",
      "default": true,
      "description": "Defines space handling after a semicolon in a for statement.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.format.insertSpaceBeforeAndAfterBinaryOperators": {
      "type": "boolean",
      "default": true,
      "description": "Defines space handling after a binary operator.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.format.insertSpaceAfterKeywordsInControlFlowStatements": {
      "type": "boolean",
      "default": true,
      "description": "Defines space handling after keywords in a control flow statement.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": {
      "type": "boolean",
      "default": true,
      "description": "Defines space handling after function keyword for anonymous functions.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.format.insertSpaceBeforeFunctionParenthesis": {
      "type": "boolean",
      "default": false,
      "description": "Defines space handling before function argument parentheses.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": {
      "type": "boolean",
      "default": false,
      "description": "Defines space handling after opening and before closing non-empty parenthesis.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": {
      "type": "boolean",
      "default": false,
      "description": "Defines space handling after opening and before closing non-empty brackets.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": {
      "type": "boolean",
      "default": true,
      "description": "Defines space handling after opening and before closing non-empty braces.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces": {
      "type": "boolean",
      "default": true,
      "description": "Defines space handling after opening and before closing empty braces.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": {
      "type": "boolean",
      "default": false,
      "description": "Defines space handling after opening and before closing template string braces.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "javascript.format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": {
      "type": "boolean",
      "default": false,
      "description": "Defines space handling after opening and before closing JSX expression braces.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "javascript.format.placeOpenBraceOnNewLineForFunctions": {
      "type": "boolean",
      "default": false,
      "description": "Defines whether an open brace is put onto a new line for functions or not.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "javascript.format.placeOpenBraceOnNewLineForControlBlocks": {
      "type": "boolean",
      "default": false,
      "description": "Defines whether an open brace is put onto a new line for control blocks or not.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "javascript.format.semicolons": {
      "type": "string",
      "default": "ignore",
      "description": "Defines handling of optional semicolons. Requires using TypeScript 3.7 or newer in the workspace.",
      "scope": 4,
      "enum": [
        "ignore",
        "insert",
        "remove"
      ],
      "enumDescriptions": [
        "Don't insert or remove any semicolons.",
        "Insert semicolons at statement ends.",
        "Remove unnecessary semicolons."
      ],
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "ignore",
      "restricted": false
    },
    "javascript.implicitProjectConfig.checkJs": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Enable/disable semantic checking of JavaScript files. Existing `jsconfig.json` or `tsconfig.json` files override this setting.",
      "markdownDeprecationMessage": "This setting has been deprecated in favor of `js/ts.implicitProjectConfig.checkJs`.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false,
      "deprecationMessage": "This setting has been deprecated in favor of `js/ts.implicitProjectConfig.checkJs`."
    },
    "js/ts.implicitProjectConfig.checkJs": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Enable/disable semantic checking of JavaScript files. Existing `jsconfig.json` or `tsconfig.json` files override this setting.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "javascript.implicitProjectConfig.experimentalDecorators": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Enable/disable `experimentalDecorators` in JavaScript files that are not part of a project. Existing `jsconfig.json` or `tsconfig.json` files override this setting.",
      "markdownDeprecationMessage": "This setting has been deprecated in favor of `js/ts.implicitProjectConfig.experimentalDecorators`.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false,
      "deprecationMessage": "This setting has been deprecated in favor of `js/ts.implicitProjectConfig.experimentalDecorators`."
    },
    "js/ts.implicitProjectConfig.experimentalDecorators": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Enable/disable `experimentalDecorators` in JavaScript files that are not part of a project. Existing `jsconfig.json` or `tsconfig.json` files override this setting.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "js/ts.implicitProjectConfig.strictNullChecks": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Enable/disable [strict null checks](https://www.typescriptlang.org/tsconfig#strictNullChecks) in JavaScript and TypeScript files that are not part of a project. Existing `jsconfig.json` or `tsconfig.json` files override this setting.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "js/ts.implicitProjectConfig.strictFunctionTypes": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Enable/disable [strict function types](https://www.typescriptlang.org/tsconfig#strictFunctionTypes) in JavaScript and TypeScript files that are not part of a project. Existing `jsconfig.json` or `tsconfig.json` files override this setting.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.suggest.names": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Enable/disable including unique names from the file in JavaScript suggestions. Note that name suggestions are always disabled in JavaScript code that is semantically checked using `@ts-check` or `checkJs`.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.tsc.autoDetect": {
      "type": "string",
      "default": "on",
      "enum": [
        "on",
        "off",
        "build",
        "watch"
      ],
      "markdownEnumDescriptions": [
        "Create both build and watch tasks.",
        "Disable this feature.",
        "Only create single run compile tasks.",
        "Only create compile and watch tasks."
      ],
      "description": "Controls auto detection of tsc tasks.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "on",
      "restricted": false
    },
    "javascript.suggest.paths": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable suggestions for paths in import statements and require calls.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.suggest.paths": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable suggestions for paths in import statements and require calls.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.suggest.autoImports": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable auto import suggestions.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.suggest.autoImports": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable auto import suggestions.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.suggest.completeJSDocs": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable suggestion to complete JSDoc comments.",
      "scope": 5,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.suggest.completeJSDocs": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable suggestion to complete JSDoc comments.",
      "scope": 5,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.suggest.jsdoc.generateReturns": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Enable/disable generating `@return` annotations for JSDoc templates. Requires using TypeScript 4.2+ in the workspace.",
      "scope": 5,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.suggest.jsdoc.generateReturns": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Enable/disable generating `@return` annotations for JSDoc templates. Requires using TypeScript 4.2+ in the workspace.",
      "scope": 5,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.locale": {
      "type": "string",
      "enum": [
        "de",
        "es",
        "en",
        "fr",
        "it",
        "ja",
        "ko",
        "ru",
        "zh-CN",
        "zh-TW"
      ],
      "markdownDescription": "Sets the locale used to report JavaScript and TypeScript errors. Defaults to use VS Code's locale.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "default": "",
      "restricted": false
    },
    "javascript.suggestionActions.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable suggestion diagnostics for JavaScript files in the editor.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.suggestionActions.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable suggestion diagnostics for TypeScript files in the editor.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.preferences.quoteStyle": {
      "type": "string",
      "enum": [
        "auto",
        "single",
        "double"
      ],
      "default": "auto",
      "markdownDescription": "Preferred quote style to use for quick fixes.",
      "markdownEnumDescriptions": [
        "Infer quote type from existing code",
        "Always use single quotes: `'`",
        "Always use double quotes: `\"`"
      ],
      "scope": 5,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "auto",
      "restricted": false
    },
    "typescript.preferences.quoteStyle": {
      "type": "string",
      "enum": [
        "auto",
        "single",
        "double"
      ],
      "default": "auto",
      "markdownDescription": "Preferred quote style to use for quick fixes.",
      "markdownEnumDescriptions": [
        "Infer quote type from existing code",
        "Always use single quotes: `'`",
        "Always use double quotes: `\"`"
      ],
      "scope": 5,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "auto",
      "restricted": false
    },
    "javascript.preferences.importModuleSpecifier": {
      "type": "string",
      "enum": [
        "shortest",
        "relative",
        "non-relative",
        "project-relative"
      ],
      "markdownEnumDescriptions": [
        "Prefers a non-relative import only if one is available that has fewer path segments than a relative import.",
        "Prefers a relative path to the imported file location.",
        "Prefers a non-relative import based on the `baseUrl` or `paths` configured in your `jsconfig.json` / `tsconfig.json`.",
        "Prefers a non-relative import only if the relative import path would leave the package or project directory. Requires using TypeScript 4.2+ in the workspace."
      ],
      "default": "shortest",
      "description": "Preferred path style for auto imports.",
      "scope": 5,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "shortest",
      "restricted": false
    },
    "typescript.preferences.importModuleSpecifier": {
      "type": "string",
      "enum": [
        "shortest",
        "relative",
        "non-relative",
        "project-relative"
      ],
      "markdownEnumDescriptions": [
        "Prefers a non-relative import only if one is available that has fewer path segments than a relative import.",
        "Prefers a relative path to the imported file location.",
        "Prefers a non-relative import based on the `baseUrl` or `paths` configured in your `jsconfig.json` / `tsconfig.json`.",
        "Prefers a non-relative import only if the relative import path would leave the package or project directory. Requires using TypeScript 4.2+ in the workspace."
      ],
      "default": "shortest",
      "description": "Preferred path style for auto imports.",
      "scope": 5,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "shortest",
      "restricted": false
    },
    "javascript.preferences.importModuleSpecifierEnding": {
      "type": "string",
      "enum": [
        "auto",
        "minimal",
        "index",
        "js"
      ],
      "markdownEnumDescriptions": [
        "Use project settings to select a default.",
        "Shorten `./component/index.js` to `./component`.",
        "Shorten `./component/index.js` to `./component/index`.",
        "Do not shorten path endings; include the `.js` extension."
      ],
      "default": "auto",
      "description": "Preferred path ending for auto imports. Requires using TypeScript 4.5+ in the workspace.",
      "scope": 5,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "auto",
      "restricted": false
    },
    "typescript.preferences.importModuleSpecifierEnding": {
      "type": "string",
      "enum": [
        "auto",
        "minimal",
        "index",
        "js"
      ],
      "markdownEnumDescriptions": [
        "Use project settings to select a default.",
        "Shorten `./component/index.js` to `./component`.",
        "Shorten `./component/index.js` to `./component/index`.",
        "Do not shorten path endings; include the `.js` extension."
      ],
      "default": "auto",
      "description": "Preferred path ending for auto imports. Requires using TypeScript 4.5+ in the workspace.",
      "scope": 5,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "auto",
      "restricted": false
    },
    "javascript.preferences.jsxAttributeCompletionStyle": {
      "type": "string",
      "enum": [
        "auto",
        "braces",
        "none"
      ],
      "markdownEnumDescriptions": [
        "Insert `={}` or `=\"\"` after attribute names based on the prop type. See `javascript.preferences.quoteStyle` to control the type of quotes used for string attributes.",
        "Insert `={}` after attribute names.",
        "Only insert attribute names."
      ],
      "default": "auto",
      "description": "Preferred style for JSX attribute completions.",
      "scope": 5,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "auto",
      "restricted": false
    },
    "typescript.preferences.jsxAttributeCompletionStyle": {
      "type": "string",
      "enum": [
        "auto",
        "braces",
        "none"
      ],
      "markdownEnumDescriptions": [
        "Insert `={}` or `=\"\"` after attribute names based on the prop type. See `typescript.preferences.quoteStyle` to control the type of quotes used for string attributes.",
        "Insert `={}` after attribute names.",
        "Only insert attribute names."
      ],
      "default": "auto",
      "description": "Preferred style for JSX attribute completions.",
      "scope": 5,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "auto",
      "restricted": false
    },
    "typescript.preferences.includePackageJsonAutoImports": {
      "type": "string",
      "enum": [
        "auto",
        "on",
        "off"
      ],
      "enumDescriptions": [
        "Search dependencies based on estimated performance impact.",
        "Always search dependencies.",
        "Never search dependencies."
      ],
      "default": "auto",
      "markdownDescription": "Enable/disable searching `package.json` dependencies for available auto imports.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "auto",
      "restricted": false
    },
    "javascript.preferences.renameShorthandProperties": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable introducing aliases for object shorthand properties during renames. Requires using TypeScript 3.4 or newer in the workspace.",
      "deprecationMessage": "The setting 'typescript.preferences.renameShorthandProperties' has been deprecated in favor of 'typescript.preferences.useAliasesForRenames'",
      "scope": 5,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.preferences.renameShorthandProperties": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable introducing aliases for object shorthand properties during renames. Requires using TypeScript 3.4 or newer in the workspace.",
      "deprecationMessage": "The setting 'typescript.preferences.renameShorthandProperties' has been deprecated in favor of 'typescript.preferences.useAliasesForRenames'",
      "scope": 5,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.preferences.useAliasesForRenames": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable introducing aliases for object shorthand properties during renames. Requires using TypeScript 3.4 or newer in the workspace.",
      "scope": 5,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.preferences.useAliasesForRenames": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable introducing aliases for object shorthand properties during renames. Requires using TypeScript 3.4 or newer in the workspace.",
      "scope": 5,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.updateImportsOnFileMove.enabled": {
      "type": "string",
      "enum": [
        "prompt",
        "always",
        "never"
      ],
      "markdownEnumDescriptions": [
        "Prompt on each rename.",
        "Always update paths automatically.",
        "Never rename paths and don't prompt."
      ],
      "default": "prompt",
      "description": "Enable/disable automatic updating of import paths when you rename or move a file in VS Code.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "prompt",
      "restricted": false
    },
    "javascript.updateImportsOnFileMove.enabled": {
      "type": "string",
      "enum": [
        "prompt",
        "always",
        "never"
      ],
      "markdownEnumDescriptions": [
        "Prompt on each rename.",
        "Always update paths automatically.",
        "Never rename paths and don't prompt."
      ],
      "default": "prompt",
      "description": "Enable/disable automatic updating of import paths when you rename or move a file in VS Code.",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "prompt",
      "restricted": false
    },
    "typescript.autoClosingTags": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable automatic closing of JSX tags.",
      "scope": 5,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.autoClosingTags": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable automatic closing of JSX tags.",
      "scope": 5,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "javascript.suggest.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Enabled/disable autocomplete suggestions.",
      "scope": 5,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.suggest.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Enabled/disable autocomplete suggestions.",
      "scope": 5,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.surveys.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Enabled/disable occasional surveys that help us improve VS Code's JavaScript and TypeScript support.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.tsserver.useSeparateSyntaxServer": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable spawning a separate TypeScript server that can more quickly respond to syntax related operations, such as calculating folding or computing document symbols. Requires using TypeScript 3.4.0 or newer in the workspace.",
      "markdownDeprecationMessage": "This setting has been deprecated in favor of `typescript.tsserver.useSyntaxServer`.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false,
      "deprecationMessage": "This setting has been deprecated in favor of `typescript.tsserver.useSyntaxServer`."
    },
    "typescript.tsserver.useSyntaxServer": {
      "type": "string",
      "scope": 3,
      "description": "Controls if TypeScript launches a dedicated server to more quickly handle syntax related operations, such as computing code folding.",
      "default": "auto",
      "enum": [
        "always",
        "never",
        "auto"
      ],
      "enumDescriptions": [
        "Use a lighter weight syntax server to handle all IntelliSense operations. This syntax server can only provide IntelliSense for opened files.",
        "Don't use a dedicated syntax server. Use a single server to handle all IntelliSense operations.",
        "Spawn both a full server and a lighter weight server dedicated to syntax operations. The syntax server is used to speed up syntax operations and provide IntelliSense while projects are loading."
      ],
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "auto",
      "restricted": false
    },
    "typescript.tsserver.maxTsServerMemory": {
      "type": "number",
      "default": 3072,
      "description": "The maximum amount of memory (in MB) to allocate to the TypeScript server process.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": 3072,
      "restricted": false
    },
    "typescript.tsserver.experimental.enableProjectDiagnostics": {
      "type": "boolean",
      "default": false,
      "description": "(Experimental) Enables project wide error reporting.",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "typescript.tsserver.watchOptions": {
      "type": "object",
      "description": "Configure which watching strategies should be used to keep track of files and directories. Requires using TypeScript 3.8+ in the workspace.",
      "scope": 3,
      "properties": {
        "watchFile": {
          "type": "string",
          "description": "Strategy for how individual files are watched.",
          "enum": [
            "fixedChunkSizePolling",
            "fixedPollingInterval",
            "priorityPollingInterval",
            "dynamicPriorityPolling",
            "useFsEvents",
            "useFsEventsOnParentDirectory"
          ],
          "enumDescriptions": [
            "Polls files in chunks at regular interval. Requires using TypeScript 4.3+ in the workspace.",
            "Check every file for changes several times a second at a fixed interval.",
            "Check every file for changes several times a second, but use heuristics to check certain types of files less frequently than others.",
            "Use a dynamic queue where less-frequently modified files will be checked less often.",
            "Attempt to use the operating system/file system's native events for file changes.",
            "Attempt to use the operating system/file system's native events to listen for changes on a file's containing directories. This can use fewer file watchers, but might be less accurate."
          ],
          "default": "useFsEvents"
        },
        "watchDirectory": {
          "type": "string",
          "description": "Strategy for how entire directory trees are watched under systems that lack recursive file-watching functionality.",
          "enum": [
            "fixedChunkSizePolling",
            "fixedPollingInterval",
            "dynamicPriorityPolling",
            "useFsEvents"
          ],
          "enumDescriptions": [
            "Polls directories in chunks at regular interval. Requires using TypeScript 4.3+ in the workspace.",
            "Check every directory for changes several times a second at a fixed interval.",
            "Use a dynamic queue where less-frequently modified directories will be checked less often.",
            "Attempt to use the operating system/file system's native events for directory changes."
          ],
          "default": "useFsEvents"
        },
        "fallbackPolling": {
          "type": "string",
          "description": "When using file system events, this option specifies the polling strategy that gets used when the system runs out of native file watchers and/or doesn't support native file watchers.",
          "enum": [
            "fixedPollingInterval",
            "priorityPollingInterval",
            "dynamicPriorityPolling"
          ],
          "enumDescriptions": [
            "configuration.tsserver.watchOptions.fallbackPolling.fixedPollingInterval",
            "configuration.tsserver.watchOptions.fallbackPolling.priorityPollingInterval",
            "configuration.tsserver.watchOptions.fallbackPolling.dynamicPriorityPolling"
          ]
        },
        "synchronousWatchDirectory": {
          "type": "boolean",
          "description": "Disable deferred watching on directories. Deferred watching is useful when lots of file changes might occur at once (e.g. a change in node_modules from running npm install), but you might want to disable it with this flag for some less-common setups."
        }
      },
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "default": {},
      "restricted": false
    },
    "typescript.workspaceSymbols.scope": {
      "type": "string",
      "enum": [
        "allOpenProjects",
        "currentProject"
      ],
      "enumDescriptions": [
        "Search all open JavaScript or TypeScript projects for symbols. Requires using TypeScript 3.9 or newer in the workspace.",
        "Only search for symbols in the current JavaScript or TypeScript project."
      ],
      "default": "allOpenProjects",
      "markdownDescription": "Controls which files are searched by [go to symbol in workspace](https://code.visualstudio.com/docs/editor/editingevolved#_open-symbol-by-name).",
      "scope": 3,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": "allOpenProjects",
      "restricted": false
    },
    "javascript.suggest.classMemberSnippets.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable snippet completions for class members. Requires using TypeScript 4.5+ in the workspace",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "typescript.suggest.classMemberSnippets.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable snippet completions for class members. Requires using TypeScript 4.5+ in the workspace",
      "scope": 4,
      "source": {
        "id": "vscode.typescript-language-features",
        "displayName": "TypeScript and JavaScript Language Features"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "tailwindCSS.emmetCompletions": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Enable class name completions when using Emmet-style syntax, for example `div.bg-red-500.uppercase`",
      "scope": 3,
      "source": {
        "id": "bradlc.vscode-tailwindcss",
        "displayName": "Tailwind CSS IntelliSense"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "tailwindCSS.includeLanguages": {
      "type": "object",
      "additionalProperties": {
        "type": "string"
      },
      "default": {},
      "markdownDescription": "Enable features in languages that are not supported by default. Add a mapping here between the new language and an already supported language.\n E.g.: `{\"plaintext\": \"html\"}`",
      "scope": 3,
      "source": {
        "id": "bradlc.vscode-tailwindcss",
        "displayName": "Tailwind CSS IntelliSense"
      },
      "defaultDefaultValue": {},
      "restricted": false
    },
    "tailwindCSS.files.exclude": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": [
        "**/.git/**",
        "**/node_modules/**",
        "**/.hg/**"
      ],
      "markdownDescription": "Configure glob patterns to exclude from all IntelliSense features. Inherits all glob patterns from the `#files.exclude#` setting.",
      "scope": 3,
      "source": {
        "id": "bradlc.vscode-tailwindcss",
        "displayName": "Tailwind CSS IntelliSense"
      },
      "defaultDefaultValue": [
        "**/.git/**",
        "**/node_modules/**",
        "**/.hg/**"
      ],
      "restricted": false
    },
    "tailwindCSS.classAttributes": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": [
        "class",
        "className",
        "ngClass"
      ],
      "markdownDescription": "The HTML attributes for which to provide class completions, hover previews, linting etc.",
      "scope": 3,
      "source": {
        "id": "bradlc.vscode-tailwindcss",
        "displayName": "Tailwind CSS IntelliSense"
      },
      "defaultDefaultValue": [
        "class",
        "className",
        "ngClass"
      ],
      "restricted": false
    },
    "tailwindCSS.colorDecorators": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Controls whether the editor should render inline color decorators for Tailwind CSS classes and helper functions.",
      "scope": 5,
      "source": {
        "id": "bradlc.vscode-tailwindcss",
        "displayName": "Tailwind CSS IntelliSense"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "tailwindCSS.validate": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Enable linting. Rules can be configured individually using the `tailwindcss.lint.*` settings",
      "scope": 5,
      "source": {
        "id": "bradlc.vscode-tailwindcss",
        "displayName": "Tailwind CSS IntelliSense"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "tailwindCSS.lint.cssConflict": {
      "type": "string",
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "warning",
      "markdownDescription": "Class names on the same HTML element which apply the same CSS property or properties",
      "scope": 5,
      "source": {
        "id": "bradlc.vscode-tailwindcss",
        "displayName": "Tailwind CSS IntelliSense"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "tailwindCSS.lint.invalidApply": {
      "type": "string",
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "error",
      "markdownDescription": "Unsupported use of the [`@apply` directive](https://tailwindcss.com/docs/functions-and-directives/#apply)",
      "scope": 5,
      "source": {
        "id": "bradlc.vscode-tailwindcss",
        "displayName": "Tailwind CSS IntelliSense"
      },
      "defaultDefaultValue": "error",
      "restricted": false
    },
    "tailwindCSS.lint.invalidScreen": {
      "type": "string",
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "error",
      "markdownDescription": "Unknown screen name used with the [`@screen` directive](https://tailwindcss.com/docs/functions-and-directives/#screen)",
      "scope": 5,
      "source": {
        "id": "bradlc.vscode-tailwindcss",
        "displayName": "Tailwind CSS IntelliSense"
      },
      "defaultDefaultValue": "error",
      "restricted": false
    },
    "tailwindCSS.lint.invalidVariant": {
      "type": "string",
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "error",
      "markdownDescription": "Unknown variant name used with the [`@variants` directive](https://tailwindcss.com/docs/functions-and-directives/#variants)",
      "scope": 5,
      "source": {
        "id": "bradlc.vscode-tailwindcss",
        "displayName": "Tailwind CSS IntelliSense"
      },
      "defaultDefaultValue": "error",
      "restricted": false
    },
    "tailwindCSS.lint.invalidConfigPath": {
      "type": "string",
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "error",
      "markdownDescription": "Unknown or invalid path used with the [`theme` helper](https://tailwindcss.com/docs/functions-and-directives/#theme)",
      "scope": 5,
      "source": {
        "id": "bradlc.vscode-tailwindcss",
        "displayName": "Tailwind CSS IntelliSense"
      },
      "defaultDefaultValue": "error",
      "restricted": false
    },
    "tailwindCSS.lint.invalidTailwindDirective": {
      "type": "string",
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "error",
      "markdownDescription": "Unknown value used with the [`@tailwind` directive](https://tailwindcss.com/docs/functions-and-directives/#tailwind)",
      "scope": 5,
      "source": {
        "id": "bradlc.vscode-tailwindcss",
        "displayName": "Tailwind CSS IntelliSense"
      },
      "defaultDefaultValue": "error",
      "restricted": false
    },
    "tailwindCSS.lint.recommendedVariantOrder": {
      "type": "string",
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "default": "warning",
      "markdownDescription": "Class variants not in the recommended order (applies in [JIT mode](https://tailwindcss.com/docs/just-in-time-mode) only)",
      "scope": 5,
      "source": {
        "id": "bradlc.vscode-tailwindcss",
        "displayName": "Tailwind CSS IntelliSense"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "tailwindCSS.experimental.classRegex": {
      "type": "array",
      "scope": 5,
      "source": {
        "id": "bradlc.vscode-tailwindcss",
        "displayName": "Tailwind CSS IntelliSense"
      },
      "default": [],
      "restricted": false
    },
    "tailwindCSS.showPixelEquivalents": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Show `px` equivalents for `rem` CSS values.",
      "scope": 3,
      "source": {
        "id": "bradlc.vscode-tailwindcss",
        "displayName": "Tailwind CSS IntelliSense"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "tailwindCSS.rootFontSize": {
      "type": "number",
      "default": 16,
      "markdownDescription": "Root font size in pixels. Used to convert `rem` CSS values to their `px` equivalents. See `#tailwindCSS.showPixelEquivalents#`.",
      "scope": 3,
      "source": {
        "id": "bradlc.vscode-tailwindcss",
        "displayName": "Tailwind CSS IntelliSense"
      },
      "defaultDefaultValue": 16,
      "restricted": false
    },
    "tailwindCSS.inspectPort": {
      "type": [
        "number",
        "null"
      ],
      "default": null,
      "markdownDescription": "Enable the Node.js inspector agent for the language server and listen on the specified port.",
      "scope": 3,
      "source": {
        "id": "bradlc.vscode-tailwindcss",
        "displayName": "Tailwind CSS IntelliSense"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "npm-intellisense.scanDevDependencies": {
      "type": "boolean",
      "default": false,
      "description": "Scans devDependencies as well",
      "scope": 3,
      "source": {
        "id": "christian-kohler.npm-intellisense",
        "displayName": "npm Intellisense"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "npm-intellisense.recursivePackageJsonLookup": {
      "type": "boolean",
      "default": true,
      "description": "Look for package.json inside nearest directory instead of workspace root",
      "scope": 3,
      "source": {
        "id": "christian-kohler.npm-intellisense",
        "displayName": "npm Intellisense"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "npm-intellisense.packageSubfoldersIntellisense": {
      "type": "boolean",
      "default": false,
      "description": "(experimental) Enables path intellisense in subfolders of modules",
      "scope": 3,
      "source": {
        "id": "christian-kohler.npm-intellisense",
        "displayName": "npm Intellisense"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "npm-intellisense.showBuildInLibs": {
      "type": "boolean",
      "default": false,
      "description": "shows build in node modules like 'path' of 'fs'",
      "scope": 3,
      "source": {
        "id": "christian-kohler.npm-intellisense",
        "displayName": "npm Intellisense"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "npm-intellisense.importES6": {
      "type": "boolean",
      "default": true,
      "description": "For import command. Use import statements instead of require()",
      "scope": 3,
      "source": {
        "id": "christian-kohler.npm-intellisense",
        "displayName": "npm Intellisense"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "npm-intellisense.importQuotes": {
      "type": "string",
      "default": "'",
      "description": "For import command. The type of quotes to use in the snippet",
      "scope": 3,
      "source": {
        "id": "christian-kohler.npm-intellisense",
        "displayName": "npm Intellisense"
      },
      "defaultDefaultValue": "'",
      "restricted": false
    },
    "npm-intellisense.importLinebreak": {
      "type": "string",
      "default": ";\r\n",
      "description": "For import command. The linebreak used after the snippet",
      "scope": 3,
      "source": {
        "id": "christian-kohler.npm-intellisense",
        "displayName": "npm Intellisense"
      },
      "defaultDefaultValue": ";\r\n",
      "restricted": false
    },
    "npm-intellisense.importDeclarationType": {
      "type": "string",
      "default": "const",
      "description": "For import command. The declaration type used for require()",
      "scope": 3,
      "source": {
        "id": "christian-kohler.npm-intellisense",
        "displayName": "npm Intellisense"
      },
      "defaultDefaultValue": "const",
      "restricted": false
    },
    "svgviewer.transparencygrid": {
      "type": "boolean",
      "default": true,
      "description": "Show Transparency Grid",
      "scope": 3,
      "source": {
        "id": "cssho.vscode-svgviewer",
        "displayName": "SVG Viewer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svgviewer.transparencycolor": {
      "type": "string",
      "default": null,
      "description": "Color setting for transparency",
      "scope": 3,
      "source": {
        "id": "cssho.vscode-svgviewer",
        "displayName": "SVG Viewer"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "svgviewer.enableautopreview": {
      "type": "boolean",
      "default": false,
      "description": "Open or not open the preview screen automatically",
      "scope": 3,
      "source": {
        "id": "cssho.vscode-svgviewer",
        "displayName": "SVG Viewer"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "svgviewer.previewcolumn": {
      "type": "string",
      "enum": [
        "Active",
        "Beside"
      ],
      "default": "Beside",
      "description": "How to open the screen (vscode.ViewColumn)",
      "scope": 3,
      "source": {
        "id": "cssho.vscode-svgviewer",
        "displayName": "SVG Viewer"
      },
      "defaultDefaultValue": "Beside",
      "restricted": false
    },
    "svgviewer.showzoominout": {
      "type": "boolean",
      "default": false,
      "description": "Show zoom in/out button in preview windows",
      "scope": 3,
      "source": {
        "id": "cssho.vscode-svgviewer",
        "displayName": "SVG Viewer"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "eslint.enable": {
      "scope": 4,
      "type": "boolean",
      "default": true,
      "description": "Controls whether eslint is enabled or not.",
      "source": {
        "id": "dbaeumer.vscode-eslint",
        "displayName": "ESLint"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "eslint.packageManager": {
      "scope": 4,
      "type": "string",
      "enum": [
        "npm",
        "yarn",
        "pnpm"
      ],
      "default": "npm",
      "description": "The package manager you use to install node modules.",
      "source": {
        "id": "dbaeumer.vscode-eslint",
        "displayName": "ESLint"
      },
      "defaultDefaultValue": "npm",
      "restricted": false
    },
    "eslint.alwaysShowStatus": {
      "type": "boolean",
      "default": false,
      "description": "Always show the ESlint status bar item.",
      "scope": 3,
      "source": {
        "id": "dbaeumer.vscode-eslint",
        "displayName": "ESLint"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "eslint.nodeEnv": {
      "scope": 4,
      "type": [
        "string",
        "null"
      ],
      "default": null,
      "markdownDescription": "The value of `NODE_ENV` to use when running eslint tasks.",
      "source": {
        "id": "dbaeumer.vscode-eslint",
        "displayName": "ESLint"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "eslint.nodePath": {
      "scope": 6,
      "type": [
        "string",
        "null"
      ],
      "default": null,
      "markdownDescription": "A path added to `NODE_PATH` when resolving the eslint module.",
      "source": {
        "id": "dbaeumer.vscode-eslint",
        "displayName": "ESLint"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "eslint.options": {
      "scope": 4,
      "type": "object",
      "default": {},
      "markdownDescription": "The eslint options object to provide args normally passed to eslint when executed from a command line (see https://eslint.org/docs/developer-guide/nodejs-api#eslint-class).",
      "source": {
        "id": "dbaeumer.vscode-eslint",
        "displayName": "ESLint"
      },
      "defaultDefaultValue": {},
      "restricted": false
    },
    "eslint.trace.server": {
      "scope": 3,
      "anyOf": [
        {
          "type": "string",
          "enum": [
            "off",
            "messages",
            "verbose"
          ],
          "default": "off"
        },
        {
          "type": "object",
          "properties": {
            "verbosity": {
              "type": "string",
              "enum": [
                "off",
                "messages",
                "verbose"
              ],
              "default": "off"
            },
            "format": {
              "type": "string",
              "enum": [
                "text",
                "json"
              ],
              "default": "text"
            }
          }
        }
      ],
      "default": "off",
      "description": "Traces the communication between VSCode and the eslint linter service.",
      "source": {
        "id": "dbaeumer.vscode-eslint",
        "displayName": "ESLint"
      },
      "defaultDefaultValue": "off",
      "restricted": false
    },
    "eslint.run": {
      "scope": 4,
      "type": "string",
      "enum": [
        "onSave",
        "onType"
      ],
      "default": "onType",
      "description": "Run the linter on save (onSave) or on type (onType)",
      "source": {
        "id": "dbaeumer.vscode-eslint",
        "displayName": "ESLint"
      },
      "defaultDefaultValue": "onType",
      "restricted": false
    },
    "eslint.autoFixOnSave": {
      "scope": 4,
      "type": "boolean",
      "default": false,
      "description": "Turns auto fix on save on or off.",
      "deprecationMessage": "The setting is deprecated. Use editor.codeActionsOnSave instead with a source.fixAll.eslint member.",
      "source": {
        "id": "dbaeumer.vscode-eslint",
        "displayName": "ESLint"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "eslint.quiet": {
      "scope": 4,
      "type": "boolean",
      "default": false,
      "description": "Turns on quiet mode, which ignores warnings.",
      "source": {
        "id": "dbaeumer.vscode-eslint",
        "displayName": "ESLint"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "eslint.onIgnoredFiles": {
      "scope": 4,
      "type": "string",
      "enum": [
        "warn",
        "off"
      ],
      "default": "off",
      "description": "Whether ESLint should issue a warning on ignored files.",
      "source": {
        "id": "dbaeumer.vscode-eslint",
        "displayName": "ESLint"
      },
      "defaultDefaultValue": "off",
      "restricted": false
    },
    "eslint.migration.2_x": {
      "scope": 1,
      "type": "string",
      "enum": [
        "off",
        "on"
      ],
      "default": "on",
      "description": "Whether ESlint should migrate auto fix on save settings.",
      "source": {
        "id": "dbaeumer.vscode-eslint",
        "displayName": "ESLint"
      },
      "defaultDefaultValue": "on",
      "restricted": false
    },
    "eslint.useESLintClass": {
      "scope": 4,
      "type": "boolean",
      "default": false,
      "description": "Since version 7 ESLint offers a new API call ESLint. Use it even if the old CLIEngine is available. From version 8 on forward on ESLint class is available.",
      "source": {
        "id": "dbaeumer.vscode-eslint",
        "displayName": "ESLint"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "eslint.workingDirectories": {
      "scope": 4,
      "type": "array",
      "items": {
        "anyOf": [
          {
            "type": "string"
          },
          {
            "type": "object",
            "properties": {
              "mode": {
                "type": "string",
                "enum": [
                  "auto",
                  "location"
                ],
                "default": "location"
              }
            },
            "required": [
              "mode"
            ]
          },
          {
            "type": "object",
            "properties": {
              "directory": {
                "type": "string",
                "description": "The working directory to use if a file's path starts with this directory."
              },
              "changeProcessCWD": {
                "type": "boolean",
                "description": "Whether the process's cwd should be changed as well."
              }
            },
            "deprecationMessage": "Use the new !cwd form.",
            "required": [
              "directory"
            ]
          },
          {
            "type": "object",
            "properties": {
              "directory": {
                "type": "string",
                "description": "The working directory to use if a file's path starts with this directory."
              },
              "!cwd": {
                "type": "boolean",
                "description": "Set to true if ESLint shouldn't change the working directory."
              }
            },
            "required": [
              "directory"
            ]
          },
          {
            "type": "object",
            "properties": {
              "pattern": {
                "type": "string",
                "description": "A glob pattern to match a working directory."
              },
              "!cwd": {
                "type": "boolean",
                "description": "Set to true if ESLint shouldn't change the working directory."
              }
            },
            "required": [
              "pattern"
            ]
          }
        ]
      },
      "markdownDescription": "Specifies how the working directories ESLint is using are computed. ESLint resolves configuration files (e.g. `eslintrc`, `.eslintignore`) relative to a working directory so it is important to configure this correctly.",
      "source": {
        "id": "dbaeumer.vscode-eslint",
        "displayName": "ESLint"
      },
      "default": [],
      "restricted": false
    },
    "eslint.validate": {
      "scope": 4,
      "type": "array",
      "items": {
        "anyOf": [
          {
            "type": "string"
          },
          {
            "type": "object",
            "properties": {
              "language": {
                "type": "string",
                "description": "The language id to be validated by ESLint."
              },
              "autoFix": {
                "type": "boolean",
                "description": "Whether auto fixes are provided for the language."
              }
            },
            "deprecationMessage": "Auto Fix is enabled by default. Use the single string form."
          }
        ]
      },
      "description": "An array of language ids which should be validated by ESLint. If not installed ESLint will show an error.",
      "source": {
        "id": "dbaeumer.vscode-eslint",
        "displayName": "ESLint"
      },
      "default": [],
      "restricted": false
    },
    "eslint.probe": {
      "scope": 4,
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": [
        "javascript",
        "javascriptreact",
        "typescript",
        "typescriptreact",
        "html",
        "vue",
        "markdown"
      ],
      "description": "An array of language ids for which the extension should probe if support is installed.",
      "source": {
        "id": "dbaeumer.vscode-eslint",
        "displayName": "ESLint"
      },
      "defaultDefaultValue": [
        "javascript",
        "javascriptreact",
        "typescript",
        "typescriptreact",
        "html",
        "vue",
        "markdown"
      ],
      "restricted": false
    },
    "eslint.provideLintTask": {
      "scope": 4,
      "type": "boolean",
      "default": false,
      "deprecationMessage": "This option is deprecated. Use eslint.lintTask.enable instead.",
      "description": "Controls whether a task for linting the whole workspace will be available.",
      "source": {
        "id": "dbaeumer.vscode-eslint",
        "displayName": "ESLint"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "eslint.lintTask.enable": {
      "scope": 4,
      "type": "boolean",
      "default": false,
      "description": "Controls whether a task for linting the whole workspace will be available.",
      "source": {
        "id": "dbaeumer.vscode-eslint",
        "displayName": "ESLint"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "eslint.lintTask.options": {
      "scope": 4,
      "type": "string",
      "default": ".",
      "markdownDescription": "Command line options applied when running the task for linting the whole workspace (see https://eslint.org/docs/user-guide/command-line-interface).",
      "source": {
        "id": "dbaeumer.vscode-eslint",
        "displayName": "ESLint"
      },
      "defaultDefaultValue": ".",
      "restricted": false
    },
    "eslint.runtime": {
      "scope": 6,
      "type": [
        "string",
        "null"
      ],
      "default": null,
      "markdownDescription": "The location of the node binary to run ESLint under.",
      "source": {
        "id": "dbaeumer.vscode-eslint",
        "displayName": "ESLint"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "eslint.execArgv": {
      "scope": 6,
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": null,
      "markdownDescription": "Additional exec argv argument passed to the runtime. This can for example be used to control the maximum heap space using --max_old_space_size",
      "source": {
        "id": "dbaeumer.vscode-eslint",
        "displayName": "ESLint"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "eslint.debug": {
      "scope": 3,
      "type": "boolean",
      "default": false,
      "markdownDescription": "Enables ESLint debug mode (same as `--debug` on the command line)",
      "source": {
        "id": "dbaeumer.vscode-eslint",
        "displayName": "ESLint"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "eslint.codeAction.disableRuleComment": {
      "scope": 4,
      "type": "object",
      "default": {
        "enable": true,
        "location": "separateLine"
      },
      "properties": {
        "enable": {
          "type": "boolean",
          "default": true,
          "description": "Show the disable code actions."
        },
        "location": {
          "type": "string",
          "enum": [
            "separateLine",
            "sameLine"
          ],
          "default": "separateLine",
          "description": "Configure the disable rule code action to insert the comment on the same line or a new line."
        }
      },
      "additionalProperties": false,
      "markdownDescription": "Show disable lint rule in the quick fix menu.",
      "source": {
        "id": "dbaeumer.vscode-eslint",
        "displayName": "ESLint"
      },
      "defaultDefaultValue": {
        "enable": true,
        "location": "separateLine"
      },
      "restricted": false
    },
    "eslint.codeAction.showDocumentation": {
      "scope": 4,
      "type": "object",
      "default": {
        "enable": true
      },
      "properties": {
        "enable": {
          "type": "boolean",
          "default": true,
          "description": "Show the documentation code actions."
        }
      },
      "additionalProperties": false,
      "markdownDescription": "Show open lint rule documentation web page in the quick fix menu.",
      "source": {
        "id": "dbaeumer.vscode-eslint",
        "displayName": "ESLint"
      },
      "defaultDefaultValue": {
        "enable": true
      },
      "restricted": false
    },
    "eslint.codeActionsOnSave.mode": {
      "scope": 4,
      "type": "string",
      "enum": [
        "all",
        "problems"
      ],
      "enumDescriptions": [
        "Fixes all possible problems in the file. This option might take some time.",
        "Only fixes reported problems that have non overlapping textual edits. This options runs a lot faster."
      ],
      "default": "all",
      "markdownDescription": "Specifies the code action mode. Possible values are 'all' and 'problems'.",
      "source": {
        "id": "dbaeumer.vscode-eslint",
        "displayName": "ESLint"
      },
      "defaultDefaultValue": "all",
      "restricted": false
    },
    "eslint.codeActionsOnSave.rules": {
      "scope": 4,
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": null,
      "markdownDescription": "The rules that should be executed when computing the code actions on save or formatting a file. Defaults to the rules configured via the ESLint configuration",
      "source": {
        "id": "dbaeumer.vscode-eslint",
        "displayName": "ESLint"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "eslint.format.enable": {
      "scope": 4,
      "type": "boolean",
      "default": false,
      "description": "Enables ESLint as a formatter.",
      "source": {
        "id": "dbaeumer.vscode-eslint",
        "displayName": "ESLint"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "eslint.rules.customizations": {
      "items": {
        "properties": {
          "severity": {
            "enum": [
              "downgrade",
              "error",
              "info",
              "default",
              "upgrade",
              "warn",
              "off"
            ],
            "type": "string"
          },
          "rule": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "scope": 4,
      "type": "array",
      "description": "Override the severity of one or more rules reported by this extension, regardless of the project's ESLint config. Use globs to apply default severities for multiple rules.",
      "source": {
        "id": "dbaeumer.vscode-eslint",
        "displayName": "ESLint"
      },
      "default": [],
      "restricted": false
    },
    "xmlTools.enableXmlTreeView": {
      "type": "boolean",
      "default": true,
      "description": "Enables the XML Document view in the explorer for XML documents.",
      "scope": 3,
      "source": {
        "id": "DotJoshJohnson.xml",
        "displayName": "XML Tools"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "xmlTools.enableXmlTreeViewMetadata": {
      "type": "boolean",
      "default": true,
      "description": "Enables attribute and child element counts in the XML Document view.",
      "scope": 3,
      "source": {
        "id": "DotJoshJohnson.xml",
        "displayName": "XML Tools"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "xmlTools.enableXmlTreeViewCursorSync": {
      "type": "boolean",
      "default": false,
      "description": "Enables auto-reveal of elements in the XML Document view when a start tag is clicked in the editor.",
      "scope": 3,
      "source": {
        "id": "DotJoshJohnson.xml",
        "displayName": "XML Tools"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "xmlTools.enforcePrettySelfClosingTagOnFormat": {
      "type": "boolean",
      "default": false,
      "description": "Enforces a space before the forward slash at the end of a self-closing XML tag.",
      "scope": 4,
      "source": {
        "id": "DotJoshJohnson.xml",
        "displayName": "XML Tools"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "xmlTools.ignoreDefaultNamespace": {
      "type": "boolean",
      "default": true,
      "description": "Ignore default xmlns attributes when evaluating XPath.",
      "scope": 3,
      "source": {
        "id": "DotJoshJohnson.xml",
        "displayName": "XML Tools"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "xmlTools.persistXPathQuery": {
      "type": "boolean",
      "default": true,
      "description": "Remember the last XPath query used.",
      "scope": 3,
      "source": {
        "id": "DotJoshJohnson.xml",
        "displayName": "XML Tools"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "xmlTools.removeCommentsOnMinify": {
      "type": "boolean",
      "default": false,
      "description": "Remove XML comments during minification.",
      "scope": 4,
      "source": {
        "id": "DotJoshJohnson.xml",
        "displayName": "XML Tools"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "xmlTools.splitAttributesOnFormat": {
      "type": "boolean",
      "default": false,
      "description": "Put each attribute on a new line when formatting XML. Overrides `xmlTools.splitXmlnsOnFormat` if set to `true`.",
      "scope": 4,
      "source": {
        "id": "DotJoshJohnson.xml",
        "displayName": "XML Tools"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "xmlTools.splitXmlnsOnFormat": {
      "type": "boolean",
      "default": true,
      "description": "Put each xmlns attribute on a new line when formatting XML.",
      "scope": 4,
      "source": {
        "id": "DotJoshJohnson.xml",
        "displayName": "XML Tools"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "xmlTools.xmlFormatterImplementation": {
      "type": "string",
      "enum": [
        "classic",
        "v2"
      ],
      "default": "v2",
      "description": "Supported XML Formatters: classic",
      "scope": 3,
      "source": {
        "id": "DotJoshJohnson.xml",
        "displayName": "XML Tools"
      },
      "defaultDefaultValue": "v2",
      "restricted": false
    },
    "xmlTools.xqueryExecutionArguments": {
      "type": "array",
      "default": [
        "-xquery",
        "$(script)",
        "-in",
        "$(input)",
        "-out",
        "$(input).output.xml"
      ],
      "description": "Arguments to be passed to the XQuery execution engine.",
      "scope": 3,
      "source": {
        "id": "DotJoshJohnson.xml",
        "displayName": "XML Tools"
      },
      "defaultDefaultValue": [
        "-xquery",
        "$(script)",
        "-in",
        "$(input)",
        "-out",
        "$(input).output.xml"
      ],
      "restricted": false
    },
    "xmlTools.xqueryExecutionEngine": {
      "type": "string",
      "default": "",
      "description": "The full path to the executable to run when executing XQuery scripts.",
      "scope": 3,
      "source": {
        "id": "DotJoshJohnson.xml",
        "displayName": "XML Tools"
      },
      "defaultDefaultValue": "",
      "restricted": false
    },
    "xmlTools.xqueryExecutionInputLimit": {
      "type": "integer",
      "default": 100,
      "description": "The maximum number of input files to enumerate when executing XQuery scripts.",
      "scope": 3,
      "source": {
        "id": "DotJoshJohnson.xml",
        "displayName": "XML Tools"
      },
      "defaultDefaultValue": 100,
      "restricted": false
    },
    "xmlTools.xqueryExecutionInputSearchPattern": {
      "type": "string",
      "default": "**/*.xml",
      "description": "The pattern used to search for input XML files when executing XQuery scripts.",
      "scope": 3,
      "source": {
        "id": "DotJoshJohnson.xml",
        "displayName": "XML Tools"
      },
      "defaultDefaultValue": "**/*.xml",
      "restricted": false
    },
    "reactSnippets.settings.prettierEnabled": {
      "type": "boolean",
      "markdownDescription": "[EXPERIMENTAL: MIGHT NOT WORK]: Integrate prettier settings with code generated from snippets.",
      "default": false,
      "scope": 3,
      "source": {
        "id": "dsznajder.es7-react-js-snippets",
        "displayName": "ES7+ React/Redux/React-Native snippets"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "reactSnippets.settings.importReactOnTop": {
      "type": "boolean",
      "markdownDescription": "Controls if snippets should add `import React from 'react';` at the top of components.\nUse if you have React +17 and use jsx transform.",
      "default": true,
      "scope": 3,
      "source": {
        "id": "dsznajder.es7-react-js-snippets",
        "displayName": "ES7+ React/Redux/React-Native snippets"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "reactSnippets.settings.typescript": {
      "type": "boolean",
      "markdownDescription": "Controls if React components have typescript Props typing.",
      "default": true,
      "scope": 3,
      "source": {
        "id": "dsznajder.es7-react-js-snippets",
        "displayName": "ES7+ React/Redux/React-Native snippets"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "reactSnippets.settings.languageScopes": {
      "type": "string",
      "markdownDescription": "defines the language scopes for which the snippets will be available.\nUse comma separated values.\nFor example: `typescript,typescriptreact,javascript,javascriptreact`",
      "default": "typescript,typescriptreact,javascript,javascriptreact",
      "scope": 3,
      "source": {
        "id": "dsznajder.es7-react-js-snippets",
        "displayName": "ES7+ React/Redux/React-Native snippets"
      },
      "defaultDefaultValue": "typescript,typescriptreact,javascript,javascriptreact",
      "restricted": false
    },
    "reactSnippets.settings.typescriptPropsStatePrefix": {
      "type": "string",
      "markdownDescription": "Controls which prefix for typescript snippets should use for props/state.",
      "default": "type",
      "enum": [
        "type",
        "interface"
      ],
      "scope": 3,
      "source": {
        "id": "dsznajder.es7-react-js-snippets",
        "displayName": "ES7+ React/Redux/React-Native snippets"
      },
      "defaultDefaultValue": "type",
      "restricted": false
    },
    "gitlens.currentLine.enabled": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to provide a blame annotation for the current line, by default. Use the `Toggle Line Blame Annotations` command (`gitlens.toggleLineBlame`) to toggle the annotations on and off for the current window",
      "scope": 3,
      "order": 10,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.currentLine.pullRequests.enabled": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to provide information about the Pull Request (if any) that introduced the commit in the current line blame annotation. Requires a connection to a supported remote service (e.g. GitHub)",
      "scope": 3,
      "order": 20,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.currentLine.format": {
      "type": "string",
      "default": "${author, }${agoOrDate}${' via 'pullRequest}${ • message|50?}",
      "markdownDescription": "Specifies the format of the current line blame annotation. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs. Date formatting is controlled by the `#gitlens.currentLine.dateFormat#` setting",
      "scope": 3,
      "order": 30,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": "${author, }${agoOrDate}${' via 'pullRequest}${ • message|50?}",
      "restricted": false
    },
    "gitlens.currentLine.scrollable": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether the current line blame annotation can be scrolled into view when it is outside the viewport. **NOTE**: Setting this to `false` will inhibit the hovers from showing over the annotation; Set `#gitlens.hovers.currentLine.over#` to `line` to enable the hovers to show anywhere over the line.",
      "scope": 3,
      "order": 40,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.currentLine.dateFormat": {
      "type": [
        "string",
        "null"
      ],
      "default": null,
      "markdownDescription": "Specifies how to format absolute dates (e.g. using the `${date}` token) for the current line blame annotation. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats",
      "scope": 3,
      "order": 50,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "gitlens.codeLens.enabled": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to provide any Git CodeLens, by default. Use the `Toggle Git CodeLens` command (`gitlens.toggleCodeLens`) to toggle the Git CodeLens on and off for the current window",
      "scope": 3,
      "order": 10,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.codeLens.authors.enabled": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to provide an _authors_ CodeLens, showing number of authors of the file or code block and the most prominent author (if there is more than one)",
      "scope": 3,
      "order": 20,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.codeLens.authors.command": {
      "type": [
        "boolean",
        "string"
      ],
      "enum": [
        false,
        "gitlens.toggleFileBlame",
        "gitlens.toggleFileHeatmap",
        "gitlens.toggleFileChanges",
        "gitlens.toggleFileChangesOnly",
        "gitlens.diffWithPrevious",
        "gitlens.revealCommitInView",
        "gitlens.showCommitsInView",
        "gitlens.showQuickCommitDetails",
        "gitlens.showQuickCommitFileDetails",
        "gitlens.showQuickFileHistory",
        "gitlens.showQuickRepoHistory",
        "gitlens.openCommitOnRemote",
        "gitlens.copyRemoteCommitUrl",
        "gitlens.openFileOnRemote",
        "gitlens.copyRemoteFileUrl"
      ],
      "enumDescriptions": [
        "Disables click interaction",
        "Toggles file blame",
        "Toggles file heatmap",
        "Toggles file changes since before the commit",
        "Toggles file changes from the commit",
        "Compares the current committed file with the previous commit",
        "Reveals the commit in the Side Bar",
        "Searches for commits within the range",
        "Shows a commit details quick pick menu",
        "Shows a commit file details quick pick menu",
        "Shows a file history quick pick menu",
        "Shows a branch history quick pick menu",
        "Opens the commit on the remote service (when available)",
        "Copies the remote commit url to the clipboard (when available)",
        "Opens the file revision on the remote service (when available)",
        "Copies the remote file url to the clipboard (when available)"
      ],
      "default": "gitlens.toggleFileBlame",
      "markdownDescription": "Specifies the command to be executed when an _authors_ CodeLens is clicked",
      "scope": 3,
      "order": 21,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": "gitlens.toggleFileBlame",
      "restricted": false
    },
    "gitlens.codeLens.recentChange.enabled": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to provide a _recent change_ CodeLens, showing the author and date of the most recent commit for the file or code block",
      "scope": 3,
      "order": 30,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.codeLens.recentChange.command": {
      "type": [
        "boolean",
        "string"
      ],
      "enum": [
        false,
        "gitlens.toggleFileBlame",
        "gitlens.toggleFileHeatmap",
        "gitlens.toggleFileChanges",
        "gitlens.toggleFileChangesOnly",
        "gitlens.diffWithPrevious",
        "gitlens.revealCommitInView",
        "gitlens.showCommitsInView",
        "gitlens.showQuickCommitDetails",
        "gitlens.showQuickCommitFileDetails",
        "gitlens.showQuickFileHistory",
        "gitlens.showQuickRepoHistory",
        "gitlens.openCommitOnRemote",
        "gitlens.copyRemoteCommitUrl",
        "gitlens.openFileOnRemote",
        "gitlens.copyRemoteFileUrl"
      ],
      "enumDescriptions": [
        "Disables click interaction",
        "Toggles file blame",
        "Toggles file heatmap",
        "Toggles file changes since before the commit",
        "Toggles file changes from the commit",
        "Compares the current committed file with the previous commit",
        "Reveals the commit in the Side Bar",
        "Searches for the commit",
        "Shows a commit details quick pick menu",
        "Shows a commit file details quick pick menu",
        "Shows a file history quick pick menu",
        "Shows a branch history quick pick menu",
        "Opens the commit on the remote service (when available)",
        "Copies the remote commit url to the clipboard (when available)",
        "Opens the file revision on the remote service (when available)",
        "Copies the remote file url to the clipboard (when available)"
      ],
      "default": "gitlens.showQuickCommitFileDetails",
      "markdownDescription": "Specifies the command to be executed when a _recent change_ CodeLens is clicked",
      "scope": 3,
      "order": 31,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": "gitlens.showQuickCommitFileDetails",
      "restricted": false
    },
    "gitlens.codeLens.scopes": {
      "type": "array",
      "default": [
        "document",
        "containers"
      ],
      "items": {
        "type": "string",
        "enum": [
          "document",
          "containers",
          "blocks"
        ],
        "enumDescriptions": [
          "Adds CodeLens at the top of the document",
          "Adds CodeLens at the start of container-like symbols (modules, classes, interfaces, etc)",
          "Adds CodeLens at the start of block-like symbols (functions, methods, etc) lines"
        ]
      },
      "minItems": 0,
      "maxItems": 3,
      "uniqueItems": true,
      "markdownDescription": "Specifies where Git CodeLens will be shown in the document",
      "scope": 5,
      "order": 40,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": [
        "document",
        "containers"
      ],
      "restricted": false
    },
    "gitlens.codeLens.symbolScopes": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "uniqueItems": true,
      "markdownDescription": "Specifies a set of document symbols where Git CodeLens will or will not be shown in the document. Prefix with `!` to avoid providing a Git CodeLens for the symbol. Must be a member of `SymbolKind`",
      "scope": 5,
      "order": 50,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "default": [],
      "restricted": false
    },
    "gitlens.codeLens.includeSingleLineSymbols": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Specifies whether to provide any Git CodeLens on symbols that span only a single line",
      "scope": 3,
      "order": 60,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "gitlens.strings.codeLens.unsavedChanges.recentChangeAndAuthors": {
      "type": "string",
      "default": "$(ellipsis)",
      "markdownDescription": "Specifies the string to be shown in place of both the _recent change_ and _authors_ CodeLens when there are unsaved changes",
      "scope": 3,
      "order": 70,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": "$(ellipsis)",
      "restricted": false
    },
    "gitlens.strings.codeLens.unsavedChanges.recentChangeOnly": {
      "type": "string",
      "default": "$(ellipsis)",
      "markdownDescription": "Specifies the string to be shown in place of the _recent change_ CodeLens when there are unsaved changes",
      "scope": 3,
      "order": 71,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": "$(ellipsis)",
      "restricted": false
    },
    "gitlens.strings.codeLens.unsavedChanges.authorsOnly": {
      "type": "string",
      "default": "$(ellipsis)",
      "markdownDescription": "Specifies the string to be shown in place of the _authors_ CodeLens when there are unsaved changes",
      "scope": 3,
      "order": 72,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": "$(ellipsis)",
      "restricted": false
    },
    "gitlens.codeLens.dateFormat": {
      "type": [
        "string",
        "null"
      ],
      "default": null,
      "markdownDescription": "Specifies how to format absolute dates in the Git CodeLens. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats",
      "scope": 3,
      "order": 73,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "gitlens.codeLens.scopesByLanguage": {
      "deprecationMessage": "Deprecated. Use per-language `gitlens.codeLens.scopes` and `gitlens.codeLens.symbolScopes` settings instead",
      "markdownDeprecationMessage": "Deprecated. Use the per-language `#gitlens.codeLens.scopes#` and `#gitlens.codeLens.symbolScopes#` settings instead",
      "scope": 3,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "default": null,
      "restricted": false
    },
    "gitlens.statusBar.enabled": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to provide blame information in the status bar",
      "scope": 3,
      "order": 10,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.statusBar.pullRequests.enabled": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to provide information about the Pull Request (if any) that introduced the commit in the status bar. Requires a connection to a supported remote service (e.g. GitHub)",
      "scope": 3,
      "order": 20,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.statusBar.format": {
      "type": "string",
      "default": "${author}, ${agoOrDate}${' via 'pullRequest}",
      "markdownDescription": "Specifies the format of the blame information in the status bar. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs. Date formatting is controlled by the `#gitlens.statusBar.dateFormat#` setting",
      "scope": 3,
      "order": 30,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": "${author}, ${agoOrDate}${' via 'pullRequest}",
      "restricted": false
    },
    "gitlens.statusBar.alignment": {
      "type": "string",
      "default": "right",
      "enum": [
        "left",
        "right"
      ],
      "enumDescriptions": [
        "Aligns to the left",
        "Aligns to the right"
      ],
      "markdownDescription": "Specifies the blame alignment in the status bar",
      "scope": 3,
      "order": 40,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": "right",
      "restricted": false
    },
    "gitlens.statusBar.command": {
      "type": "string",
      "default": "gitlens.showQuickCommitDetails",
      "enum": [
        "gitlens.toggleFileBlame",
        "gitlens.toggleFileHeatmap",
        "gitlens.toggleFileChanges",
        "gitlens.toggleFileChangesOnly",
        "gitlens.toggleCodeLens",
        "gitlens.diffWithPrevious",
        "gitlens.diffWithWorking",
        "gitlens.revealCommitInView",
        "gitlens.showCommitsInView",
        "gitlens.showQuickCommitDetails",
        "gitlens.showQuickCommitFileDetails",
        "gitlens.showQuickFileHistory",
        "gitlens.showQuickRepoHistory",
        "gitlens.openCommitOnRemote",
        "gitlens.copyRemoteCommitUrl",
        "gitlens.openFileOnRemote",
        "gitlens.copyRemoteFileUrl"
      ],
      "enumDescriptions": [
        "Toggles file blame",
        "Toggles file heatmap",
        "Toggles file changes since before the commit",
        "Toggles file changes from the commit",
        "Toggles Git CodeLens",
        "Compares the current line commit with the previous",
        "Compares the current line commit with the working tree",
        "Reveals the commit in the Side Bar",
        "Searches for the commit",
        "Shows a commit details quick pick menu",
        "Shows a commit file details quick pick menu",
        "Shows a file history quick pick menu",
        "Shows a branch history quick pick menu",
        "Opens the commit on the remote service (when available)",
        "Copies the remote commit url to the clipboard (when available)",
        "Opens the file revision on the remote service (when available)",
        "Copies the remote file url to the clipboard (when available)"
      ],
      "markdownDescription": "Specifies the command to be executed when the blame status bar item is clicked",
      "scope": 3,
      "order": 50,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": "gitlens.showQuickCommitDetails",
      "restricted": false
    },
    "gitlens.statusBar.tooltipFormat": {
      "type": "string",
      "default": "${avatar} &nbsp;__${author}__, ${ago}${' via 'pullRequest} &nbsp; _(${date})_ \n\n${message}${\n\n---\n\nfootnotes}\n\n${commands}",
      "editPresentation": "multilineText",
      "markdownDescription": "Specifies the format (in markdown) of hover shown over the blame information in the status bar. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs",
      "scope": 3,
      "order": 60,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": "${avatar} &nbsp;__${author}__, ${ago}${' via 'pullRequest} &nbsp; _(${date})_ \n\n${message}${\n\n---\n\nfootnotes}\n\n${commands}",
      "restricted": false
    },
    "gitlens.statusBar.reduceFlicker": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to avoid clearing the previous blame information when changing lines to reduce status bar \"flashing\"",
      "scope": 3,
      "order": 70,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.statusBar.dateFormat": {
      "type": [
        "string",
        "null"
      ],
      "default": null,
      "markdownDescription": "Specifies how to format absolute dates (e.g. using the `${date}` token) in the blame information in the status bar. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats",
      "scope": 3,
      "order": 80,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "gitlens.hovers.enabled": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to provide any hovers",
      "scope": 3,
      "order": 10,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.hovers.avatars": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to show avatar images in hovers",
      "scope": 3,
      "order": 20,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.hovers.avatarSize": {
      "type": "number",
      "default": 32,
      "markdownDescription": "Specifies the size of the avatar images in hovers",
      "scope": 3,
      "order": 21,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": 32,
      "restricted": false
    },
    "gitlens.hovers.pullRequests.enabled": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to provide information about the Pull Request (if any) that introduced the commit in the hovers. Requires a connection to a supported remote service (e.g. GitHub)",
      "scope": 3,
      "order": 30,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.hovers.autolinks.enabled": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to automatically link external resources in commit messages",
      "scope": 3,
      "order": 31,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.hovers.autolinks.enhanced": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to lookup additional details about automatically link external resources in commit messages. Requires a connection to a supported remote service (e.g. GitHub)",
      "scope": 3,
      "order": 32,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.hovers.currentLine.enabled": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to provide any hovers for the current line",
      "scope": 3,
      "order": 40,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.hovers.currentLine.over": {
      "type": "string",
      "default": "annotation",
      "enum": [
        "annotation",
        "line"
      ],
      "enumDescriptions": [
        "Only shown when hovering over the line annotation",
        "Shown when hovering anywhere over the line"
      ],
      "markdownDescription": "Specifies when to trigger hovers for the current line",
      "scope": 3,
      "order": 41,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": "annotation",
      "restricted": false
    },
    "gitlens.hovers.currentLine.details": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to provide a _commit details_ hover for the current line",
      "scope": 3,
      "order": 42,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.hovers.currentLine.changes": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to provide a _changes (diff)_ hover for the current line",
      "scope": 3,
      "order": 43,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.hovers.annotations.enabled": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to provide any hovers when showing blame annotations",
      "scope": 3,
      "order": 50,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.hovers.annotations.over": {
      "type": "string",
      "default": "line",
      "enum": [
        "annotation",
        "line"
      ],
      "enumDescriptions": [
        "Only shown when hovering over the line annotation",
        "Shown when hovering anywhere over the line"
      ],
      "markdownDescription": "Specifies when to trigger hovers when showing blame annotations",
      "scope": 3,
      "order": 51,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": "line",
      "restricted": false
    },
    "gitlens.hovers.annotations.details": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to provide a _commit details_ hover for all lines when showing blame annotations",
      "scope": 3,
      "order": 52,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.hovers.annotations.changes": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to provide a _changes (diff)_ hover for all lines when showing blame annotations",
      "scope": 3,
      "order": 53,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.hovers.detailsMarkdownFormat": {
      "type": "string",
      "default": "${avatar} &nbsp;__${author}__, ${ago}${' via 'pullRequest} &nbsp; _(${date})_ \n\n${message}${\n\n---\n\nfootnotes}\n\n${commands}",
      "editPresentation": "multilineText",
      "markdownDescription": "Specifies the format (in markdown) of the _commit details_ hover. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs",
      "scope": 3,
      "order": 60,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": "${avatar} &nbsp;__${author}__, ${ago}${' via 'pullRequest} &nbsp; _(${date})_ \n\n${message}${\n\n---\n\nfootnotes}\n\n${commands}",
      "restricted": false
    },
    "gitlens.hovers.changesDiff": {
      "type": "string",
      "default": "line",
      "enum": [
        "line",
        "hunk"
      ],
      "enumDescriptions": [
        "Shows only the changes to the line",
        "Shows the set of related changes"
      ],
      "markdownDescription": "Specifies whether to show just the changes to the line or the set of related changes in the _changes (diff)_ hover",
      "scope": 3,
      "order": 70,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": "line",
      "restricted": false
    },
    "gitlens.views.defaultItemLimit": {
      "type": "number",
      "default": 10,
      "markdownDescription": "Specifies the default number of items to show in a view list. Use 0 to specify no limit",
      "scope": 3,
      "order": 10,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": 10,
      "restricted": false
    },
    "gitlens.views.pageItemLimit": {
      "type": "number",
      "default": 40,
      "markdownDescription": "Specifies the number of items to show in a each page when paginating a view list. Use 0 to specify no limit",
      "scope": 3,
      "order": 11,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": 40,
      "restricted": false
    },
    "gitlens.views.showRelativeDateMarkers": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to show relative date markers (_Less than a week ago_, _Over a week ago_, _Over a month ago_, etc) on revision (commit) histories in the views",
      "scope": 3,
      "order": 20,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.views.formats.commits.label": {
      "type": "string",
      "default": "${❰ tips ❱➤  }${message}",
      "markdownDescription": "Specifies the format of commits in the views. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs",
      "scope": 3,
      "order": 30,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": "${❰ tips ❱➤  }${message}",
      "restricted": false
    },
    "gitlens.views.formats.commits.description": {
      "type": "string",
      "default": "${author, }${agoOrDate}",
      "markdownDescription": "Specifies the description format of commits in the views. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs",
      "scope": 3,
      "order": 31,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": "${author, }${agoOrDate}",
      "restricted": false
    },
    "gitlens.views.formats.files.label": {
      "type": "string",
      "default": "${working  }${file}",
      "markdownDescription": "Specifies the format of a file in the views. See [_File Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#file-tokens) in the GitLens docs",
      "scope": 3,
      "order": 32,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": "${working  }${file}",
      "restricted": false
    },
    "gitlens.views.formats.files.description": {
      "type": "string",
      "default": "${directory}${  ←  originalPath}",
      "markdownDescription": "Specifies the description format of a file in the views. See [_File Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#file-tokens) in the GitLens docs",
      "scope": 3,
      "order": 33,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": "${directory}${  ←  originalPath}",
      "restricted": false
    },
    "gitlens.views.formats.stashes.label": {
      "type": "string",
      "default": "${message}",
      "markdownDescription": "Specifies the format of stashes in the views. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs",
      "scope": 3,
      "order": 34,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": "${message}",
      "restricted": false
    },
    "gitlens.views.formats.stashes.description": {
      "type": "string",
      "default": "${agoOrDate}",
      "markdownDescription": "Specifies the description format of stashes in the views. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs",
      "scope": 3,
      "order": 35,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": "${agoOrDate}",
      "restricted": false
    },
    "gitlens.views.commitFileFormat": {
      "deprecationMessage": "Deprecated. Use `gitlens.views.formats.files.label` instead",
      "markdownDeprecationMessage": "Deprecated. Use `#gitlens.views.formats.files.label#` instead",
      "scope": 3,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "default": null,
      "restricted": false
    },
    "gitlens.views.commitFileDescriptionFormat": {
      "deprecationMessage": "Deprecated. Use `gitlens.views.formats.files.description` instead",
      "markdownDeprecationMessage": "Deprecated. Use `#gitlens.views.formats.files.description#` instead",
      "scope": 3,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "default": null,
      "restricted": false
    },
    "gitlens.views.commitFormat": {
      "deprecationMessage": "Deprecated. Use `gitlens.views.formats.commits.label` instead",
      "markdownDeprecationMessage": "Deprecated. Use `#gitlens.views.commits.files.label#` instead",
      "scope": 3,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "default": null,
      "restricted": false
    },
    "gitlens.views.commitDescriptionFormat": {
      "deprecationMessage": "Deprecated. Use `gitlens.views.formats.commits.description` instead",
      "markdownDeprecationMessage": "Deprecated. Use `#gitlens.views.formats.commits.description#` instead",
      "scope": 3,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "default": null,
      "restricted": false
    },
    "gitlens.views.stashFileFormat": {
      "deprecationMessage": "Deprecated. Use `gitlens.views.formats.files.label` instead",
      "markdownDeprecationMessage": "Deprecated. Use `#gitlens.views.formats.files.label#` instead",
      "scope": 3,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "default": null,
      "restricted": false
    },
    "gitlens.views.stashFileDescriptionFormat": {
      "deprecationMessage": "Deprecated. Use `gitlens.views.formats.files.description` instead",
      "markdownDeprecationMessage": "Deprecated. Use `#gitlens.views.formats.files.description#` instead",
      "scope": 3,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "default": null,
      "restricted": false
    },
    "gitlens.views.stashFormat": {
      "deprecationMessage": "Deprecated. Use `gitlens.views.formats.stashes.label` instead",
      "markdownDeprecationMessage": "Deprecated. Use `#gitlens.views.stashes.files.label#` instead",
      "scope": 3,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "default": null,
      "restricted": false
    },
    "gitlens.views.stashDescriptionFormat": {
      "deprecationMessage": "Deprecated. Use `gitlens.views.formats.stashes.description` instead",
      "markdownDeprecationMessage": "Deprecated. Use `#gitlens.views.formats.stashes.description#` instead",
      "scope": 3,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "default": null,
      "restricted": false
    },
    "gitlens.views.statusFileFormat": {
      "deprecationMessage": "Deprecated. Use `gitlens.views.formats.files.label` instead",
      "markdownDeprecationMessage": "Deprecated. Use `#gitlens.views.formats.files.label#` instead",
      "scope": 3,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "default": null,
      "restricted": false
    },
    "gitlens.views.statusFileDescriptionFormat": {
      "deprecationMessage": "Deprecated. Use `gitlens.views.formats.files.description` instead",
      "markdownDeprecationMessage": "Deprecated. Use `#gitlens.views.formats.files.description#` instead",
      "scope": 3,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "default": null,
      "restricted": false
    },
    "gitlens.views.commits.showBranchComparison": {
      "type": [
        "boolean",
        "string"
      ],
      "enum": [
        false,
        "branch",
        "working"
      ],
      "enumDescriptions": [
        "Hides the branch comparison",
        "Compares the current branch with a user-selected reference",
        "Compares the working tree with a user-selected reference"
      ],
      "default": "working",
      "markdownDescription": "Specifies whether to show a comparison of the current branch or the working tree with a user-selected reference (branch, tag. etc) in the _Commits_ view",
      "scope": 3,
      "order": 10,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": "working",
      "restricted": false
    },
    "gitlens.views.commits.pullRequests.enabled": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to query for pull requests associated with the current branch and commits in the _Commits_ view. Requires a connection to a supported remote service (e.g. GitHub)",
      "scope": 3,
      "order": 21,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.views.commits.pullRequests.showForBranches": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to show pull requests (if any) associated with the current branch in the _Commits_ view. Requires a connection to a supported remote service (e.g. GitHub)",
      "scope": 3,
      "order": 21,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.views.commits.pullRequests.showForCommits": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to show pull requests (if any) associated with commits in the _Commits_ view. Requires a connection to a supported remote service (e.g. GitHub)",
      "scope": 3,
      "order": 22,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.views.commits.files.layout": {
      "type": "string",
      "default": "auto",
      "enum": [
        "auto",
        "list",
        "tree"
      ],
      "enumDescriptions": [
        "Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.commits.files.threshold#` value and the number of files at each nesting level",
        "Displays files as a list",
        "Displays files as a tree"
      ],
      "markdownDescription": "Specifies how the _Commits_ view will display files",
      "scope": 3,
      "order": 30,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": "auto",
      "restricted": false
    },
    "gitlens.views.commits.files.threshold": {
      "type": "number",
      "default": 5,
      "markdownDescription": "Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Commits_ view. Only applies when `#gitlens.views.commits.files.layout#` is set to `auto`",
      "scope": 3,
      "order": 31,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": 5,
      "restricted": false
    },
    "gitlens.views.commits.files.compact": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to compact (flatten) unnecessary file nesting in the _Commits_ view. Only applies when `#gitlens.views.commits.files.layout#` is set to `tree` or `auto`",
      "scope": 3,
      "order": 32,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.views.commits.avatars": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to show avatar images instead of commit (or status) icons in the _Commits_ view",
      "scope": 3,
      "order": 40,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.views.commits.reveal": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to reveal commits in the _Commits_ view, otherwise they revealed in the _Repositories_ view",
      "scope": 3,
      "order": 50,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.views.repositories.showBranchComparison": {
      "type": [
        "boolean",
        "string"
      ],
      "enum": [
        false,
        "branch",
        "working"
      ],
      "enumDescriptions": [
        "Hides the branch comparison",
        "Compares the current branch with a user-selected reference",
        "Compares the working tree with a user-selected reference"
      ],
      "default": "working",
      "markdownDescription": "Specifies whether to show a comparison of the current branch or the working tree with a user-selected reference (branch, tag. etc) in the _Repositories_ view",
      "scope": 3,
      "order": 10,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": "working",
      "restricted": false
    },
    "gitlens.views.repositories.showUpstreamStatus": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to show the upstream status of the current branch for each repository in the _Repositories_ view",
      "scope": 3,
      "order": 11,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.views.repositories.includeWorkingTree": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Specifies whether to include working tree file status for each repository in the _Repositories_ view",
      "scope": 3,
      "order": 12,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "gitlens.views.repositories.pullRequests.enabled": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to query for pull requests associated with branches and commits in the _Repositories_ view. Requires a connection to a supported remote service (e.g. GitHub)",
      "scope": 3,
      "order": 20,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.views.repositories.pullRequests.showForBranches": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to show pull requests (if any) associated with branches in the _Repositories_ view. Requires a connection to a supported remote service (e.g. GitHub)",
      "scope": 3,
      "order": 21,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.views.repositories.pullRequests.showForCommits": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to show pull requests (if any) associated with commits in the _Repositories_ view. Requires a connection to a supported remote service (e.g. GitHub)",
      "scope": 3,
      "order": 22,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.views.repositories.showCommits": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to show the commits on the current branch for each repository in the _Repositories_ view",
      "scope": 3,
      "order": 30,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.views.repositories.showBranches": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to show the branches for each repository in the _Repositories_ view",
      "scope": 3,
      "order": 31,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.views.repositories.showRemotes": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to show the remotes for each repository in the _Repositories_ view",
      "scope": 3,
      "order": 32,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.views.repositories.showStashes": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to show the stashes for each repository in the _Repositories_ view",
      "scope": 3,
      "order": 33,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.views.repositories.showTags": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to show the tags for each repository in the _Repositories_ view",
      "scope": 3,
      "order": 34,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.views.repositories.showContributors": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to show the contributors for each repository in the _Repositories_ view",
      "scope": 3,
      "order": 35,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.views.repositories.showWorktrees": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to show the worktrees for each repository in the _Repositories_ view",
      "scope": 3,
      "order": 36,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.views.repositories.showIncomingActivity": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Specifies whether to show the experimental incoming activity for each repository in the _Repositories_ view",
      "scope": 3,
      "order": 37,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "gitlens.views.repositories.autoRefresh": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to automatically refresh the _Repositories_ view when the repository or the file system changes",
      "scope": 3,
      "order": 40,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.views.repositories.autoReveal": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to automatically reveal repositories in the _Repositories_ view when opening files",
      "scope": 3,
      "order": 50,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.views.repositories.avatars": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to show avatar images instead of commit (or status) icons in the _Repositories_ view",
      "scope": 3,
      "order": 60,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.views.repositories.branches.layout": {
      "type": "string",
      "default": "tree",
      "enum": [
        "list",
        "tree"
      ],
      "enumDescriptions": [
        "Displays branches as a list",
        "Displays branches as a tree when branch names contain slashes `/`"
      ],
      "markdownDescription": "Specifies how the _Repositories_ view will display branches",
      "scope": 3,
      "order": 70,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": "tree",
      "restricted": false
    },
    "gitlens.views.repositories.files.layout": {
      "type": "string",
      "default": "auto",
      "enum": [
        "auto",
        "list",
        "tree"
      ],
      "enumDescriptions": [
        "Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.repositories.files.threshold#` value and the number of files at each nesting level",
        "Displays files as a list",
        "Displays files as a tree"
      ],
      "markdownDescription": "Specifies how the _Repositories_ view will display files",
      "scope": 3,
      "order": 80,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": "auto",
      "restricted": false
    },
    "gitlens.views.repositories.files.threshold": {
      "type": "number",
      "default": 5,
      "markdownDescription": "Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Repositories_ view. Only applies when `#gitlens.views.repositories.files.layout#` is set to `auto`",
      "scope": 3,
      "order": 81,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": 5,
      "restricted": false
    },
    "gitlens.views.repositories.files.compact": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to compact (flatten) unnecessary file nesting in the _Repositories_ view. Only applies when `#gitlens.views.repositories.files.layout#` is set to `tree` or `auto`",
      "scope": 3,
      "order": 82,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.views.repositories.compact": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Specifies whether to show the _Repositories_ view in a compact display density",
      "scope": 3,
      "order": 90,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "gitlens.views.repositories.branches.showBranchComparison": {
      "type": [
        "boolean",
        "string"
      ],
      "enum": [
        false,
        "branch"
      ],
      "enumDescriptions": [
        "Hides the branch comparison",
        "Compares the branch with a user-selected reference"
      ],
      "default": "branch",
      "markdownDescription": "Specifies whether to show a comparison of the branch with a user-selected reference (branch, tag. etc) under each branch in the _Repositories_ view",
      "scope": 3,
      "order": 100,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": "branch",
      "restricted": false
    },
    "gitlens.views.repositories.enabled": {
      "deprecationMessage": "Deprecated. This setting is no longer used",
      "markdownDeprecationMessage": "Deprecated. This setting is no longer used",
      "scope": 3,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "default": null,
      "restricted": false
    },
    "gitlens.views.fileHistory.files.layout": {
      "type": "string",
      "default": "auto",
      "enum": [
        "auto",
        "list",
        "tree"
      ],
      "enumDescriptions": [
        "Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.fileHistory.files.threshold#` value and the number of files at each nesting level",
        "Displays files as a list",
        "Displays files as a tree"
      ],
      "markdownDescription": "Specifies how the _File History_ view will display files when showing the history of a folder",
      "scope": 3,
      "order": 10,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": "auto",
      "restricted": false
    },
    "gitlens.views.fileHistory.files.threshold": {
      "type": "number",
      "default": 5,
      "markdownDescription": "Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _File History_ view. Only applies to folder history and when `#gitlens.views.fileHistory.files.layout#` is set to `auto`",
      "scope": 3,
      "order": 11,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": 5,
      "restricted": false
    },
    "gitlens.views.fileHistory.files.compact": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to compact (flatten) unnecessary file nesting in the _File History_ view. Only applies to folder history and when `#gitlens.views.fileHistory.files.layout#` is set to `tree` or `auto`",
      "scope": 3,
      "order": 12,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.views.fileHistory.avatars": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to show avatar images instead of status icons in the _File History_ view",
      "scope": 3,
      "order": 20,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.advanced.fileHistoryFollowsRenames": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Specifies whether file histories will follow renames — will affect how merge commits are shown in histories",
      "scope": 3,
      "order": 100,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "gitlens.advanced.fileHistoryShowAllBranches": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Specifies whether file histories will show commits from all branches",
      "scope": 3,
      "order": 101,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "gitlens.views.lineHistory.avatars": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to show avatar images instead of status icons in the _Line History_ view",
      "scope": 3,
      "order": 10,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.views.lineHistory.enabled": {
      "deprecationMessage": "Deprecated. This setting is no longer used",
      "markdownDeprecationMessage": "Deprecated. This setting is no longer used",
      "scope": 3,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "default": null,
      "restricted": false
    },
    "gitlens.views.branches.showBranchComparison": {
      "type": [
        "boolean",
        "string"
      ],
      "enum": [
        false,
        "branch"
      ],
      "enumDescriptions": [
        "Hides the branch comparison",
        "Compares the branch with a user-selected reference"
      ],
      "default": "branch",
      "markdownDescription": "Specifies whether to show a comparison of the branch with a user-selected reference (branch, tag. etc) in the _Branches_ view",
      "scope": 3,
      "order": 10,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": "branch",
      "restricted": false
    },
    "gitlens.views.branches.pullRequests.enabled": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to query for pull requests associated with each branch and commits in the _Branches_ view. Requires a connection to a supported remote service (e.g. GitHub)",
      "scope": 3,
      "order": 20,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.views.branches.pullRequests.showForBranches": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to show pull requests (if any) associated with each branch in the _Branches_ view. Requires a connection to a supported remote service (e.g. GitHub)",
      "scope": 3,
      "order": 21,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.views.branches.pullRequests.showForCommits": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to show pull requests (if any) associated with commits in the _Branches_ view. Requires a connection to a supported remote service (e.g. GitHub)",
      "scope": 3,
      "order": 22,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.views.branches.branches.layout": {
      "type": "string",
      "default": "tree",
      "enum": [
        "list",
        "tree"
      ],
      "enumDescriptions": [
        "Displays branches as a list",
        "Displays branches as a tree when branch names contain slashes `/`"
      ],
      "markdownDescription": "Specifies how the _Branches_ view will display branches",
      "scope": 3,
      "order": 30,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": "tree",
      "restricted": false
    },
    "gitlens.sortBranchesBy": {
      "type": "string",
      "default": "date:desc",
      "enum": [
        "date:desc",
        "date:asc",
        "name:asc",
        "name:desc"
      ],
      "enumDescriptions": [
        "Sorts branches by the most recent commit date in descending order",
        "Sorts branches by the most recent commit date in ascending order",
        "Sorts branches by name in ascending order",
        "Sorts branches by name in descending order"
      ],
      "markdownDescription": "Specifies how branches are sorted in quick pick menus and views",
      "scope": 3,
      "order": 40,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": "date:desc",
      "restricted": false
    },
    "gitlens.views.branches.files.layout": {
      "type": "string",
      "default": "auto",
      "enum": [
        "auto",
        "list",
        "tree"
      ],
      "enumDescriptions": [
        "Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.branches.files.threshold#` value and the number of files at each nesting level",
        "Displays files as a list",
        "Displays files as a tree"
      ],
      "markdownDescription": "Specifies how the _Branches_ view will display files",
      "scope": 3,
      "order": 50,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": "auto",
      "restricted": false
    },
    "gitlens.views.branches.files.threshold": {
      "type": "number",
      "default": 5,
      "markdownDescription": "Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Branches_ view. Only applies when `#gitlens.views.branches.files.layout#` is set to `auto`",
      "scope": 3,
      "order": 51,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": 5,
      "restricted": false
    },
    "gitlens.views.branches.files.compact": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to compact (flatten) unnecessary file nesting in the _Branches_ view. Only applies when `#gitlens.views.branches.files.layout#` is set to `tree` or `auto`",
      "scope": 3,
      "order": 52,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.views.branches.avatars": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to show avatar images instead of commit (or status) icons in the _Branches_ view",
      "scope": 3,
      "order": 60,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.views.branches.reveal": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to reveal branches in the _Branches_ view, otherwise they revealed in the _Repositories_ view",
      "scope": 3,
      "order": 70,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.views.remotes.pullRequests.enabled": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to query for pull requests associated with each branch and commits in the _Remotes_ view. Requires a connection to a supported remote service (e.g. GitHub)",
      "scope": 3,
      "order": 10,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.views.remotes.pullRequests.showForBranches": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to show pull requests (if any) associated with each branch in the _Remotes_ view. Requires a connection to a supported remote service (e.g. GitHub)",
      "scope": 3,
      "order": 11,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.views.remotes.pullRequests.showForCommits": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to show pull requests (if any) associated with commits in the _Remotes_ view. Requires a connection to a supported remote service (e.g. GitHub)",
      "scope": 3,
      "order": 12,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.views.remotes.branches.layout": {
      "type": "string",
      "default": "tree",
      "enum": [
        "list",
        "tree"
      ],
      "enumDescriptions": [
        "Displays branches as a list",
        "Displays branches as a tree when branch names contain slashes `/`"
      ],
      "markdownDescription": "Specifies how the _Remotes_ view will display branches",
      "scope": 3,
      "order": 20,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": "tree",
      "restricted": false
    },
    "gitlens.views.remotes.files.layout": {
      "type": "string",
      "default": "auto",
      "enum": [
        "auto",
        "list",
        "tree"
      ],
      "enumDescriptions": [
        "Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.remotes.files.threshold#` value and the number of files at each nesting level",
        "Displays files as a list",
        "Displays files as a tree"
      ],
      "markdownDescription": "Specifies how the _Remotes_ view will display files",
      "scope": 3,
      "order": 30,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": "auto",
      "restricted": false
    },
    "gitlens.views.remotes.files.threshold": {
      "type": "number",
      "default": 5,
      "markdownDescription": "Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Remotes_ view. Only applies when `#gitlens.views.remotes.files.layout#` is set to `auto`",
      "scope": 3,
      "order": 31,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": 5,
      "restricted": false
    },
    "gitlens.views.remotes.files.compact": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to compact (flatten) unnecessary file nesting in the _Remotes_ view. Only applies when `#gitlens.views.remotes.files.layout#` is set to `tree` or `auto`",
      "scope": 3,
      "order": 32,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.views.remotes.avatars": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to show avatar images instead of commit (or status) icons in the _Remotes_ view",
      "scope": 3,
      "order": 40,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.views.remotes.reveal": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to reveal remotes in the _Remotes_ view, otherwise they revealed in the _Repositories_ view",
      "scope": 3,
      "order": 50,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.views.stashes.files.layout": {
      "type": "string",
      "default": "auto",
      "enum": [
        "auto",
        "list",
        "tree"
      ],
      "enumDescriptions": [
        "Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.stashes.files.threshold#` value and the number of files at each nesting level",
        "Displays files as a list",
        "Displays files as a tree"
      ],
      "markdownDescription": "Specifies how the _Stashes_ view will display files",
      "scope": 3,
      "order": 10,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": "auto",
      "restricted": false
    },
    "gitlens.views.stashes.files.threshold": {
      "type": "number",
      "default": 5,
      "markdownDescription": "Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Stashes_ view. Only applies when `#gitlens.views.stashes.files.layout#` is set to `auto`",
      "scope": 3,
      "order": 11,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": 5,
      "restricted": false
    },
    "gitlens.views.stashes.files.compact": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to compact (flatten) unnecessary file nesting in the _Stashes_ view. Only applies when `#gitlens.views.stashes.files.layout#` is set to `tree` or `auto`",
      "scope": 3,
      "order": 12,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.views.stashes.reveal": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to reveal stashes in the _Stashes_ view, otherwise they revealed in the _Repositories_ view",
      "scope": 3,
      "order": 20,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.views.tags.branches.layout": {
      "type": "string",
      "default": "tree",
      "enum": [
        "list",
        "tree"
      ],
      "enumDescriptions": [
        "Displays tags as a list",
        "Displays tags as a tree when tags names contain slashes `/`"
      ],
      "markdownDescription": "Specifies how the _Tags_ view will display tags",
      "scope": 3,
      "order": 10,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": "tree",
      "restricted": false
    },
    "gitlens.sortTagsBy": {
      "type": "string",
      "default": "date:desc",
      "enum": [
        "date:desc",
        "date:asc",
        "name:asc",
        "name:desc"
      ],
      "enumDescriptions": [
        "Sorts tags by date in descending order",
        "Sorts tags by date in ascending order",
        "Sorts tags by name in ascending order",
        "Sorts tags by name in descending order"
      ],
      "markdownDescription": "Specifies how tags are sorted in quick pick menus and views",
      "scope": 3,
      "order": 20,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": "date:desc",
      "restricted": false
    },
    "gitlens.views.tags.files.layout": {
      "type": "string",
      "default": "auto",
      "enum": [
        "auto",
        "list",
        "tree"
      ],
      "enumDescriptions": [
        "Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.tags.files.threshold#` value and the number of files at each nesting level",
        "Displays files as a list",
        "Displays files as a tree"
      ],
      "markdownDescription": "Specifies how the _Tags_ view will display files",
      "scope": 3,
      "order": 30,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": "auto",
      "restricted": false
    },
    "gitlens.views.tags.files.threshold": {
      "type": "number",
      "default": 5,
      "markdownDescription": "Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Tags_ view. Only applies when `#gitlens.views.tags.files.layout#` is set to `auto`",
      "scope": 3,
      "order": 31,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": 5,
      "restricted": false
    },
    "gitlens.views.tags.files.compact": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to compact (flatten) unnecessary file nesting in the _Tags_ view. Only applies when `#gitlens.views.tags.files.layout#` is set to `tree` or `auto`",
      "scope": 3,
      "order": 32,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.views.tags.avatars": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to show avatar images instead of commit (or status) icons in the _Tags_ view",
      "scope": 3,
      "order": 40,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.views.tags.reveal": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to reveal tags in the _Tags_ view, otherwise they revealed in the _Repositories_ view",
      "scope": 3,
      "order": 50,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.worktrees.promptForLocation": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to prompt for a path when creating new worktrees",
      "scope": 4,
      "order": 10,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.worktrees.defaultLocation": {
      "type": "string",
      "default": null,
      "markdownDescription": "Specifies the default path in which new worktrees will be created",
      "scope": 4,
      "order": 11,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "gitlens.views.worktrees.showBranchComparison": {
      "type": [
        "boolean",
        "string"
      ],
      "enum": [
        false,
        "branch"
      ],
      "enumDescriptions": [
        "Hides the branch comparison",
        "Compares the worktree branch with a user-selected reference"
      ],
      "default": "working",
      "markdownDescription": "Specifies whether to show a comparison of the worktree branch with a user-selected reference (branch, tag. etc) in the _Worktrees_ view",
      "scope": 3,
      "order": 20,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": "working",
      "restricted": false
    },
    "gitlens.views.worktrees.pullRequests.enabled": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to query for pull requests associated with the worktree branch and commits in the _Worktrees_ view. Requires a connection to a supported remote service (e.g. GitHub)",
      "scope": 3,
      "order": 30,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.views.worktrees.pullRequests.showForBranches": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to show pull requests (if any) associated with the worktree branch in the _Worktrees_ view. Requires a connection to a supported remote service (e.g. GitHub)",
      "scope": 3,
      "order": 31,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.views.worktrees.pullRequests.showForCommits": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to show pull requests (if any) associated with commits in the _Worktrees_ view. Requires a connection to a supported remote service (e.g. GitHub)",
      "scope": 3,
      "order": 32,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.views.worktrees.files.layout": {
      "type": "string",
      "default": "auto",
      "enum": [
        "auto",
        "list",
        "tree"
      ],
      "enumDescriptions": [
        "Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.worktrees.files.threshold#` value and the number of files at each nesting level",
        "Displays files as a list",
        "Displays files as a tree"
      ],
      "markdownDescription": "Specifies how the _Worktrees_ view will display files",
      "scope": 3,
      "order": 40,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": "auto",
      "restricted": false
    },
    "gitlens.views.worktrees.files.threshold": {
      "type": "number",
      "default": 5,
      "markdownDescription": "Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Worktrees_ view. Only applies when `#gitlens.views.worktrees.files.layout#` is set to `auto`",
      "scope": 3,
      "order": 41,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": 5,
      "restricted": false
    },
    "gitlens.views.worktrees.files.compact": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to compact (flatten) unnecessary file nesting in the _Worktrees_ view. Only applies when `#gitlens.views.worktrees.files.layout#` is set to `tree` or `auto`",
      "scope": 3,
      "order": 42,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.views.worktrees.avatars": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to show avatar images instead of commit (or status) icons in the _Worktrees_ view",
      "scope": 3,
      "order": 50,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.views.worktrees.reveal": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to reveal worktrees in the _Worktrees_ view, otherwise they revealed in the _Repositories_ view",
      "scope": 3,
      "order": 60,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.views.contributors.showAllBranches": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Specifies whether to show commits from all branches in the _Contributors_ view",
      "scope": 3,
      "order": 10,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "gitlens.views.contributors.showStatistics": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Specifies whether to show contributor statistics in the _Contributors_ view. This can take a while to compute depending on the repository size",
      "scope": 3,
      "order": 20,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "gitlens.views.contributors.pullRequests.enabled": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to query for pull requests associated with branches and commits in the _Contributors_ view. Requires a connection to a supported remote service (e.g. GitHub)",
      "scope": 3,
      "order": 30,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.views.contributors.pullRequests.showForCommits": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to show pull requests (if any) associated with commits in the _Contributors_ view. Requires a connection to a supported remote service (e.g. GitHub)",
      "scope": 3,
      "order": 31,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.sortContributorsBy": {
      "type": "string",
      "default": "count:desc",
      "enum": [
        "count:desc",
        "count:asc",
        "date:desc",
        "date:asc",
        "name:asc",
        "name:desc"
      ],
      "enumDescriptions": [
        "Sorts contributors by commit count in descending order",
        "Sorts contributors by commit count in ascending order",
        "Sorts contributors by the most recent commit date in descending order",
        "Sorts contributors by the most recent commit date in ascending order",
        "Sorts contributors by name in ascending order",
        "Sorts contributors by name in descending order"
      ],
      "markdownDescription": "Specifies how contributors are sorted in quick pick menus and views",
      "scope": 3,
      "order": 40,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": "count:desc",
      "restricted": false
    },
    "gitlens.views.contributors.files.layout": {
      "type": "string",
      "default": "auto",
      "enum": [
        "auto",
        "list",
        "tree"
      ],
      "enumDescriptions": [
        "Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.contributors.files.threshold#` value and the number of files at each nesting level",
        "Displays files as a list",
        "Displays files as a tree"
      ],
      "markdownDescription": "Specifies how the _Contributors_ view will display files",
      "scope": 3,
      "order": 50,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": "auto",
      "restricted": false
    },
    "gitlens.views.contributors.files.threshold": {
      "type": "number",
      "default": 5,
      "markdownDescription": "Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Contributors_ view. Only applies when `#gitlens.views.contributors.files.layout#` is set to `auto`",
      "scope": 3,
      "order": 51,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": 5,
      "restricted": false
    },
    "gitlens.views.contributors.files.compact": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to compact (flatten) unnecessary file nesting in the _Contributors_ view. Only applies when `#gitlens.views.contributors.files.layout#` is set to `tree` or `auto`",
      "scope": 3,
      "order": 52,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.views.contributors.avatars": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to show avatar images instead of commit (or status) icons in the _Contributors_ view",
      "scope": 3,
      "order": 60,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.views.contributors.reveal": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to reveal contributors in the _Contributors_ view, otherwise they revealed in the _Repositories_ view",
      "scope": 3,
      "order": 20,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.views.searchAndCompare.pullRequests.enabled": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to query for pull requests associated with commits in the _Search & Compare_ view. Requires a connection to a supported remote service (e.g. GitHub)",
      "scope": 3,
      "order": 10,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.views.searchAndCompare.pullRequests.showForCommits": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to show pull requests (if any) associated with commits in the _Search & Compare_ view. Requires a connection to a supported remote service (e.g. GitHub)",
      "scope": 3,
      "order": 11,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.views.searchAndCompare.files.layout": {
      "type": "string",
      "default": "auto",
      "enum": [
        "auto",
        "list",
        "tree"
      ],
      "enumDescriptions": [
        "Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.searchAndCompare.files.threshold#` value and the number of files at each nesting level",
        "Displays files as a list",
        "Displays files as a tree"
      ],
      "markdownDescription": "Specifies how the _Search & Compare_ view will display files",
      "scope": 3,
      "order": 20,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": "auto",
      "restricted": false
    },
    "gitlens.views.searchAndCompare.files.threshold": {
      "type": "number",
      "default": 5,
      "markdownDescription": "Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Search & Compare_ view. Only applies when `#gitlens.views.searchAndCompare.files.layout#` is set to `auto`",
      "scope": 3,
      "order": 21,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": 5,
      "restricted": false
    },
    "gitlens.views.searchAndCompare.files.compact": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to compact (flatten) unnecessary file nesting in the _Search & Compare_ view. Only applies when `#gitlens.views.searchAndCompare.files.layout#` is set to `tree` or `auto`",
      "scope": 3,
      "order": 22,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.views.searchAndCompare.avatars": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to show avatar images instead of commit (or status) icons in the _Search & Compare_ view",
      "scope": 3,
      "order": 30,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.blame.toggleMode": {
      "type": "string",
      "default": "file",
      "enum": [
        "file",
        "window"
      ],
      "enumDescriptions": [
        "Toggles each file individually",
        "Toggles the window, i.e. all files at once"
      ],
      "markdownDescription": "Specifies how the gutter blame annotations will be toggled",
      "scope": 3,
      "order": 10,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": "file",
      "restricted": false
    },
    "gitlens.blame.format": {
      "type": "string",
      "default": "${message|50?} ${agoOrDate|14-}",
      "markdownDescription": "Specifies the format of the gutter blame annotations. See [_Commit Tokens_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens) in the GitLens docs. Date formatting is controlled by the `#gitlens.blame.dateFormat#` setting",
      "scope": 3,
      "order": 20,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": "${message|50?} ${agoOrDate|14-}",
      "restricted": false
    },
    "gitlens.blame.heatmap.enabled": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to provide a heatmap indicator in the gutter blame annotations",
      "scope": 3,
      "order": 30,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.blame.heatmap.location": {
      "type": "string",
      "default": "right",
      "enum": [
        "left",
        "right"
      ],
      "enumDescriptions": [
        "Adds a heatmap indicator on the left edge of the gutter blame annotations",
        "Adds a heatmap indicator on the right edge of the gutter blame annotations"
      ],
      "markdownDescription": "Specifies where the heatmap indicators will be shown in the gutter blame annotations",
      "scope": 3,
      "order": 31,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": "right",
      "restricted": false
    },
    "gitlens.blame.avatars": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to show avatar images in the gutter blame annotations",
      "scope": 3,
      "order": 40,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.blame.compact": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to compact (deduplicate) matching adjacent gutter blame annotations",
      "scope": 3,
      "order": 50,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.blame.highlight.enabled": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to highlight lines associated with the current line",
      "scope": 3,
      "order": 60,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.blame.highlight.locations": {
      "type": "array",
      "default": [
        "gutter",
        "line",
        "overview"
      ],
      "items": {
        "type": "string",
        "enum": [
          "gutter",
          "line",
          "overview"
        ],
        "enumDescriptions": [
          "Adds a gutter indicator",
          "Adds a full-line highlight background color",
          "Adds a decoration to the overview ruler (scroll bar)"
        ]
      },
      "minItems": 1,
      "maxItems": 3,
      "uniqueItems": true,
      "markdownDescription": "Specifies where the associated line highlights will be shown",
      "scope": 3,
      "order": 61,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": [
        "gutter",
        "line",
        "overview"
      ],
      "restricted": false
    },
    "gitlens.blame.separateLines": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether gutter blame annotations will be separated by a small gap",
      "scope": 3,
      "order": 70,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.blame.dateFormat": {
      "type": [
        "string",
        "null"
      ],
      "default": null,
      "markdownDescription": "Specifies how to format absolute dates (e.g. using the `${date}` token) in gutter blame annotations. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats",
      "scope": 3,
      "order": 80,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "gitlens.changes.toggleMode": {
      "type": "string",
      "default": "file",
      "enum": [
        "file",
        "window"
      ],
      "enumDescriptions": [
        "Toggles each file individually",
        "Toggles the window, i.e. all files at once"
      ],
      "markdownDescription": "Specifies how the gutter changes annotations will be toggled",
      "scope": 3,
      "order": 10,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": "file",
      "restricted": false
    },
    "gitlens.changes.locations": {
      "type": "array",
      "default": [
        "gutter",
        "overview"
      ],
      "items": {
        "type": "string",
        "enum": [
          "gutter",
          "overview"
        ],
        "enumDescriptions": [
          "Adds a gutter indicator",
          "Adds a decoration to the overview ruler (scroll bar)"
        ]
      },
      "minItems": 1,
      "maxItems": 2,
      "uniqueItems": true,
      "markdownDescription": "Specifies where the indicators of the gutter changes annotations will be shown",
      "scope": 3,
      "order": 20,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": [
        "gutter",
        "overview"
      ],
      "restricted": false
    },
    "gitlens.heatmap.toggleMode": {
      "type": "string",
      "default": "file",
      "enum": [
        "file",
        "window"
      ],
      "enumDescriptions": [
        "Toggles each file individually",
        "Toggles the window, i.e. all files at once"
      ],
      "markdownDescription": "Specifies how the gutter heatmap annotations will be toggled",
      "scope": 3,
      "order": 10,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": "file",
      "restricted": false
    },
    "gitlens.heatmap.locations": {
      "type": "array",
      "default": [
        "gutter",
        "overview"
      ],
      "items": {
        "type": "string",
        "enum": [
          "gutter",
          "overview"
        ],
        "enumDescriptions": [
          "Adds a gutter indicator",
          "Adds a decoration to the overview ruler (scroll bar)"
        ]
      },
      "minItems": 1,
      "maxItems": 2,
      "uniqueItems": true,
      "markdownDescription": "Specifies where the indicators of the gutter heatmap annotations will be shown",
      "scope": 3,
      "order": 20,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": [
        "gutter",
        "overview"
      ],
      "restricted": false
    },
    "gitlens.heatmap.ageThreshold": {
      "type": "number",
      "default": 90,
      "markdownDescription": "Specifies the age of the most recent change (in days) after which the gutter heatmap annotations will be cold rather than hot (i.e. will use `#gitlens.heatmap.coldColor#` instead of `#gitlens.heatmap.hotColor#`)",
      "scope": 3,
      "order": 30,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": 90,
      "restricted": false
    },
    "gitlens.heatmap.coldColor": {
      "type": "string",
      "default": "#0a60f6",
      "markdownDescription": "Specifies the base color of the gutter heatmap annotations when the most recent change is older (cold) than the `#gitlens.heatmap.ageThreshold#` value",
      "scope": 3,
      "order": 40,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": "#0a60f6",
      "restricted": false
    },
    "gitlens.heatmap.hotColor": {
      "type": "string",
      "default": "#f66a0a",
      "markdownDescription": "Specifies the base color of the gutter heatmap annotations when the most recent change is newer (hot) than the `#gitlens.heatmap.ageThreshold#` value",
      "scope": 3,
      "order": 50,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": "#f66a0a",
      "restricted": false
    },
    "gitlens.gitCommands.sortBy": {
      "type": "string",
      "default": "usage",
      "enum": [
        "name",
        "usage"
      ],
      "enumDescriptions": [
        "Sorts commands by name",
        "Sorts commands by last used date"
      ],
      "markdownDescription": "Specifies how Git commands are sorted in the _Git Command Palette_",
      "scope": 3,
      "order": 10,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": "usage",
      "restricted": false
    },
    "gitlens.gitCommands.skipConfirmations": {
      "type": "array",
      "default": [
        "fetch:command",
        "stash-push:command",
        "switch:command"
      ],
      "items": {
        "type": "string",
        "enum": [
          "branch-create:command",
          "branch-create:menu",
          "co-authors:command",
          "co-authors:menu",
          "fetch:command",
          "fetch:menu",
          "pull:command",
          "pull:menu",
          "push:command",
          "push:menu",
          "stash-apply:command",
          "stash-apply:menu",
          "stash-pop:command",
          "stash-pop:menu",
          "stash-push:command",
          "stash-push:menu",
          "switch:command",
          "switch:menu",
          "tag-create:command",
          "tag-create:menu"
        ],
        "enumDescriptions": [
          "Skips branch create confirmations when run from a command, e.g. a view action",
          "Skips branch create confirmations when run from the Git Command Palette",
          "Skips co-author confirmations when run from a command, e.g. a view action",
          "Skips co-author confirmations when run from the Git Command Palette",
          "Skips fetch confirmations when run from a command, e.g. a view action",
          "Skips fetch confirmations when run from the Git Command Palette",
          "Skips pull confirmations when run from a command, e.g. a view action",
          "Skips pull confirmations when run from the Git Command Palette",
          "Skips push confirmations when run from a command, e.g. a view action",
          "Skips push confirmations when run from the Git Command Palette",
          "Skips stash apply confirmations when run from a command, e.g. a view action",
          "Skips stash apply confirmations when run from the Git Command Palette",
          "Skips stash pop confirmations when run from a command, e.g. a view action",
          "Skips stash pop confirmations when run from the Git Command Palette",
          "Skips stash push confirmations when run from a command, e.g. a view action",
          "Skips stash push confirmations when run from the Git Command Palette",
          "Skips switch confirmations when run from a command, e.g. a view action",
          "Skips switch confirmations when run from the Git Command Palette",
          "Skips tag create confirmations when run from a command, e.g. a view action",
          "Skips tag create confirmations when run from the Git Command Palette"
        ]
      },
      "minItems": 0,
      "maxItems": 14,
      "uniqueItems": true,
      "markdownDescription": "Specifies which (and when) Git commands will skip the confirmation step, using the format: `git-command-name:(menu|command)`",
      "scope": 3,
      "order": 20,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": [
        "fetch:command",
        "stash-push:command",
        "switch:command"
      ],
      "restricted": false
    },
    "gitlens.gitCommands.closeOnFocusOut": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to dismiss the _Git Command Palette_ when focus is lost (if not, press `ESC` to dismiss)",
      "scope": 3,
      "order": 30,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.gitCommands.search.showResultsInSideBar": {
      "type": [
        "boolean",
        "null"
      ],
      "default": null,
      "markdownDescription": "Specifies whether to show the commit search results directly in the quick pick menu, in the Side Bar, or will be based on the context",
      "scope": 3,
      "order": 40,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "gitlens.gitCommands.search.matchAll": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Specifies whether to match all or any commit message search patterns",
      "scope": 3,
      "order": 50,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "gitlens.gitCommands.search.matchCase": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Specifies whether to match commit search patterns with or without regard to casing",
      "scope": 3,
      "order": 51,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "gitlens.gitCommands.search.matchRegex": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to match commit search patterns using regular expressions",
      "scope": 3,
      "order": 52,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.gitCommands.search.showResultsInView": {
      "deprecationMessage": "Deprecated. This setting has been renamed to gitlens.gitCommands.search.showResultsInSideBar",
      "markdownDeprecationMessage": "Deprecated. This setting has been renamed to `#gitlens.gitCommands.search.showResultsInSideBar#`",
      "scope": 3,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "default": null,
      "restricted": false
    },
    "gitlens.autolinks": {
      "type": [
        "array",
        "null"
      ],
      "default": null,
      "items": {
        "type": "object",
        "required": [
          "prefix",
          "url"
        ],
        "properties": {
          "prefix": {
            "type": "string",
            "description": "Specifies the short prefix to use to generate autolinks for the external resource"
          },
          "title": {
            "type": [
              "string",
              "null"
            ],
            "default": null,
            "description": "Specifies an optional title for the generated autolink. Use `<num>` as the variable for the reference number"
          },
          "url": {
            "type": "string",
            "description": "Specifies the url of the external resource you want to link to. Use `<num>` as the variable for the reference number"
          },
          "alphanumeric": {
            "type": "boolean",
            "description": "Specifies whether alphanumeric characters should be allowed in `<num>`",
            "default": false
          },
          "ignoreCase": {
            "type": "boolean",
            "description": "Specifies whether case should be ignored when matching the prefix",
            "default": false
          }
        },
        "additionalProperties": false
      },
      "uniqueItems": true,
      "markdownDescription": "Specifies autolinks to external resources in commit messages. Use `<num>` as the variable for the reference number",
      "scope": 3,
      "order": 10,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "gitlens.integrations.enabled": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to enable rich integrations with any supported remote services",
      "scope": 3,
      "order": 20,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.remotes": {
      "type": [
        "array",
        "null"
      ],
      "default": null,
      "items": {
        "type": "object",
        "required": [
          "type"
        ],
        "oneOf": [
          {
            "required": [
              "domain"
            ]
          },
          {
            "required": [
              "regex"
            ]
          }
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "Custom",
              "AzureDevOps",
              "Bitbucket",
              "BitbucketServer",
              "Gerrit",
              "Gitea",
              "GitHub",
              "GitLab"
            ],
            "description": "Specifies the type of the custom remote service"
          },
          "domain": {
            "type": "string",
            "description": "Specifies the domain name used to match this custom configuration to a Git remote"
          },
          "regex": {
            "type": "string",
            "description": "Specifies a regular expression used to match this custom configuration to a Git remote and capture the \"domain name\" and \"path\""
          },
          "name": {
            "type": "string",
            "description": "Specifies an optional friendly name for the custom remote service"
          },
          "protocol": {
            "type": "string",
            "default": "https",
            "description": "Specifies an optional url protocol for the custom remote service"
          },
          "urls": {
            "type": "object",
            "required": [
              "repository",
              "branches",
              "branch",
              "commit",
              "file",
              "fileInCommit",
              "fileInBranch",
              "fileLine",
              "fileRange"
            ],
            "properties": {
              "repository": {
                "type": "string",
                "markdownDescription": "Specifies the format of a repository url for the custom remote service\n\nAvailable tokens\\\n`${repo}` &mdash; repository path"
              },
              "branches": {
                "type": "string",
                "markdownDescription": "Specifies the format of a branches url for the custom remote service\n\nAvailable tokens\\\n`${repo}` &mdash; repository path\\\n`${branch}` &mdash; branch"
              },
              "branch": {
                "type": "string",
                "markdownDescription": "Specifies the format of a branch url for the custom remote service\n\nAvailable tokens\\\n`${repo}` &mdash; repository path\\\n`${branch}` &mdash; branch"
              },
              "commit": {
                "type": "string",
                "markdownDescription": "Specifies the format of a commit url for the custom remote service\n\nAvailable tokens\\\n`${repo}` &mdash; repository path\\\n`${id}` &mdash; commit SHA"
              },
              "file": {
                "type": "string",
                "markdownDescription": "Specifies the format of a file url for the custom remote service\n\nAvailable tokens\\\n`${repo}` &mdash; repository path\\\n`${file}` &mdash; file name\\\n`${line}` &mdash; formatted line information"
              },
              "fileInBranch": {
                "type": "string",
                "markdownDescription": "Specifies the format of a branch file url for the custom remote service\n\nAvailable tokens\\\n`${repo}` &mdash; repository path\\\n`${file}` &mdash; file name\\\n`${branch}` &mdash; branch\\\n`${line}` &mdash; formatted line information"
              },
              "fileInCommit": {
                "type": "string",
                "markdownDescription": "Specifies the format of a commit file url for the custom remote service\n\nAvailable tokens\\\n`${repo}` &mdash; repository path\\\n`${file}` &mdash; file name\\\n`${id}` &mdash; commit SHA\\\n`${line}` &mdash; formatted line information"
              },
              "fileLine": {
                "type": "string",
                "markdownDescription": "Specifies the format of a line in a file url for the custom remote service\n\nAvailable tokens\\\n`${line}` &mdash; line"
              },
              "fileRange": {
                "type": "string",
                "markdownDescription": "Specifies the format of a range in a file url for the custom remote service\n\nAvailable tokens\\\n`${start}` &mdash; starting line\\\n`${end}` &mdash; ending line"
              }
            },
            "additionalProperties": false
          }
        }
      },
      "uniqueItems": true,
      "markdownDescription": "Specifies custom remote services to be matched with Git remotes to detect custom domains for built-in remote services or provide support for custom remote services",
      "scope": 4,
      "order": 30,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "gitlens.partners": {
      "type": [
        "object",
        "null"
      ],
      "additionalProperties": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "default": true,
            "description": "Specifies whether the partner integration should be shown"
          }
        },
        "additionalProperties": true,
        "description": "Specifies the configuration of a partner integration"
      },
      "default": null,
      "description": "Specifies the configuration of a partner integration",
      "scope": 3,
      "order": 40,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "gitlens.liveshare.allowGuestAccess": {
      "type": "boolean",
      "default": true,
      "description": "Specifies whether to allow guest access to GitLens features when using Visual Studio Live Share",
      "scope": 3,
      "order": 50,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.terminalLinks.enabled": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to enable terminal links &mdash; autolinks in the integrated terminal to quickly jump to more details for commits, branches, tags, and more",
      "scope": 3,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.visualHistory.queryLimit": {
      "type": "number",
      "default": 20,
      "markdownDescription": "Specifies the limit on the how many commits can be queried for statistics in the Visual File History, because of rate limits. Only applies to virtual workspaces.",
      "scope": 3,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": 20,
      "restricted": false
    },
    "gitlens.defaultDateStyle": {
      "type": "string",
      "default": "relative",
      "enum": [
        "relative",
        "absolute"
      ],
      "enumDescriptions": [
        "e.g. 1 day ago",
        "e.g. July 25th, 2018 7:18pm"
      ],
      "markdownDescription": "Specifies how dates will be displayed by default",
      "scope": 3,
      "order": 10,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": "relative",
      "restricted": false
    },
    "gitlens.defaultDateFormat": {
      "type": [
        "string",
        "null"
      ],
      "default": null,
      "markdownDescription": "Specifies how absolute dates will be formatted by default. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats",
      "scope": 3,
      "order": 20,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "gitlens.defaultDateLocale": {
      "type": [
        "string",
        "null"
      ],
      "default": null,
      "markdownDescription": "Specifies the locale, a [BCP 47 language tag](https://en.wikipedia.org/wiki/IETF_language_tag#List_of_major_primary_language_subtags), to use for date formatting, defaults to the VS Code locale. Use `system` to follow the current system locale, or choose a specific locale, e.g `en-US` — US English, `en-GB` — British English, `de-DE` — German, 'ja-JP = Japanese, etc.",
      "scope": 3,
      "order": 21,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "gitlens.defaultDateShortFormat": {
      "type": [
        "string",
        "null"
      ],
      "default": null,
      "markdownDescription": "Specifies how short absolute dates will be formatted by default. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats",
      "scope": 3,
      "order": 22,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "gitlens.defaultTimeFormat": {
      "type": [
        "string",
        "null"
      ],
      "default": null,
      "markdownDescription": "Specifies how times will be formatted by default. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for supported formats",
      "scope": 3,
      "order": 30,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "gitlens.defaultDateSource": {
      "type": "string",
      "default": "authored",
      "enum": [
        "authored",
        "committed"
      ],
      "enumDescriptions": [
        "Uses the date when the changes were authored (i.e. originally written)",
        "Uses the date when the changes were committed"
      ],
      "markdownDescription": "Specifies whether commit dates should use the authored or committed date",
      "scope": 3,
      "order": 40,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": "authored",
      "restricted": false
    },
    "gitlens.menus": {
      "anyOf": [
        {
          "enum": [
            false
          ]
        },
        {
          "type": "object",
          "properties": {
            "editor": {
              "anyOf": [
                {
                  "enum": [
                    false
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "blame": {
                      "type": "boolean"
                    },
                    "clipboard": {
                      "type": "boolean"
                    },
                    "compare": {
                      "type": "boolean"
                    },
                    "history": {
                      "type": "boolean"
                    },
                    "remote": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            },
            "editorGroup": {
              "anyOf": [
                {
                  "enum": [
                    false
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "blame": {
                      "type": "boolean"
                    },
                    "compare": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            },
            "editorTab": {
              "anyOf": [
                {
                  "enum": [
                    false
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "clipboard": {
                      "type": "boolean"
                    },
                    "compare": {
                      "type": "boolean"
                    },
                    "history": {
                      "type": "boolean"
                    },
                    "remote": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            },
            "explorer": {
              "anyOf": [
                {
                  "enum": [
                    false
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "clipboard": {
                      "type": "boolean"
                    },
                    "compare": {
                      "type": "boolean"
                    },
                    "history": {
                      "type": "boolean"
                    },
                    "remote": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            },
            "scm": {
              "anyOf": [
                {
                  "enum": [
                    false
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "authors": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            },
            "scmGroupInline": {
              "anyOf": [
                {
                  "enum": [
                    false
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "stash": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            },
            "scmGroup": {
              "anyOf": [
                {
                  "enum": [
                    false
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "compare": {
                      "type": "boolean"
                    },
                    "openClose": {
                      "type": "boolean"
                    },
                    "stash": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            },
            "scmItem": {
              "anyOf": [
                {
                  "enum": [
                    false
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "clipboard": {
                      "type": "boolean"
                    },
                    "compare": {
                      "type": "boolean"
                    },
                    "history": {
                      "type": "boolean"
                    },
                    "remote": {
                      "type": "boolean"
                    },
                    "stash": {
                      "type": "boolean"
                    }
                  }
                }
              ]
            }
          },
          "additionalProperties": false
        }
      ],
      "default": {
        "editor": {
          "blame": false,
          "clipboard": true,
          "compare": true,
          "history": false,
          "remote": false
        },
        "editorGroup": {
          "blame": true,
          "compare": true
        },
        "editorTab": {
          "clipboard": true,
          "compare": true,
          "history": true,
          "remote": true
        },
        "explorer": {
          "clipboard": true,
          "compare": true,
          "history": true,
          "remote": true
        },
        "scm": {
          "authors": true
        },
        "scmGroupInline": {
          "stash": true
        },
        "scmGroup": {
          "compare": true,
          "openClose": true,
          "stash": true
        },
        "scmItem": {
          "clipboard": true,
          "compare": true,
          "history": true,
          "remote": false,
          "stash": true
        }
      },
      "markdownDescription": "Specifies which commands will be added to which menus",
      "scope": 3,
      "order": 10,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": {
        "editor": {
          "blame": false,
          "clipboard": true,
          "compare": true,
          "history": false,
          "remote": false
        },
        "editorGroup": {
          "blame": true,
          "compare": true
        },
        "editorTab": {
          "clipboard": true,
          "compare": true,
          "history": true,
          "remote": true
        },
        "explorer": {
          "clipboard": true,
          "compare": true,
          "history": true,
          "remote": true
        },
        "scm": {
          "authors": true
        },
        "scmGroupInline": {
          "stash": true
        },
        "scmGroup": {
          "compare": true,
          "openClose": true,
          "stash": true
        },
        "scmItem": {
          "clipboard": true,
          "compare": true,
          "history": true,
          "remote": false,
          "stash": true
        }
      },
      "restricted": false
    },
    "gitlens.keymap": {
      "type": "string",
      "default": "chorded",
      "enum": [
        "alternate",
        "chorded",
        "none"
      ],
      "enumDescriptions": [
        "Adds an alternate set of shortcut keys that start with `Alt` (⌥ on macOS)",
        "Adds a chorded set of shortcut keys that start with `Ctrl+Alt+G` (`⌥⌘G` on macOS)",
        "No shortcut keys will be added"
      ],
      "markdownDescription": "Specifies the keymap to use for GitLens shortcut keys",
      "scope": 3,
      "order": 10,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": "chorded",
      "restricted": false
    },
    "gitlens.mode.statusBar.enabled": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to provide the active GitLens mode in the status bar",
      "scope": 3,
      "order": 10,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.mode.statusBar.alignment": {
      "type": "string",
      "default": "right",
      "enum": [
        "left",
        "right"
      ],
      "enumDescriptions": [
        "Aligns to the left",
        "Aligns to the right"
      ],
      "markdownDescription": "Specifies the active GitLens mode alignment in the status bar",
      "scope": 3,
      "order": 11,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": "right",
      "restricted": false
    },
    "gitlens.mode.active": {
      "type": "string",
      "markdownDescription": "Specifies the active GitLens mode, if any",
      "scope": 3,
      "order": 20,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "default": "",
      "restricted": false
    },
    "gitlens.modes": {
      "type": "object",
      "properties": {
        "zen": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Specifies the friendly name of this user-defined mode"
            },
            "statusBarItemName": {
              "type": "string",
              "description": "Specifies the name shown in the status bar when this user-defined mode is active"
            },
            "description": {
              "type": "string",
              "description": "Specifies the description of this user-defined mode"
            },
            "codeLens": {
              "type": "boolean",
              "description": "Specifies whether to show any Git CodeLens when this user-defined mode is active"
            },
            "currentLine": {
              "type": "boolean",
              "description": "Specifies whether to show a blame annotation for the current line when this user-defined mode is active"
            },
            "hovers": {
              "type": "boolean",
              "description": "Specifies whether to show any hovers when this user-defined mode is active"
            },
            "statusBar": {
              "type": "boolean",
              "description": "Specifies whether to show blame information in the status bar when this user-defined mode is active"
            }
          }
        },
        "review": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Specifies the friendly name of this user-defined mode"
            },
            "statusBarItemName": {
              "type": "string",
              "description": "Specifies the name shown in the status bar when this user-defined mode is active"
            },
            "description": {
              "type": "string",
              "description": "Specifies the description of this user-defined mode"
            },
            "codeLens": {
              "type": "boolean",
              "description": "Specifies whether to show any Git CodeLens when this user-defined mode is active"
            },
            "currentLine": {
              "type": "boolean",
              "description": "Specifies whether to show a blame annotation for the current line when this user-defined mode is active"
            },
            "hovers": {
              "type": "boolean",
              "description": "Specifies whether to show any hovers when this user-defined mode is active"
            },
            "statusBar": {
              "type": "boolean",
              "description": "Specifies whether to show blame information in the status bar when this user-defined mode is active"
            }
          }
        }
      },
      "additionalProperties": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Specifies the friendly name of this user-defined mode"
          },
          "statusBarItemName": {
            "type": "string",
            "description": "Specifies the name shown in the status bar when this user-defined mode is active"
          },
          "description": {
            "type": "string",
            "description": "Specifies the description of this user-defined mode"
          },
          "annotations": {
            "type": "string",
            "enum": [
              "blame",
              "changes",
              "heatmap"
            ],
            "enumDescriptions": [
              "Shows the gutter blame annotations",
              "Shows the gutter changes annotations",
              "Shows the gutter heatmap annotations"
            ],
            "description": "Specifies which (if any) file annotations will be shown when this user-defined mode is active"
          },
          "codeLens": {
            "type": "boolean",
            "description": "Specifies whether to show any Git CodeLens when this user-defined mode is active"
          },
          "currentLine": {
            "type": "boolean",
            "description": "Specifies whether to show a blame annotation for the current line when this user-defined mode is active"
          },
          "hovers": {
            "type": "boolean",
            "description": "Specifies whether to show any hovers when this user-defined mode is active"
          },
          "statusBar": {
            "type": "boolean",
            "description": "Specifies whether to show blame information in the status bar when this user-defined mode is active"
          }
        }
      },
      "default": {
        "zen": {
          "name": "Zen",
          "statusBarItemName": "Zen",
          "description": "for a zen-like experience, disables many visual features",
          "codeLens": false,
          "currentLine": false,
          "hovers": false,
          "statusBar": false
        },
        "review": {
          "name": "Review",
          "statusBarItemName": "Reviewing",
          "description": "for reviewing code, enables many visual features",
          "codeLens": true,
          "currentLine": true,
          "hovers": true
        }
      },
      "markdownDescription": "Specifies the user-defined GitLens modes",
      "scope": 3,
      "order": 30,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": {
        "zen": {
          "name": "Zen",
          "statusBarItemName": "Zen",
          "description": "for a zen-like experience, disables many visual features",
          "codeLens": false,
          "currentLine": false,
          "hovers": false,
          "statusBar": false
        },
        "review": {
          "name": "Review",
          "statusBarItemName": "Reviewing",
          "description": "for reviewing code, enables many visual features",
          "codeLens": true,
          "currentLine": true,
          "hovers": true
        }
      },
      "restricted": false
    },
    "gitlens.detectNestedRepositories": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Specifies whether to attempt to detect nested repositories when opening files",
      "scope": 4,
      "order": 0,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "gitlens.advanced.messages": {
      "type": "object",
      "default": {
        "suppressCommitHasNoPreviousCommitWarning": false,
        "suppressCommitNotFoundWarning": false,
        "suppressCreatePullRequestPrompt": false,
        "suppressDebugLoggingWarning": false,
        "suppressFileNotUnderSourceControlWarning": false,
        "suppressGitDisabledWarning": false,
        "suppressGitMissingWarning": false,
        "suppressGitVersionWarning": false,
        "suppressLineUncommittedWarning": false,
        "suppressNoRepositoryWarning": false,
        "suppressRebaseSwitchToTextWarning": false
      },
      "properties": {
        "suppressCommitHasNoPreviousCommitWarning": {
          "type": "boolean",
          "default": false,
          "description": "Commit Has No Previous Commit Warning"
        },
        "suppressCommitNotFoundWarning": {
          "type": "boolean",
          "default": false,
          "description": "Commit Not Found Warning"
        },
        "suppressCreatePullRequestPrompt": {
          "type": "boolean",
          "default": false,
          "description": "Create Pull Request Prompt"
        },
        "suppressDebugLoggingWarning": {
          "type": "boolean",
          "default": false,
          "description": "Debug Logging Warning"
        },
        "suppressFileNotUnderSourceControlWarning": {
          "type": "boolean",
          "default": false,
          "description": "File Not Under Source Control Warning"
        },
        "suppressGitDisabledWarning": {
          "type": "boolean",
          "default": false,
          "description": "Git Disabled Warning"
        },
        "suppressGitMissingWarning": {
          "type": "boolean",
          "default": false,
          "description": "Git Missing Warning"
        },
        "suppressGitVersionWarning": {
          "type": "boolean",
          "default": false,
          "description": "Git Version Warning"
        },
        "suppressLineUncommittedWarning": {
          "type": "boolean",
          "default": false,
          "description": "Line Uncommitted Warning"
        },
        "suppressNoRepositoryWarning": {
          "type": "boolean",
          "default": false,
          "description": "No Repository Warning"
        },
        "suppressRebaseSwitchToTextWarning": {
          "type": "boolean",
          "default": false,
          "description": "Rebase Switch To Text Warning"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "Specifies which messages should be suppressed",
      "scope": 3,
      "order": 1,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": {
        "suppressCommitHasNoPreviousCommitWarning": false,
        "suppressCommitNotFoundWarning": false,
        "suppressCreatePullRequestPrompt": false,
        "suppressDebugLoggingWarning": false,
        "suppressFileNotUnderSourceControlWarning": false,
        "suppressGitDisabledWarning": false,
        "suppressGitMissingWarning": false,
        "suppressGitVersionWarning": false,
        "suppressLineUncommittedWarning": false,
        "suppressNoRepositoryWarning": false,
        "suppressRebaseSwitchToTextWarning": false
      },
      "restricted": false
    },
    "gitlens.advanced.repositorySearchDepth": {
      "type": "number",
      "default": 1,
      "markdownDescription": "Specifies how many folders deep to search for repositories",
      "scope": 4,
      "order": 10,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": 1,
      "restricted": false
    },
    "gitlens.advanced.abbreviatedShaLength": {
      "type": "number",
      "default": 7,
      "markdownDescription": "Specifies the length of abbreviated commit SHAs",
      "scope": 3,
      "order": 20,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": 7,
      "restricted": false
    },
    "gitlens.advanced.abbreviateShaOnCopy": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Specifies whether to copy full or abbreviated commit SHAs to the clipboard. Abbreviates to the length of `#gitlens.advanced.abbreviatedShaLength#`.",
      "scope": 3,
      "order": 21,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "gitlens.advanced.commitOrdering": {
      "type": [
        "string",
        "null"
      ],
      "default": null,
      "enum": [
        null,
        "date",
        "author-date",
        "topo"
      ],
      "enumDescriptions": [
        "Shows commits in reverse chronological order",
        "Shows commits in reverse chronological order of the commit timestamp",
        "Shows commits in reverse chronological order of the author timestamp",
        "Shows commits in reverse chronological order of the commit timestamp, but avoids intermixing multiple lines of history"
      ],
      "markdownDescription": "Specifies the order by which commits will be shown. If unspecified, commits will be shown in reverse chronological order",
      "scope": 3,
      "order": 30,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "gitlens.blame.ignoreWhitespace": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Specifies whether to ignore whitespace when comparing revisions during blame operations",
      "scope": 4,
      "order": 40,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "gitlens.advanced.blame.customArguments": {
      "type": [
        "array",
        "null"
      ],
      "default": null,
      "items": {
        "type": "string"
      },
      "markdownDescription": "Specifies additional arguments to pass to the `git blame` command",
      "scope": 4,
      "order": 41,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "gitlens.advanced.blame.delayAfterEdit": {
      "type": "number",
      "default": 5000,
      "markdownDescription": "Specifies the time (in milliseconds) to wait before re-blaming an unsaved document after an edit. Use 0 to specify an infinite wait",
      "scope": 3,
      "order": 42,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": 5000,
      "restricted": false
    },
    "gitlens.advanced.blame.sizeThresholdAfterEdit": {
      "type": "number",
      "default": 5000,
      "markdownDescription": "Specifies the maximum document size (in lines) allowed to be re-blamed after an edit while still unsaved. Use 0 to specify no maximum",
      "scope": 3,
      "order": 43,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": 5000,
      "restricted": false
    },
    "gitlens.advanced.similarityThreshold": {
      "type": [
        "number",
        "null"
      ],
      "default": null,
      "markdownDescription": "Specifies the amount (percent) of similarity a deleted and added file pair must have to be considered a rename",
      "scope": 3,
      "order": 50,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "gitlens.advanced.externalDiffTool": {
      "type": [
        "string",
        "null"
      ],
      "default": null,
      "markdownDescription": "Specifies an optional external diff tool to use when comparing files. Must be a configured [Git difftool](https://git-scm.com/docs/git-config#Documentation/git-config.txt-difftool).",
      "scope": 3,
      "order": 60,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "gitlens.advanced.externalDirectoryDiffTool": {
      "type": [
        "string",
        "null"
      ],
      "default": null,
      "markdownDescription": "Specifies an optional external diff tool to use when comparing directories. Must be a configured [Git difftool](https://git-scm.com/docs/git-config#Documentation/git-config.txt-difftool).",
      "scope": 3,
      "order": 61,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "gitlens.advanced.quickPick.closeOnFocusOut": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to dismiss quick pick menus when focus is lost (if not, press `ESC` to dismiss)",
      "scope": 3,
      "order": 70,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.advanced.maxListItems": {
      "type": "number",
      "default": 200,
      "markdownDescription": "Specifies the maximum number of items to show in a list. Use 0 to specify no maximum",
      "scope": 3,
      "order": 80,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": 200,
      "restricted": false
    },
    "gitlens.advanced.maxSearchItems": {
      "type": "number",
      "default": 200,
      "markdownDescription": "Specifies the maximum number of items to show in a search. Use 0 to specify no maximum",
      "scope": 3,
      "order": 81,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": 200,
      "restricted": false
    },
    "gitlens.advanced.caching.enabled": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether git output will be cached — changing the default is not recommended",
      "scope": 3,
      "order": 90,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.debug": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Specifies debug mode",
      "scope": 3,
      "order": 100,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "gitlens.advanced.useSymmetricDifferenceNotation": {
      "deprecationMessage": "Deprecated. This setting is no longer used",
      "markdownDescription": "Deprecated. This setting is no longer used",
      "scope": 3,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "default": null,
      "restricted": false
    },
    "gitlens.showWelcomeOnInstall": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to show the Welcome (Quick Setup) experience on first install",
      "scope": 3,
      "order": 10,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.showWhatsNewAfterUpgrades": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to show the What's New notification after upgrading to new feature releases",
      "scope": 3,
      "order": 20,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.outputLevel": {
      "type": "string",
      "default": "errors",
      "enum": [
        "silent",
        "errors",
        "verbose",
        "debug"
      ],
      "enumDescriptions": [
        "Logs nothing",
        "Logs only errors",
        "Logs all errors, warnings, and messages",
        "Logs all errors, warnings, and messages with extra context useful for debugging"
      ],
      "markdownDescription": "Specifies how much (if any) output will be sent to the GitLens output channel",
      "scope": 3,
      "order": 30,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": "errors",
      "restricted": false
    },
    "gitlens.defaultGravatarsStyle": {
      "type": "string",
      "default": "robohash",
      "enum": [
        "identicon",
        "mp",
        "monsterid",
        "retro",
        "robohash",
        "wavatar"
      ],
      "enumDescriptions": [
        "A geometric pattern",
        "A simple, cartoon-style silhouetted outline of a person (does not vary by email hash)",
        "A monster with different colors, faces, etc",
        "8-bit arcade-style pixelated faces",
        "A robot with different colors, faces, etc",
        "A face with differing features and backgrounds"
      ],
      "markdownDescription": "Specifies the style of the gravatar default (fallback) images",
      "scope": 3,
      "order": 40,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": "robohash",
      "restricted": false
    },
    "gitlens.fileAnnotations.command": {
      "type": [
        "string",
        "null"
      ],
      "default": null,
      "enum": [
        null,
        "blame",
        "heatmap",
        "changes"
      ],
      "enumDescriptions": [
        "Shows a menu to choose which file annotations to toggle",
        "Toggles gutter blame annotations",
        "Toggles gutter heatmap annotations",
        "Toggles gutter changes annotations"
      ],
      "markdownDescription": "Specifies whether the file annotations button in the editor title shows a menu or immediately toggles the specified file annotations",
      "scope": 3,
      "order": 50,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "gitlens.plusFeatures.enabled": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to enable GitLens+ features",
      "scope": 3,
      "order": 60,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.virtualRepositories.enabled": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Specifies whether to enable virtual repositories support",
      "scope": 3,
      "order": 70,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gitlens.insiders": {
      "deprecationMessage": "Deprecated. Use the Insiders edition of GitLens instead",
      "markdownDeprecationMessage": "Deprecated. Use the [Insiders edition](https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens-insiders) of GitLens instead",
      "scope": 3,
      "source": {
        "id": "eamodio.gitlens",
        "displayName": "GitLens — Git supercharged"
      },
      "default": null,
      "restricted": false
    },
    "npm.runInTerminal": {
      "type": "boolean",
      "default": true,
      "description": "Run npm commands in a terminal, otherwise shows the output in the output panel",
      "scope": 3,
      "source": {
        "id": "eg2.vscode-npm-script",
        "displayName": "npm"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "npm.includeDirectories": {
      "type": "array",
      "scope": 4,
      "default": [],
      "description": "Look for 'package.json' files in these directories",
      "source": {
        "id": "eg2.vscode-npm-script",
        "displayName": "npm"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "npm.useRootDirectory": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Look for 'package.json' in the root directory of the workspace",
      "source": {
        "id": "eg2.vscode-npm-script",
        "displayName": "npm"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "npm.bin": {
      "scope": 2,
      "type": "string",
      "default": "npm",
      "description": "npm bin name",
      "source": {
        "id": "eg2.vscode-npm-script",
        "displayName": "npm"
      },
      "defaultDefaultValue": "npm",
      "restricted": false
    },
    "npm.validate.enable": {
      "type": "boolean",
      "scope": 4,
      "default": true,
      "description": "Validate installed modules",
      "source": {
        "id": "eg2.vscode-npm-script",
        "displayName": "npm"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "npm.enableTouchbar": {
      "type": "boolean",
      "scope": 4,
      "default": false,
      "description": "Enable npm commands in the macOS touchbar.",
      "source": {
        "id": "eg2.vscode-npm-script",
        "displayName": "npm"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "prettier.disableLanguages": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "deprecationMessage": "This feature is no longer supported. Instead, configure VS Code [default formatters](https://github.com/prettier/prettier-vscode#default-formatter) or use .prettierignore.",
      "markdownDescription": "A list of languages IDs to disable this extension on",
      "scope": 3,
      "source": {
        "id": "esbenp.prettier-vscode",
        "displayName": "Prettier - Code formatter"
      },
      "default": [],
      "restricted": false
    },
    "prettier.documentSelectors": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "markdownDescription": "A list of [glob patterns](https://code.visualstudio.com/api/references/vscode-api#GlobPattern) to register Prettier formatter",
      "scope": 3,
      "source": {
        "id": "esbenp.prettier-vscode",
        "displayName": "Prettier - Code formatter"
      },
      "default": [],
      "restricted": true
    },
    "prettier.enable": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Controls whether prettier is enabled or not.",
      "scope": 4,
      "source": {
        "id": "esbenp.prettier-vscode",
        "displayName": "Prettier - Code formatter"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "prettier.requireConfig": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Require a prettier configuration file to format. See [documentation for valid configuration files](https://prettier.io/docs/en/configuration.html).\n\n> _Note, untitled files will still be formatted using the VS Code prettier settings even when this setting is set._",
      "scope": 4,
      "source": {
        "id": "esbenp.prettier-vscode",
        "displayName": "Prettier - Code formatter"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "prettier.resolveGlobalModules": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "When enabled, this extension will attempt to use global npm or yarn modules if local modules cannot be resolved.\n> _This setting can have a negative performance impact, particularly on Windows when you have attached network drives. Only enable this if you must use global modules._",
      "scope": 4,
      "source": {
        "id": "esbenp.prettier-vscode",
        "displayName": "Prettier - Code formatter"
      },
      "defaultDefaultValue": false,
      "restricted": true
    },
    "prettier.withNodeModules": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "If true, this extension will process files in node_modules",
      "scope": 4,
      "source": {
        "id": "esbenp.prettier-vscode",
        "displayName": "Prettier - Code formatter"
      },
      "defaultDefaultValue": false,
      "restricted": true
    },
    "prettier.packageManager": {
      "scope": 4,
      "type": "string",
      "enum": [
        "npm",
        "yarn",
        "pnpm"
      ],
      "default": "npm",
      "deprecationMessage": "Package manager is now automatically detected by VS Code. This setting is no longer used.",
      "markdownDescription": "The package manager you use to install node modules.",
      "source": {
        "id": "esbenp.prettier-vscode",
        "displayName": "Prettier - Code formatter"
      },
      "defaultDefaultValue": "npm",
      "restricted": false
    },
    "prettier.useEditorConfig": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Whether or not to take `.editorconfig` into account when parsing configuration. See the [prettier.resolveConfig](https://prettier.io/docs/en/api.html) docs for details.",
      "scope": 4,
      "source": {
        "id": "esbenp.prettier-vscode",
        "displayName": "Prettier - Code formatter"
      },
      "defaultDefaultValue": true,
      "restricted": true
    },
    "prettier.ignorePath": {
      "type": "string",
      "default": ".prettierignore",
      "markdownDescription": "Path to a .prettierignore file",
      "scope": 4,
      "source": {
        "id": "esbenp.prettier-vscode",
        "displayName": "Prettier - Code formatter"
      },
      "defaultDefaultValue": ".prettierignore",
      "restricted": true
    },
    "prettier.prettierPath": {
      "type": "string",
      "markdownDescription": "Path to the prettier module",
      "scope": 4,
      "source": {
        "id": "esbenp.prettier-vscode",
        "displayName": "Prettier - Code formatter"
      },
      "default": "",
      "restricted": true
    },
    "prettier.configPath": {
      "type": "string",
      "markdownDescription": "Path to the prettier configuration file",
      "scope": 4,
      "source": {
        "id": "esbenp.prettier-vscode",
        "displayName": "Prettier - Code formatter"
      },
      "default": "",
      "restricted": true
    },
    "prettier.enableDebugLogs": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Enable debug logs for troubleshooting.",
      "scope": 4,
      "source": {
        "id": "esbenp.prettier-vscode",
        "displayName": "Prettier - Code formatter"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "prettier.printWidth": {
      "type": "integer",
      "default": 80,
      "markdownDescription": "Fit code within this line limit",
      "scope": 4,
      "source": {
        "id": "esbenp.prettier-vscode",
        "displayName": "Prettier - Code formatter"
      },
      "defaultDefaultValue": 80,
      "restricted": false
    },
    "prettier.tabWidth": {
      "type": "integer",
      "default": 2,
      "markdownDescription": "Number of spaces it should use per tab",
      "scope": 4,
      "source": {
        "id": "esbenp.prettier-vscode",
        "displayName": "Prettier - Code formatter"
      },
      "defaultDefaultValue": 2,
      "restricted": false
    },
    "prettier.singleQuote": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "If true, will use single instead of double quotes",
      "scope": 4,
      "source": {
        "id": "esbenp.prettier-vscode",
        "displayName": "Prettier - Code formatter"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "prettier.trailingComma": {
      "type": "string",
      "enum": [
        "none",
        "es5",
        "all"
      ],
      "default": "es5",
      "markdownDescription": "Controls the printing of trailing commas wherever possible. Valid options:\n- `none` - No trailing commas\n- `es5` - Trailing commas where valid in ES5 (objects, arrays, etc)\n- `all` - Trailing commas wherever possible (function arguments)",
      "scope": 4,
      "source": {
        "id": "esbenp.prettier-vscode",
        "displayName": "Prettier - Code formatter"
      },
      "defaultDefaultValue": "es5",
      "restricted": false
    },
    "prettier.bracketSpacing": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Controls the printing of spaces inside object literals",
      "scope": 4,
      "source": {
        "id": "esbenp.prettier-vscode",
        "displayName": "Prettier - Code formatter"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "prettier.jsxBracketSameLine": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "If true, puts the `>` of a multi-line jsx element at the end of the last line instead of being alone on the next line",
      "scope": 4,
      "source": {
        "id": "esbenp.prettier-vscode",
        "displayName": "Prettier - Code formatter"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "prettier.semi": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Whether to add a semicolon at the end of every line",
      "scope": 4,
      "source": {
        "id": "esbenp.prettier-vscode",
        "displayName": "Prettier - Code formatter"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "prettier.requirePragma": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Prettier can restrict itself to only format files that contain a special comment, called a pragma, at the top of the file. This is very useful when gradually transitioning large, unformatted codebases to prettier.",
      "scope": 4,
      "source": {
        "id": "esbenp.prettier-vscode",
        "displayName": "Prettier - Code formatter"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "prettier.insertPragma": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Prettier can insert a special @format marker at the top of files specifying that the file has been formatted with prettier. This works well when used in tandem with the `--require-pragma` option. If there is already a docblock at the top of the file then this option will add a newline to it with the @format marker.",
      "scope": 4,
      "source": {
        "id": "esbenp.prettier-vscode",
        "displayName": "Prettier - Code formatter"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "prettier.useTabs": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Indent lines with tabs",
      "scope": 4,
      "source": {
        "id": "esbenp.prettier-vscode",
        "displayName": "Prettier - Code formatter"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "prettier.proseWrap": {
      "type": "string",
      "enum": [
        "preserve",
        "always",
        "never"
      ],
      "default": "preserve",
      "markdownDescription": "(Markdown) wrap prose over multiple lines",
      "scope": 4,
      "source": {
        "id": "esbenp.prettier-vscode",
        "displayName": "Prettier - Code formatter"
      },
      "defaultDefaultValue": "preserve",
      "restricted": false
    },
    "prettier.arrowParens": {
      "type": "string",
      "enum": [
        "avoid",
        "always"
      ],
      "default": "always",
      "markdownDescription": "Include parentheses around a sole arrow function parameter",
      "scope": 4,
      "source": {
        "id": "esbenp.prettier-vscode",
        "displayName": "Prettier - Code formatter"
      },
      "defaultDefaultValue": "always",
      "restricted": false
    },
    "prettier.jsxSingleQuote": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Use single quotes instead of double quotes in JSX",
      "scope": 4,
      "source": {
        "id": "esbenp.prettier-vscode",
        "displayName": "Prettier - Code formatter"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "prettier.htmlWhitespaceSensitivity": {
      "type": "string",
      "enum": [
        "css",
        "strict",
        "ignore"
      ],
      "default": "css",
      "markdownDescription": "Specify the global whitespace sensitivity for HTML files.\n Valid options:\n- `css` - Respect the default value of CSS display property.\n- `strict` - Whitespaces are considered sensitive.\n- `ignore` - Whitespaces are considered insensitive.",
      "scope": 4,
      "source": {
        "id": "esbenp.prettier-vscode",
        "displayName": "Prettier - Code formatter"
      },
      "defaultDefaultValue": "css",
      "restricted": false
    },
    "prettier.vueIndentScriptAndStyle": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Whether or not to indent the code inside `<script>` and `<style>` tags in Vue files. Some people (like the creator of Vue) don’t indent to save an indentation level, but this might break code folding in your editor.",
      "scope": 4,
      "source": {
        "id": "esbenp.prettier-vscode",
        "displayName": "Prettier - Code formatter"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "prettier.endOfLine": {
      "type": "string",
      "enum": [
        "auto",
        "lf",
        "crlf",
        "cr"
      ],
      "default": "lf",
      "markdownDescription": "Specify the end of line used by prettier",
      "scope": 4,
      "source": {
        "id": "esbenp.prettier-vscode",
        "displayName": "Prettier - Code formatter"
      },
      "defaultDefaultValue": "lf",
      "restricted": false
    },
    "prettier.quoteProps": {
      "type": "string",
      "enum": [
        "as-needed",
        "consistent",
        "preserve"
      ],
      "default": "as-needed",
      "markdownDescription": "Change when properties in objects are quoted",
      "scope": 4,
      "source": {
        "id": "esbenp.prettier-vscode",
        "displayName": "Prettier - Code formatter"
      },
      "defaultDefaultValue": "as-needed",
      "restricted": false
    },
    "prettier.embeddedLanguageFormatting": {
      "type": "string",
      "enum": [
        "auto",
        "off"
      ],
      "default": "auto",
      "markdownDescription": "Control whether Prettier formats quoted code embedded in the file.",
      "scope": 4,
      "source": {
        "id": "esbenp.prettier-vscode",
        "displayName": "Prettier - Code formatter"
      },
      "defaultDefaultValue": "auto",
      "restricted": false
    },
    "auto-rename-tag.activationOnLanguage": {
      "type": "array",
      "default": [
        "*"
      ],
      "description": "Set the languages that the extension will be activated.  e.g. [\"html\",\"xml\",\"php\"] By default, it is [\"*\"] and will be activated for all languages.",
      "scope": 4,
      "source": {
        "id": "formulahendry.auto-rename-tag",
        "displayName": "Auto Rename Tag"
      },
      "defaultDefaultValue": [
        "*"
      ],
      "restricted": false
    },
    "shellformat.path": {
      "type": [
        "string",
        "null"
      ],
      "default": null,
      "description": "the shfmt fullpath  example[ mac,linux ] /usr/local/bin/shfmt  [windows] C:/bin/shfmt.exe   download fron https://github.com/mvdan/sh/releases",
      "scope": 3,
      "source": {
        "id": "foxundermoon.shell-format",
        "displayName": "shell-format"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "shellformat.flag": {
      "type": [
        "string",
        "null"
      ],
      "default": null,
      "description": "shfmt -h  to see detail usage , example: -p -bn -ci",
      "scope": 3,
      "source": {
        "id": "foxundermoon.shell-format",
        "displayName": "shell-format"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "shellformat.effectLanguages": {
      "type": "array",
      "default": [
        "shellscript",
        "dockerfile",
        "dotenv",
        "hosts",
        "jvmoptions",
        "ignore",
        "gitignore",
        "properties",
        "spring-boot-properties",
        "azcli",
        "bats"
      ],
      "description": "the trigger effect  on the language",
      "scope": 3,
      "source": {
        "id": "foxundermoon.shell-format",
        "displayName": "shell-format"
      },
      "defaultDefaultValue": [
        "shellscript",
        "dockerfile",
        "dotenv",
        "hosts",
        "jvmoptions",
        "ignore",
        "gitignore",
        "properties",
        "spring-boot-properties",
        "azcli",
        "bats"
      ],
      "restricted": false
    },
    "shellformat.useEditorConfig": {
      "type": "boolean",
      "default": false,
      "description": "Use EditorConfig for shfmt configuration",
      "scope": 3,
      "source": {
        "id": "foxundermoon.shell-format",
        "displayName": "shell-format"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "github.copilot.advanced": {
      "type": "object",
      "title": "Advanced Settings",
      "properties": {
        "secret_key": {
          "type": "string",
          "default": "",
          "description": "Secret API key"
        },
        "length": {
          "type": "integer",
          "default": 500,
          "description": "Length of code to generate in tokens"
        },
        "temperature": {
          "type": "string",
          "default": "",
          "description": "Override sampling temperature (range 0.0 - 1.0)"
        },
        "top_p": {
          "type": "number",
          "default": 1,
          "description": "Top probability mass to consider"
        },
        "stops": {
          "type": "object",
          "default": {
            "*": [
              "\n\n\n"
            ],
            "python": [
              "\ndef ",
              "\nclass ",
              "\nif ",
              "\n\n#"
            ]
          },
          "description": "Configure per-language stop sequences"
        },
        "indentationMode": {
          "type": "object",
          "default": {
            "python": false,
            "javascript": false,
            "javascriptreact": false,
            "jsx": false,
            "typescript": false,
            "typescriptreact": false,
            "go": false,
            "ruby": false,
            "*": true
          },
          "markdownDescription": "Enable or disable indentation block termination for specified [languages](https://code.visualstudio.com/docs/languages/identifiers). Set to 'client', 'server' or false to disable."
        },
        "inlineSuggestCount": {
          "type": "integer",
          "default": 3,
          "description": "Number of inline suggestions to fetch"
        },
        "listCount": {
          "type": "integer",
          "default": 10,
          "description": "Number of solutions to list in Open GitHub Copilot"
        },
        "debug.showScores": {
          "type": "boolean",
          "default": false,
          "description": "Show scores in sorted solutions"
        },
        "debug.overrideEngine": {
          "type": "string",
          "default": "",
          "description": "Override engine name"
        },
        "debug.overrideProxyUrl": {
          "type": "string",
          "default": "",
          "description": "Override GitHub authentication proxy full URL"
        },
        "debug.testOverrideProxyUrl": {
          "type": "string",
          "default": "",
          "description": "Override GitHub authentication proxy URL when running tests"
        },
        "debug.filterLogCategories": {
          "type": "array",
          "default": [],
          "description": "Show only log categories listed in this setting. If an array is empty, show all loggers"
        }
      },
      "scope": 3,
      "source": {
        "id": "GitHub.copilot",
        "displayName": "GitHub Copilot"
      },
      "default": {},
      "restricted": false
    },
    "github.copilot.enable": {
      "type": "object",
      "default": {
        "*": true,
        "yaml": false,
        "plaintext": false,
        "markdown": false
      },
      "markdownDescription": "Enable or disable Copilot for specified [languages](https://code.visualstudio.com/docs/languages/identifiers)",
      "scope": 3,
      "source": {
        "id": "GitHub.copilot",
        "displayName": "GitHub Copilot"
      },
      "defaultDefaultValue": {
        "*": true,
        "yaml": false,
        "plaintext": false,
        "markdown": false
      },
      "restricted": false
    },
    "github.copilot.inlineSuggest.enable": {
      "type": "boolean",
      "default": true,
      "description": "Show inline suggestions",
      "scope": 3,
      "source": {
        "id": "GitHub.copilot",
        "displayName": "GitHub Copilot"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "githubPullRequests.pullRequestTitle": {
      "deprecationMessage": "The pull request title now uses the same defaults as GitHub, and can be edited before create.",
      "type": "string",
      "enum": [
        "commit",
        "branch",
        "custom",
        "ask"
      ],
      "enumDescriptions": [
        "Use the latest commit message",
        "Use the branch name",
        "Specify a custom title",
        "Ask which of the above methods to use"
      ],
      "default": "ask",
      "description": "The title used when creating pull requests.",
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": "ask",
      "restricted": false
    },
    "githubPullRequests.pullRequestDescription": {
      "deprecationMessage": "The pull request description now uses the same defaults as GitHub, and can be edited before create.",
      "type": "string",
      "enum": [
        "template",
        "commit",
        "custom",
        "ask"
      ],
      "enumDescriptions": [
        "Use a pull request template, or use the commit description if no templates were found",
        "Use the latest commit message",
        "Specify a custom description",
        "Ask which of the above methods to use"
      ],
      "default": "template",
      "description": "The description used when creating pull requests.",
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": "template",
      "restricted": false
    },
    "githubPullRequests.logLevel": {
      "type": "string",
      "enum": [
        "info",
        "debug",
        "off"
      ],
      "default": "info",
      "description": "Logging for GitHub Pull Request extension. The log is emitted to the output channel named as GitHub Pull Request.",
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": "info",
      "restricted": false
    },
    "githubPullRequests.remotes": {
      "type": "array",
      "default": [
        "origin",
        "upstream"
      ],
      "items": {
        "type": "string"
      },
      "markdownDescription": "List of remotes, by name, to fetch pull requests from.",
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": [
        "origin",
        "upstream"
      ],
      "restricted": false
    },
    "githubPullRequests.includeRemotes": {
      "type": "string",
      "enum": [
        "default",
        "all"
      ],
      "default": "default",
      "deprecationMessage": "The setting `githubPullRequests.includeRemotes` has been deprecated. Use `githubPullRequests.remotes` to configure what remotes are shown.",
      "description": "By default we only support remotes created by users. If you want to see pull requests from remotes this extension created for pull requests, change this setting to 'all'.",
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": "default",
      "restricted": false
    },
    "githubPullRequests.queries": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "description": "The label to display for the query in the Pull Requests tree"
          },
          "query": {
            "type": "string",
            "description": "The query used for searching pull requests."
          }
        }
      },
      "scope": 4,
      "markdownDescription": "Specifies what queries should be used in the GitHub Pull Requests tree. Each query object has a `label` that will be shown in the tree and a search `query` using [GitHub search syntax](https://help.github.com/en/articles/understanding-the-search-syntax). The variable `${user}` can be used to specify the logged in user within a search. By default these queries define the categories \"Waiting For My Review\", \"Assigned To Me\" and \"Created By Me\". If you want to preserve these, make sure they are still in the array when you modify the setting.",
      "default": [
        {
          "label": "Waiting For My Review",
          "query": "is:open review-requested:${user}"
        },
        {
          "label": "Assigned To Me",
          "query": "is:open assignee:${user}"
        },
        {
          "label": "Created By Me",
          "query": "is:open author:${user}"
        }
      ],
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": [
        {
          "label": "Waiting For My Review",
          "query": "is:open review-requested:${user}"
        },
        {
          "label": "Assigned To Me",
          "query": "is:open assignee:${user}"
        },
        {
          "label": "Created By Me",
          "query": "is:open author:${user}"
        }
      ],
      "restricted": false
    },
    "githubPullRequests.defaultMergeMethod": {
      "type": "string",
      "enum": [
        "merge",
        "squash",
        "rebase"
      ],
      "default": "merge",
      "description": "The method to use when merging pull requests.",
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": "merge",
      "restricted": false
    },
    "githubPullRequests.showInSCM": {
      "type": "boolean",
      "default": false,
      "deprecationMessage": "This setting is deprecated. Views can now be dragged to any location.",
      "description": "When true, show GitHub Pull Requests within the SCM viewlet. Otherwise show a separate view container for them.",
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "githubPullRequests.fileListLayout": {
      "type": "string",
      "enum": [
        "flat",
        "tree"
      ],
      "default": "tree",
      "description": "The layout to use when displaying changed files list.",
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": "tree",
      "restricted": false
    },
    "githubPullRequests.defaultDeletionMethod.selectLocalBranch": {
      "type": "boolean",
      "default": true,
      "description": "When true, the option to delete the local branch will be selected by default when deleting a branch from a pull request.",
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "githubPullRequests.defaultDeletionMethod.selectRemote": {
      "type": "boolean",
      "default": true,
      "description": "When true, the option to delete the remote will be selected by default when deleting a branch from a pull request.",
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "githubPullRequests.terminalLinksHandler": {
      "type": "string",
      "enum": [
        "github",
        "vscode",
        "ask"
      ],
      "enumDescriptions": [
        "Create the pull request on GitHub",
        "Create the pull request in VS Code",
        "Ask which method to use"
      ],
      "default": "ask",
      "description": "Default handler for terminal links.",
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": "ask",
      "restricted": false
    },
    "githubPullRequests.commentExpandState": {
      "type": "string",
      "enum": [
        "expandUnresolved",
        "collapseAll"
      ],
      "enumDescriptions": [
        "All unresolved comments will be expanded.",
        "All comments will be collapsed"
      ],
      "default": "expandUnresolved",
      "description": "Controls whether comments are expanded when a document with comments is opened.",
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": "expandUnresolved",
      "restricted": false
    },
    "githubPullRequests.useReviewMode": {
      "type": "object",
      "description": "Choose which pull request states will use review mode. \"Open\" pull requests will always use review mode.",
      "additionalProperties": false,
      "properties": {
        "merged": {
          "type": "boolean",
          "description": "Use review mode for merged pull requests.",
          "default": true
        },
        "closed": {
          "type": "boolean",
          "description": "Use review mode for closed pull requests. Merged pull requests are not considered \"closed\".",
          "default": false
        }
      },
      "required": [
        "merged",
        "closed"
      ],
      "default": {
        "merged": true,
        "closed": false
      },
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": {
        "merged": true,
        "closed": false
      },
      "restricted": false
    },
    "githubIssues.ignoreMilestones": {
      "type": "array",
      "default": [],
      "description": "An array of milestones titles to never show issues from.",
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "githubIssues.createIssueTriggers": {
      "type": "array",
      "items": {
        "type": "string",
        "description": "String that enables the 'Create issue from comment' code action. Should not contain whitespace."
      },
      "default": [
        "TODO",
        "todo",
        "BUG",
        "FIXME",
        "ISSUE",
        "HACK"
      ],
      "description": "Strings that will cause the 'Create issue from comment' code action to show.",
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": [
        "TODO",
        "todo",
        "BUG",
        "FIXME",
        "ISSUE",
        "HACK"
      ],
      "restricted": false
    },
    "githubIssues.createInsertFormat": {
      "type": "string",
      "enum": [
        "number",
        "url"
      ],
      "default": "number",
      "description": "Controls whether an issue number (ex. #1234) or a full url (ex. https://github.com/owner/name/issues/1234) is inserted when the Create Issue code action is run.",
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": "number",
      "restricted": false
    },
    "githubIssues.issueCompletions.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether completion suggestions are shown for issues.",
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "githubIssues.userCompletions.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether completion suggestions are shown for users.",
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "githubIssues.ignoreCompletionTrigger": {
      "type": "array",
      "items": {
        "type": "string",
        "description": "Language that issue completions should not trigger on '#'."
      },
      "default": [
        "python",
        "makefile"
      ],
      "description": "Languages that the '#' character should not be used to trigger issue completion suggestions.",
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": [
        "python",
        "makefile"
      ],
      "restricted": false
    },
    "githubIssues.ignoreUserCompletionTrigger": {
      "type": "array",
      "items": {
        "type": "string",
        "description": "Language that user completions should not trigger on '@'."
      },
      "default": [
        "python"
      ],
      "description": "Languages that the '@' character should not be used to trigger user completion suggestions.",
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": [
        "python"
      ],
      "restricted": false
    },
    "githubIssues.issueBranchTitle": {
      "type": "string",
      "default": "${user}/issue${issueNumber}",
      "markdownDescription": "Advanced settings for the name of the branch that is created when you start working on an issue. \n- `${user}` will be replace with the currently logged in username \n- `${issueNumber}` will be replaced with the current issue number \n- `${sanitizedIssueTitle}` will be replaced with the issue title, with all spaces and unsupported characters removed",
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": "${user}/issue${issueNumber}",
      "restricted": false
    },
    "githubIssues.useBranchForIssues": {
      "type": "string",
      "enum": [
        "on",
        "off",
        "prompt"
      ],
      "enumDescriptions": [
        "A branch will always be checked out when you start working on an issue. If the branch doesn't exist, it will be created.",
        "A branch will not be created when you start working on an issue. If you have worked on an issue before and a branch was created for it, that same branch will be checked out.",
        "A prompt will show for setting the name of the branch that will be created and checked out."
      ],
      "default": "on",
      "description": "Determines whether a branch should be checked out when working on an issue. To configure the name of the branch, set `githubIssues.issueBranchTitle`.",
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": "on",
      "restricted": false
    },
    "githubIssues.issueCompletionFormatScm": {
      "type": "string",
      "default": "${issueTitle} ${issueNumberLabel}",
      "markdownDescription": "Sets the format of issue completions in the SCM inputbox. \n- `${user}` will be replace with the currently logged in username \n- `${issueNumber}` will be replaced with the current issue number \n- `${issueNumberLabel}` will be replaced with a label formatted as #number or owner/repository#number, depending on whether the issue is in the current repository",
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": "${issueTitle} ${issueNumberLabel}",
      "restricted": false
    },
    "githubIssues.workingIssueFormatScm": {
      "type": "string",
      "default": "${issueTitle} \nFixes ${issueNumberLabel}",
      "markdownDescription": "Sets the format of the commit message that is set in the SCM inputbox when you **Start Working on an Issue**. Defaults to `${issueTitle} \nFixes #${issueNumber}`",
      "editPresentation": "multilineText",
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": "${issueTitle} \nFixes ${issueNumberLabel}",
      "restricted": false
    },
    "githubIssues.queries": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "description": "The label to display for the query in the Issues tree."
          },
          "query": {
            "type": "string",
            "markdownDescription": "The search query using [GitHub search syntax](https://help.github.com/en/articles/understanding-the-search-syntax) with variables. The variable `${user}` can be used to specify the logged in user within a search. `${owner}` and `${repository}` can be used to specify the repository by using `repo:${owner}/${repository}`."
          }
        }
      },
      "scope": 4,
      "markdownDescription": "Specifies what queries should be used in the GitHub issues tree using [GitHub search syntax](https://help.github.com/en/articles/understanding-the-search-syntax) with variables. The first query listed will be expanded in the Issues view. The \"default\" query includes issues assigned to you by Milestone. If you want to preserve these, make sure they are still in the array when you modify the setting.",
      "default": [
        {
          "label": "My Issues",
          "query": "default"
        },
        {
          "label": "Created Issues",
          "query": "author:${user} state:open repo:${owner}/${repository} sort:created-desc"
        },
        {
          "label": "Recent Issues",
          "query": "state:open repo:${owner}/${repository} sort:updated-desc"
        }
      ],
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": [
        {
          "label": "My Issues",
          "query": "default"
        },
        {
          "label": "Created Issues",
          "query": "author:${user} state:open repo:${owner}/${repository} sort:created-desc"
        },
        {
          "label": "Recent Issues",
          "query": "state:open repo:${owner}/${repository} sort:updated-desc"
        }
      ],
      "restricted": false
    },
    "githubIssues.assignWhenWorking": {
      "type": "boolean",
      "default": true,
      "description": "Assigns the issue you're working on to you. Only applies when the issue you're working on is in a repo you currently have open.",
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "githubPullRequests.focusedMode": {
      "type": "boolean",
      "description": "Whether to enter focused mode when a pull request is checked out. This hides the issues and pull requests tree views.",
      "default": true,
      "scope": 3,
      "source": {
        "id": "GitHub.vscode-pull-request-github",
        "displayName": "GitHub Pull Requests and Issues"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "go.buildOnSave": {
      "type": "string",
      "enum": [
        "package",
        "workspace",
        "off"
      ],
      "default": "package",
      "description": "Compiles code on file save using 'go build' or 'go test -c'. Options are 'workspace', 'package', or 'off'.  Not applicable when using the language server's diagnostics. See 'go.languageServerExperimentalFeatures.diagnostics' setting.",
      "scope": 4,
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": "package",
      "restricted": false
    },
    "go.buildFlags": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": [],
      "description": "Flags to `go build`/`go test` used during build-on-save or running tests. (e.g. [\"-ldflags='-s'\"]) This is propagated to the language server if `gopls.build.buildFlags` is not specified.",
      "scope": 4,
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "go.buildTags": {
      "type": "string",
      "default": "",
      "description": "The Go build tags to use for all commands, that support a `-tags '...'` argument. When running tests, go.testTags will be used instead if it was set. This is propagated to the language server if `gopls.build.buildFlags` is not specified.",
      "scope": 4,
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": "",
      "restricted": false
    },
    "go.testTags": {
      "type": [
        "string",
        "null"
      ],
      "default": null,
      "description": "The Go build tags to use for when running tests. If null, then buildTags will be used.",
      "scope": 4,
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "go.disableConcurrentTests": {
      "type": "boolean",
      "default": false,
      "description": "If true, tests will not run concurrently. When a new test run is started, the previous will be cancelled.",
      "scope": 4,
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "go.installDependenciesWhenBuilding": {
      "type": "boolean",
      "default": false,
      "description": "If true, then `-i` flag will be passed to `go build` everytime the code is compiled. Since Go 1.10, setting this may be unnecessary unless you are in GOPATH mode and do not use the language server.",
      "scope": 4,
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "go.lintOnSave": {
      "type": "string",
      "enum": [
        "file",
        "package",
        "workspace",
        "off"
      ],
      "default": "package",
      "description": "Lints code on file save using the configured Lint tool. Options are 'file', 'package', 'workspace' or 'off'.",
      "scope": 4,
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": "package",
      "restricted": false
    },
    "go.lintTool": {
      "type": "string",
      "default": "staticcheck",
      "description": "Specifies Lint tool name.",
      "scope": 4,
      "enum": [
        "staticcheck",
        "golint",
        "golangci-lint",
        "revive"
      ],
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": "staticcheck",
      "restricted": false
    },
    "go.lintFlags": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": [],
      "description": "Flags to pass to Lint tool (e.g. [\"-min_confidence=.8\"])",
      "scope": 4,
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "go.vetOnSave": {
      "type": "string",
      "enum": [
        "package",
        "workspace",
        "off"
      ],
      "default": "package",
      "description": "Vets code on file save using 'go tool vet'. Not applicable when using the language server's diagnostics. See 'go.languageServerExperimentalFeatures.diagnostics' setting.",
      "scope": 4,
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": "package",
      "restricted": false
    },
    "go.vetFlags": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": [],
      "description": "Flags to pass to `go tool vet` (e.g. [\"-all\", \"-shadow\"])",
      "scope": 4,
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "go.formatTool": {
      "type": "string",
      "default": "default",
      "description": "Not applicable when using the language server. Choosing 'goimports', 'goreturns', or 'gofumports' will add missing imports and remove unused imports.",
      "scope": 4,
      "enum": [
        "default",
        "gofmt",
        "goimports",
        "goformat",
        "gofumpt",
        "gofumports"
      ],
      "enumDescriptions": [
        "If the language server is enabled, format via the language server, which already supports gofmt, goimports, goreturns, and gofumpt. Otherwise, goimports.",
        "Formats the file according to the standard Go style.",
        "Organizes imports and formats the file with gofmt.",
        "Configurable gofmt, see https://github.com/mbenkmann/goformat.",
        "Stricter version of gofmt, see https://github.com/mvdan/gofumpt.",
        "Applies gofumpt formatting and organizes imports."
      ],
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": "default",
      "restricted": false
    },
    "go.formatFlags": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": [],
      "description": "Flags to pass to format tool (e.g. [\"-s\"]). Not applicable when using the language server.",
      "scope": 4,
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "go.inferGopath": {
      "type": "boolean",
      "default": false,
      "description": "Infer GOPATH from the workspace root. This is ignored when using Go Modules. When specified as a workspace setting, the setting is used only when the workspace is marked trusted with \"Go: Toggle Workspace Trust Flag\".",
      "scope": 4,
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": false,
      "restricted": true
    },
    "go.gopath": {
      "type": [
        "string",
        "null"
      ],
      "default": null,
      "description": "Specify GOPATH here to override the one that is set as environment variable. The inferred GOPATH from workspace root overrides this, if go.inferGopath is set to true. When specified as a workspace setting, the setting is used only when the workspace is marked trusted with \"Go: Toggle Workspace Trust Flag\".",
      "scope": 6,
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": null,
      "restricted": true
    },
    "go.toolsGopath": {
      "type": [
        "string",
        "null"
      ],
      "default": null,
      "description": "Location to install the Go tools that the extension depends on if you don't want them in your GOPATH. When specified as a workspace setting, the setting is used only when the workspace is marked trusted with \"Go: Toggle Workspace Trust Flag\".",
      "scope": 6,
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": null,
      "restricted": true
    },
    "go.goroot": {
      "type": [
        "string",
        "null"
      ],
      "default": null,
      "description": "Specifies the GOROOT to use when no environment variable is set. When specified as a workspace setting, the setting is used only when the workspace is marked trusted with \"Go: Toggle Workspace Trust Flag\".",
      "scope": 6,
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": null,
      "restricted": true
    },
    "go.testOnSave": {
      "type": "boolean",
      "default": false,
      "description": "Run 'go test' on save for current package. It is not advised to set this to `true` when you have Auto Save enabled.",
      "scope": 4,
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "go.coverOnSave": {
      "type": "boolean",
      "default": false,
      "description": "If true, runs 'go test -coverprofile' on save and shows test coverage.",
      "scope": 4,
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "go.coverOnTestPackage": {
      "type": "boolean",
      "default": true,
      "description": "If true, shows test coverage when Go: Test Package command is run.",
      "scope": 3,
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "go.coverOnSingleTest": {
      "type": "boolean",
      "default": false,
      "description": "If true, shows test coverage when Go: Test Function at cursor command is run.",
      "scope": 3,
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "go.coverOnSingleTestFile": {
      "type": "boolean",
      "default": false,
      "description": "If true, shows test coverage when Go: Test Single File command is run.",
      "scope": 3,
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "go.coverMode": {
      "type": "string",
      "enum": [
        "default",
        "set",
        "count",
        "atomic"
      ],
      "default": "default",
      "description": "When generating code coverage, the value for -covermode. 'default' is the default value chosen by the 'go test' command.",
      "scope": 4,
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": "default",
      "restricted": false
    },
    "go.coverShowCounts": {
      "type": "boolean",
      "default": false,
      "description": "When generating code coverage, should counts be shown as --374--",
      "scope": 4,
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "go.coverageOptions": {
      "type": "string",
      "enum": [
        "showCoveredCodeOnly",
        "showUncoveredCodeOnly",
        "showBothCoveredAndUncoveredCode"
      ],
      "default": "showBothCoveredAndUncoveredCode",
      "description": "Use these options to control whether only covered or only uncovered code or both should be highlighted after running test coverage",
      "scope": 4,
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": "showBothCoveredAndUncoveredCode",
      "restricted": false
    },
    "go.coverageDecorator": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "highlight",
            "gutter"
          ]
        },
        "coveredHighlightColor": {
          "type": "string",
          "description": "Color in the rgba format to use to highlight covered code."
        },
        "uncoveredHighlightColor": {
          "type": "string",
          "description": "Color in the rgba format to use to highlight uncovered code."
        },
        "coveredBorderColor": {
          "type": "string",
          "description": "Color to use for the border of covered code."
        },
        "uncoveredBorderColor": {
          "type": "string",
          "description": "Color to use for the border of uncovered code."
        },
        "coveredGutterStyle": {
          "type": "string",
          "enum": [
            "blockblue",
            "blockred",
            "blockgreen",
            "blockyellow",
            "slashred",
            "slashgreen",
            "slashblue",
            "slashyellow",
            "verticalred",
            "verticalgreen",
            "verticalblue",
            "verticalyellow"
          ],
          "description": "Gutter style to indicate covered code."
        },
        "uncoveredGutterStyle": {
          "type": "string",
          "enum": [
            "blockblue",
            "blockred",
            "blockgreen",
            "blockyellow",
            "slashred",
            "slashgreen",
            "slashblue",
            "slashyellow",
            "verticalred",
            "verticalgreen",
            "verticalblue",
            "verticalyellow"
          ],
          "description": "Gutter style to indicate covered code."
        }
      },
      "additionalProperties": false,
      "default": {
        "type": "highlight",
        "coveredHighlightColor": "rgba(64,128,128,0.5)",
        "uncoveredHighlightColor": "rgba(128,64,64,0.25)",
        "coveredBorderColor": "rgba(64,128,128,0.5)",
        "uncoveredBorderColor": "rgba(128,64,64,0.25)",
        "coveredGutterStyle": "blockblue",
        "uncoveredGutterStyle": "slashyellow"
      },
      "description": "This option lets you choose the way to display code coverage. Choose either to highlight the complete line or to show a decorator in the gutter. You can customize the colors and borders for the former and the style for the latter.",
      "scope": 4,
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": {
        "type": "highlight",
        "coveredHighlightColor": "rgba(64,128,128,0.5)",
        "uncoveredHighlightColor": "rgba(128,64,64,0.25)",
        "coveredBorderColor": "rgba(64,128,128,0.5)",
        "uncoveredBorderColor": "rgba(128,64,64,0.25)",
        "coveredGutterStyle": "blockblue",
        "uncoveredGutterStyle": "slashyellow"
      },
      "restricted": false
    },
    "go.testTimeout": {
      "type": "string",
      "default": "30s",
      "description": "Specifies the timeout for go test in ParseDuration format.",
      "scope": 4,
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": "30s",
      "restricted": false
    },
    "go.testEnvVars": {
      "type": "object",
      "default": {},
      "description": "Environment variables that will be passed to the process that runs the Go tests",
      "scope": 4,
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": {},
      "restricted": false
    },
    "go.testEnvFile": {
      "type": "string",
      "default": null,
      "description": "Absolute path to a file containing environment variables definitions. File contents should be of the form key=value.",
      "scope": 4,
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "go.testFlags": {
      "type": [
        "array",
        "null"
      ],
      "items": {
        "type": "string"
      },
      "default": null,
      "description": "Flags to pass to `go test`. If null, then buildFlags will be used. This is not propagated to the language server.",
      "scope": 4,
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "go.testExplorer.enable": {
      "type": "boolean",
      "default": true,
      "scope": 3,
      "description": "Enable the Go test explorer",
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "go.testExplorer.packageDisplayMode": {
      "type": "string",
      "enum": [
        "flat",
        "nested"
      ],
      "default": "flat",
      "description": "Present packages in the test explorer flat or nested.",
      "scope": 4,
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": "flat",
      "restricted": false
    },
    "go.testExplorer.alwaysRunBenchmarks": {
      "type": "boolean",
      "default": false,
      "description": "Run benchmarks when running all tests in a file or folder.",
      "scope": 4,
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "go.testExplorer.concatenateMessages": {
      "type": "boolean",
      "default": true,
      "description": "Concatenate all test log messages for a given location into a single message.",
      "scope": 4,
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "go.testExplorer.showDynamicSubtestsInEditor": {
      "type": "boolean",
      "default": false,
      "description": "Set the source location of dynamically discovered subtests to the location of the containing function. As a result, dynamically discovered subtests will be added to the gutter test widget of the containing function.",
      "scope": 4,
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "go.testExplorer.showOutput": {
      "type": "boolean",
      "default": true,
      "description": "Open the test output terminal when a test run is started.",
      "scope": 3,
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "go.generateTestsFlags": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": [],
      "description": "Additional command line flags to pass to `gotests` for generating tests.",
      "scope": 4,
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "go.toolsEnvVars": {
      "type": "object",
      "default": {},
      "description": "Environment variables that will be passed to the tools that run the Go tools (e.g. CGO_CFLAGS)",
      "scope": 4,
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": {},
      "restricted": true
    },
    "go.gocodeFlags": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": [
        "-builtin",
        "-ignore-case",
        "-unimported-packages"
      ],
      "description": "Additional flags to pass to gocode. Not applicable when using the language server.",
      "scope": 4,
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": [
        "-builtin",
        "-ignore-case",
        "-unimported-packages"
      ],
      "restricted": false
    },
    "go.gocodeAutoBuild": {
      "type": "boolean",
      "default": false,
      "description": "Enable gocode's autobuild feature. Not applicable when using the language server.",
      "scope": 4,
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "go.gocodePackageLookupMode": {
      "type": "string",
      "enum": [
        "go",
        "gb",
        "bzl"
      ],
      "default": "go",
      "description": "Used to determine the Go package lookup rules for completions by gocode. Only applies when using nsf/gocode. Latest versions of the Go extension uses mdempsky/gocode by default. Not applicable when using the language server.",
      "scope": 4,
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": "go",
      "restricted": false
    },
    "go.useCodeSnippetsOnFunctionSuggest": {
      "type": "boolean",
      "default": false,
      "description": "Complete functions with their parameter signature, including the variable type. Not propagated to the language server.",
      "scope": 4,
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "go.useCodeSnippetsOnFunctionSuggestWithoutType": {
      "type": "boolean",
      "default": false,
      "description": "Complete functions with their parameter signature, excluding the variable types. Use `gopls.usePlaceholders` when using the language server.",
      "scope": 4,
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "go.autocompleteUnimportedPackages": {
      "type": "boolean",
      "default": false,
      "description": "Include unimported packages in auto-complete suggestions. Not applicable when using the language server.",
      "scope": 4,
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "go.docsTool": {
      "type": "string",
      "default": "godoc",
      "description": "Pick 'godoc' or 'gogetdoc' to get documentation. Not applicable when using the language server.",
      "scope": 4,
      "enum": [
        "godoc",
        "gogetdoc",
        "guru"
      ],
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": "godoc",
      "restricted": false
    },
    "go.useLanguageServer": {
      "type": "boolean",
      "default": true,
      "description": "Use the Go language server \"gopls\" from Google for powering language features like code navigation, completion, refactoring, formatting & diagnostics.",
      "scope": 3,
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "go.languageServerFlags": {
      "type": "array",
      "default": [],
      "description": "Flags like -rpc.trace and -logfile to be used while running the language server.",
      "scope": 3,
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "go.languageServerExperimentalFeatures": {
      "type": "object",
      "properties": {
        "diagnostics": {
          "type": "boolean",
          "default": true,
          "description": "If true, the language server will provide build, vet errors and the extension will ignore the `buildOnSave`, `vetOnSave` settings."
        }
      },
      "additionalProperties": false,
      "default": {
        "diagnostics": true
      },
      "markdownDescription": "Temporary flag to enable/disable diagnostics from the language server. This setting will be deprecated soon. Please see and response to [Issue 50](https://github.com/golang/vscode-go/issues/50).",
      "scope": 3,
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": {
        "diagnostics": true
      },
      "restricted": false
    },
    "go.trace.server": {
      "type": "string",
      "enum": [
        "off",
        "messages",
        "verbose"
      ],
      "default": "off",
      "description": "Trace the communication between VS Code and the Go language server.",
      "scope": 3,
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": "off",
      "restricted": false
    },
    "go.logging.level": {
      "type": "string",
      "default": "error",
      "enum": [
        "off",
        "error",
        "info",
        "verbose"
      ],
      "description": "The logging level the extension logs at, defaults to 'error'",
      "scope": 6,
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": "error",
      "restricted": false
    },
    "go.toolsManagement.checkForUpdates": {
      "type": "string",
      "default": "proxy",
      "enum": [
        "proxy",
        "local",
        "off"
      ],
      "enumDescriptions": [
        "keeps notified of new releases by checking the Go module proxy (GOPROXY)",
        "checks only the minimum tools versions required by the extension",
        "completely disables version check (not recommended)"
      ],
      "markdownDescription": "Specify whether to prompt about new versions of Go and the Go tools (currently, only `gopls`) the extension depends on",
      "scope": 3,
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": "proxy",
      "restricted": false
    },
    "go.toolsManagement.autoUpdate": {
      "type": "boolean",
      "default": false,
      "description": "Automatically update the tools used by the extension, without prompting the user.",
      "scope": 4,
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "go.useGoProxyToCheckForToolUpdates": {
      "type": "boolean",
      "default": true,
      "description": "When enabled, the extension automatically checks the Go proxy if there are updates available for Go and the Go tools (at present, only gopls) it depends on and prompts the user accordingly",
      "markdownDeprecationMessage": "Use `go.toolsManagement.checkForUpdates` instead.",
      "scope": 3,
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": true,
      "restricted": false,
      "deprecationMessage": "Use `go.toolsManagement.checkForUpdates` instead."
    },
    "go.gotoSymbol.includeImports": {
      "type": "boolean",
      "default": false,
      "description": "If false, the import statements will be excluded while using the Go to Symbol in File feature. Not applicable when using the language server.",
      "scope": 4,
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "go.gotoSymbol.includeGoroot": {
      "type": "boolean",
      "default": false,
      "description": "If false, the standard library located at $GOROOT will be excluded while using the Go to Symbol in File feature. Not applicable when using the language server.",
      "scope": 4,
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "go.enableCodeLens": {
      "type": "object",
      "properties": {
        "references": {
          "type": "boolean",
          "default": false,
          "description": "If true, enables the references code lens. Uses guru. Recalculates when there is change to the document followed by scrolling. Unnecessary when using the language server; use the call graph feature instead."
        },
        "runtest": {
          "type": "boolean",
          "default": true,
          "description": "If true, enables code lens for running and debugging tests"
        }
      },
      "additionalProperties": false,
      "default": {
        "references": false,
        "runtest": true
      },
      "description": "Feature level setting to enable/disable code lens for references and run/debug tests",
      "scope": 4,
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": {
        "references": false,
        "runtest": true
      },
      "restricted": false
    },
    "go.addTags": {
      "type": "object",
      "properties": {
        "promptForTags": {
          "type": "boolean",
          "default": false,
          "description": "If true, Go: Add Tags command will prompt the user to provide tags, options, transform values instead of using the configured values"
        },
        "tags": {
          "type": "string",
          "default": "json",
          "description": "Comma separated tags to be used by Go: Add Tags command"
        },
        "options": {
          "type": "string",
          "default": "json=omitempty",
          "description": "Comma separated tag=options pairs to be used by Go: Add Tags command"
        },
        "transform": {
          "type": "string",
          "enum": [
            "snakecase",
            "camelcase",
            "lispcase",
            "pascalcase",
            "keep"
          ],
          "default": "snakecase",
          "description": "Transformation rule used by Go: Add Tags command to add tags"
        },
        "template": {
          "type": "string",
          "default": "",
          "description": "Custom format used by Go: Add Tags command for the tag value to be applied"
        }
      },
      "additionalProperties": false,
      "default": {
        "tags": "json",
        "options": "json=omitempty",
        "promptForTags": false,
        "transform": "snakecase",
        "template": ""
      },
      "description": "Tags and options configured here will be used by the Add Tags command to add tags to struct fields. If promptForTags is true, then user will be prompted for tags and options. By default, json tags are added.",
      "scope": 4,
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": {
        "tags": "json",
        "options": "json=omitempty",
        "promptForTags": false,
        "transform": "snakecase",
        "template": ""
      },
      "restricted": false
    },
    "go.liveErrors": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": false,
          "description": "If true, runs gotype on the file currently being edited and reports any semantic or syntactic errors found. Disabled when the language server is enabled."
        },
        "delay": {
          "type": "number",
          "default": 500,
          "description": "The number of milliseconds to delay before execution. Resets with each keystroke."
        }
      },
      "additionalProperties": false,
      "default": {
        "enabled": false,
        "delay": 500
      },
      "description": "Use gotype on the file currently being edited and report any semantic or syntactic errors found after configured delay. Not applicable when using the language server.",
      "scope": 4,
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": {
        "enabled": false,
        "delay": 500
      },
      "restricted": false
    },
    "go.removeTags": {
      "type": "object",
      "properties": {
        "promptForTags": {
          "type": "boolean",
          "default": false,
          "description": "If true, Go: Remove Tags command will prompt the user to provide tags and options instead of using the configured values"
        },
        "tags": {
          "type": "string",
          "default": "json",
          "description": "Comma separated tags to be used by Go: Remove Tags command"
        },
        "options": {
          "type": "string",
          "default": "json=omitempty",
          "description": "Comma separated tag=options pairs to be used by Go: Remove Tags command"
        }
      },
      "additionalProperties": false,
      "default": {
        "tags": "",
        "options": "",
        "promptForTags": false
      },
      "description": "Tags and options configured here will be used by the Remove Tags command to remove tags to struct fields. If promptForTags is true, then user will be prompted for tags and options. By default, all tags and options will be removed.",
      "scope": 4,
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": {
        "tags": "",
        "options": "",
        "promptForTags": false
      },
      "restricted": false
    },
    "go.playground": {
      "type": "object",
      "properties": {
        "openbrowser": {
          "type": "boolean",
          "default": true,
          "description": "Whether to open the created Go Playground in the default browser"
        },
        "share": {
          "type": "boolean",
          "default": true,
          "description": "Whether to make the created Go Playground shareable"
        },
        "run": {
          "type": "boolean",
          "default": true,
          "description": "Whether to run the created Go Playground after creation"
        }
      },
      "description": "The flags configured here will be passed through to command `goplay`",
      "additionalProperties": false,
      "default": {
        "openbrowser": true,
        "share": true,
        "run": true
      },
      "scope": 3,
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": {
        "openbrowser": true,
        "share": true,
        "run": true
      },
      "restricted": false
    },
    "go.survey.prompt": {
      "type": "boolean",
      "default": true,
      "description": "Prompt for surveys, including the gopls survey and the Go developer survey.",
      "scope": 3,
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "go.editorContextMenuCommands": {
      "type": "object",
      "properties": {
        "toggleTestFile": {
          "type": "boolean",
          "default": true,
          "description": "If true, adds command to toggle between a Go file and its test file to the editor context menu"
        },
        "addTags": {
          "type": "boolean",
          "default": true,
          "description": "If true, adds command to add configured tags from struct fields to the editor context menu"
        },
        "removeTags": {
          "type": "boolean",
          "default": true,
          "description": "If true, adds command to remove configured tags from struct fields to the editor context menu"
        },
        "fillStruct": {
          "type": "boolean",
          "default": true,
          "description": "If true, adds command to fill struct literal with default values to the editor context menu"
        },
        "testAtCursor": {
          "type": "boolean",
          "default": false,
          "description": "If true, adds command to run the test under the cursor to the editor context menu"
        },
        "testFile": {
          "type": "boolean",
          "default": true,
          "description": "If true, adds command to run all tests in the current file to the editor context menu"
        },
        "testPackage": {
          "type": "boolean",
          "default": true,
          "description": "If true, adds command to run all tests in the current package to the editor context menu"
        },
        "generateTestForFunction": {
          "type": "boolean",
          "default": true,
          "description": "If true, adds command to generate unit tests for function under the cursor to the editor context menu"
        },
        "generateTestForFile": {
          "type": "boolean",
          "default": true,
          "description": "If true, adds command to generate unit tests for current file to the editor context menu"
        },
        "generateTestForPackage": {
          "type": "boolean",
          "default": true,
          "description": "If true, adds command to generate unit tests for currnt package to the editor context menu"
        },
        "addImport": {
          "type": "boolean",
          "default": true,
          "description": "If true, adds command to import a package to the editor context menu"
        },
        "testCoverage": {
          "type": "boolean",
          "default": true,
          "description": "If true, adds command to run test coverage to the editor context menu"
        },
        "playground": {
          "type": "boolean",
          "default": true,
          "description": "If true, adds command to upload the current file or selection to the Go Playground"
        },
        "debugTestAtCursor": {
          "type": "boolean",
          "default": false,
          "description": "If true, adds command to debug the test under the cursor to the editor context menu"
        },
        "benchmarkAtCursor": {
          "type": "boolean",
          "default": false,
          "description": "If true, adds command to benchmark the test under the cursor to the editor context menu"
        }
      },
      "additionalProperties": false,
      "default": {
        "toggleTestFile": true,
        "addTags": true,
        "removeTags": false,
        "fillStruct": false,
        "testAtCursor": true,
        "testFile": false,
        "testPackage": false,
        "generateTestForFunction": true,
        "generateTestForFile": false,
        "generateTestForPackage": false,
        "addImport": true,
        "testCoverage": true,
        "playground": true,
        "debugTestAtCursor": true,
        "benchmarkAtCursor": false
      },
      "description": "Experimental Feature: Enable/Disable entries from the context menu in the editor.",
      "scope": 4,
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": {
        "toggleTestFile": true,
        "addTags": true,
        "removeTags": false,
        "fillStruct": false,
        "testAtCursor": true,
        "testFile": false,
        "testPackage": false,
        "generateTestForFunction": true,
        "generateTestForFile": false,
        "generateTestForPackage": false,
        "addImport": true,
        "testCoverage": true,
        "playground": true,
        "debugTestAtCursor": true,
        "benchmarkAtCursor": false
      },
      "restricted": false
    },
    "go.gotoSymbol.ignoreFolders": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": [],
      "description": "Folder names (not paths) to ignore while using Go to Symbol in Workspace feature. Not applicable when using the language server.",
      "scope": 4,
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "go.delveConfig": {
      "type": "object",
      "properties": {
        "dlvLoadConfig": {
          "type": "object",
          "properties": {
            "followPointers": {
              "type": "boolean",
              "description": "FollowPointers requests pointers to be automatically dereferenced",
              "default": true
            },
            "maxVariableRecurse": {
              "type": "number",
              "description": "MaxVariableRecurse is how far to recurse when evaluating nested types",
              "default": 1
            },
            "maxStringLen": {
              "type": "number",
              "description": "MaxStringLen is the maximum number of bytes read from a string",
              "default": 64
            },
            "maxArrayValues": {
              "type": "number",
              "description": "MaxArrayValues is the maximum number of elements read from an array, a slice or a map",
              "default": 64
            },
            "maxStructFields": {
              "type": "number",
              "description": "MaxStructFields is the maximum number of fields read from a struct, -1 will read all fields",
              "default": -1
            }
          },
          "description": "LoadConfig describes to delve, how to load values from target's memory. Ignored by 'dlv-dap'.",
          "default": {
            "followPointers": true,
            "maxVariableRecurse": 1,
            "maxStringLen": 64,
            "maxArrayValues": 64,
            "maxStructFields": -1
          }
        },
        "apiVersion": {
          "type": "number",
          "enum": [
            1,
            2
          ],
          "description": "Delve Api Version to use. Default value is 2. This applies only when using the 'legacy' debug adapter.",
          "default": 2
        },
        "showGlobalVariables": {
          "type": "boolean",
          "description": "Boolean value to indicate whether global package variables should be shown in the variables pane or not.",
          "default": false
        },
        "showRegisters": {
          "type": "boolean",
          "default": false,
          "description": "Boolean value to indicate whether register variables should be shown in the variables pane or not."
        },
        "hideSystemGoroutines": {
          "type": "boolean",
          "default": false,
          "description": "Boolean value to indicate whether system goroutines should be hidden from call stack view."
        },
        "showLog": {
          "type": "boolean",
          "description": "Show log output from the delve debugger. Maps to dlv's `--log` flag.",
          "default": false
        },
        "logOutput": {
          "type": "string",
          "enum": [
            "debugger",
            "gdbwire",
            "lldbout",
            "debuglineerr",
            "rpc",
            "dap"
          ],
          "description": "Comma separated list of components that should produce debug output. Maps to dlv's `--log-output` flag. Check `dlv log` for details.",
          "default": "debugger"
        },
        "debugAdapter": {
          "type": "string",
          "enum": [
            "legacy",
            "dlv-dap"
          ],
          "description": "Select which debug adapter to use by default. This is also used for choosing which debug adapter to use when no launch.json is present and with codelenses.",
          "default": "dlv-dap"
        },
        "dlvFlags": {
          "type": "array",
          "description": "Extra flags for `dlv`. See `dlv help` for the full list of supported. Flags such as `--log-output`, `--log`, `--log-dest`, `--api-version`, `--output`, `--backend` already have corresponding properties in the debug configuration, and flags such as `--listen` and `--headless` are used internally. If they are specified in `dlvFlags`, they may be ignored or cause an error.",
          "items": {
            "type": "string"
          },
          "default": []
        },
        "substitutePath": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "from": {
                "type": "string",
                "description": "The absolute local path to be replaced when passing paths to the debugger",
                "default": ""
              },
              "to": {
                "type": "string",
                "description": "The absolute remote path to be replaced when passing paths back to the client",
                "default": ""
              }
            }
          },
          "description": "An array of mappings from a local path to the remote path that is used by the debuggee. The debug adapter will replace the local path with the remote path in all of the calls. Overriden by `remotePath` (in attach request).",
          "default": []
        }
      },
      "default": {},
      "description": "Delve settings that applies to all debugging sessions. Debug configuration in the launch.json file will override these values.",
      "scope": 4,
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": {},
      "restricted": false
    },
    "go.alternateTools": {
      "type": "object",
      "default": {},
      "description": "Alternate tools or alternate paths for the same tools used by the Go extension. Provide either absolute path or the name of the binary in GOPATH/bin, GOROOT/bin or PATH. Useful when you want to use wrapper script for the Go tools or versioned tools from https://gopkg.in. When specified as a workspace setting, the setting is used only when the workspace is marked trusted with \"Go: Toggle Workspace Trust Flag\".",
      "scope": 4,
      "properties": {
        "go": {
          "type": "string",
          "default": "go",
          "description": "Alternate tool to use instead of the go binary or alternate path to use for the go binary."
        },
        "gopkgs": {
          "type": "string",
          "default": "gopkgs",
          "description": "Alternate tool to use instead of the gopkgs binary or alternate path to use for the gopkgs binary."
        },
        "gopls": {
          "type": "string",
          "default": "gopls",
          "description": "Alternate tool to use instead of the gopls binary or alternate path to use for the gopls binary."
        },
        "go-outline": {
          "type": "string",
          "default": "go-outline",
          "description": "Alternate tool to use instead of the go-outline binary or alternate path to use for the go-outline binary."
        },
        "dlv": {
          "type": "string",
          "default": "dlv",
          "description": "Alternate tool to use instead of the dlv binary or alternate path to use for the dlv binary."
        }
      },
      "additionalProperties": true,
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": {},
      "restricted": true
    },
    "go.terminal.activateEnvironment": {
      "default": true,
      "description": "Apply the Go & PATH environment variables used by the extension to all integrated terminals.",
      "scope": 4,
      "type": "boolean",
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gopls": {
      "type": "object",
      "markdownDescription": "Configure the default Go language server ('gopls'). In most cases, configuring this section is unnecessary. See [the documentation](https://github.com/golang/tools/blob/master/gopls/doc/settings.md) for all available settings.",
      "scope": 4,
      "properties": {
        "build.allowImplicitNetworkAccess": {
          "type": "boolean",
          "markdownDescription": "(Experimental) allowImplicitNetworkAccess disables GOPROXY=off, allowing implicit module\ndownloads rather than requiring user action. This option will eventually\nbe removed.\n",
          "default": false,
          "scope": "resource"
        },
        "build.allowModfileModifications": {
          "type": "boolean",
          "markdownDescription": "(Experimental) allowModfileModifications disables -mod=readonly, allowing imports from\nout-of-scope modules. This option will eventually be removed.\n",
          "default": false,
          "scope": "resource"
        },
        "build.buildFlags": {
          "type": "array",
          "markdownDescription": "buildFlags is the set of flags passed on to the build system when invoked.\nIt is applied to queries like `go list`, which is used when discovering files.\nThe most common use is to set `-tags`.\n\nIf unspecified, values of `go.buildFlags, go.buildTags` will be propagated.\n",
          "default": [],
          "scope": "resource"
        },
        "build.directoryFilters": {
          "type": "array",
          "markdownDescription": "directoryFilters can be used to exclude unwanted directories from the\nworkspace. By default, all directories are included. Filters are an\noperator, `+` to include and `-` to exclude, followed by a path prefix\nrelative to the workspace folder. They are evaluated in order, and\nthe last filter that applies to a path controls whether it is included.\nThe path prefix can be empty, so an initial `-` excludes everything.\n\nExamples:\n\nExclude node_modules: `-node_modules`\n\nInclude only project_a: `-` (exclude everything), `+project_a`\n\nInclude only project_a, but not node_modules inside it: `-`, `+project_a`, `-project_a/node_modules`\n",
          "default": [
            "-node_modules"
          ],
          "scope": "resource"
        },
        "build.env": {
          "type": "object",
          "markdownDescription": "env adds environment variables to external commands run by `gopls`, most notably `go list`.\n",
          "scope": "resource"
        },
        "build.expandWorkspaceToModule": {
          "type": "boolean",
          "markdownDescription": "(Experimental) expandWorkspaceToModule instructs `gopls` to adjust the scope of the\nworkspace to find the best available module root. `gopls` first looks for\na go.mod file in any parent directory of the workspace folder, expanding\nthe scope to that directory if it exists. If no viable parent directory is\nfound, gopls will check if there is exactly one child directory containing\na go.mod file, narrowing the scope to that directory if it exists.\n",
          "default": true,
          "scope": "resource"
        },
        "build.experimentalPackageCacheKey": {
          "type": "boolean",
          "markdownDescription": "(Experimental) experimentalPackageCacheKey controls whether to use a coarser cache key\nfor package type information to increase cache hits. This setting removes\nthe user's environment, build flags, and working directory from the cache\nkey, which should be a safe change as all relevant inputs into the type\nchecking pass are already hashed into the key. This is temporarily guarded\nby an experiment because caching behavior is subtle and difficult to\ncomprehensively test.\n",
          "default": true,
          "scope": "resource"
        },
        "build.experimentalUseInvalidMetadata": {
          "type": "boolean",
          "markdownDescription": "(Experimental) experimentalUseInvalidMetadata enables gopls to fall back on outdated\npackage metadata to provide editor features if the go command fails to\nload packages for some reason (like an invalid go.mod file). This will\neventually be the default behavior, and this setting will be removed.\n",
          "default": false,
          "scope": "resource"
        },
        "build.experimentalWorkspaceModule": {
          "type": "boolean",
          "markdownDescription": "(Experimental) experimentalWorkspaceModule opts a user into the experimental support\nfor multi-module workspaces.\n",
          "default": false,
          "scope": "resource"
        },
        "build.memoryMode": {
          "type": "string",
          "markdownDescription": "(Experimental) memoryMode controls the tradeoff `gopls` makes between memory usage and\ncorrectness.\n\nValues other than `Normal` are untested and may break in surprising ways.\n",
          "enum": [
            "DegradeClosed",
            "Normal"
          ],
          "markdownEnumDescriptions": [
            "`\"DegradeClosed\"`: In DegradeClosed mode, `gopls` will collect less information about\npackages without open files. As a result, features like Find\nReferences and Rename will miss results in such packages.\n",
            ""
          ],
          "default": "Normal",
          "scope": "resource"
        },
        "build.templateExtensions": {
          "type": "array",
          "markdownDescription": "templateExtensions gives the extensions of file names that are treateed\nas template files. (The extension\nis the part of the file name after the final dot.)\n",
          "default": [],
          "scope": "resource"
        },
        "formatting.gofumpt": {
          "type": "boolean",
          "markdownDescription": "gofumpt indicates if we should run gofumpt formatting.\n",
          "default": false,
          "scope": "resource"
        },
        "formatting.local": {
          "type": "string",
          "markdownDescription": "local is the equivalent of the `goimports -local` flag, which puts\nimports beginning with this string after third-party packages. It should\nbe the prefix of the import path whose imports should be grouped\nseparately.\n",
          "default": "",
          "scope": "resource"
        },
        "ui.codelenses": {
          "type": "object",
          "markdownDescription": "codelenses overrides the enabled/disabled state of code lenses. See the\n\"Code Lenses\" section of the\n[Settings page](https://github.com/golang/tools/blob/master/gopls/doc/settings.md)\nfor the list of supported lenses.\n\nExample Usage:\n\n```json5\n\"gopls\": {\n...\n  \"codelenses\": {\n    \"generate\": false,  // Don't show the `go generate` lens.\n    \"gc_details\": true  // Show a code lens toggling the display of gc's choices.\n  }\n...\n}\n```\n",
          "scope": "resource",
          "properties": {
            "gc_details": {
              "type": "boolean",
              "markdownDescription": "Toggle the calculation of gc annotations.",
              "default": false
            },
            "generate": {
              "type": "boolean",
              "markdownDescription": "Runs `go generate` for a given directory.",
              "default": true
            },
            "regenerate_cgo": {
              "type": "boolean",
              "markdownDescription": "Regenerates cgo definitions.",
              "default": true
            },
            "test": {
              "type": "boolean",
              "markdownDescription": "Runs `go test` for a specific set of test or benchmark functions.",
              "default": false
            },
            "tidy": {
              "type": "boolean",
              "markdownDescription": "Runs `go mod tidy` for a module.",
              "default": true
            },
            "upgrade_dependency": {
              "type": "boolean",
              "markdownDescription": "Upgrades a dependency in the go.mod file for a module.",
              "default": true
            },
            "vendor": {
              "type": "boolean",
              "markdownDescription": "Runs `go mod vendor` for a module.",
              "default": true
            }
          }
        },
        "ui.completion.completionBudget": {
          "type": "string",
          "markdownDescription": "(For Debugging) completionBudget is the soft latency goal for completion requests. Most\nrequests finish in a couple milliseconds, but in some cases deep\ncompletions can take much longer. As we use up our budget we\ndynamically reduce the search scope to ensure we return timely\nresults. Zero means unlimited.\n",
          "default": "100ms",
          "scope": "resource"
        },
        "ui.completion.experimentalPostfixCompletions": {
          "type": "boolean",
          "markdownDescription": "(Experimental) experimentalPostfixCompletions enables artifical method snippets\nsuch as \"someSlice.sort!\".\n",
          "default": true,
          "scope": "resource"
        },
        "ui.completion.matcher": {
          "type": "string",
          "markdownDescription": "(Advanced) matcher sets the algorithm that is used when calculating completion\ncandidates.\n",
          "enum": [
            "CaseInsensitive",
            "CaseSensitive",
            "Fuzzy"
          ],
          "markdownEnumDescriptions": [
            "",
            "",
            ""
          ],
          "default": "Fuzzy",
          "scope": "resource"
        },
        "ui.completion.usePlaceholders": {
          "type": "boolean",
          "markdownDescription": "placeholders enables placeholders for function parameters or struct\nfields in completion responses.\n",
          "default": false,
          "scope": "resource"
        },
        "ui.diagnostic.analyses": {
          "type": "object",
          "markdownDescription": "analyses specify analyses that the user would like to enable or disable.\nA map of the names of analysis passes that should be enabled/disabled.\nA full list of analyzers that gopls uses can be found\n[here](https://github.com/golang/tools/blob/master/gopls/doc/analyzers.md).\n\nExample Usage:\n\n```json5\n...\n\"analyses\": {\n  \"unreachable\": false, // Disable the unreachable analyzer.\n  \"unusedparams\": true  // Enable the unusedparams analyzer.\n}\n...\n```\n",
          "scope": "resource",
          "properties": {
            "asmdecl": {
              "type": "boolean",
              "markdownDescription": "report mismatches between assembly files and Go declarations",
              "default": true
            },
            "assign": {
              "type": "boolean",
              "markdownDescription": "check for useless assignments\n\nThis checker reports assignments of the form x = x or a[i] = a[i].\nThese are almost always useless, and even when they aren't they are\nusually a mistake.",
              "default": true
            },
            "atomic": {
              "type": "boolean",
              "markdownDescription": "check for common mistakes using the sync/atomic package\n\nThe atomic checker looks for assignment statements of the form:\n\n\tx = atomic.AddUint64(&x, 1)\n\nwhich are not atomic.",
              "default": true
            },
            "atomicalign": {
              "type": "boolean",
              "markdownDescription": "check for non-64-bits-aligned arguments to sync/atomic functions",
              "default": true
            },
            "bools": {
              "type": "boolean",
              "markdownDescription": "check for common mistakes involving boolean operators",
              "default": true
            },
            "buildtag": {
              "type": "boolean",
              "markdownDescription": "check that +build tags are well-formed and correctly located",
              "default": true
            },
            "cgocall": {
              "type": "boolean",
              "markdownDescription": "detect some violations of the cgo pointer passing rules\n\nCheck for invalid cgo pointer passing.\nThis looks for code that uses cgo to call C code passing values\nwhose types are almost always invalid according to the cgo pointer\nsharing rules.\nSpecifically, it warns about attempts to pass a Go chan, map, func,\nor slice to C, either directly, or via a pointer, array, or struct.",
              "default": true
            },
            "composites": {
              "type": "boolean",
              "markdownDescription": "check for unkeyed composite literals\n\nThis analyzer reports a diagnostic for composite literals of struct\ntypes imported from another package that do not use the field-keyed\nsyntax. Such literals are fragile because the addition of a new field\n(even if unexported) to the struct will cause compilation to fail.\n\nAs an example,\n\n\terr = &net.DNSConfigError{err}\n\nshould be replaced by:\n\n\terr = &net.DNSConfigError{Err: err}\n",
              "default": true
            },
            "copylocks": {
              "type": "boolean",
              "markdownDescription": "check for locks erroneously passed by value\n\nInadvertently copying a value containing a lock, such as sync.Mutex or\nsync.WaitGroup, may cause both copies to malfunction. Generally such\nvalues should be referred to through a pointer.",
              "default": true
            },
            "deepequalerrors": {
              "type": "boolean",
              "markdownDescription": "check for calls of reflect.DeepEqual on error values\n\nThe deepequalerrors checker looks for calls of the form:\n\n    reflect.DeepEqual(err1, err2)\n\nwhere err1 and err2 are errors. Using reflect.DeepEqual to compare\nerrors is discouraged.",
              "default": true
            },
            "errorsas": {
              "type": "boolean",
              "markdownDescription": "report passing non-pointer or non-error values to errors.As\n\nThe errorsas analysis reports calls to errors.As where the type\nof the second argument is not a pointer to a type implementing error.",
              "default": true
            },
            "fieldalignment": {
              "type": "boolean",
              "markdownDescription": "find structs that would use less memory if their fields were sorted\n\nThis analyzer find structs that can be rearranged to use less memory, and provides\na suggested edit with the optimal order.\n\nNote that there are two different diagnostics reported. One checks struct size,\nand the other reports \"pointer bytes\" used. Pointer bytes is how many bytes of the\nobject that the garbage collector has to potentially scan for pointers, for example:\n\n\tstruct { uint32; string }\n\nhave 16 pointer bytes because the garbage collector has to scan up through the string's\ninner pointer.\n\n\tstruct { string; *uint32 }\n\nhas 24 pointer bytes because it has to scan further through the *uint32.\n\n\tstruct { string; uint32 }\n\nhas 8 because it can stop immediately after the string pointer.\n",
              "default": false
            },
            "fillreturns": {
              "type": "boolean",
              "markdownDescription": "suggest fixes for errors due to an incorrect number of return values\n\nThis checker provides suggested fixes for type errors of the\ntype \"wrong number of return values (want %d, got %d)\". For example:\n\tfunc m() (int, string, *bool, error) {\n\t\treturn\n\t}\nwill turn into\n\tfunc m() (int, string, *bool, error) {\n\t\treturn 0, \"\", nil, nil\n\t}\n\nThis functionality is similar to https://github.com/sqs/goreturns.\n",
              "default": true
            },
            "fillstruct": {
              "type": "boolean",
              "markdownDescription": "note incomplete struct initializations\n\nThis analyzer provides diagnostics for any struct literals that do not have\nany fields initialized. Because the suggested fix for this analysis is\nexpensive to compute, callers should compute it separately, using the\nSuggestedFix function below.\n",
              "default": true
            },
            "httpresponse": {
              "type": "boolean",
              "markdownDescription": "check for mistakes using HTTP responses\n\nA common mistake when using the net/http package is to defer a function\ncall to close the http.Response Body before checking the error that\ndetermines whether the response is valid:\n\n\tresp, err := http.Head(url)\n\tdefer resp.Body.Close()\n\tif err != nil {\n\t\tlog.Fatal(err)\n\t}\n\t// (defer statement belongs here)\n\nThis checker helps uncover latent nil dereference bugs by reporting a\ndiagnostic for such mistakes.",
              "default": true
            },
            "ifaceassert": {
              "type": "boolean",
              "markdownDescription": "detect impossible interface-to-interface type assertions\n\nThis checker flags type assertions v.(T) and corresponding type-switch cases\nin which the static type V of v is an interface that cannot possibly implement\nthe target interface T. This occurs when V and T contain methods with the same\nname but different signatures. Example:\n\n\tvar v interface {\n\t\tRead()\n\t}\n\t_ = v.(io.Reader)\n\nThe Read method in v has a different signature than the Read method in\nio.Reader, so this assertion cannot succeed.\n",
              "default": true
            },
            "infertypeargs": {
              "type": "boolean",
              "markdownDescription": "check for unnecessary type arguments in call expressions\n\nExplicit type arguments may be omitted from call expressions if they can be\ninferred from function arguments, or from other type arguments:\n\n\tfunc f[T any](T) {}\n\t\n\tfunc _() {\n\t\tf[string](\"foo\") // string could be inferred\n\t}\n",
              "default": true
            },
            "loopclosure": {
              "type": "boolean",
              "markdownDescription": "check references to loop variables from within nested functions\n\nThis analyzer checks for references to loop variables from within a\nfunction literal inside the loop body. It checks only instances where\nthe function literal is called in a defer or go statement that is the\nlast statement in the loop body, as otherwise we would need whole\nprogram analysis.\n\nFor example:\n\n\tfor i, v := range s {\n\t\tgo func() {\n\t\t\tprintln(i, v) // not what you might expect\n\t\t}()\n\t}\n\nSee: https://golang.org/doc/go_faq.html#closures_and_goroutines",
              "default": true
            },
            "lostcancel": {
              "type": "boolean",
              "markdownDescription": "check cancel func returned by context.WithCancel is called\n\nThe cancellation function returned by context.WithCancel, WithTimeout,\nand WithDeadline must be called or the new context will remain live\nuntil its parent context is cancelled.\n(The background context is never cancelled.)",
              "default": true
            },
            "nilfunc": {
              "type": "boolean",
              "markdownDescription": "check for useless comparisons between functions and nil\n\nA useless comparison is one like f == nil as opposed to f() == nil.",
              "default": true
            },
            "nilness": {
              "type": "boolean",
              "markdownDescription": "check for redundant or impossible nil comparisons\n\nThe nilness checker inspects the control-flow graph of each function in\na package and reports nil pointer dereferences, degenerate nil\npointers, and panics with nil values. A degenerate comparison is of the form\nx==nil or x!=nil where x is statically known to be nil or non-nil. These are\noften a mistake, especially in control flow related to errors. Panics with nil\nvalues are checked because they are not detectable by\n\n\tif r := recover(); r != nil {\n\nThis check reports conditions such as:\n\n\tif f == nil { // impossible condition (f is a function)\n\t}\n\nand:\n\n\tp := &v\n\t...\n\tif p != nil { // tautological condition\n\t}\n\nand:\n\n\tif p == nil {\n\t\tprint(*p) // nil dereference\n\t}\n\nand:\n\n\tif p == nil {\n\t\tpanic(p)\n\t}\n",
              "default": false
            },
            "nonewvars": {
              "type": "boolean",
              "markdownDescription": "suggested fixes for \"no new vars on left side of :=\"\n\nThis checker provides suggested fixes for type errors of the\ntype \"no new vars on left side of :=\". For example:\n\tz := 1\n\tz := 2\nwill turn into\n\tz := 1\n\tz = 2\n",
              "default": true
            },
            "noresultvalues": {
              "type": "boolean",
              "markdownDescription": "suggested fixes for \"no result values expected\"\n\nThis checker provides suggested fixes for type errors of the\ntype \"no result values expected\". For example:\n\tfunc z() { return nil }\nwill turn into\n\tfunc z() { return }\n",
              "default": true
            },
            "printf": {
              "type": "boolean",
              "markdownDescription": "check consistency of Printf format strings and arguments\n\nThe check applies to known functions (for example, those in package fmt)\nas well as any detected wrappers of known functions.\n\nA function that wants to avail itself of printf checking but is not\nfound by this analyzer's heuristics (for example, due to use of\ndynamic calls) can insert a bogus call:\n\n\tif false {\n\t\t_ = fmt.Sprintf(format, args...) // enable printf checking\n\t}\n\nThe -funcs flag specifies a comma-separated list of names of additional\nknown formatting functions or methods. If the name contains a period,\nit must denote a specific function using one of the following forms:\n\n\tdir/pkg.Function\n\tdir/pkg.Type.Method\n\t(*dir/pkg.Type).Method\n\nOtherwise the name is interpreted as a case-insensitive unqualified\nidentifier such as \"errorf\". Either way, if a listed name ends in f, the\nfunction is assumed to be Printf-like, taking a format string before the\nargument list. Otherwise it is assumed to be Print-like, taking a list\nof arguments with no format string.\n",
              "default": true
            },
            "shadow": {
              "type": "boolean",
              "markdownDescription": "check for possible unintended shadowing of variables\n\nThis analyzer check for shadowed variables.\nA shadowed variable is a variable declared in an inner scope\nwith the same name and type as a variable in an outer scope,\nand where the outer variable is mentioned after the inner one\nis declared.\n\n(This definition can be refined; the module generates too many\nfalse positives and is not yet enabled by default.)\n\nFor example:\n\n\tfunc BadRead(f *os.File, buf []byte) error {\n\t\tvar err error\n\t\tfor {\n\t\t\tn, err := f.Read(buf) // shadows the function variable 'err'\n\t\t\tif err != nil {\n\t\t\t\tbreak // causes return of wrong value\n\t\t\t}\n\t\t\tfoo(buf)\n\t\t}\n\t\treturn err\n\t}\n",
              "default": false
            },
            "shift": {
              "type": "boolean",
              "markdownDescription": "check for shifts that equal or exceed the width of the integer",
              "default": true
            },
            "simplifycompositelit": {
              "type": "boolean",
              "markdownDescription": "check for composite literal simplifications\n\nAn array, slice, or map composite literal of the form:\n\t[]T{T{}, T{}}\nwill be simplified to:\n\t[]T{{}, {}}\n\nThis is one of the simplifications that \"gofmt -s\" applies.",
              "default": true
            },
            "simplifyrange": {
              "type": "boolean",
              "markdownDescription": "check for range statement simplifications\n\nA range of the form:\n\tfor x, _ = range v {...}\nwill be simplified to:\n\tfor x = range v {...}\n\nA range of the form:\n\tfor _ = range v {...}\nwill be simplified to:\n\tfor range v {...}\n\nThis is one of the simplifications that \"gofmt -s\" applies.",
              "default": true
            },
            "simplifyslice": {
              "type": "boolean",
              "markdownDescription": "check for slice simplifications\n\nA slice expression of the form:\n\ts[a:len(s)]\nwill be simplified to:\n\ts[a:]\n\nThis is one of the simplifications that \"gofmt -s\" applies.",
              "default": true
            },
            "sortslice": {
              "type": "boolean",
              "markdownDescription": "check the argument type of sort.Slice\n\nsort.Slice requires an argument of a slice type. Check that\nthe interface{} value passed to sort.Slice is actually a slice.",
              "default": true
            },
            "stdmethods": {
              "type": "boolean",
              "markdownDescription": "check signature of methods of well-known interfaces\n\nSometimes a type may be intended to satisfy an interface but may fail to\ndo so because of a mistake in its method signature.\nFor example, the result of this WriteTo method should be (int64, error),\nnot error, to satisfy io.WriterTo:\n\n\ttype myWriterTo struct{...}\n        func (myWriterTo) WriteTo(w io.Writer) error { ... }\n\nThis check ensures that each method whose name matches one of several\nwell-known interface methods from the standard library has the correct\nsignature for that interface.\n\nChecked method names include:\n\tFormat GobEncode GobDecode MarshalJSON MarshalXML\n\tPeek ReadByte ReadFrom ReadRune Scan Seek\n\tUnmarshalJSON UnreadByte UnreadRune WriteByte\n\tWriteTo\n",
              "default": true
            },
            "stringintconv": {
              "type": "boolean",
              "markdownDescription": "check for string(int) conversions\n\nThis checker flags conversions of the form string(x) where x is an integer\n(but not byte or rune) type. Such conversions are discouraged because they\nreturn the UTF-8 representation of the Unicode code point x, and not a decimal\nstring representation of x as one might expect. Furthermore, if x denotes an\ninvalid code point, the conversion cannot be statically rejected.\n\nFor conversions that intend on using the code point, consider replacing them\nwith string(rune(x)). Otherwise, strconv.Itoa and its equivalents return the\nstring representation of the value in the desired base.\n",
              "default": true
            },
            "structtag": {
              "type": "boolean",
              "markdownDescription": "check that struct field tags conform to reflect.StructTag.Get\n\nAlso report certain struct tags (json, xml) used with unexported fields.",
              "default": true
            },
            "testinggoroutine": {
              "type": "boolean",
              "markdownDescription": "report calls to (*testing.T).Fatal from goroutines started by a test.\n\nFunctions that abruptly terminate a test, such as the Fatal, Fatalf, FailNow, and\nSkip{,f,Now} methods of *testing.T, must be called from the test goroutine itself.\nThis checker detects calls to these functions that occur within a goroutine\nstarted by the test. For example:\n\nfunc TestFoo(t *testing.T) {\n    go func() {\n        t.Fatal(\"oops\") // error: (*T).Fatal called from non-test goroutine\n    }()\n}\n",
              "default": true
            },
            "tests": {
              "type": "boolean",
              "markdownDescription": "check for common mistaken usages of tests and examples\n\nThe tests checker walks Test, Benchmark and Example functions checking\nmalformed names, wrong signatures and examples documenting non-existent\nidentifiers.\n\nPlease see the documentation for package testing in golang.org/pkg/testing\nfor the conventions that are enforced for Tests, Benchmarks, and Examples.",
              "default": true
            },
            "undeclaredname": {
              "type": "boolean",
              "markdownDescription": "suggested fixes for \"undeclared name: <>\"\n\nThis checker provides suggested fixes for type errors of the\ntype \"undeclared name: <>\". It will either insert a new statement,\nsuch as:\n\n\"<> := \"\n\nor a new function declaration, such as:\n\nfunc <>(inferred parameters) {\n\tpanic(\"implement me!\")\n}\n",
              "default": true
            },
            "unmarshal": {
              "type": "boolean",
              "markdownDescription": "report passing non-pointer or non-interface values to unmarshal\n\nThe unmarshal analysis reports calls to functions such as json.Unmarshal\nin which the argument type is not a pointer or an interface.",
              "default": true
            },
            "unreachable": {
              "type": "boolean",
              "markdownDescription": "check for unreachable code\n\nThe unreachable analyzer finds statements that execution can never reach\nbecause they are preceded by an return statement, a call to panic, an\ninfinite loop, or similar constructs.",
              "default": true
            },
            "unsafeptr": {
              "type": "boolean",
              "markdownDescription": "check for invalid conversions of uintptr to unsafe.Pointer\n\nThe unsafeptr analyzer reports likely incorrect uses of unsafe.Pointer\nto convert integers to pointers. A conversion from uintptr to\nunsafe.Pointer is invalid if it implies that there is a uintptr-typed\nword in memory that holds a pointer value, because that word will be\ninvisible to stack copying and to the garbage collector.",
              "default": true
            },
            "unusedparams": {
              "type": "boolean",
              "markdownDescription": "check for unused parameters of functions\n\nThe unusedparams analyzer checks functions to see if there are\nany parameters that are not being used.\n\nTo reduce false positives it ignores:\n- methods\n- parameters that do not have a name or are underscored\n- functions in test files\n- functions with empty bodies or those with just a return stmt",
              "default": false
            },
            "unusedresult": {
              "type": "boolean",
              "markdownDescription": "check for unused results of calls to some functions\n\nSome functions like fmt.Errorf return a result and have no side effects,\nso it is always a mistake to discard the result. This analyzer reports\ncalls to certain functions in which the result of the call is ignored.\n\nThe set of functions may be controlled using flags.",
              "default": true
            },
            "unusedwrite": {
              "type": "boolean",
              "markdownDescription": "checks for unused writes\n\nThe analyzer reports instances of writes to struct fields and\narrays that are never read. Specifically, when a struct object\nor an array is copied, its elements are copied implicitly by\nthe compiler, and any element write to this copy does nothing\nwith the original object.\n\nFor example:\n\n\ttype T struct { x int }\n\tfunc f(input []T) {\n\t\tfor i, v := range input {  // v is a copy\n\t\t\tv.x = i  // unused write to field x\n\t\t}\n\t}\n\nAnother example is about non-pointer receiver:\n\n\ttype T struct { x int }\n\tfunc (t T) f() {  // t is a copy\n\t\tt.x = i  // unused write to field x\n\t}\n",
              "default": false
            },
            "useany": {
              "type": "boolean",
              "markdownDescription": "check for constraints that could be simplified to \"any\"",
              "default": true
            }
          }
        },
        "ui.diagnostic.annotations": {
          "type": "object",
          "markdownDescription": "(Experimental) annotations specifies the various kinds of optimization diagnostics\nthat should be reported by the gc_details command.\n",
          "scope": "resource",
          "properties": {
            "bounds": {
              "type": "boolean",
              "markdownDescription": "`\"bounds\"` controls bounds checking diagnostics.\n",
              "default": true
            },
            "escape": {
              "type": "boolean",
              "markdownDescription": "`\"escape\"` controls diagnostics about escape choices.\n",
              "default": true
            },
            "inline": {
              "type": "boolean",
              "markdownDescription": "`\"inline\"` controls diagnostics about inlining choices.\n",
              "default": true
            },
            "nil": {
              "type": "boolean",
              "markdownDescription": "`\"nil\"` controls nil checks.\n",
              "default": true
            }
          }
        },
        "ui.diagnostic.diagnosticsDelay": {
          "type": "string",
          "markdownDescription": "(Advanced) diagnosticsDelay controls the amount of time that gopls waits\nafter the most recent file modification before computing deep diagnostics.\nSimple diagnostics (parsing and type-checking) are always run immediately\non recently modified packages.\n\nThis option must be set to a valid duration string, for example `\"250ms\"`.\n",
          "default": "250ms",
          "scope": "resource"
        },
        "ui.diagnostic.experimentalWatchedFileDelay": {
          "type": "string",
          "markdownDescription": "(Experimental) experimentalWatchedFileDelay controls the amount of time that gopls waits\nfor additional workspace/didChangeWatchedFiles notifications to arrive,\nbefore processing all such notifications in a single batch. This is\nintended for use by LSP clients that don't support their own batching of\nfile system notifications.\n\nThis option must be set to a valid duration string, for example `\"100ms\"`.\n",
          "default": "0s",
          "scope": "resource"
        },
        "ui.diagnostic.staticcheck": {
          "type": "boolean",
          "markdownDescription": "(Experimental) staticcheck enables additional analyses from staticcheck.io.\n",
          "default": false,
          "scope": "resource"
        },
        "ui.documentation.hoverKind": {
          "type": "string",
          "markdownDescription": "hoverKind controls the information that appears in the hover text.\nSingleLine and Structured are intended for use only by authors of editor plugins.\n",
          "enum": [
            "FullDocumentation",
            "NoDocumentation",
            "SingleLine",
            "Structured",
            "SynopsisDocumentation"
          ],
          "markdownEnumDescriptions": [
            "",
            "",
            "",
            "`\"Structured\"` is an experimental setting that returns a structured hover format.\nThis format separates the signature from the documentation, so that the client\ncan do more manipulation of these fields.\n\nThis should only be used by clients that support this behavior.\n",
            ""
          ],
          "default": "FullDocumentation",
          "scope": "resource"
        },
        "ui.documentation.linkTarget": {
          "type": "string",
          "markdownDescription": "linkTarget controls where documentation links go.\nIt might be one of:\n\n* `\"godoc.org\"`\n* `\"pkg.go.dev\"`\n\nIf company chooses to use its own `godoc.org`, its address can be used as well.\n",
          "default": "pkg.go.dev",
          "scope": "resource"
        },
        "ui.documentation.linksInHover": {
          "type": "boolean",
          "markdownDescription": "linksInHover toggles the presence of links to documentation in hover.\n",
          "default": true,
          "scope": "resource"
        },
        "ui.navigation.importShortcut": {
          "type": "string",
          "markdownDescription": "importShortcut specifies whether import statements should link to\ndocumentation or go to definitions.\n",
          "enum": [
            "Both",
            "Definition",
            "Link"
          ],
          "markdownEnumDescriptions": [
            "",
            "",
            ""
          ],
          "default": "Both",
          "scope": "resource"
        },
        "ui.navigation.symbolMatcher": {
          "type": "string",
          "markdownDescription": "(Advanced) symbolMatcher sets the algorithm that is used when finding workspace symbols.\n",
          "enum": [
            "CaseInsensitive",
            "CaseSensitive",
            "FastFuzzy",
            "Fuzzy"
          ],
          "markdownEnumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "default": "Fuzzy",
          "scope": "resource"
        },
        "ui.navigation.symbolStyle": {
          "type": "string",
          "markdownDescription": "(Advanced) symbolStyle controls how symbols are qualified in symbol responses.\n\nExample Usage:\n\n```json5\n\"gopls\": {\n...\n  \"symbolStyle\": \"Dynamic\",\n...\n}\n```\n",
          "enum": [
            "Dynamic",
            "Full",
            "Package"
          ],
          "markdownEnumDescriptions": [
            "`\"Dynamic\"` uses whichever qualifier results in the highest scoring\nmatch for the given symbol query. Here a \"qualifier\" is any \"/\" or \".\"\ndelimited suffix of the fully qualified symbol. i.e. \"to/pkg.Foo.Field\" or\njust \"Foo.Field\".\n",
            "`\"Full\"` is fully qualified symbols, i.e.\n\"path/to/pkg.Foo.Field\".\n",
            "`\"Package\"` is package qualified symbols i.e.\n\"pkg.Foo.Field\".\n"
          ],
          "default": "Dynamic",
          "scope": "resource"
        },
        "ui.semanticTokens": {
          "type": "boolean",
          "markdownDescription": "(Experimental) semanticTokens controls whether the LSP server will send\nsemantic tokens to the client.\n",
          "default": false,
          "scope": "resource"
        },
        "verboseOutput": {
          "type": "boolean",
          "markdownDescription": "(For Debugging) verboseOutput enables additional debug logging.\n",
          "default": false,
          "scope": "resource"
        }
      },
      "source": {
        "id": "golang.go",
        "displayName": "Go"
      },
      "default": {},
      "restricted": false
    },
    "discord.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Controls if the Discord Presence should show across all workspaces",
      "scope": 3,
      "source": {
        "id": "icrawl.discord-vscode",
        "displayName": "Discord Presence"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "discord.detailsIdling": {
      "type": "string",
      "default": "Idling",
      "description": "Custom string for the details section of the rich presence when idling\n\t- '{empty}' will be replaced with an empty space.",
      "scope": 3,
      "source": {
        "id": "icrawl.discord-vscode",
        "displayName": "Discord Presence"
      },
      "defaultDefaultValue": "Idling",
      "restricted": false
    },
    "discord.detailsEditing": {
      "type": "string",
      "default": "Editing {file_name}",
      "description": "Custom string for the details section of the rich presence\n\t- '{empty}' will be replaced with an empty space.\n\t- '{file_name}' will be replaced with the current file name.\n\t- '{dir_name}' will get replaced with the folder name that has the current file.\n\t- '{full_dir_name}' will get replaced with the full directory name without the current file name.\n\t- '{workspace}' will be replaced with the current workspace name, if any.\n\t- '{workspace_folder}' will be replaced with the currently accessed workspace folder, if any.\n\t- '{workspace_and_folder} will be replaced with the currently accessed workspace and workspace folder like this: 'Workspace - WorkspaceFolder'\n\t- '{current_column}' will get replaced with the current column of the current line.\n\t- '{current_line}' will get replaced with the current line number.\n\t- '{total_lines}' will get replaced with the total line number.\n\t- '{file_size}' will get replaced with the current file's size.\n\t- '{git_repo_name}' will be replaced with the active Git repository name (from the git URL)\n\t- '{git_branch}' will be replaced with the current active branch name.",
      "scope": 3,
      "source": {
        "id": "icrawl.discord-vscode",
        "displayName": "Discord Presence"
      },
      "defaultDefaultValue": "Editing {file_name}",
      "restricted": false
    },
    "discord.detailsDebugging": {
      "type": "string",
      "default": "Debugging {file_name}",
      "description": "Custom string for the details section of the rich presence when debugging\n\t- '{empty}' will be replaced with an empty space.\n\t- '{file_name}' will be replaced with the current file name.\n\t- '{dir_name}' will get replaced with the folder name that has the current file.\n\t- '{full_dir_name}' will get replaced with the full directory name without the current file name.\n\t- '{workspace}' will be replaced with the current workspace name, if any.\n\t- '{workspace_folder}' will be replaced with the currently accessed workspace folder, if any.\n\t- '{workspace_and_folder} will be replaced with the currently accessed workspace and workspace folder like this: 'Workspace - WorkspaceFolder'\n\t- '{current_column}' will get replaced with the current column of the current line.\n\t- '{current_line}' will get replaced with the current line number.\n\t- '{total_lines}' will get replaced with the total line number.\n\t- '{file_size}' will get replaced with the current file's size.\n\t- '{git_repo_name}' will be replaced with the active Git repository name (from the git URL)\n\t- '{git_branch}' will be replaced with the current active branch name.",
      "scope": 3,
      "source": {
        "id": "icrawl.discord-vscode",
        "displayName": "Discord Presence"
      },
      "defaultDefaultValue": "Debugging {file_name}",
      "restricted": false
    },
    "discord.lowerDetailsIdling": {
      "type": "string",
      "default": "Idling",
      "description": "Custom string for the state section of the rich presence when idling\n\t- '{empty}' will be replaced with an empty space.",
      "scope": 3,
      "source": {
        "id": "icrawl.discord-vscode",
        "displayName": "Discord Presence"
      },
      "defaultDefaultValue": "Idling",
      "restricted": false
    },
    "discord.lowerDetailsEditing": {
      "type": "string",
      "default": "Workspace: {workspace}",
      "description": "Custom string for the state section of the rich presence\n\t- '{empty}' will be replaced with an empty space.\n\t- '{file_name}' will be replaced with the current file name.\n\t- '{dir_name}' will get replaced with the folder name that has the current file.\n\t- '{full_dir_name}' will get replaced with the full directory name without the current file name.\n\t- '{workspace}' will be replaced with the current workspace name, if any.\n\t- '{workspace_folder}' will be replaced with the currently accessed workspace folder, if any.\n\t- '{workspace_and_folder} will be replaced with the currently accessed workspace and workspace folder like this: 'Workspace - WorkspaceFolder'\n\t- '{current_column}' will get replaced with the current column of the current line.\n\t- '{current_line}' will get replaced with the current line number.\n\t- '{total_lines}' will get replaced with the total line number.\n\t- '{file_size}' will get replaced with the current file's size.\n\t- '{git_repo_name}' will be replaced with the active Git repository name (from the git URL)\n\t- '{git_branch}' will be replaced with the current active branch name.",
      "scope": 3,
      "source": {
        "id": "icrawl.discord-vscode",
        "displayName": "Discord Presence"
      },
      "defaultDefaultValue": "Workspace: {workspace}",
      "restricted": false
    },
    "discord.lowerDetailsDebugging": {
      "type": "string",
      "default": "Debugging: {workspace}",
      "description": "Custom string for the state section of the rich presence when debugging\n\t- '{empty}' will be replaced with an empty space.\n\t- '{file_name}' will be replaced with the current file name.\n\t- '{dir_name}' will get replaced with the folder name that has the current file.\n\t- '{full_dir_name}' will get replaced with the full directory name without the current file name.\n\t- '{workspace}' will be replaced with the current workspace name, if any.\n\t- '{workspace_folder}' will be replaced with the currently accessed workspace folder, if any.\n\t- '{workspace_and_folder} will be replaced with the currently accessed workspace and workspace folder like this: 'Workspace - WorkspaceFolder'\n\t- '{current_column}' will get replaced with the current column of the current line.\n\t- '{current_line}' will get replaced with the current line number.\n\t- '{total_lines}' will get replaced with the total line number.\n\t- '{file_size}' will get replaced with the current file's size.\n\t- '{git_repo_name}' will be replaced with the active Git repository name (from the git URL)\n\t- '{git_branch}' will be replaced with the current active branch name.",
      "scope": 3,
      "source": {
        "id": "icrawl.discord-vscode",
        "displayName": "Discord Presence"
      },
      "defaultDefaultValue": "Debugging: {workspace}",
      "restricted": false
    },
    "discord.lowerDetailsNoWorkspaceFound": {
      "type": "string",
      "default": "No workspace",
      "description": "Custom string for the state section of the rich presence when no workspace is found.\nIf set to '{empty}', this will be an empty space.\n\t- '{current_line}' will get replaced with the current line number.\n\t- '{total_lines}' will get replaced with the total line number.\n\t- '{file_size}' will get replaced with the current file's size.",
      "scope": 3,
      "source": {
        "id": "icrawl.discord-vscode",
        "displayName": "Discord Presence"
      },
      "defaultDefaultValue": "No workspace",
      "restricted": false
    },
    "discord.largeImageIdling": {
      "type": "string",
      "default": "Idling",
      "description": "Custom string for the largeImageText section of the rich presence when idling",
      "scope": 3,
      "source": {
        "id": "icrawl.discord-vscode",
        "displayName": "Discord Presence"
      },
      "defaultDefaultValue": "Idling",
      "restricted": false
    },
    "discord.largeImage": {
      "type": "string",
      "default": "Editing a {LANG} file",
      "description": "Custom string for the largeImageText section of the rich presence.\n\t- '{lang}' will be replaced with the lowercased language ID\n\t- '{LANG}' will be replaced with the uppercased language ID",
      "scope": 3,
      "source": {
        "id": "icrawl.discord-vscode",
        "displayName": "Discord Presence"
      },
      "defaultDefaultValue": "Editing a {LANG} file",
      "restricted": false
    },
    "discord.smallImage": {
      "type": "string",
      "default": "{app_name}",
      "description": "Custom string for the smallImageText section of the rich presence\n\t- '{app_name}' will get replaced with the current Visual Studio Code version.",
      "scope": 3,
      "source": {
        "id": "icrawl.discord-vscode",
        "displayName": "Discord Presence"
      },
      "defaultDefaultValue": "{app_name}",
      "restricted": false
    },
    "discord.suppressNotifications": {
      "type": "boolean",
      "default": false,
      "description": "Decides if error messages are shown to the user",
      "scope": 3,
      "source": {
        "id": "icrawl.discord-vscode",
        "displayName": "Discord Presence"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "discord.workspaceExcludePatterns": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": [],
      "description": "Patterns of workspaces to ignore",
      "scope": 3,
      "source": {
        "id": "icrawl.discord-vscode",
        "displayName": "Discord Presence"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "discord.swapBigAndSmallImage": {
      "type": "boolean",
      "default": false,
      "description": "Swaps the big and small image on the rich presence",
      "scope": 3,
      "source": {
        "id": "icrawl.discord-vscode",
        "displayName": "Discord Presence"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "discord.removeDetails": {
      "type": "boolean",
      "default": false,
      "description": "Removes the details",
      "scope": 3,
      "source": {
        "id": "icrawl.discord-vscode",
        "displayName": "Discord Presence"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "discord.removeLowerDetails": {
      "type": "boolean",
      "default": false,
      "description": "Removes the lower details",
      "scope": 3,
      "source": {
        "id": "icrawl.discord-vscode",
        "displayName": "Discord Presence"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "discord.removeTimestamp": {
      "type": "boolean",
      "default": false,
      "description": "Removes the timestamp",
      "scope": 3,
      "source": {
        "id": "icrawl.discord-vscode",
        "displayName": "Discord Presence"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "discord.removeRemoteRepository": {
      "type": "boolean",
      "default": false,
      "description": "Removes the View Repository button",
      "scope": 3,
      "source": {
        "id": "icrawl.discord-vscode",
        "displayName": "Discord Presence"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "discord.idleTimeout": {
      "type": "number",
      "default": 0,
      "description": "Time (in seconds) to clear the presence when idling. 0 (the default) means no clearing",
      "scope": 3,
      "source": {
        "id": "icrawl.discord-vscode",
        "displayName": "Discord Presence"
      },
      "defaultDefaultValue": 0,
      "restricted": false
    },
    "svg.completion.showAdvanced": {
      "title": "Show advanced items in completion list.",
      "description": "Specifies whether advanced items that are not commonly used are displayed in the AutoComplete list.",
      "type": "boolean",
      "default": false,
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "svg.completion.showDeprecated": {
      "title": "Show deprecated items in completion list.",
      "description": "Specifies whether advanced items that are deprecated are displayed in the AutoComplete list.",
      "type": "boolean",
      "default": false,
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "svg.completion.elementsActionAsSimple": {
      "title": "Simple Elements",
      "description": "Custom elements completion action as simple like `<feTurbulence />`, one item to one name",
      "type": "array",
      "default": [],
      "items": {
        "type": "string",
        "title": "Element name",
        "pattern": "^[a-z]([a-zA-Z0-9-]*)$"
      },
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "svg.completion.emmet": {
      "title": "Enable Emmet-style completion list.",
      "description": "Indicates whether the Completion List of Emmet-styles is enabled.",
      "type": "boolean",
      "default": false,
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "svg.preview.translateExternalAddress": {
      "title": "Svg Preview Translate URI",
      "description": "Svg Preview Auto Translate the external address to the Data URI, This option let Preview can show CROS content, but will not change real situation.",
      "type": "boolean",
      "default": false,
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "svg.preview.disable": {
      "title": "Disable Preview",
      "description": "If you just want use other previewer",
      "type": "boolean",
      "default": false,
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "svg.preview.autoShow": {
      "title": "Auto Show Preview",
      "description": "Auto show preview on side when a SVG document open",
      "type": "boolean",
      "default": false,
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "svg.pathDataHighlight": {
      "description": "Show Grammar Highlight in path data",
      "type": "boolean",
      "default": true,
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svg.minify.cleanupAttrs": {
      "description": "cleanup attributes from newlines, trailing, and repeating spaces",
      "type": "boolean",
      "default": true,
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svg.minify.inlineStyles": {
      "type": "boolean",
      "default": true,
      "description": "move and merge styles from <style> elements to element style attributes",
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svg.minify.removeDoctype": {
      "type": "boolean",
      "default": true,
      "description": "remove doctype declaration",
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svg.minify.removeXMLProcInst": {
      "type": "boolean",
      "default": true,
      "description": "remove XML processing instructions",
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svg.minify.removeComments": {
      "type": "boolean",
      "default": true,
      "description": "remove comments",
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svg.minify.removeMetadata": {
      "type": "boolean",
      "default": true,
      "description": "remove <metadata>",
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svg.minify.removeTitle": {
      "type": "boolean",
      "default": true,
      "description": "remove <title>",
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svg.minify.removeDesc": {
      "type": "boolean",
      "default": true,
      "description": "remove <desc>",
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svg.minify.removeUselessDefs": {
      "type": "boolean",
      "default": true,
      "description": "remove elements of <defs> without id",
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svg.minify.removeXMLNS": {
      "type": "boolean",
      "default": false,
      "description": "removes xmlns attribute (for inline svg, disabled by default)",
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "svg.minify.removeEditorsNSData": {
      "type": "boolean",
      "default": true,
      "description": "remove editors namespaces, elements, and attributes",
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svg.minify.removeEmptyAttrs": {
      "type": "boolean",
      "default": true,
      "description": "remove empty attributes",
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svg.minify.removeHiddenElems": {
      "type": "boolean",
      "default": true,
      "description": "remove hidden elements",
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svg.minify.removeEmptyText": {
      "type": "boolean",
      "default": true,
      "description": "remove empty Text elements",
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svg.minify.removeEmptyContainers": {
      "type": "boolean",
      "default": true,
      "description": "remove empty Container elements",
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svg.minify.removeViewBox": {
      "type": "boolean",
      "default": true,
      "description": "remove viewBox attribute when possible",
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svg.minify.cleanupEnableBackground": {
      "type": "boolean",
      "default": true,
      "description": "remove or cleanup enable-background attribute when possible",
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svg.minify.minifyStyles": {
      "type": "boolean",
      "default": true,
      "description": "minify <style> elements content with CSSO",
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svg.minify.convertStyleToAttrs": {
      "type": "boolean",
      "default": true,
      "description": "convert styles into attributes",
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svg.minify.convertColors": {
      "type": "boolean",
      "default": true,
      "description": "convert colors (from rgb() to #rrggbb, from #rrggbb to #rgb)",
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svg.minify.convertPathData": {
      "type": "boolean",
      "default": true,
      "description": "convert Path data to relative or absolute (whichever is shorter), convert one segment to another, trim useless delimiters, smart rounding, and much more",
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svg.minify.convertTransform": {
      "type": "boolean",
      "default": true,
      "description": "collapse multiple transforms into one, convert matrices to the short aliases, and much more",
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svg.minify.removeUnknownsAndDefaults": {
      "type": "boolean",
      "default": true,
      "description": "remove unknown elements content and attributes, remove attrs with default values",
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svg.minify.removeNonInheritableGroupAttrs": {
      "type": "boolean",
      "default": true,
      "description": "remove non-inheritable group's \"presentation\" attributes",
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svg.minify.removeUselessStrokeAndFill": {
      "type": "boolean",
      "default": true,
      "description": "remove useless stroke and fill attrs",
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svg.minify.removeUnusedNS": {
      "type": "boolean",
      "default": true,
      "description": "remove unused namespaces declaration",
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svg.minify.prefixIds": {
      "type": [
        "boolean",
        "object"
      ],
      "default": true,
      "description": "prefix IDs and classes with the SVG filename or an arbitrary string",
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svg.minify.cleanupIDs": {
      "type": "boolean",
      "default": true,
      "description": "remove unused and minify used IDs",
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svg.minify.cleanupNumericValues": {
      "type": "boolean",
      "default": true,
      "description": "round numeric values to the fixed precision, remove default px units",
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svg.minify.cleanupListOfValues": {
      "type": "boolean",
      "default": true,
      "description": "round numeric values in attributes that take a list of numbers (like viewBox or enable-background)",
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svg.minify.moveElemsAttrsToGroup": {
      "type": "boolean",
      "default": true,
      "description": "move elements' attributes to their enclosing group",
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svg.minify.moveGroupAttrsToElems": {
      "type": "boolean",
      "default": true,
      "description": "move some group attributes to the contained elements",
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svg.minify.collapseGroups": {
      "type": "boolean",
      "default": true,
      "description": "collapse useless groups",
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svg.minify.removeRasterImages": {
      "type": "boolean",
      "default": false,
      "description": "remove raster images (disabled by default)",
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "svg.minify.mergePaths": {
      "type": "boolean",
      "default": true,
      "description": "merge multiple Paths into one",
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svg.minify.convertShapeToPath": {
      "type": "boolean",
      "default": true,
      "description": "convert some basic shapes to <path>",
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svg.minify.convertEllipseToCircle": {
      "type": "boolean",
      "default": true,
      "description": "convert non-eccentric <ellipse> to <circle>",
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svg.minify.sortAttrs": {
      "type": "boolean",
      "default": false,
      "description": "sort element attributes for epic readability (disabled by default)",
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "svg.minify.sortDefsChildren": {
      "type": "boolean",
      "default": true,
      "description": "sort children of <defs> in order to improve compression",
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svg.minify.removeDimensions": {
      "type": "boolean",
      "default": false,
      "description": "remove width/height and add viewBox if it's missing (opposite to removeViewBox, disable it first) (disabled by default)",
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "svg.minify.removeAttrs": {
      "type": "boolean",
      "default": false,
      "description": "remove attributes by pattern (disabled by default)",
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "svg.minify.removeAttributesBySelector": {
      "type": "boolean",
      "default": false,
      "description": "removes attributes of elements that match a css selector (disabled by default)",
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "svg.minify.removeElementsByAttr": {
      "type": "boolean",
      "default": false,
      "description": "remove arbitrary elements by ID or className (disabled by default)",
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "svg.minify.addClassesToSVGElement": {
      "type": "boolean",
      "default": false,
      "description": "add classnames to an outer <svg> element (disabled by default)",
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "svg.minify.addAttributesToSVGElement": {
      "type": "boolean",
      "default": false,
      "description": "adds attributes to an outer <svg> element (disabled by default)",
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "svg.minify.removeOffCanvasPaths": {
      "type": "boolean",
      "default": false,
      "description": "removes elements that are drawn outside of the viewbox (disabled by default)",
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "svg.minify.removeStyleElement": {
      "type": "boolean",
      "default": false,
      "description": "remove <style> elements (disabled by default)",
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "svg.minify.removeScriptElement": {
      "type": "boolean",
      "default": false,
      "description": "remove <script> elements (disabled by default)",
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "svg.minify.reusePaths": {
      "type": "boolean",
      "default": false,
      "description": "Find duplicated elements and replace them with links (disabled by default)",
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "svg.preview.viewMode": {
      "type": "string",
      "default": "onlyOne",
      "description": "How the previewer interacts with the user",
      "enum": [
        "onlyOne",
        "oneByOne"
      ],
      "enumDescriptions": [
        "Only one preview window will be displayed",
        "Each SVG document corresponds to a separate preview window"
      ],
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": "onlyOne",
      "restricted": false
    },
    "svg.preview.mode": {
      "type": "string",
      "default": "svg",
      "description": "How show svg content in preview view",
      "enum": [
        "svg",
        "img"
      ],
      "enumDescriptions": [
        "SVG embedded in HTML",
        "Show SVG in IMG element"
      ],
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": "svg",
      "restricted": false
    },
    "svg.preview.backgroundSaveTo": {
      "type": "string",
      "default": "Workspace",
      "description": "When you change the background color in the preview view, the new settings store the location",
      "enum": [
        "Global",
        "Workspace",
        "NoSave"
      ],
      "enumDescriptions": [
        "Save new background in your global scope",
        "Save new background in your workspace",
        "Only temporarily changed, configuration will not be saved"
      ],
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": "Workspace",
      "restricted": false
    },
    "svg.preview.toolbarSize": {
      "title": "Toolbar Size",
      "description": "This SVG preview toolbar size",
      "type": "string",
      "enum": [
        "mini",
        "middle",
        "large"
      ],
      "default": "middle",
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": "middle",
      "restricted": false
    },
    "svg.preview.background": {
      "title": "Svg Preview Background",
      "type": "string",
      "enum": [
        "editor",
        "transparent",
        "dark-transparent",
        "white",
        "black",
        "custom"
      ],
      "enumDescriptions": [
        "Editor Background",
        "Transparent",
        "Dark Transparent",
        "White",
        "Black",
        "Custom"
      ],
      "default": "editor",
      "description": "Specifies the Svg Preview Background",
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": "editor",
      "restricted": false
    },
    "svg.preview.backgroundCustom": {
      "title": "Svg Preview Custom Background",
      "type": "string",
      "default": "#eee",
      "description": "Specifies the Svg Preview Custom Background",
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": "#eee",
      "restricted": false
    },
    "svg.preview.showRuler": {
      "title": "Show Ruler",
      "type": "boolean",
      "default": false,
      "description": "Preview show ruler by default, you can switch it from toolbar",
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "svg.preview.showCrossLine": {
      "title": "Show Crossline",
      "type": "boolean",
      "default": false,
      "description": "Preview show cross line (will hide mouse pointer) by default, you can switch it from toolbar",
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "svg.preview.autoFit": {
      "title": "Auto Fit",
      "type": "boolean",
      "default": true,
      "description": "Preview show fit mode at startup",
      "scope": 3,
      "source": {
        "id": "jock.svg",
        "displayName": "SVG"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.cargoRunner": {
      "type": [
        "null",
        "string"
      ],
      "default": null,
      "description": "Custom cargo runner extension ID.",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "rust-analyzer.runnableEnv": {
      "anyOf": [
        {
          "type": "null"
        },
        {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "mask": {
                "type": "string",
                "description": "Runnable name mask"
              },
              "env": {
                "type": "object",
                "description": "Variables in form of { \"key\": \"value\"}"
              }
            }
          }
        },
        {
          "type": "object",
          "description": "Variables in form of { \"key\": \"value\"}"
        }
      ],
      "default": null,
      "markdownDescription": "Environment variables passed to the runnable launched using `Test` or `Debug` lens or `rust-analyzer.run` command.",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "rust-analyzer.inlayHints.enable": {
      "type": "boolean",
      "default": true,
      "description": "Whether to show inlay hints.",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.inlayHints.smallerHints": {
      "type": "boolean",
      "default": true,
      "description": "Whether inlay hints font size should be smaller than editor's font size.",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.server.path": {
      "type": [
        "null",
        "string"
      ],
      "scope": 6,
      "default": null,
      "markdownDescription": "Path to rust-analyzer executable (points to bundled binary by default).",
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "rust-analyzer.server.extraEnv": {
      "type": [
        "null",
        "object"
      ],
      "default": null,
      "markdownDescription": "Extra environment variables that will be passed to the rust-analyzer executable. Useful for passing e.g. `RA_LOG` for debugging.",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "rust-analyzer.trace.server": {
      "type": "string",
      "scope": 3,
      "enum": [
        "off",
        "messages",
        "verbose"
      ],
      "enumDescriptions": [
        "No traces",
        "Error only",
        "Full log"
      ],
      "default": "off",
      "description": "Trace requests to the rust-analyzer (this is usually overly verbose and not recommended for regular users).",
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": "off",
      "restricted": false
    },
    "rust-analyzer.trace.extension": {
      "description": "Enable logging of VS Code extensions itself.",
      "type": "boolean",
      "default": false,
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "rust-analyzer.debug.engine": {
      "type": "string",
      "enum": [
        "auto",
        "vadimcn.vscode-lldb",
        "ms-vscode.cpptools"
      ],
      "default": "auto",
      "description": "Preferred debug engine.",
      "markdownEnumDescriptions": [
        "First try to use [CodeLLDB](https://marketplace.visualstudio.com/items?itemName=vadimcn.vscode-lldb), if it's not installed try to use [MS C++ tools](https://marketplace.visualstudio.com/items?itemName=ms-vscode.cpptools).",
        "Use [CodeLLDB](https://marketplace.visualstudio.com/items?itemName=vadimcn.vscode-lldb)",
        "Use [MS C++ tools](https://marketplace.visualstudio.com/items?itemName=ms-vscode.cpptools)"
      ],
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": "auto",
      "restricted": false
    },
    "rust-analyzer.debug.sourceFileMap": {
      "type": [
        "object",
        "string"
      ],
      "const": "auto",
      "description": "Optional source file mappings passed to the debug engine.",
      "default": {
        "/rustc/<id>": "${env:USERPROFILE}/.rustup/toolchains/<toolchain-id>/lib/rustlib/src/rust"
      },
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": {
        "/rustc/<id>": "${env:USERPROFILE}/.rustup/toolchains/<toolchain-id>/lib/rustlib/src/rust"
      },
      "restricted": false
    },
    "rust-analyzer.debug.openDebugPane": {
      "markdownDescription": "Whether to open up the `Debug Panel` on debugging start.",
      "type": "boolean",
      "default": false,
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "rust-analyzer.debug.engineSettings": {
      "type": "object",
      "default": {},
      "markdownDescription": "Optional settings passed to the debug engine. Example: `{ \"lldb\": { \"terminal\":\"external\"} }`",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": {},
      "restricted": false
    },
    "rust-analyzer.assist.exprFillDefault": {
      "markdownDescription": "Placeholder for missing expressions in assists.",
      "default": "todo",
      "type": "string",
      "enum": [
        "todo",
        "default"
      ],
      "enumDescriptions": [
        "Fill missing expressions with the `todo` macro",
        "Fill missing expressions with reasonable defaults, `new` or `default` constructors."
      ],
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": "todo",
      "restricted": false
    },
    "rust-analyzer.assist.importGranularity": {
      "markdownDescription": "How imports should be grouped into use statements.",
      "default": "crate",
      "type": "string",
      "enum": [
        "preserve",
        "crate",
        "module",
        "item"
      ],
      "enumDescriptions": [
        "Do not change the granularity of any imports and preserve the original structure written by the developer.",
        "Merge imports from the same crate into a single use statement. Conversely, imports from different crates are split into separate statements.",
        "Merge imports from the same module into a single use statement. Conversely, imports from different modules are split into separate statements.",
        "Flatten imports so that each has its own use statement."
      ],
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": "crate",
      "restricted": false
    },
    "rust-analyzer.assist.importEnforceGranularity": {
      "markdownDescription": "Whether to enforce the import granularity setting for all files. If set to false rust-analyzer will try to keep import styles consistent per file.",
      "default": false,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "rust-analyzer.assist.importPrefix": {
      "markdownDescription": "The path structure for newly inserted paths to use.",
      "default": "plain",
      "type": "string",
      "enum": [
        "plain",
        "self",
        "crate"
      ],
      "enumDescriptions": [
        "Insert import paths relative to the current module, using up to one `super` prefix if the parent module contains the requested item.",
        "Insert import paths relative to the current module, using up to one `super` prefix if the parent module contains the requested item. Prefixes `self` in front of the path if it starts with a module.",
        "Force import paths to be absolute by always starting them with `crate` or the extern crate name they come from."
      ],
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": "plain",
      "restricted": false
    },
    "rust-analyzer.assist.importGroup": {
      "markdownDescription": "Group inserted imports by the [following order](https://rust-analyzer.github.io/manual.html#auto-import). Groups are separated by newlines.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.assist.allowMergingIntoGlobImports": {
      "markdownDescription": "Whether to allow import insertion to merge new imports into single path glob imports like `use std::fmt::*;`.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.cache.warmup": {
      "markdownDescription": "Warm up caches on project load.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.callInfo.full": {
      "markdownDescription": "Show function name and docs in parameter hints.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.cargo.autoreload": {
      "markdownDescription": "Automatically refresh project info via `cargo metadata` on\n`Cargo.toml` changes.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.cargo.allFeatures": {
      "markdownDescription": "Activate all available features (`--all-features`).",
      "default": false,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "rust-analyzer.cargo.unsetTest": {
      "markdownDescription": "Unsets `#[cfg(test)]` for the specified crates.",
      "default": [
        "core"
      ],
      "type": "array",
      "items": {
        "type": "string"
      },
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": [
        "core"
      ],
      "restricted": false
    },
    "rust-analyzer.cargo.features": {
      "markdownDescription": "List of features to activate.",
      "default": [],
      "type": "array",
      "items": {
        "type": "string"
      },
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "rust-analyzer.cargo.runBuildScripts": {
      "markdownDescription": "Run build scripts (`build.rs`) for more precise code analysis.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.cargo.useRustcWrapperForBuildScripts": {
      "markdownDescription": "Use `RUSTC_WRAPPER=rust-analyzer` when running build scripts to\navoid compiling unnecessary things.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.cargo.noDefaultFeatures": {
      "markdownDescription": "Do not activate the `default` feature.",
      "default": false,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "rust-analyzer.cargo.target": {
      "markdownDescription": "Compilation target (target triple).",
      "default": null,
      "type": [
        "null",
        "string"
      ],
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "rust-analyzer.cargo.noSysroot": {
      "markdownDescription": "Internal config for debugging, disables loading of sysroot crates.",
      "default": false,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "rust-analyzer.checkOnSave.enable": {
      "markdownDescription": "Run specified `cargo check` command for diagnostics on save.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.checkOnSave.allFeatures": {
      "markdownDescription": "Check with all features (`--all-features`).\nDefaults to `#rust-analyzer.cargo.allFeatures#`.",
      "default": null,
      "type": [
        "null",
        "boolean"
      ],
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "rust-analyzer.checkOnSave.allTargets": {
      "markdownDescription": "Check all targets and tests (`--all-targets`).",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.checkOnSave.command": {
      "markdownDescription": "Cargo command to use for `cargo check`.",
      "default": "check",
      "type": "string",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": "check",
      "restricted": false
    },
    "rust-analyzer.checkOnSave.noDefaultFeatures": {
      "markdownDescription": "Do not activate the `default` feature.",
      "default": null,
      "type": [
        "null",
        "boolean"
      ],
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "rust-analyzer.checkOnSave.target": {
      "markdownDescription": "Check for a specific target. Defaults to\n`#rust-analyzer.cargo.target#`.",
      "default": null,
      "type": [
        "null",
        "string"
      ],
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "rust-analyzer.checkOnSave.extraArgs": {
      "markdownDescription": "Extra arguments for `cargo check`.",
      "default": [],
      "type": "array",
      "items": {
        "type": "string"
      },
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "rust-analyzer.checkOnSave.features": {
      "markdownDescription": "List of features to activate. Defaults to\n`#rust-analyzer.cargo.features#`.",
      "default": null,
      "type": [
        "null",
        "array"
      ],
      "items": {
        "type": "string"
      },
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "rust-analyzer.checkOnSave.overrideCommand": {
      "markdownDescription": "Advanced option, fully override the command rust-analyzer uses for\nchecking. The command should include `--message-format=json` or\nsimilar option.",
      "default": null,
      "type": [
        "null",
        "array"
      ],
      "items": {
        "type": "string"
      },
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "rust-analyzer.completion.addCallArgumentSnippets": {
      "markdownDescription": "Whether to add argument snippets when completing functions.\nOnly applies when `#rust-analyzer.completion.addCallParenthesis#` is set.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.completion.addCallParenthesis": {
      "markdownDescription": "Whether to add parenthesis when completing functions.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.completion.snippets": {
      "markdownDescription": "Custom completion snippets.",
      "default": {
        "Arc::new": {
          "postfix": "arc",
          "body": "Arc::new(${receiver})",
          "requires": "std::sync::Arc",
          "description": "Put the expression into an `Arc`",
          "scope": "expr"
        },
        "Rc::new": {
          "postfix": "rc",
          "body": "Rc::new(${receiver})",
          "requires": "std::rc::Rc",
          "description": "Put the expression into an `Rc`",
          "scope": "expr"
        },
        "Box::pin": {
          "postfix": "pinbox",
          "body": "Box::pin(${receiver})",
          "requires": "std::boxed::Box",
          "description": "Put the expression into a pinned `Box`",
          "scope": "expr"
        },
        "Ok": {
          "postfix": "ok",
          "body": "Ok(${receiver})",
          "description": "Wrap the expression in a `Result::Ok`",
          "scope": "expr"
        },
        "Err": {
          "postfix": "err",
          "body": "Err(${receiver})",
          "description": "Wrap the expression in a `Result::Err`",
          "scope": "expr"
        },
        "Some": {
          "postfix": "some",
          "body": "Some(${receiver})",
          "description": "Wrap the expression in an `Option::Some`",
          "scope": "expr"
        }
      },
      "type": "object",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": {
        "Arc::new": {
          "postfix": "arc",
          "body": "Arc::new(${receiver})",
          "requires": "std::sync::Arc",
          "description": "Put the expression into an `Arc`",
          "scope": "expr"
        },
        "Rc::new": {
          "postfix": "rc",
          "body": "Rc::new(${receiver})",
          "requires": "std::rc::Rc",
          "description": "Put the expression into an `Rc`",
          "scope": "expr"
        },
        "Box::pin": {
          "postfix": "pinbox",
          "body": "Box::pin(${receiver})",
          "requires": "std::boxed::Box",
          "description": "Put the expression into a pinned `Box`",
          "scope": "expr"
        },
        "Ok": {
          "postfix": "ok",
          "body": "Ok(${receiver})",
          "description": "Wrap the expression in a `Result::Ok`",
          "scope": "expr"
        },
        "Err": {
          "postfix": "err",
          "body": "Err(${receiver})",
          "description": "Wrap the expression in a `Result::Err`",
          "scope": "expr"
        },
        "Some": {
          "postfix": "some",
          "body": "Some(${receiver})",
          "description": "Wrap the expression in an `Option::Some`",
          "scope": "expr"
        }
      },
      "restricted": false
    },
    "rust-analyzer.completion.postfix.enable": {
      "markdownDescription": "Whether to show postfix snippets like `dbg`, `if`, `not`, etc.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.completion.autoimport.enable": {
      "markdownDescription": "Toggles the additional completions that automatically add imports when completed.\nNote that your client must specify the `additionalTextEdits` LSP client capability to truly have this feature enabled.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.completion.autoself.enable": {
      "markdownDescription": "Toggles the additional completions that automatically show method calls and field accesses\nwith `self` prefixed to them when inside a method.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.completion.privateEditable.enable": {
      "markdownDescription": "Enables completions of private items and fields that are defined in the current workspace even if they are not visible at the current position.",
      "default": false,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "rust-analyzer.diagnostics.enable": {
      "markdownDescription": "Whether to show native rust-analyzer diagnostics.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.diagnostics.enableExperimental": {
      "markdownDescription": "Whether to show experimental rust-analyzer diagnostics that might\nhave more false positives than usual.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.diagnostics.disabled": {
      "markdownDescription": "List of rust-analyzer diagnostics to disable.",
      "default": [],
      "type": "array",
      "items": {
        "type": "string"
      },
      "uniqueItems": true,
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "rust-analyzer.diagnostics.remapPrefix": {
      "markdownDescription": "Map of prefixes to be substituted when parsing diagnostic file paths.\nThis should be the reverse mapping of what is passed to `rustc` as `--remap-path-prefix`.",
      "default": {},
      "type": "object",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": {},
      "restricted": false
    },
    "rust-analyzer.diagnostics.warningsAsHint": {
      "markdownDescription": "List of warnings that should be displayed with hint severity.\n\nThe warnings will be indicated by faded text or three dots in code\nand will not show up in the `Problems Panel`.",
      "default": [],
      "type": "array",
      "items": {
        "type": "string"
      },
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "rust-analyzer.diagnostics.warningsAsInfo": {
      "markdownDescription": "List of warnings that should be displayed with info severity.\n\nThe warnings will be indicated by a blue squiggly underline in code\nand a blue icon in the `Problems Panel`.",
      "default": [],
      "type": "array",
      "items": {
        "type": "string"
      },
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "rust-analyzer.experimental.procAttrMacros": {
      "markdownDescription": "Expand attribute macros.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.files.watcher": {
      "markdownDescription": "Controls file watching implementation.",
      "default": "client",
      "type": "string",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": "client",
      "restricted": false
    },
    "rust-analyzer.files.excludeDirs": {
      "markdownDescription": "These directories will be ignored by rust-analyzer. They are\nrelative to the workspace root, and globs are not supported. You may\nalso need to add the folders to Code's `files.watcherExclude`.",
      "default": [],
      "type": "array",
      "items": {
        "type": "string"
      },
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "rust-analyzer.highlightRelated.references": {
      "markdownDescription": "Enables highlighting of related references while hovering your mouse above any identifier.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.highlightRelated.exitPoints": {
      "markdownDescription": "Enables highlighting of all exit points while hovering your mouse above any `return`, `?`, or return type arrow (`->`).",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.highlightRelated.breakPoints": {
      "markdownDescription": "Enables highlighting of related references while hovering your mouse `break`, `loop`, `while`, or `for` keywords.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.highlightRelated.yieldPoints": {
      "markdownDescription": "Enables highlighting of all break points for a loop or block context while hovering your mouse above any `async` or `await` keywords.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.highlighting.strings": {
      "markdownDescription": "Use semantic tokens for strings.\n\nIn some editors (e.g. vscode) semantic tokens override other highlighting grammars.\nBy disabling semantic tokens for strings, other grammars can be used to highlight\ntheir contents.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.hover.documentation": {
      "markdownDescription": "Whether to show documentation on hover.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.hover.linksInHover": {
      "markdownDescription": "Use markdown syntax for links in hover.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.hoverActions.debug": {
      "markdownDescription": "Whether to show `Debug` action. Only applies when\n`#rust-analyzer.hoverActions.enable#` is set.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.hoverActions.enable": {
      "markdownDescription": "Whether to show HoverActions in Rust files.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.hoverActions.gotoTypeDef": {
      "markdownDescription": "Whether to show `Go to Type Definition` action. Only applies when\n`#rust-analyzer.hoverActions.enable#` is set.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.hoverActions.implementations": {
      "markdownDescription": "Whether to show `Implementations` action. Only applies when\n`#rust-analyzer.hoverActions.enable#` is set.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.hoverActions.references": {
      "markdownDescription": "Whether to show `References` action. Only applies when\n`#rust-analyzer.hoverActions.enable#` is set.",
      "default": false,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "rust-analyzer.hoverActions.run": {
      "markdownDescription": "Whether to show `Run` action. Only applies when\n`#rust-analyzer.hoverActions.enable#` is set.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.inlayHints.chainingHints": {
      "markdownDescription": "Whether to show inlay type hints for method chains.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.inlayHints.maxLength": {
      "markdownDescription": "Maximum length for inlay hints. Set to null to have an unlimited length.",
      "default": 25,
      "type": [
        "null",
        "integer"
      ],
      "minimum": 0,
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": 25,
      "restricted": false
    },
    "rust-analyzer.inlayHints.parameterHints": {
      "markdownDescription": "Whether to show function parameter name inlay hints at the call\nsite.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.inlayHints.typeHints": {
      "markdownDescription": "Whether to show inlay type hints for variables.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.inlayHints.hideNamedConstructorHints": {
      "markdownDescription": "Whether to hide inlay hints for constructors.",
      "default": false,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "rust-analyzer.joinLines.joinElseIf": {
      "markdownDescription": "Join lines inserts else between consecutive ifs.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.joinLines.removeTrailingComma": {
      "markdownDescription": "Join lines removes trailing commas.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.joinLines.unwrapTrivialBlock": {
      "markdownDescription": "Join lines unwraps trivial blocks.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.joinLines.joinAssignments": {
      "markdownDescription": "Join lines merges consecutive declaration and initialization of an assignment.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.lens.debug": {
      "markdownDescription": "Whether to show `Debug` lens. Only applies when\n`#rust-analyzer.lens.enable#` is set.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.lens.enable": {
      "markdownDescription": "Whether to show CodeLens in Rust files.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.lens.implementations": {
      "markdownDescription": "Whether to show `Implementations` lens. Only applies when\n`#rust-analyzer.lens.enable#` is set.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.lens.run": {
      "markdownDescription": "Whether to show `Run` lens. Only applies when\n`#rust-analyzer.lens.enable#` is set.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.lens.methodReferences": {
      "markdownDescription": "Whether to show `Method References` lens. Only applies when\n`#rust-analyzer.lens.enable#` is set.",
      "default": false,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "rust-analyzer.lens.references": {
      "markdownDescription": "Whether to show `References` lens for Struct, Enum, Union and Trait.\nOnly applies when `#rust-analyzer.lens.enable#` is set.",
      "default": false,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "rust-analyzer.lens.enumVariantReferences": {
      "markdownDescription": "Whether to show `References` lens for Enum Variants.\nOnly applies when `#rust-analyzer.lens.enable#` is set.",
      "default": false,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "rust-analyzer.lens.forceCustomCommands": {
      "markdownDescription": "Internal config: use custom client-side commands even when the\nclient doesn't set the corresponding capability.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.linkedProjects": {
      "markdownDescription": "Disable project auto-discovery in favor of explicitly specified set\nof projects.\n\nElements must be paths pointing to `Cargo.toml`,\n`rust-project.json`, or JSON objects in `rust-project.json` format.",
      "default": [],
      "type": "array",
      "items": {
        "type": [
          "string",
          "object"
        ]
      },
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "rust-analyzer.lruCapacity": {
      "markdownDescription": "Number of syntax trees rust-analyzer keeps in memory. Defaults to 128.",
      "default": null,
      "type": [
        "null",
        "integer"
      ],
      "minimum": 0,
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "rust-analyzer.notifications.cargoTomlNotFound": {
      "markdownDescription": "Whether to show `can't find Cargo.toml` error message.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.primeCaches.numThreads": {
      "markdownDescription": "How many worker threads to to handle priming caches. The default `0` means to pick automatically.",
      "default": 0,
      "type": "number",
      "minimum": 0,
      "maximum": 255,
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": 0,
      "restricted": false
    },
    "rust-analyzer.procMacro.enable": {
      "markdownDescription": "Enable support for procedural macros, implies `#rust-analyzer.cargo.runBuildScripts#`.",
      "default": true,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "rust-analyzer.procMacro.server": {
      "markdownDescription": "Internal config, path to proc-macro server executable (typically,\nthis is rust-analyzer itself, but we override this in tests).",
      "default": null,
      "type": [
        "null",
        "string"
      ],
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "rust-analyzer.procMacro.ignored": {
      "markdownDescription": "These proc-macros will be ignored when trying to expand them.\n\nThis config takes a map of crate names with the exported proc-macro names to ignore as values.",
      "default": {},
      "type": "object",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": {},
      "restricted": false
    },
    "rust-analyzer.runnables.overrideCargo": {
      "markdownDescription": "Command to be executed instead of 'cargo' for runnables.",
      "default": null,
      "type": [
        "null",
        "string"
      ],
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "rust-analyzer.runnables.cargoExtraArgs": {
      "markdownDescription": "Additional arguments to be passed to cargo for runnables such as\ntests or binaries. For example, it may be `--release`.",
      "default": [],
      "type": "array",
      "items": {
        "type": "string"
      },
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "rust-analyzer.rustcSource": {
      "markdownDescription": "Path to the Cargo.toml of the rust compiler workspace, for usage in rustc_private\nprojects, or \"discover\" to try to automatically find it if the `rustc-dev` component\nis installed.\n\nAny project which uses rust-analyzer with the rustcPrivate\ncrates must set `[package.metadata.rust-analyzer] rustc_private=true` to use it.\n\nThis option does not take effect until rust-analyzer is restarted.",
      "default": null,
      "type": [
        "null",
        "string"
      ],
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "rust-analyzer.rustfmt.extraArgs": {
      "markdownDescription": "Additional arguments to `rustfmt`.",
      "default": [],
      "type": "array",
      "items": {
        "type": "string"
      },
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "rust-analyzer.rustfmt.overrideCommand": {
      "markdownDescription": "Advanced option, fully override the command rust-analyzer uses for\nformatting.",
      "default": null,
      "type": [
        "null",
        "array"
      ],
      "items": {
        "type": "string"
      },
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "rust-analyzer.rustfmt.enableRangeFormatting": {
      "markdownDescription": "Enables the use of rustfmt's unstable range formatting command for the\n`textDocument/rangeFormatting` request. The rustfmt option is unstable and only\navailable on a nightly build.",
      "default": false,
      "type": "boolean",
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "rust-analyzer.workspace.symbol.search.scope": {
      "markdownDescription": "Workspace symbol search scope.",
      "default": "workspace",
      "type": "string",
      "enum": [
        "workspace",
        "workspace_and_dependencies"
      ],
      "enumDescriptions": [
        "Search in current workspace only",
        "Search in current workspace and dependencies"
      ],
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": "workspace",
      "restricted": false
    },
    "rust-analyzer.workspace.symbol.search.kind": {
      "markdownDescription": "Workspace symbol search kind.",
      "default": "only_types",
      "type": "string",
      "enum": [
        "only_types",
        "all_symbols"
      ],
      "enumDescriptions": [
        "Search for types only",
        "Search for all symbols kinds"
      ],
      "scope": 3,
      "source": {
        "id": "matklad.rust-analyzer",
        "displayName": "rust-analyzer"
      },
      "defaultDefaultValue": "only_types",
      "restricted": false
    },
    "docker.promptForRegistryWhenPushingImages": {
      "type": "boolean",
      "default": true,
      "description": "Prompt for registry selection if the image is not explicitly tagged.",
      "scope": 3,
      "source": {
        "id": "ms-azuretools.vscode-docker",
        "displayName": "Docker"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "docker.explorerRefreshInterval": {
      "type": "number",
      "default": 2000,
      "description": "Docker view refresh interval (milliseconds)",
      "scope": 3,
      "source": {
        "id": "ms-azuretools.vscode-docker",
        "displayName": "Docker"
      },
      "defaultDefaultValue": 2000,
      "restricted": false
    },
    "docker.commands.build": {
      "oneOf": [
        {
          "type": "array",
          "items": {
            "properties": {
              "template": {
                "type": "string",
                "description": "The command template."
              },
              "label": {
                "type": "string",
                "description": "The label displayed to the user."
              },
              "match": {
                "type": "string",
                "description": "The regular expression for choosing the right template. Checked against container name, container's image name, etc."
              },
              "contextTypes": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "moby",
                    "aci"
                  ]
                },
                "description": "The context types in which the command template applies. If undefined or empty, the template applies in all context types."
              }
            },
            "required": [
              "label",
              "template"
            ]
          }
        },
        {
          "type": "string"
        }
      ],
      "default": "docker build --pull --rm -f \"${dockerfile}\" -t ${tag} \"${context}\"",
      "description": "Command template(s) for `docker build` commands.",
      "scope": 3,
      "source": {
        "id": "ms-azuretools.vscode-docker",
        "displayName": "Docker"
      },
      "defaultDefaultValue": "docker build --pull --rm -f \"${dockerfile}\" -t ${tag} \"${context}\"",
      "restricted": true
    },
    "docker.commands.run": {
      "oneOf": [
        {
          "type": "array",
          "items": {
            "properties": {
              "template": {
                "type": "string",
                "description": "The command template."
              },
              "label": {
                "type": "string",
                "description": "The label displayed to the user."
              },
              "match": {
                "type": "string",
                "description": "The regular expression for choosing the right template. Checked against image name, etc."
              },
              "contextTypes": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "moby",
                    "aci"
                  ]
                },
                "description": "The context types in which the command template applies. If undefined or empty, the template applies in all context types."
              }
            },
            "required": [
              "label",
              "template"
            ]
          }
        },
        {
          "type": "string"
        }
      ],
      "default": "docker run --rm -d ${exposedPorts} ${tag}",
      "description": "Command templates for `docker run` commands.",
      "scope": 3,
      "source": {
        "id": "ms-azuretools.vscode-docker",
        "displayName": "Docker"
      },
      "defaultDefaultValue": "docker run --rm -d ${exposedPorts} ${tag}",
      "restricted": true
    },
    "docker.commands.runInteractive": {
      "oneOf": [
        {
          "type": "array",
          "items": {
            "properties": {
              "template": {
                "type": "string",
                "description": "The command template."
              },
              "label": {
                "type": "string",
                "description": "The label displayed to the user."
              },
              "match": {
                "type": "string",
                "description": "The regular expression for choosing the right template. Checked against image name, etc."
              },
              "contextTypes": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "moby",
                    "aci"
                  ]
                },
                "description": "The context types in which the command template applies. If undefined or empty, the template applies in all context types."
              }
            },
            "required": [
              "label",
              "template"
            ]
          }
        },
        {
          "type": "string"
        }
      ],
      "default": "docker run --rm -it ${exposedPorts} ${tag}",
      "description": "Command templates for `docker run -it` (interactive) commands.",
      "scope": 3,
      "source": {
        "id": "ms-azuretools.vscode-docker",
        "displayName": "Docker"
      },
      "defaultDefaultValue": "docker run --rm -it ${exposedPorts} ${tag}",
      "restricted": true
    },
    "docker.commands.attach": {
      "oneOf": [
        {
          "type": "array",
          "items": {
            "properties": {
              "template": {
                "type": "string",
                "description": "The command template."
              },
              "label": {
                "type": "string",
                "description": "The label displayed to the user."
              },
              "match": {
                "type": "string",
                "description": "The regular expression for choosing the right template. Checked against container name, container's image name, etc."
              },
              "contextTypes": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "moby",
                    "aci"
                  ]
                },
                "description": "The context types in which the command template applies. If undefined or empty, the template applies in all context types."
              }
            },
            "required": [
              "label",
              "template"
            ]
          }
        },
        {
          "type": "string"
        }
      ],
      "default": "docker exec -it ${containerId} ${shellCommand}",
      "description": "Command templates for `docker attach` / `docker exec -it` commands.",
      "scope": 3,
      "source": {
        "id": "ms-azuretools.vscode-docker",
        "displayName": "Docker"
      },
      "defaultDefaultValue": "docker exec -it ${containerId} ${shellCommand}",
      "restricted": true
    },
    "docker.commands.logs": {
      "oneOf": [
        {
          "type": "array",
          "items": {
            "properties": {
              "template": {
                "type": "string",
                "description": "The command template."
              },
              "label": {
                "type": "string",
                "description": "The label displayed to the user."
              },
              "match": {
                "type": "string",
                "description": "The regular expression for choosing the right template. Checked against container name, container's image name, etc."
              },
              "contextTypes": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "moby",
                    "aci"
                  ]
                },
                "description": "The context types in which the command template applies. If undefined or empty, the template applies in all context types."
              }
            },
            "required": [
              "label",
              "template"
            ]
          }
        },
        {
          "type": "string"
        }
      ],
      "default": "docker logs --tail 1000 -f ${containerId}",
      "description": "Command templates for `docker logs` commands.",
      "scope": 3,
      "source": {
        "id": "ms-azuretools.vscode-docker",
        "displayName": "Docker"
      },
      "defaultDefaultValue": "docker logs --tail 1000 -f ${containerId}",
      "restricted": true
    },
    "docker.commands.composeUp": {
      "oneOf": [
        {
          "type": "array",
          "items": {
            "properties": {
              "template": {
                "type": "string",
                "description": "The command template."
              },
              "label": {
                "type": "string",
                "description": "The label displayed to the user."
              },
              "match": {
                "type": "string",
                "description": "The regular expression for choosing the right template. Checked against docker-compose YAML files, folder name, etc."
              },
              "contextTypes": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "moby",
                    "aci"
                  ]
                },
                "description": "The context types in which the command template applies. If undefined or empty, the template applies in all context types."
              }
            },
            "required": [
              "label",
              "template"
            ]
          }
        },
        {
          "type": "string"
        }
      ],
      "default": [
        {
          "label": "Compose Up",
          "template": "docker-compose ${configurationFile} up ${detached} ${build}",
          "contextTypes": [
            "moby"
          ]
        },
        {
          "label": "Compose Up",
          "template": "docker compose ${configurationFile} up ${detached}"
        }
      ],
      "description": "Command templates for `docker-compose up` commands.",
      "scope": 3,
      "source": {
        "id": "ms-azuretools.vscode-docker",
        "displayName": "Docker"
      },
      "defaultDefaultValue": [
        {
          "label": "Compose Up",
          "template": "docker-compose ${configurationFile} up ${detached} ${build}",
          "contextTypes": [
            "moby"
          ]
        },
        {
          "label": "Compose Up",
          "template": "docker compose ${configurationFile} up ${detached}"
        }
      ],
      "restricted": true
    },
    "docker.commands.composeUpSubset": {
      "oneOf": [
        {
          "type": "array",
          "items": {
            "properties": {
              "template": {
                "type": "string",
                "description": "The command template."
              },
              "label": {
                "type": "string",
                "description": "The label displayed to the user."
              },
              "match": {
                "type": "string",
                "description": "The regular expression for choosing the right template. Checked against docker-compose YAML files, folder name, etc."
              },
              "contextTypes": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "moby",
                    "aci"
                  ]
                },
                "description": "The context types in which the command template applies. If undefined or empty, the template applies in all context types."
              }
            },
            "required": [
              "label",
              "template"
            ]
          }
        },
        {
          "type": "string"
        }
      ],
      "default": [
        {
          "label": "Compose Up",
          "template": "docker-compose ${profileList} ${configurationFile} up ${detached} ${build} ${serviceList}",
          "contextTypes": [
            "moby"
          ]
        },
        {
          "label": "Compose Up",
          "template": "docker compose ${configurationFile} ${profileList} up ${detached} ${serviceList}"
        }
      ],
      "description": "Command templates for `docker-compose up <subset>` commands.",
      "scope": 3,
      "source": {
        "id": "ms-azuretools.vscode-docker",
        "displayName": "Docker"
      },
      "defaultDefaultValue": [
        {
          "label": "Compose Up",
          "template": "docker-compose ${profileList} ${configurationFile} up ${detached} ${build} ${serviceList}",
          "contextTypes": [
            "moby"
          ]
        },
        {
          "label": "Compose Up",
          "template": "docker compose ${configurationFile} ${profileList} up ${detached} ${serviceList}"
        }
      ],
      "restricted": false
    },
    "docker.commands.composeDown": {
      "oneOf": [
        {
          "type": "array",
          "items": {
            "properties": {
              "template": {
                "type": "string",
                "description": "The command template."
              },
              "label": {
                "type": "string",
                "description": "The label displayed to the user."
              },
              "match": {
                "type": "string",
                "description": "The regular expression for choosing the right template. Checked against docker-compose YAML files, folder name, etc."
              },
              "contextTypes": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "moby",
                    "aci"
                  ]
                },
                "description": "The context types in which the command template applies. If undefined or empty, the template applies in all context types."
              }
            },
            "required": [
              "label",
              "template"
            ]
          }
        },
        {
          "type": "string"
        }
      ],
      "default": [
        {
          "label": "Compose Down",
          "template": "docker-compose ${configurationFile} down",
          "contextTypes": [
            "moby"
          ]
        },
        {
          "label": "Compose Down",
          "template": "docker compose ${configurationFile} down"
        }
      ],
      "description": "Command templates for `docker-compose down` commands.",
      "scope": 3,
      "source": {
        "id": "ms-azuretools.vscode-docker",
        "displayName": "Docker"
      },
      "defaultDefaultValue": [
        {
          "label": "Compose Down",
          "template": "docker-compose ${configurationFile} down",
          "contextTypes": [
            "moby"
          ]
        },
        {
          "label": "Compose Down",
          "template": "docker compose ${configurationFile} down"
        }
      ],
      "restricted": true
    },
    "docker.containers.groupBy": {
      "type": "string",
      "default": "Compose Project Name",
      "description": "The property to use to group containers in Docker view: ContainerId, ContainerName, CreatedTime, FullTag, ImageId, Networks, Ports, Registry, Repository, RepositoryName, RepositoryNameAndTag, State, Status, Tag, or None",
      "enum": [
        "Compose Project Name",
        "ContainerId",
        "ContainerName",
        "CreatedTime",
        "FullTag",
        "ImageId",
        "Networks",
        "None",
        "Ports",
        "Registry",
        "Repository",
        "RepositoryName",
        "RepositoryNameAndTag",
        "State",
        "Status",
        "Tag"
      ],
      "scope": 3,
      "source": {
        "id": "ms-azuretools.vscode-docker",
        "displayName": "Docker"
      },
      "defaultDefaultValue": "Compose Project Name",
      "restricted": false
    },
    "docker.containers.description": {
      "type": "array",
      "default": [
        "ContainerName",
        "Status"
      ],
      "description": "Any secondary properties to display for a container (an array). Possible elements include: ContainerId, ContainerName, CreatedTime, FullTag, ImageId, Networks, Ports, Registry, Repository, RepositoryName, RepositoryNameAndTag, State, Status, and Tag",
      "items": {
        "type": "string",
        "enum": [
          "Compose Project Name",
          "ContainerId",
          "ContainerName",
          "CreatedTime",
          "FullTag",
          "ImageId",
          "Networks",
          "Ports",
          "Registry",
          "Repository",
          "RepositoryName",
          "RepositoryNameAndTag",
          "State",
          "Status",
          "Tag"
        ]
      },
      "scope": 3,
      "source": {
        "id": "ms-azuretools.vscode-docker",
        "displayName": "Docker"
      },
      "defaultDefaultValue": [
        "ContainerName",
        "Status"
      ],
      "restricted": false
    },
    "docker.containers.label": {
      "type": "string",
      "default": "FullTag",
      "description": "The primary property to display for a container: ContainerId, ContainerName, CreatedTime, FullTag, ImageId, Networks, Ports, Registry, Repository, RepositoryName, RepositoryNameAndTag, State, Status, or Tag",
      "enum": [
        "Compose Project Name",
        "ContainerId",
        "ContainerName",
        "CreatedTime",
        "FullTag",
        "ImageId",
        "Networks",
        "Ports",
        "Registry",
        "Repository",
        "RepositoryName",
        "RepositoryNameAndTag",
        "State",
        "Status",
        "Tag"
      ],
      "scope": 3,
      "source": {
        "id": "ms-azuretools.vscode-docker",
        "displayName": "Docker"
      },
      "defaultDefaultValue": "FullTag",
      "restricted": false
    },
    "docker.containers.sortBy": {
      "type": "string",
      "default": "CreatedTime",
      "description": "The property to use to sort containers in Docker view: CreatedTime or Label",
      "enum": [
        "CreatedTime",
        "Label"
      ],
      "scope": 3,
      "source": {
        "id": "ms-azuretools.vscode-docker",
        "displayName": "Docker"
      },
      "defaultDefaultValue": "CreatedTime",
      "restricted": false
    },
    "docker.contexts.description": {
      "type": "array",
      "default": [
        "Description"
      ],
      "description": "Any secondary properties to display for a Docker context (an array). Possible elements include: Name, Description and DockerEndpoint",
      "items": {
        "type": "string",
        "enum": [
          "Name",
          "Description",
          "DockerEndpoint"
        ]
      },
      "scope": 3,
      "source": {
        "id": "ms-azuretools.vscode-docker",
        "displayName": "Docker"
      },
      "defaultDefaultValue": [
        "Description"
      ],
      "restricted": false
    },
    "docker.contexts.label": {
      "type": "string",
      "default": "Name",
      "description": "The primary property to display for a Docker context: Name, Description or DockerEndpoint",
      "enum": [
        "Name",
        "Description",
        "DockerEndpoint"
      ],
      "scope": 3,
      "source": {
        "id": "ms-azuretools.vscode-docker",
        "displayName": "Docker"
      },
      "defaultDefaultValue": "Name",
      "restricted": false
    },
    "docker.images.groupBy": {
      "type": "string",
      "default": "Repository",
      "description": "The property to use to group images in Docker view: CreatedTime, FullTag, ImageId, None, Registry, Repository, RepositoryName, RepositoryNameAndTag, or Tag",
      "enum": [
        "CreatedTime",
        "FullTag",
        "ImageId",
        "None",
        "Registry",
        "Repository",
        "RepositoryName",
        "RepositoryNameAndTag",
        "Tag"
      ],
      "scope": 3,
      "source": {
        "id": "ms-azuretools.vscode-docker",
        "displayName": "Docker"
      },
      "defaultDefaultValue": "Repository",
      "restricted": false
    },
    "docker.images.description": {
      "type": "array",
      "default": [
        "CreatedTime"
      ],
      "description": "Any secondary properties to display for a image (an array). Possible elements include: CreatedTime, FullTag, ImageId, Registry, Repository, RepositoryName, RepositoryNameAndTag, Tag, and Size",
      "items": {
        "type": "string",
        "enum": [
          "CreatedTime",
          "FullTag",
          "ImageId",
          "Registry",
          "Repository",
          "RepositoryName",
          "RepositoryNameAndTag",
          "Tag",
          "Size"
        ]
      },
      "scope": 3,
      "source": {
        "id": "ms-azuretools.vscode-docker",
        "displayName": "Docker"
      },
      "defaultDefaultValue": [
        "CreatedTime"
      ],
      "restricted": false
    },
    "docker.images.label": {
      "type": "string",
      "default": "Tag",
      "description": "The primary property to display for a image: CreatedTime, FullTag, ImageId, Registry, Repository, RepositoryName, RepositoryNameAndTag, Tag, or Size",
      "enum": [
        "CreatedTime",
        "FullTag",
        "ImageId",
        "Registry",
        "Repository",
        "RepositoryName",
        "RepositoryNameAndTag",
        "Tag",
        "Size"
      ],
      "scope": 3,
      "source": {
        "id": "ms-azuretools.vscode-docker",
        "displayName": "Docker"
      },
      "defaultDefaultValue": "Tag",
      "restricted": false
    },
    "docker.images.sortBy": {
      "type": "string",
      "default": "CreatedTime",
      "description": "The property to use to sort images in Docker view: CreatedTime, Label, or Size",
      "enum": [
        "CreatedTime",
        "Label",
        "Size"
      ],
      "scope": 3,
      "source": {
        "id": "ms-azuretools.vscode-docker",
        "displayName": "Docker"
      },
      "defaultDefaultValue": "CreatedTime",
      "restricted": false
    },
    "docker.images.checkForOutdatedImages": {
      "type": "boolean",
      "default": true,
      "description": "Check for outdated base images once per Visual Studio Code session",
      "scope": 3,
      "source": {
        "id": "ms-azuretools.vscode-docker",
        "displayName": "Docker"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "docker.networks.groupBy": {
      "type": "string",
      "default": "None",
      "description": "The property to use to group networks in Docker view: CreatedTime, NetworkDriver, NetworkId, NetworkName, or None",
      "enum": [
        "CreatedTime",
        "NetworkDriver",
        "NetworkId",
        "NetworkName",
        "None"
      ],
      "scope": 3,
      "source": {
        "id": "ms-azuretools.vscode-docker",
        "displayName": "Docker"
      },
      "defaultDefaultValue": "None",
      "restricted": false
    },
    "docker.networks.description": {
      "type": "array",
      "default": [
        "NetworkDriver",
        "CreatedTime"
      ],
      "description": "Any secondary properties to display for a Docker network (an array). Possible elements include CreatedTime, NetworkDriver, NetworkId, and NetworkName",
      "items": {
        "type": "string",
        "enum": [
          "CreatedTime",
          "NetworkDriver",
          "NetworkId",
          "NetworkName"
        ]
      },
      "scope": 3,
      "source": {
        "id": "ms-azuretools.vscode-docker",
        "displayName": "Docker"
      },
      "defaultDefaultValue": [
        "NetworkDriver",
        "CreatedTime"
      ],
      "restricted": false
    },
    "docker.networks.showBuiltInNetworks": {
      "type": "boolean",
      "default": true,
      "description": "Show the built-in networks in the explorer.",
      "scope": 3,
      "source": {
        "id": "ms-azuretools.vscode-docker",
        "displayName": "Docker"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "docker.networks.label": {
      "type": "string",
      "default": "NetworkName",
      "description": "The primary property to display for a Docker network: CreatedTime, NetworkDriver, NetworkId, or NetworkName",
      "enum": [
        "CreatedTime",
        "NetworkDriver",
        "NetworkId",
        "NetworkName"
      ],
      "scope": 3,
      "source": {
        "id": "ms-azuretools.vscode-docker",
        "displayName": "Docker"
      },
      "defaultDefaultValue": "NetworkName",
      "restricted": false
    },
    "docker.networks.sortBy": {
      "type": "string",
      "default": "CreatedTime",
      "description": "The property to use to sort networks in Docker view: CreatedTime or Label",
      "enum": [
        "CreatedTime",
        "Label"
      ],
      "scope": 3,
      "source": {
        "id": "ms-azuretools.vscode-docker",
        "displayName": "Docker"
      },
      "defaultDefaultValue": "CreatedTime",
      "restricted": false
    },
    "docker.volumes.groupBy": {
      "type": "string",
      "default": "None",
      "description": "The property to use to group volumes in Docker view: CreatedTime, VolumeName, or None",
      "enum": [
        "CreatedTime",
        "VolumeName",
        "None"
      ],
      "scope": 3,
      "source": {
        "id": "ms-azuretools.vscode-docker",
        "displayName": "Docker"
      },
      "defaultDefaultValue": "None",
      "restricted": false
    },
    "docker.volumes.description": {
      "type": "array",
      "default": [
        "CreatedTime"
      ],
      "description": "Any secondary properties to display for a Docker volume (an array). Possible values include CreatedTime and VolumeName",
      "items": {
        "type": "string",
        "enum": [
          "CreatedTime",
          "VolumeName"
        ]
      },
      "scope": 3,
      "source": {
        "id": "ms-azuretools.vscode-docker",
        "displayName": "Docker"
      },
      "defaultDefaultValue": [
        "CreatedTime"
      ],
      "restricted": false
    },
    "docker.volumes.label": {
      "type": "string",
      "default": "VolumeName",
      "description": "The primary property to display for a Docker volume: CreatedTime or VolumeName",
      "enum": [
        "CreatedTime",
        "VolumeName"
      ],
      "scope": 3,
      "source": {
        "id": "ms-azuretools.vscode-docker",
        "displayName": "Docker"
      },
      "defaultDefaultValue": "VolumeName",
      "restricted": false
    },
    "docker.volumes.sortBy": {
      "type": "string",
      "default": "CreatedTime",
      "description": "The property to use to sort volumes in Docker view: CreatedTime or Label",
      "enum": [
        "CreatedTime",
        "Label"
      ],
      "scope": 3,
      "source": {
        "id": "ms-azuretools.vscode-docker",
        "displayName": "Docker"
      },
      "defaultDefaultValue": "CreatedTime",
      "restricted": false
    },
    "docker.imageBuildContextPath": {
      "type": "string",
      "default": "",
      "description": "Build context PATH to pass to Docker build command.",
      "scope": 6,
      "source": {
        "id": "ms-azuretools.vscode-docker",
        "displayName": "Docker"
      },
      "defaultDefaultValue": "",
      "restricted": false
    },
    "docker.truncateLongRegistryPaths": {
      "type": "boolean",
      "default": false,
      "description": "Set to true to truncate long image and container registry paths in Docker view",
      "scope": 3,
      "source": {
        "id": "ms-azuretools.vscode-docker",
        "displayName": "Docker"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "docker.truncateMaxLength": {
      "type": "number",
      "default": 10,
      "description": "Maximum length of a registry paths displayed in Docker view, including ellipsis. The truncateLongRegistryPaths setting must be set to true for truncateMaxLength setting to be effective.",
      "scope": 3,
      "source": {
        "id": "ms-azuretools.vscode-docker",
        "displayName": "Docker"
      },
      "defaultDefaultValue": 10,
      "restricted": false
    },
    "docker.dockerodeOptions": {
      "type": "object",
      "description": "If specified, this object will be passed to the Dockerode constructor. Takes precedence over DOCKER_HOST, the Docker Host setting, and any existing Docker contexts.",
      "scope": 3,
      "source": {
        "id": "ms-azuretools.vscode-docker",
        "displayName": "Docker"
      },
      "default": {},
      "restricted": true
    },
    "docker.host": {
      "type": "string",
      "default": "",
      "description": "Equivalent to setting the DOCKER_HOST environment variable, for example, ssh://myuser@mymachine or tcp://1.2.3.4.",
      "scope": 6,
      "source": {
        "id": "ms-azuretools.vscode-docker",
        "displayName": "Docker"
      },
      "defaultDefaultValue": "",
      "restricted": true
    },
    "docker.context": {
      "type": "string",
      "default": "",
      "description": "Equivalent to setting the DOCKER_CONTEXT environment variable.",
      "scope": 6,
      "source": {
        "id": "ms-azuretools.vscode-docker",
        "displayName": "Docker"
      },
      "defaultDefaultValue": "",
      "restricted": true
    },
    "docker.certPath": {
      "type": "string",
      "default": "",
      "description": "Equivalent to setting the DOCKER_CERT_PATH environment variable.",
      "scope": 6,
      "source": {
        "id": "ms-azuretools.vscode-docker",
        "displayName": "Docker"
      },
      "defaultDefaultValue": "",
      "restricted": true
    },
    "docker.tlsVerify": {
      "type": "string",
      "default": "",
      "description": "Equivalent to setting the DOCKER_TLS_VERIFY environment variable.",
      "scope": 6,
      "source": {
        "id": "ms-azuretools.vscode-docker",
        "displayName": "Docker"
      },
      "defaultDefaultValue": "",
      "restricted": true
    },
    "docker.machineName": {
      "type": "string",
      "default": "",
      "description": "Equivalent to setting the DOCKER_MACHINE_NAME environment variable.",
      "scope": 6,
      "source": {
        "id": "ms-azuretools.vscode-docker",
        "displayName": "Docker"
      },
      "defaultDefaultValue": "",
      "restricted": true
    },
    "docker.languageserver.diagnostics.deprecatedMaintainer": {
      "scope": 4,
      "type": "string",
      "default": "warning",
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "description": "Controls the diagnostic severity for the deprecated MAINTAINER instruction",
      "source": {
        "id": "ms-azuretools.vscode-docker",
        "displayName": "Docker"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "docker.languageserver.diagnostics.emptyContinuationLine": {
      "scope": 4,
      "type": "string",
      "default": "warning",
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "description": "Controls the diagnostic severity for flagging empty continuation lines found in instructions that span multiple lines",
      "source": {
        "id": "ms-azuretools.vscode-docker",
        "displayName": "Docker"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "docker.languageserver.diagnostics.directiveCasing": {
      "scope": 4,
      "type": "string",
      "default": "warning",
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "description": "Controls the diagnostic severity for parser directives that are not written in lowercase",
      "source": {
        "id": "ms-azuretools.vscode-docker",
        "displayName": "Docker"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "docker.languageserver.diagnostics.instructionCasing": {
      "scope": 4,
      "type": "string",
      "default": "warning",
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "description": "Controls the diagnostic severity for instructions that are not written in uppercase",
      "source": {
        "id": "ms-azuretools.vscode-docker",
        "displayName": "Docker"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "docker.languageserver.diagnostics.instructionCmdMultiple": {
      "scope": 4,
      "type": "string",
      "default": "warning",
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "description": "Controls the diagnostic severity for flagging a Dockerfile with multiple CMD instructions",
      "source": {
        "id": "ms-azuretools.vscode-docker",
        "displayName": "Docker"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "docker.languageserver.diagnostics.instructionEntrypointMultiple": {
      "scope": 4,
      "type": "string",
      "default": "warning",
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "description": "Controls the diagnostic severity for flagging a Dockerfile with multiple ENTRYPOINT instructions",
      "source": {
        "id": "ms-azuretools.vscode-docker",
        "displayName": "Docker"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "docker.languageserver.diagnostics.instructionHealthcheckMultiple": {
      "scope": 4,
      "type": "string",
      "default": "warning",
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "description": "Controls the diagnostic severity for flagging a Dockerfile with multiple HEALTHCHECK instructions",
      "source": {
        "id": "ms-azuretools.vscode-docker",
        "displayName": "Docker"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "docker.languageserver.diagnostics.instructionJSONInSingleQuotes": {
      "scope": 4,
      "type": "string",
      "default": "warning",
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "description": "Controls the diagnostic severity for JSON instructions that are written incorrectly with single quotes",
      "source": {
        "id": "ms-azuretools.vscode-docker",
        "displayName": "Docker"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "docker.languageserver.diagnostics.instructionWorkdirRelative": {
      "scope": 4,
      "type": "string",
      "default": "warning",
      "enum": [
        "ignore",
        "warning",
        "error"
      ],
      "description": "Controls the diagnostic severity for WORKDIR instructions that do not point to an absolute path",
      "source": {
        "id": "ms-azuretools.vscode-docker",
        "displayName": "Docker"
      },
      "defaultDefaultValue": "warning",
      "restricted": false
    },
    "docker.languageserver.formatter.ignoreMultilineInstructions": {
      "scope": 4,
      "type": "boolean",
      "default": false,
      "description": "Controls whether the Dockerfile formatter should ignore instructions that span multiple lines when formatting",
      "source": {
        "id": "ms-azuretools.vscode-docker",
        "displayName": "Docker"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "docker.dockerComposeBuild": {
      "type": "boolean",
      "default": true,
      "description": "Set to true to include --build option when docker-compose command is invoked",
      "scope": 3,
      "source": {
        "id": "ms-azuretools.vscode-docker",
        "displayName": "Docker"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "docker.dockerComposeDetached": {
      "type": "boolean",
      "default": true,
      "description": "Set to true to include --d (detached) option when docker-compose command is invoked",
      "scope": 3,
      "source": {
        "id": "ms-azuretools.vscode-docker",
        "displayName": "Docker"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "docker.showRemoteWorkspaceWarning": {
      "type": "boolean",
      "default": true,
      "description": "Set to true to prompt to switch from \"UI\" extension mode to \"Workspace\" extension mode if an operation is not supported in UI mode.",
      "scope": 3,
      "source": {
        "id": "ms-azuretools.vscode-docker",
        "displayName": "Docker"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "docker.scaffolding.templatePath": {
      "type": "string",
      "description": "The path to use for scaffolding templates.",
      "scope": 3,
      "source": {
        "id": "ms-azuretools.vscode-docker",
        "displayName": "Docker"
      },
      "default": "",
      "restricted": true
    },
    "docker.dockerPath": {
      "type": "string",
      "default": "docker",
      "description": "Absolute path to Docker client executable ('docker' command). If the path contains whitespace, it needs to be quoted appropriately.",
      "scope": 6,
      "source": {
        "id": "ms-azuretools.vscode-docker",
        "displayName": "Docker"
      },
      "defaultDefaultValue": "docker",
      "restricted": true
    },
    "docker.enableDockerComposeLanguageService": {
      "type": "boolean",
      "default": true,
      "description": "Whether or not to enable the preview Docker Compose Language Service. Changing requires restart to take effect.",
      "scope": 3,
      "source": {
        "id": "ms-azuretools.vscode-docker",
        "displayName": "Docker"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "python.autoComplete.extraPaths": {
      "default": [],
      "description": "List of paths to libraries and the like that need to be imported by auto complete engine. E.g. when using Google App SDK, the paths are not in system path, hence need to be added into this list.",
      "scope": 4,
      "type": "array",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "python.condaPath": {
      "default": "",
      "description": "Path to the conda executable to use for activation (version 4.4+).",
      "scope": 2,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "",
      "restricted": false
    },
    "python.createNewFileEnabled": {
      "default": "false",
      "description": "Enable the `Python: New Python File` command.",
      "scope": 2,
      "type": "boolean",
      "tags": [
        "experimental"
      ],
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "false",
      "restricted": false
    },
    "python.defaultInterpreterPath": {
      "default": "python",
      "description": "Path to default Python to use when extension loads up for the first time, no longer used once an interpreter is selected for the workspace. See https://aka.ms/AAfekmf to understand when this is used.",
      "scope": 6,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "python",
      "restricted": false
    },
    "python.diagnostics.sourceMapsEnabled": {
      "default": false,
      "description": "Enable source map support for meaningful stack traces in error logs.",
      "scope": 1,
      "type": "boolean",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "python.disableInstallationCheck": {
      "default": false,
      "description": "Whether to check if Python is installed (also warn when using the macOS-installed Python).",
      "scope": 4,
      "type": "boolean",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "python.envFile": {
      "default": "${workspaceFolder}/.env",
      "description": "Absolute path to a file containing environment variable definitions.",
      "scope": 4,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "${workspaceFolder}/.env",
      "restricted": false
    },
    "python.experiments.enabled": {
      "default": true,
      "description": "Enables A/B tests experiments in the Python extension. If enabled, you may get included in proposed enhancements and/or features.",
      "scope": 2,
      "type": "boolean",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "python.experiments.optInto": {
      "default": [],
      "description": "List of experiment to opt into. If empty, user is assigned the default experiment groups. See https://github.com/microsoft/vscode-python/wiki/Experiments for more details.",
      "items": {
        "enum": [
          "All",
          "pythonDeprecatePythonPath",
          "pythonSurveyNotification",
          "pythonInterpreterInfoPinned",
          "pythonInterpreterInfoUnpinned"
        ]
      },
      "scope": 2,
      "type": "array",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "python.experiments.optOutFrom": {
      "default": [],
      "description": "List of experiment to opt out of. If empty, user is assigned the default experiment groups. See https://github.com/microsoft/vscode-python/wiki/Experiments for more details.",
      "items": {
        "enum": [
          "All",
          "pythonDeprecatePythonPath",
          "pythonSurveyNotification",
          "pythonInterpreterInfoPinned",
          "pythonInterpreterInfoUnpinned"
        ]
      },
      "scope": 2,
      "type": "array",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "python.formatting.autopep8Args": {
      "default": [],
      "description": "Arguments passed in. Each argument is a separate item in the array.",
      "items": {
        "type": "string"
      },
      "scope": 4,
      "type": "array",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "python.formatting.autopep8Path": {
      "default": "autopep8",
      "description": "Path to autopep8, you can use a custom version of autopep8 by modifying this setting to include the full path.",
      "scope": 6,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "autopep8",
      "restricted": false
    },
    "python.formatting.blackArgs": {
      "default": [],
      "description": "Arguments passed in. Each argument is a separate item in the array.",
      "items": {
        "type": "string"
      },
      "scope": 4,
      "type": "array",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "python.formatting.blackPath": {
      "default": "black",
      "description": "Path to Black, you can use a custom version of Black by modifying this setting to include the full path.",
      "scope": 6,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "black",
      "restricted": false
    },
    "python.formatting.provider": {
      "default": "autopep8",
      "description": "Provider for formatting. Possible options include 'autopep8', 'black', and 'yapf'.",
      "enum": [
        "autopep8",
        "black",
        "none",
        "yapf"
      ],
      "scope": 4,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "autopep8",
      "restricted": false
    },
    "python.formatting.yapfArgs": {
      "default": [],
      "description": "Arguments passed in. Each argument is a separate item in the array.",
      "items": {
        "type": "string"
      },
      "scope": 4,
      "type": "array",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "python.formatting.yapfPath": {
      "default": "yapf",
      "description": "Path to yapf, you can use a custom version of yapf by modifying this setting to include the full path.",
      "scope": 6,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "yapf",
      "restricted": false
    },
    "python.globalModuleInstallation": {
      "default": false,
      "description": "Whether to install Python modules globally when not using an environment.",
      "scope": 4,
      "type": "boolean",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "python.insidersChannel": {
      "default": "off",
      "description": "Set to \"weekly\" or \"daily\" to automatically download and install the latest Insiders builds of the python extension, which include upcoming features and bug fixes.",
      "enum": [
        "daily",
        "off",
        "weekly"
      ],
      "scope": 2,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "off",
      "restricted": false
    },
    "python.languageServer": {
      "default": "Default",
      "description": "Defines type of the language server.",
      "enum": [
        "Default",
        "Jedi",
        "Pylance",
        "None"
      ],
      "enumDescriptions": [
        "Automatically select a language server: Pylance if installed and available, otherwise fallback to Jedi.",
        "Use Jedi behind the Language Server Protocol (LSP) as a language server.",
        "Use Pylance as a language server.",
        "Disable language server capabilities."
      ],
      "scope": 3,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "Default",
      "restricted": false
    },
    "python.linting.banditArgs": {
      "default": [],
      "description": "Arguments passed in. Each argument is a separate item in the array.",
      "items": {
        "type": "string"
      },
      "scope": 4,
      "type": "array",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "python.linting.banditEnabled": {
      "default": false,
      "description": "Whether to lint Python files using bandit.",
      "scope": 4,
      "type": "boolean",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "python.linting.banditPath": {
      "default": "bandit",
      "description": "Path to bandit, you can use a custom version of bandit by modifying this setting to include the full path.",
      "scope": 6,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "bandit",
      "restricted": false
    },
    "python.linting.cwd": {
      "default": null,
      "description": "Optional working directory for linters.",
      "scope": 4,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "python.linting.enabled": {
      "default": true,
      "description": "Whether to lint Python files.",
      "scope": 4,
      "type": "boolean",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "python.linting.flake8Args": {
      "default": [],
      "description": "Arguments passed in. Each argument is a separate item in the array.",
      "items": {
        "type": "string"
      },
      "scope": 4,
      "type": "array",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "python.linting.flake8CategorySeverity.E": {
      "default": "Error",
      "description": "Severity of Flake8 message type 'E'.",
      "enum": [
        "Error",
        "Hint",
        "Information",
        "Warning"
      ],
      "scope": 4,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "Error",
      "restricted": false
    },
    "python.linting.flake8CategorySeverity.F": {
      "default": "Error",
      "description": "Severity of Flake8 message type 'F'.",
      "enum": [
        "Error",
        "Hint",
        "Information",
        "Warning"
      ],
      "scope": 4,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "Error",
      "restricted": false
    },
    "python.linting.flake8CategorySeverity.W": {
      "default": "Warning",
      "description": "Severity of Flake8 message type 'W'.",
      "enum": [
        "Error",
        "Hint",
        "Information",
        "Warning"
      ],
      "scope": 4,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "Warning",
      "restricted": false
    },
    "python.linting.flake8Enabled": {
      "default": false,
      "description": "Whether to lint Python files using flake8",
      "scope": 4,
      "type": "boolean",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "python.linting.flake8Path": {
      "default": "flake8",
      "description": "Path to flake8, you can use a custom version of flake8 by modifying this setting to include the full path.",
      "scope": 6,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "flake8",
      "restricted": false
    },
    "python.linting.ignorePatterns": {
      "default": [
        "**/site-packages/**/*.py",
        ".vscode/*.py"
      ],
      "description": "Patterns used to exclude files or folders from being linted.",
      "items": {
        "type": "string"
      },
      "scope": 4,
      "type": "array",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": [
        "**/site-packages/**/*.py",
        ".vscode/*.py"
      ],
      "restricted": false
    },
    "python.linting.lintOnSave": {
      "default": true,
      "description": "Whether to lint Python files when saved.",
      "scope": 4,
      "type": "boolean",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "python.linting.maxNumberOfProblems": {
      "default": 100,
      "description": "Controls the maximum number of problems produced by the server.",
      "scope": 4,
      "type": "number",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": 100,
      "restricted": false
    },
    "python.linting.mypyArgs": {
      "default": [
        "--follow-imports=silent",
        "--ignore-missing-imports",
        "--show-column-numbers",
        "--no-pretty"
      ],
      "description": "Arguments passed in. Each argument is a separate item in the array.",
      "items": {
        "type": "string"
      },
      "scope": 4,
      "type": "array",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": [
        "--follow-imports=silent",
        "--ignore-missing-imports",
        "--show-column-numbers",
        "--no-pretty"
      ],
      "restricted": false
    },
    "python.linting.mypyCategorySeverity.error": {
      "default": "Error",
      "description": "Severity of Mypy message type 'Error'.",
      "enum": [
        "Error",
        "Hint",
        "Information",
        "Warning"
      ],
      "scope": 4,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "Error",
      "restricted": false
    },
    "python.linting.mypyCategorySeverity.note": {
      "default": "Information",
      "description": "Severity of Mypy message type 'Note'.",
      "enum": [
        "Error",
        "Hint",
        "Information",
        "Warning"
      ],
      "scope": 4,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "Information",
      "restricted": false
    },
    "python.linting.mypyEnabled": {
      "default": false,
      "description": "Whether to lint Python files using mypy.",
      "scope": 4,
      "type": "boolean",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "python.linting.mypyPath": {
      "default": "mypy",
      "description": "Path to mypy, you can use a custom version of mypy by modifying this setting to include the full path.",
      "scope": 6,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "mypy",
      "restricted": false
    },
    "python.linting.prospectorArgs": {
      "default": [],
      "description": "Arguments passed in. Each argument is a separate item in the array.",
      "items": {
        "type": "string"
      },
      "scope": 4,
      "type": "array",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "python.linting.prospectorEnabled": {
      "default": false,
      "description": "Whether to lint Python files using prospector.",
      "scope": 4,
      "type": "boolean",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "python.linting.prospectorPath": {
      "default": "prospector",
      "description": "Path to Prospector, you can use a custom version of prospector by modifying this setting to include the full path.",
      "scope": 6,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "prospector",
      "restricted": false
    },
    "python.linting.pycodestyleArgs": {
      "default": [],
      "description": "Arguments passed in. Each argument is a separate item in the array.",
      "items": {
        "type": "string"
      },
      "scope": 4,
      "type": "array",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "python.linting.pycodestyleCategorySeverity.E": {
      "default": "Error",
      "description": "Severity of pycodestyle message type 'E'.",
      "enum": [
        "Error",
        "Hint",
        "Information",
        "Warning"
      ],
      "scope": 4,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "Error",
      "restricted": false
    },
    "python.linting.pycodestyleCategorySeverity.W": {
      "default": "Warning",
      "description": "Severity of pycodestyle message type 'W'.",
      "enum": [
        "Error",
        "Hint",
        "Information",
        "Warning"
      ],
      "scope": 4,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "Warning",
      "restricted": false
    },
    "python.linting.pycodestyleEnabled": {
      "default": false,
      "description": "Whether to lint Python files using pycodestyle",
      "scope": 4,
      "type": "boolean",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "python.linting.pycodestylePath": {
      "default": "pycodestyle",
      "description": "Path to pycodestyle, you can use a custom version of pycodestyle by modifying this setting to include the full path.",
      "scope": 6,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "pycodestyle",
      "restricted": false
    },
    "python.linting.pydocstyleArgs": {
      "default": [],
      "description": "Arguments passed in. Each argument is a separate item in the array.",
      "items": {
        "type": "string"
      },
      "scope": 4,
      "type": "array",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "python.linting.pydocstyleEnabled": {
      "default": false,
      "description": "Whether to lint Python files using pydocstyle",
      "scope": 4,
      "type": "boolean",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "python.linting.pydocstylePath": {
      "default": "pydocstyle",
      "description": "Path to pydocstyle, you can use a custom version of pydocstyle by modifying this setting to include the full path.",
      "scope": 6,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "pydocstyle",
      "restricted": false
    },
    "python.linting.pylamaArgs": {
      "default": [],
      "description": "Arguments passed in. Each argument is a separate item in the array.",
      "items": {
        "type": "string"
      },
      "scope": 4,
      "type": "array",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "python.linting.pylamaEnabled": {
      "default": false,
      "description": "Whether to lint Python files using pylama.",
      "scope": 4,
      "type": "boolean",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "python.linting.pylamaPath": {
      "default": "pylama",
      "description": "Path to pylama, you can use a custom version of pylama by modifying this setting to include the full path.",
      "scope": 6,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "pylama",
      "restricted": false
    },
    "python.linting.pylintArgs": {
      "default": [],
      "description": "Arguments passed in. Each argument is a separate item in the array.",
      "items": {
        "type": "string"
      },
      "scope": 4,
      "type": "array",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "python.linting.pylintCategorySeverity.convention": {
      "default": "Information",
      "description": "Severity of Pylint message type 'Convention/C'.",
      "enum": [
        "Error",
        "Hint",
        "Information",
        "Warning"
      ],
      "scope": 4,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "Information",
      "restricted": false
    },
    "python.linting.pylintCategorySeverity.error": {
      "default": "Error",
      "description": "Severity of Pylint message type 'Error/E'.",
      "enum": [
        "Error",
        "Hint",
        "Information",
        "Warning"
      ],
      "scope": 4,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "Error",
      "restricted": false
    },
    "python.linting.pylintCategorySeverity.fatal": {
      "default": "Error",
      "description": "Severity of Pylint message type 'Fatal/F'.",
      "enum": [
        "Error",
        "Hint",
        "Information",
        "Warning"
      ],
      "scope": 4,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "Error",
      "restricted": false
    },
    "python.linting.pylintCategorySeverity.refactor": {
      "default": "Hint",
      "description": "Severity of Pylint message type 'Refactor/R'.",
      "enum": [
        "Error",
        "Hint",
        "Information",
        "Warning"
      ],
      "scope": 4,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "Hint",
      "restricted": false
    },
    "python.linting.pylintCategorySeverity.warning": {
      "default": "Warning",
      "description": "Severity of Pylint message type 'Warning/W'.",
      "enum": [
        "Error",
        "Hint",
        "Information",
        "Warning"
      ],
      "scope": 4,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "Warning",
      "restricted": false
    },
    "python.linting.pylintEnabled": {
      "default": false,
      "description": "Whether to lint Python files using pylint.",
      "scope": 4,
      "type": "boolean",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "python.linting.pylintPath": {
      "default": "pylint",
      "description": "Path to Pylint, you can use a custom version of pylint by modifying this setting to include the full path.",
      "scope": 6,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "pylint",
      "restricted": false
    },
    "python.logging.level": {
      "default": "error",
      "description": "The logging level the extension logs at, defaults to 'error'",
      "enum": [
        "debug",
        "error",
        "info",
        "off",
        "warn"
      ],
      "scope": 2,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "error",
      "restricted": false
    },
    "python.pipenvPath": {
      "default": "pipenv",
      "description": "Path to the pipenv executable to use for activation.",
      "scope": 6,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "pipenv",
      "restricted": false
    },
    "python.poetryPath": {
      "default": "poetry",
      "description": "Path to the poetry executable.",
      "scope": 6,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "poetry",
      "restricted": false
    },
    "python.sortImports.args": {
      "default": [],
      "description": "Arguments passed in. Each argument is a separate item in the array.",
      "items": {
        "type": "string"
      },
      "scope": 4,
      "type": "array",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "python.sortImports.path": {
      "default": "",
      "description": "Path to isort script, default using inner version",
      "scope": 6,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "",
      "restricted": false
    },
    "python.tensorBoard.logDirectory": {
      "description": "Set this setting to your preferred TensorBoard log directory to skip log directory prompt when starting TensorBoard.",
      "scope": 1,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "default": "",
      "restricted": false
    },
    "python.terminal.activateEnvInCurrentTerminal": {
      "default": false,
      "description": "Activate Python Environment in the current Terminal on load of the Extension.",
      "scope": 4,
      "type": "boolean",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "python.terminal.activateEnvironment": {
      "default": true,
      "description": "Activate Python Environment in Terminal created using the Extension.",
      "scope": 4,
      "type": "boolean",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "python.terminal.executeInFileDir": {
      "default": false,
      "description": "When executing a file in the terminal, whether to use execute in the file's directory, instead of the current open folder.",
      "scope": 4,
      "type": "boolean",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "python.terminal.launchArgs": {
      "default": [],
      "description": "Python launch arguments to use when executing a file in the terminal.",
      "scope": 4,
      "type": "array",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "python.testing.autoTestDiscoverOnSaveEnabled": {
      "default": true,
      "description": "Enable auto run test discovery when saving a test file.",
      "scope": 4,
      "type": "boolean",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "python.testing.cwd": {
      "default": null,
      "description": "Optional working directory for tests.",
      "scope": 4,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "python.testing.debugPort": {
      "default": 3000,
      "description": "Port number used for debugging of tests.",
      "scope": 4,
      "type": "number",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": 3000,
      "restricted": false
    },
    "python.testing.promptToConfigure": {
      "default": true,
      "description": "Prompt to configure a test framework if potential tests directories are discovered.",
      "scope": 4,
      "type": "boolean",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "python.testing.pytestArgs": {
      "default": [],
      "description": "Arguments passed in. Each argument is a separate item in the array.",
      "items": {
        "type": "string"
      },
      "scope": 4,
      "type": "array",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "python.testing.pytestEnabled": {
      "default": false,
      "description": "Enable testing using pytest.",
      "scope": 4,
      "type": "boolean",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "python.testing.pytestPath": {
      "default": "pytest",
      "description": "Path to pytest (pytest), you can use a custom version of pytest by modifying this setting to include the full path.",
      "scope": 6,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "pytest",
      "restricted": false
    },
    "python.testing.unittestArgs": {
      "default": [
        "-v",
        "-s",
        ".",
        "-p",
        "*test*.py"
      ],
      "description": "Arguments passed in. Each argument is a separate item in the array.",
      "items": {
        "type": "string"
      },
      "scope": 4,
      "type": "array",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": [
        "-v",
        "-s",
        ".",
        "-p",
        "*test*.py"
      ],
      "restricted": false
    },
    "python.testing.unittestEnabled": {
      "default": false,
      "description": "Enable testing using unittest.",
      "scope": 4,
      "type": "boolean",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "python.venvFolders": {
      "default": [],
      "description": "Folders in your home directory to look into for virtual environments (supports pyenv, direnv and virtualenvwrapper by default).",
      "items": {
        "type": "string"
      },
      "scope": 2,
      "type": "array",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "python.venvPath": {
      "default": "",
      "description": "Path to folder with a list of Virtual Environments (e.g. ~/.pyenv, ~/Envs, ~/.virtualenvs).",
      "scope": 2,
      "type": "string",
      "source": {
        "id": "ms-python.python",
        "displayName": "Python"
      },
      "defaultDefaultValue": "",
      "restricted": false
    },
    "pylance.insidersChannel": {
      "type": "string",
      "default": "off",
      "description": "Pylance insiders download channel.",
      "enum": [
        "off",
        "daily"
      ],
      "enumDescriptions": [
        "Do not check for insiders updates.",
        "Automatically check for and install insiders updates daily."
      ],
      "scope": 1,
      "tags": [
        "usesOnlineServices "
      ],
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": "off",
      "restricted": false
    },
    "python.analysis.completeFunctionParens": {
      "type": "boolean",
      "default": false,
      "description": "Add parentheses to function completions.",
      "scope": 4,
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "python.analysis.autoImportCompletions": {
      "type": "boolean",
      "default": true,
      "description": "Offer auto-import completions.",
      "scope": 4,
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "python.analysis.autoSearchPaths": {
      "type": "boolean",
      "default": true,
      "description": "Automatically add common search paths like 'src'.",
      "scope": 4,
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "python.analysis.stubPath": {
      "type": "string",
      "default": "typings",
      "description": "Path to directory containing custom type stub files.",
      "scope": 4,
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": "typings",
      "restricted": false
    },
    "python.analysis.diagnosticMode": {
      "type": "string",
      "default": "openFilesOnly",
      "description": "Analysis mode for diagnostics.",
      "enum": [
        "openFilesOnly",
        "workspace"
      ],
      "enumDescriptions": [
        "Analyzes and reports errors on only open files.",
        "Analyzes and reports errors on all files in the workspace."
      ],
      "scope": 4,
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": "openFilesOnly",
      "restricted": false
    },
    "python.analysis.extraPaths": {
      "type": "array",
      "default": [],
      "items": {
        "type": "string"
      },
      "description": "Additional import search resolution paths",
      "scope": 4,
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "python.analysis.indexing": {
      "type": [
        "boolean",
        null
      ],
      "default": null,
      "description": "Index installed third party libraries and user files for language features such as auto-import, add import, workspace symbols and etc.",
      "scope": 4,
      "tags": [
        "experimental"
      ],
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "python.analysis.useLibraryCodeForTypes": {
      "type": "boolean",
      "default": true,
      "description": "Use library implementations to extract type information when type stub is not present.",
      "scope": 4,
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "python.analysis.typeCheckingMode": {
      "type": "string",
      "default": "off",
      "enum": [
        "off",
        "basic",
        "strict"
      ],
      "description": "Defines the default rule set for type checking.",
      "enumDescriptions": [
        "Surfaces diagnostics for invalid syntax, unresolved imports, undefined variables.",
        "All \"off\" rules + basic type checking rules.",
        "All \"off\" rules + all type checking rules."
      ],
      "scope": 4,
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": "off",
      "restricted": false
    },
    "python.analysis.diagnosticSeverityOverrides": {
      "type": "object",
      "default": {},
      "description": "Allows a user to override the severity levels for individual diagnostics.",
      "scope": 4,
      "properties": {
        "reportGeneralTypeIssues": {
          "type": "string",
          "description": "Diagnostics for general type inconsistencies, unsupported operations, argument/parameter mismatches, etc. Covers all of the basic type-checking rules not covered by other rules. Does not include syntax errors.",
          "default": "error",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportPropertyTypeMismatch": {
          "type": "string",
          "description": "Diagnostics for property whose setter and getter have mismatched types.",
          "default": "error",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportFunctionMemberAccess": {
          "type": "string",
          "description": "Diagnostics for member accesses on functions.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportMissingImports": {
          "type": "string",
          "description": "Diagnostics for imports that have no corresponding imported python file or type stub file.",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportMissingModuleSource": {
          "type": "string",
          "description": "Diagnostics for imports that have no corresponding source file. This happens when a type stub is found, but the module source file was not found, indicating that the code may fail at runtime when using this execution environment. Type checking will be done using the type stub.",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportMissingTypeStubs": {
          "type": "string",
          "description": "Diagnostics for imports that have no corresponding type stub file (either a typeshed file or a custom type stub). The type checker requires type stubs to do its best job at analysis.",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportImportCycles": {
          "type": "string",
          "description": "Diagnostics for cyclical import chains. These are not errors in Python, but they do slow down type analysis and often hint at architectural layering issues. Generally, they should be avoided.",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportUnusedImport": {
          "type": "string",
          "description": "Diagnostics for an imported symbol that is not referenced within that file.",
          "default": "information",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportUnusedClass": {
          "type": "string",
          "description": "Diagnostics for a class with a private name (starting with an underscore) that is not accessed.",
          "default": "information",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportUnusedFunction": {
          "type": "string",
          "description": "Diagnostics for a function or method with a private name (starting with an underscore) that is not accessed.",
          "default": "information",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportUnusedVariable": {
          "type": "string",
          "description": "Diagnostics for a variable that is not accessed.",
          "default": "information",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportDuplicateImport": {
          "type": "string",
          "description": "Diagnostics for an imported symbol or module that is imported more than once.",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportWildcardImportFromLibrary": {
          "type": "string",
          "description": "Diagnostics for an wildcard import from an external library.",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportOptionalSubscript": {
          "type": "string",
          "description": "Diagnostics for an attempt to subscript (index) a variable with an Optional type.",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportOptionalMemberAccess": {
          "type": "string",
          "description": "Diagnostics for an attempt to access a member of a variable with an Optional type.",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportOptionalCall": {
          "type": "string",
          "description": "Diagnostics for an attempt to call a variable with an Optional type.",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportOptionalIterable": {
          "type": "string",
          "description": "Diagnostics for an attempt to use an Optional type as an iterable value (e.g. within a for statement).",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportOptionalContextManager": {
          "type": "string",
          "description": "Diagnostics for an attempt to use an Optional type as a context manager (as a parameter to a with statement).",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportOptionalOperand": {
          "type": "string",
          "description": "Diagnostics for an attempt to use an Optional type as an operand to a binary or unary operator (like '+', '==', 'or', 'not').",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportTypedDictNotRequiredAccess": {
          "type": "string",
          "description": "Diagnostics for an attempt to access a non-required key within a TypedDict without a check for its presence.",
          "default": "error",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportUntypedFunctionDecorator": {
          "type": "string",
          "description": "Diagnostics for function decorators that have no type annotations. These obscure the function type, defeating many type analysis features.",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportUntypedClassDecorator": {
          "type": "string",
          "description": "Diagnostics for class decorators that have no type annotations. These obscure the class type, defeating many type analysis features.",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportUntypedBaseClass": {
          "type": "string",
          "description": "Diagnostics for base classes whose type cannot be determined statically. These obscure the class type, defeating many type analysis features.",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportUntypedNamedTuple": {
          "type": "string",
          "description": "Diagnostics when “namedtuple” is used rather than “NamedTuple”. The former contains no type information, whereas the latter does.",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportPrivateUsage": {
          "type": "string",
          "description": "Diagnostics for incorrect usage of private or protected variables or functions. Protected class members begin with a single underscore _ and can be accessed only by subclasses. Private class members begin with a double underscore but do not end in a double underscore and can be accessed only within the declaring class. Variables and functions declared outside of a class are considered private if their names start with either a single or double underscore, and they cannot be accessed outside of the declaring module.",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportPrivateImportUsage": {
          "type": "string",
          "description": "Diagnostics for incorrect usage of symbol imported from a \"py.typed\" module that is not re-exported from that module.",
          "default": "error",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportConstantRedefinition": {
          "type": "string",
          "description": "Diagnostics for attempts to redefine variables whose names are all-caps with underscores and numerals.",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportIncompatibleMethodOverride": {
          "type": "string",
          "description": "Diagnostics for methods that override a method of the same name in a base class in an incompatible manner (wrong number of parameters, incompatible parameter types, or incompatible return type).",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportIncompatibleVariableOverride": {
          "type": "string",
          "description": "Diagnostics for overrides in subclasses that redefine a variable in an incompatible way.",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportInconsistentConstructor": {
          "type": "string",
          "description": "Diagnostics for __init__ and __new__ methods whose signatures are inconsistent.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportOverlappingOverload": {
          "type": "string",
          "description": "Diagnostics for function overloads that overlap in signature and obscure each other or have incompatible return types.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportMissingSuperCall": {
          "type": "string",
          "description": "Diagnostics for missing call to parent class for inherited `__init__` methods.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportUninitializedInstanceVariable": {
          "type": "string",
          "description": "Diagnostics for instance variables that are not declared or initialized within class body or `__init__` method.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportInvalidStringEscapeSequence": {
          "type": "string",
          "description": "Diagnostics for invalid escape sequences used within string literals. The Python specification indicates that such sequences will generate a syntax error in future versions.",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportUnknownParameterType": {
          "type": "string",
          "description": "Diagnostics for input or return parameters for functions or methods that have an unknown type.",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportUnknownArgumentType": {
          "type": "string",
          "description": "Diagnostics for call arguments for functions or methods that have an unknown type.",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportUnknownLambdaType": {
          "type": "string",
          "description": "Diagnostics for input or return parameters for lambdas that have an unknown type.",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportUnknownVariableType": {
          "type": "string",
          "description": "Diagnostics for variables that have an unknown type..",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportUnknownMemberType": {
          "type": "string",
          "description": "Diagnostics for class or instance variables that have an unknown type.",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportMissingParameterType": {
          "type": "string",
          "description": "Diagnostics for parameters that are missing a type annotation.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportMissingTypeArgument": {
          "type": "string",
          "description": "Diagnostics for generic class reference with missing type arguments.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportInvalidTypeVarUse": {
          "type": "string",
          "description": "Diagnostics for improper use of type variables in a function signature.",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportCallInDefaultInitializer": {
          "type": "string",
          "description": "Diagnostics for function calls within a default value initialization expression. Such calls can mask expensive operations that are performed at module initialization time.",
          "default": "information",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportUnnecessaryIsInstance": {
          "type": "string",
          "description": "Diagnostics for 'isinstance' or 'issubclass' calls where the result is statically determined to be always true or always false. Such calls are often indicative of a programming error.",
          "default": "information",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportUnnecessaryCast": {
          "type": "string",
          "description": "Diagnostics for 'cast' calls that are statically determined to be unnecessary. Such calls are sometimes indicative of a programming error.",
          "default": "information",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportUnnecessaryComparison": {
          "type": "string",
          "description": "Diagnostics for '==' and '!=' comparisons that are statically determined to be unnecessary. Such calls are sometimes indicative of a programming error.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportAssertAlwaysTrue": {
          "type": "string",
          "description": "Diagnostics for 'assert' statement that will provably always assert. This can be indicative of a programming error.",
          "default": "information",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportSelfClsParameterName": {
          "type": "string",
          "description": "Diagnostics for a missing or misnamed “self” parameter in instance methods and “cls” parameter in class methods. Instance methods in metaclasses (classes that derive from “type”) are allowed to use “cls” for instance methods.",
          "default": "information",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportImplicitStringConcatenation": {
          "type": "string",
          "description": "Diagnostics for two or more string literals that follow each other, indicating an implicit concatenation. This is considered a bad practice and often masks bugs such as missing commas.",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportInvalidStubStatement": {
          "type": "string",
          "description": "Diagnostics for type stub statements that do not conform to PEP 484.",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportIncompleteStub": {
          "type": "string",
          "description": "Diagnostics for the use of a module-level “__getattr__” function, indicating that the stub is incomplete.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportUndefinedVariable": {
          "type": "string",
          "description": "Diagnostics for a missing or misnamed “self” parameter in instance methods and “cls” parameter in class methods. Instance methods in metaclasses (classes that derive from “type”) are allowed to use “cls” for instance methods.",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportUnboundVariable": {
          "type": "string",
          "description": "Diagnostics for unbound and possibly unbound variables.",
          "default": "information",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportUnusedCallResult": {
          "type": "string",
          "description": "Diagnostics for call expressions whose results are not consumed and are not None.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportUnusedCoroutine": {
          "type": "string",
          "description": "Diagnostics for call expressions that return a Coroutine and whose results are not consumed.",
          "default": "error",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportUnsupportedDunderAll": {
          "type": "string",
          "description": "Diagnostics for unsupported operations performed on __all__.",
          "default": "warning",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportUnnecessaryTypeIgnoreComment": {
          "type": "string",
          "description": "Diagnostics for '# type: ignore' comments that have no effect.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        },
        "reportMatchNotExhaustive": {
          "type": "string",
          "description": "Diagnostics for 'match' statements that do not exhaustively match all possible values.",
          "default": "none",
          "enum": [
            "none",
            "information",
            "warning",
            "error"
          ]
        }
      },
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": {},
      "restricted": false
    },
    "python.analysis.logLevel": {
      "type": "string",
      "default": "Information",
      "description": "Specifies the level of logging for the Output panel",
      "enum": [
        "Error",
        "Warning",
        "Information",
        "Trace"
      ],
      "scope": 3,
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": "Information",
      "restricted": false
    },
    "python.analysis.typeshedPaths": {
      "type": "array",
      "default": [],
      "items": {
        "type": "string"
      },
      "description": "Paths to look for typeshed modules.",
      "scope": 4,
      "source": {
        "id": "ms-python.vscode-pylance",
        "displayName": "Pylance"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "jupyter.experiments.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Enables/disables A/B tests.",
      "scope": 2,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "jupyter.showVariableViewWhenDebugging": {
      "type": "boolean",
      "default": true,
      "description": "Bring up the Variable View when starting a Run by Line session.",
      "scope": 1,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "jupyter.logging.level": {
      "type": "string",
      "default": "debug",
      "enum": [
        "off",
        "error",
        "warn",
        "info",
        "debug",
        "verbose"
      ],
      "description": "The logging level the extension logs at.",
      "scope": 2,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": "debug",
      "restricted": false
    },
    "jupyter.experiments.optInto": {
      "type": "array",
      "default": [],
      "items": {
        "enum": []
      },
      "markdownDescription": "List of experiment to opt into. If empty, user is assigned the default experiment groups. [Learn more](https://github.com/microsoft/vscode-jupyter/wiki/Experiments).",
      "scope": 1,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "jupyter.experiments.optOutFrom": {
      "type": "array",
      "default": [],
      "items": {
        "enum": []
      },
      "markdownDescription": "List of experiment to opt out of. If empty, user is assigned the default experiment groups. [Learn more](https://github.com/microsoft/vscode-jupyter/wiki/Experiments).",
      "scope": 1,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "jupyter.enableKeyboardShortcuts": {
      "type": "boolean",
      "default": true,
      "deprecationMessage": "This setting has been deprecated as Jupyter keyboard shortcuts have been moved into the ms-toolsai.jupyter-keymap extension. If you would like to disable Jupyter keyboard shortcuts, please uninstall or disable that extension instead.",
      "description": "Enables Jupyter style keyboard shortcuts for Notebooks.",
      "scope": 1,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "jupyter.allowImportFromNotebook": {
      "type": "boolean",
      "default": true,
      "deprecationMessage": "This setting is deprecated and will be removed in the next release.",
      "description": "Allows a user to import a jupyter notebook into a python file anytime one is opened.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "jupyter.widgetScriptSources": {
      "type": "array",
      "default": [],
      "items": {
        "type": "string",
        "enum": [
          "jsdelivr.com",
          "unpkg.com"
        ],
        "enumDescriptions": [
          "Loads widget (javascript) scripts from https://www.jsdelivr.com/",
          "Loads widget (javascript) scripts from https://unpkg.com/"
        ]
      },
      "uniqueItems": true,
      "markdownDescription": "Defines the location and order of the sources where scripts files for Widgets are downloaded from (e.g. ipywidgest, bqplot, beakerx, ipyleaflet, etc). Not selecting any of these could result in widgets not rendering or function correctly. See [here](https://aka.ms/PVSCIPyWidgets) for more information. Once updated you will need to restart the Kernel.",
      "scope": 2,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "jupyter.askForLargeDataFrames": {
      "type": "boolean",
      "default": true,
      "description": "Warn the user before trying to open really large data frames.",
      "scope": 1,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "jupyter.askForKernelRestart": {
      "type": "boolean",
      "default": true,
      "description": "Warn the user before restarting a kernel.",
      "scope": 1,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "jupyter.exportWithOutputEnabled": {
      "type": "boolean",
      "default": false,
      "description": "Enable exporting a python file into a jupyter notebook and run all cells when doing so.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "jupyter.jupyterLaunchTimeout": {
      "type": "number",
      "default": 60000,
      "description": "Amount of time (in ms) to wait for the Jupyter Notebook server to start.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": 60000,
      "restricted": false
    },
    "jupyter.jupyterLaunchRetries": {
      "type": "number",
      "default": 3,
      "description": "Number of times to attempt to connect to the Jupyter Notebook",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": 3,
      "restricted": false
    },
    "jupyter.jupyterServerType": {
      "type": "string",
      "enum": [
        "local",
        "remote"
      ],
      "description": "Determines the type of connection for talking to jupyter. Local will start kernels locally. Remote allows for connections to remote servers",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "default": "",
      "restricted": false
    },
    "jupyter.jupyterCommandLineArguments": {
      "type": "array",
      "default": [],
      "description": "When a Notebook Editor or Interactive Window Jupyter server is started, these arguments will be passed to it. By default this list is generated by the Jupyter Extension.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "jupyter.notebookFileRoot": {
      "type": "string",
      "default": "${fileDirname}",
      "description": "Set the root directory for running notebooks and the Interactive window.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": "${fileDirname}",
      "restricted": false
    },
    "jupyter.searchForJupyter": {
      "type": "boolean",
      "default": true,
      "deprecationMessage": "This setting is deprecated and will be removed in the next release.",
      "description": "Search all installed Python interpreters for a Jupyter installation when starting the Interactive window",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "jupyter.changeDirOnImportExport": {
      "type": "boolean",
      "default": false,
      "deprecationMessage": "This setting is deprecated and will be removed in the next release.",
      "description": "When importing or exporting a Jupyter Notebook add a directory change command to allow relative path loading to work.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "jupyter.useDefaultConfigForJupyter": {
      "type": "boolean",
      "default": true,
      "description": "When running Jupyter locally, create a default empty Jupyter config for the Interactive window",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "jupyter.jupyterInterruptTimeout": {
      "type": "number",
      "default": 10000,
      "description": "Amount of time (in ms) to wait for an interrupt before asking to restart the Jupyter kernel.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": 10000,
      "restricted": false
    },
    "jupyter.allowInput": {
      "type": "boolean",
      "default": true,
      "deprecationMessage": "This setting is deprecated and will be removed in the next release.",
      "description": "Allow the inputting of python code directly into the Interactive window",
      "scope": 3,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "jupyter.showCellInputCode": {
      "type": "boolean",
      "default": true,
      "deprecationMessage": "This setting is deprecated and will be removed in the next release.",
      "description": "Show cell input code.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "jupyter.collapseCellInputCodeByDefault": {
      "type": "boolean",
      "default": true,
      "description": "Collapse cell input code by default.",
      "markdownDeprecationMessage": "This setting has been deprecated, please use `#interactiveWindow.collapseCellInputCode#` instead.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": true,
      "restricted": false,
      "deprecationMessage": "This setting has been deprecated, please use `#interactiveWindow.collapseCellInputCode#` instead."
    },
    "jupyter.maxOutputSize": {
      "type": "number",
      "default": 400,
      "deprecationMessage": "This setting is deprecated and will be removed in the next release.",
      "description": "Maximum size (in pixels) of text output in the Notebook Editor before a scrollbar appears. First enable scrolling for cell outputs in settings.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": 400,
      "restricted": false
    },
    "jupyter.alwaysScrollOnNewCell": {
      "type": "boolean",
      "default": false,
      "description": "Automatically scroll the interactive window to show the output of the last statement executed. If false, the interactive window will only automatically scroll if the bottom of the prior cell is visible.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "jupyter.enableScrollingForCellOutputs": {
      "type": "boolean",
      "default": true,
      "deprecationMessage": "This setting is deprecated and will be removed in the next release.",
      "description": "Enables scrolling for large cell outputs in the Notebook Editor. This setting does not apply to the Interactive Window.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "jupyter.sendSelectionToInteractiveWindow": {
      "type": "boolean",
      "default": false,
      "description": "When pressing shift+enter, send selected code in a Python file to the Jupyter interactive window as opposed to the Python terminal.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "jupyter.variableExplorerExclude": {
      "type": "string",
      "default": "module;function;builtin_function_or_method;ABCMeta;type",
      "description": "Types to exclude from showing in the Interactive variable explorer",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": "module;function;builtin_function_or_method;ABCMeta;type",
      "restricted": false
    },
    "jupyter.codeRegularExpression": {
      "type": "string",
      "default": "^(#\\s*%%|#\\s*\\<codecell\\>|#\\s*In\\[\\d*?\\]|#\\s*In\\[ \\])",
      "description": "Regular expression used to identify code cells. All code until the next match is considered part of this cell.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": "^(#\\s*%%|#\\s*\\<codecell\\>|#\\s*In\\[\\d*?\\]|#\\s*In\\[ \\])",
      "restricted": false
    },
    "jupyter.defaultCellMarker": {
      "type": "string",
      "default": "# %%",
      "description": "Cell marker used for delineating a cell in a python file.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": "# %%",
      "restricted": false
    },
    "jupyter.markdownRegularExpression": {
      "type": "string",
      "default": "^(#\\s*%%\\s*\\[markdown\\]|#\\s*\\<markdowncell\\>)",
      "description": "Regular expression used to identify markdown cells. All comments after this expression are considered part of the markdown.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": "^(#\\s*%%\\s*\\[markdown\\]|#\\s*\\<markdowncell\\>)",
      "restricted": false
    },
    "jupyter.allowLiveShare": {
      "type": "boolean",
      "default": true,
      "deprecationMessage": "This setting is deprecated as Live Share support for the interactive window no longer exists in the Jupyter extension.",
      "description": "Allow the Interactive window to be shared during a Live Share session",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "jupyter.ignoreVscodeTheme": {
      "type": "boolean",
      "default": false,
      "deprecationMessage": "This setting is deprecated and will be removed in the next release.",
      "description": "Don't use the VS Code theme in the Interactive window (requires reload of VS Code). This forces the Interactive window to use 'Light +(default light)' and disables matplotlib defaults.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "jupyter.themeMatplotlibPlots": {
      "type": "boolean",
      "default": false,
      "description": "In the Interactive window and Notebook Editor theme matplotlib outputs to match the VS Code editor theme.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "jupyter.liveShareConnectionTimeout": {
      "type": "number",
      "default": 1000,
      "deprecationMessage": "This setting is deprecated and will be removed in the next release.",
      "description": "Amount of time to wait for guest connections to verify they have the Python extension installed.",
      "scope": 1,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": 1000,
      "restricted": false
    },
    "jupyter.decorateCells": {
      "type": "boolean",
      "default": true,
      "description": "Draw a highlight behind the currently active cell.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "jupyter.enableCellCodeLens": {
      "type": "boolean",
      "default": true,
      "description": "Enables code lens for 'cells' in a python file.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "jupyter.enableAutoMoveToNextCell": {
      "type": "boolean",
      "default": true,
      "description": "Enables moving to the next cell when clicking on a 'Run Cell' code lens.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "jupyter.allowUnauthorizedRemoteConnection": {
      "type": "boolean",
      "default": false,
      "description": "Allow for connecting the Interactive window to a https Jupyter server that does not have valid certificates. This can be a security risk, so only use for known and trusted servers.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "jupyter.generateSVGPlots": {
      "type": "boolean",
      "default": false,
      "description": "Generate SVG output for notebook plots. This allows for better display in the plot viewer at the cost of generation speed and file size.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "jupyter.codeLenses": {
      "type": "string",
      "default": "jupyter.runcell,  jupyter.runallcellsabove, jupyter.debugcell",
      "description": "Set of commands to put as code lens above a cell.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": "jupyter.runcell,  jupyter.runallcellsabove, jupyter.debugcell",
      "restricted": false
    },
    "jupyter.debugCodeLenses": {
      "type": "string",
      "default": "jupyter.debugcontinue, jupyter.debugstop, jupyter.debugstepover",
      "description": "Set of debug commands to put as code lens above a cell while debugging.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": "jupyter.debugcontinue, jupyter.debugstop, jupyter.debugstepover",
      "restricted": false
    },
    "jupyter.debugpyDistPath": {
      "type": "string",
      "default": "",
      "description": "Path to debugpy bits for debugging cells.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": "",
      "restricted": false
    },
    "jupyter.stopOnFirstLineWhileDebugging": {
      "type": "boolean",
      "default": true,
      "description": "When debugging a cell, stop on the first line.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "jupyter.remoteDebuggerPort": {
      "type": "number",
      "default": -1,
      "description": "When debugging a cell, open this port on the remote box. If -1 is specified, a random port between 8889 and 9000 will be attempted.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": -1,
      "restricted": false
    },
    "jupyter.disableJupyterAutoStart": {
      "type": "boolean",
      "default": false,
      "description": "When true, disables Jupyter from being automatically started for you. You must instead run a cell to start Jupyter.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "jupyter.textOutputLimit": {
      "type": "number",
      "default": 20000,
      "deprecationMessage": "This setting is deprecated in favor of `notebook.output.textLineLimit`. This setting will be removed in an upcoming release.",
      "description": "Limit the amount of text in Interactive cell text output to this value. 0 to allow any amount of characters.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": 20000,
      "restricted": false
    },
    "jupyter.colorizeInputBox": {
      "type": "boolean",
      "default": true,
      "deprecationMessage": "This setting is deprecated and will be removed in an upcoming release.",
      "description": "Whether or not to use the theme's peek color as the background for the input box.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "jupyter.stopOnError": {
      "type": "boolean",
      "default": true,
      "description": "Stop running cells if a cell throws an exception.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "jupyter.addGotoCodeLenses": {
      "type": "boolean",
      "default": true,
      "description": "After running a cell, add a 'Goto' code lens on the cell. Note, disabling all code lenses disables this code lens as well.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "jupyter.variableQueries": {
      "type": "array",
      "markdownDescription": "Language to query mapping for returning the list of active variables in a Jupyter kernel. Used by the Variable Explorer in both the Interactive Window and Notebooks. Example:\n```\n[\n  {\n    \"language\": \"python\",\n    \"query\": \"%who_ls\",\n    \"parseExpr\": \"'(\\\\w+)'\"\n  }\n]\n```",
      "scope": 2,
      "examples": [
        [
          {
            "language": "python",
            "query": "_rwho_ls = %who_ls\\nprint(_rwho_ls)",
            "parseExpr": "'(\\w+)'"
          },
          {
            "language": "julia",
            "query": "whos",
            "parseExpr": "'(\\w+)'"
          }
        ]
      ],
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "default": [],
      "restricted": false
    },
    "jupyter.kernels.filter": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "jupyterKernelspec",
              "pythonEnvironment"
            ]
          },
          "path": {
            "type": "string",
            "markdownDescription": "Fully qualified path to the kernel spec or the python enviornment. \nE.g. `~/miniconda3/envs/sample/bin/python`."
          },
          "required": [
            "type",
            "path"
          ]
        }
      },
      "markdownDescription": "List of Jupyter Kernels and/or python environments that are to be excluded from the Kernel picker.",
      "scope": 6,
      "examples": [
        [
          {
            "type": "jupyterKernelspec",
            "path": "/usr/share/jupyter/kernels/sample/kernelspec.json"
          },
          {
            "type": "jupyterKernelspec",
            "path": "~/miniconda3/envs/sample/scripts/python.exe"
          }
        ]
      ],
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "default": [],
      "restricted": false
    },
    "jupyter.interactiveWindowMode": {
      "type": "string",
      "enum": [
        "perFile",
        "single",
        "multiple"
      ],
      "scope": 4,
      "description": "Behavior of the Interactive Window. 'perFile' will create a new interactive window for every file that runs a cell. 'single' allows a single window. 'multiple' allows the creation of multiple.",
      "default": "multiple",
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": "multiple",
      "restricted": false
    },
    "jupyter.magicCommandsAsComments": {
      "type": "boolean",
      "default": false,
      "description": "Uncomment shell assignments (#!), line magic (#!%) and cell magic (#!%%) when parsing code cells.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "jupyter.pythonExportMethod": {
      "type": "string",
      "enum": [
        "direct",
        "commentMagics",
        "nbconvert"
      ],
      "default": "direct",
      "description": "The method to use when exporting a notebook to a Python file. 'direct' will copy over the code directly as is. 'commentMagics' will comment out lines starting with line magics (%), cell magics (%%), and shell commands(!). 'nbconvert' will install nbconvert and use that for the conversion which can translate iPython syntax into Python syntax.",
      "scope": 1,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": "direct",
      "restricted": false
    },
    "jupyter.runStartupCommands": {
      "type": "array",
      "default": "",
      "description": "A series of Python instructions or iPython magic commands. Can be either an array of strings or a single string with commands separated by '\\n'. Commands will be silently executed whenever the interactive window loads. For instance, set this to '%load_ext autoreload\\n%autoreload 2' to automatically reload changes made to imported files without having to restart the interactive session.",
      "scope": 1,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": "",
      "restricted": false
    },
    "jupyter.debugJustMyCode": {
      "type": "boolean",
      "default": true,
      "description": "When debugging, debug just my code.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "jupyter.showOutlineButtonInNotebookToolbar": {
      "type": "boolean",
      "default": true,
      "description": "Show the Outline button in the Jupyter notebook toolbar.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "jupyter.newCellOnRunLast": {
      "type": "boolean",
      "default": true,
      "description": "Append a new empty cell to an interactive window file on running the currently last cell.",
      "scope": 4,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "jupyter.pylanceHandlesNotebooks": {
      "type": "boolean",
      "default": false,
      "description": "Determines if pylance's experimental notebook support is used or not.",
      "scope": 2,
      "tags": [
        "experimental"
      ],
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "jupyter.pythonCompletionTriggerCharacters": {
      "type": "string",
      "default": ".%",
      "description": "Characters which trigger auto completion on a python jupyter kernel.",
      "scope": 2,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": ".%",
      "restricted": false
    },
    "jupyter.logKernelOutputSeparately": {
      "type": "boolean",
      "default": false,
      "description": "Creates separate output panels for kernels/jupyter server console output",
      "scope": 2,
      "source": {
        "id": "ms-toolsai.jupyter",
        "displayName": "Jupyter"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "remote.containers.defaultExtensions": {
      "scope": 1,
      "type": "array",
      "description": "Configures the list of extensions to always install while creating a container.",
      "default": [],
      "items": {
        "type": "string",
        "pattern": "([a-z0-9A-Z][a-z0-9\\-A-Z]*)\\.([a-z0-9A-Z][a-z0-9\\-A-Z]*)",
        "errorMessage": "Expected format '${publisher}.${name}'. Example: 'vscode.csharp'."
      },
      "source": {
        "id": "ms-vscode-remote.remote-containers",
        "displayName": "Remote - Containers"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "remote.containers.workspaceMountConsistency": {
      "scope": 1,
      "type": "string",
      "enum": [
        "consistent",
        "cached",
        "delegated"
      ],
      "enumDescriptions": [
        "Perfect consistency.",
        "The host’s view is authoritative.",
        "The container’s view is authoritative."
      ],
      "description": "The consistency level used for the workspace mount (existing containers must be rebuilt to take effect).",
      "default": "cached",
      "source": {
        "id": "ms-vscode-remote.remote-containers",
        "displayName": "Remote - Containers"
      },
      "defaultDefaultValue": "cached",
      "restricted": false
    },
    "remote.containers.cacheVolume": {
      "scope": 1,
      "type": "boolean",
      "description": "Controls whether a Docker volume should be used to cache the VS Code server and extensions. Currently only applies to single container and not Docker Compose configurations.",
      "default": true,
      "source": {
        "id": "ms-vscode-remote.remote-containers",
        "displayName": "Remote - Containers"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "remote.containers.copyGitConfig": {
      "scope": 2,
      "type": "boolean",
      "markdownDescription": "Controls whether the Git configuration (`~/.gitconfig`) should be copied into the container. This is done after installing any `#dotfiles.repository#` and will not overwrite an existing Git configuration file.",
      "default": true,
      "source": {
        "id": "ms-vscode-remote.remote-containers",
        "displayName": "Remote - Containers"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "remote.containers.gitCredentialHelperConfigLocation": {
      "scope": 2,
      "type": "string",
      "enum": [
        "system",
        "global",
        "none"
      ],
      "enumDescriptions": [
        "Write to system config (`/etc/gitconfig`, requires root access).",
        "Write to user config (`~/.gitconfig`).",
        "Do not set a credential helper."
      ],
      "description": "Where to write the configuration for the Git credential helper.",
      "default": "global",
      "source": {
        "id": "ms-vscode-remote.remote-containers",
        "displayName": "Remote - Containers"
      },
      "defaultDefaultValue": "global",
      "restricted": false
    },
    "remote.containers.logLevel": {
      "scope": 1,
      "type": "string",
      "description": "The log level for the extension.",
      "default": "debug",
      "enum": [
        "info",
        "debug",
        "trace"
      ],
      "source": {
        "id": "ms-vscode-remote.remote-containers",
        "displayName": "Remote - Containers"
      },
      "defaultDefaultValue": "debug",
      "restricted": false
    },
    "remote.containers.dockerPath": {
      "scope": 1,
      "type": "string",
      "description": "Docker (or Podman) executable name or path.",
      "default": "docker",
      "source": {
        "id": "ms-vscode-remote.remote-containers",
        "displayName": "Remote - Containers"
      },
      "defaultDefaultValue": "docker",
      "restricted": false
    },
    "remote.containers.dockerComposePath": {
      "scope": 1,
      "type": "string",
      "description": "Docker Compose executable name or path.",
      "default": "docker-compose",
      "source": {
        "id": "ms-vscode-remote.remote-containers",
        "displayName": "Remote - Containers"
      },
      "defaultDefaultValue": "docker-compose",
      "restricted": false
    },
    "remote.containers.executeInWSL": {
      "scope": 1,
      "type": "boolean",
      "description": "Controls whether CLI commands should always be executed in WSL. The default is to only execute in WSL for workspace folders in WSL. This setting has no effect on other platforms than Windows.",
      "default": false,
      "source": {
        "id": "ms-vscode-remote.remote-containers",
        "displayName": "Remote - Containers"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "remote.containers.executeInWSLDistro": {
      "scope": 1,
      "type": "string",
      "markdownDescription": "WSL distro to use when not reopening a WSL folder. The default is to use the default WSL distro (see `wsl -l`). This setting has no effect when `#remote.containers.executeInWSL#` is not enabled or on other platforms than Windows.",
      "source": {
        "id": "ms-vscode-remote.remote-containers",
        "displayName": "Remote - Containers"
      },
      "default": "",
      "restricted": false
    },
    "dotfiles.repository": {
      "scope": 2,
      "type": "string",
      "description": "URL of a dotfiles Git repository (e.g., https://github.com/owner/repository.git) or owner/repository of a GitHub repository.",
      "source": {
        "id": "ms-vscode-remote.remote-containers",
        "displayName": "Remote - Containers"
      },
      "default": "",
      "restricted": false
    },
    "dotfiles.installCommand": {
      "scope": 2,
      "type": "string",
      "description": "The command to run after cloning the dotfiles repository. Defaults to run the first file of `install.sh`, `install`, `bootstrap.sh`, `bootstrap`, `setup.sh` and `setup` found in the dotfiles repository's root folder.",
      "source": {
        "id": "ms-vscode-remote.remote-containers",
        "displayName": "Remote - Containers"
      },
      "default": "",
      "restricted": false
    },
    "dotfiles.targetPath": {
      "scope": 2,
      "type": "string",
      "description": "The path to clone the dotfiles repository to. Defaults to `~/dotfiles`.",
      "default": "~/dotfiles",
      "source": {
        "id": "ms-vscode-remote.remote-containers",
        "displayName": "Remote - Containers"
      },
      "defaultDefaultValue": "~/dotfiles",
      "restricted": false
    },
    "remote.containers.dotfiles.repository": {
      "scope": 2,
      "type": "string",
      "description": "URL of a dotfiles Git repository (e.g., https://github.com/owner/repository.git) or owner/repository of a GitHub repository for DevContainers. This overrides the common setting for the dotfiles repository.",
      "source": {
        "id": "ms-vscode-remote.remote-containers",
        "displayName": "Remote - Containers"
      },
      "default": "",
      "restricted": false
    },
    "remote.containers.dotfiles.installCommand": {
      "scope": 2,
      "type": "string",
      "description": "The command to run after cloning the dotfiles repository for DevContainers. This overrides the common setting for the dotfiles install command.",
      "source": {
        "id": "ms-vscode-remote.remote-containers",
        "displayName": "Remote - Containers"
      },
      "default": "",
      "restricted": false
    },
    "remote.containers.dotfiles.targetPath": {
      "scope": 2,
      "type": "string",
      "description": "The path to clone the dotfiles repository to for DevContainers. This overrides the common setting for the dotfiles target path.",
      "source": {
        "id": "ms-vscode-remote.remote-containers",
        "displayName": "Remote - Containers"
      },
      "default": "",
      "restricted": false
    },
    "remote.containers.repositoryConfigurationPaths": {
      "scope": 1,
      "type": "array",
      "markdownDescription": "List of additional paths to search for [repository configurations](https://github.com/microsoft/vscode-dev-containers/tree/main/repository-containers).",
      "default": [],
      "items": {
        "type": "string"
      },
      "source": {
        "id": "ms-vscode-remote.remote-containers",
        "displayName": "Remote - Containers"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "remote.SSH.configFile": {
      "type": "string",
      "description": "The absolute file path to a custom SSH config file.",
      "default": "",
      "scope": 1,
      "source": {
        "id": "ms-vscode-remote.remote-ssh",
        "displayName": "Remote - SSH"
      },
      "defaultDefaultValue": "",
      "restricted": false
    },
    "remote.SSH.showLoginTerminal": {
      "type": "boolean",
      "description": "Always reveal the SSH login terminal.",
      "scope": 1,
      "default": false,
      "source": {
        "id": "ms-vscode-remote.remote-ssh",
        "displayName": "Remote - SSH"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "remote.SSH.defaultForwardedPorts": {
      "type": "array",
      "items": {
        "type": "object",
        "required": [
          "remotePort"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "remotePort": {
            "type": "number"
          },
          "localPort": {
            "type": "number"
          }
        }
      },
      "description": "A list of ports to forward when the connection is established.",
      "default": [],
      "scope": 3,
      "source": {
        "id": "ms-vscode-remote.remote-ssh",
        "displayName": "Remote - SSH"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "remote.SSH.defaultExtensions": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "List of extensions that should be installed automatically on all SSH hosts.",
      "scope": 1,
      "source": {
        "id": "ms-vscode-remote.remote-ssh",
        "displayName": "Remote - SSH"
      },
      "default": [],
      "restricted": false
    },
    "remote.SSH.path": {
      "type": "string",
      "description": "An absolute path to the SSH executable. When empty, it will use \"ssh\" on the path or in common install locations.",
      "default": "",
      "scope": 1,
      "source": {
        "id": "ms-vscode-remote.remote-ssh",
        "displayName": "Remote - SSH"
      },
      "defaultDefaultValue": "",
      "restricted": false
    },
    "remote.SSH.serverInstallPath": {
      "type": "object",
      "description": "A map of remote host to absolute path where the VS Code server will be installed. By default the server is installed in the home directory of every remote. **Note**: By changing this setting you may need to clean up other installations of `.vscode-server` on your remote that isn't in the path you've configured.",
      "scope": 1,
      "additionalProperties": {
        "type": "string"
      },
      "source": {
        "id": "ms-vscode-remote.remote-ssh",
        "displayName": "Remote - SSH"
      },
      "default": {},
      "restricted": false
    },
    "remote.SSH.lockfilesInTmp": {
      "type": "boolean",
      "markdownDescription": "Whether to keep lockfiles in `/tmp` instead of in the server's install folder. Useful for connecting to hosts which have issues with locking, such as hosts with a home directory using NFS or another distributed filesystem.",
      "scope": 1,
      "default": false,
      "source": {
        "id": "ms-vscode-remote.remote-ssh",
        "displayName": "Remote - SSH"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "remote.SSH.useFlock": {
      "type": "boolean",
      "markdownDescription": "Whether to use `flock` for creating lockfiles on Linux remotes instead of `ln`. By default, we use `flock` on Linux remotes and `ln` on macOS.",
      "scope": 1,
      "default": true,
      "source": {
        "id": "ms-vscode-remote.remote-ssh",
        "displayName": "Remote - SSH"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "remote.SSH.enableDynamicForwarding": {
      "type": "boolean",
      "description": "Whether to use SSH dynamic forwarding to allow setting up new port tunnels over an existing SSH connection. When this is used, a password only needs to be entered once for each remote window.",
      "scope": 1,
      "default": true,
      "source": {
        "id": "ms-vscode-remote.remote-ssh",
        "displayName": "Remote - SSH"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "remote.SSH.enableAgentForwarding": {
      "type": "boolean",
      "markdownDescription": "Enable fixing the remote environment so that the SSH config option `ForwardAgent` will take effect as expected from VS Code's remote extension host.",
      "scope": 1,
      "default": true,
      "source": {
        "id": "ms-vscode-remote.remote-ssh",
        "displayName": "Remote - SSH"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "remote.SSH.enableX11Forwarding": {
      "type": "boolean",
      "markdownDescription": "Enable fixing the remote environment so that the SSH config option `ForwardX11` will take effect as expected from VS Code's remote extension host.",
      "scope": 1,
      "default": true,
      "source": {
        "id": "ms-vscode-remote.remote-ssh",
        "displayName": "Remote - SSH"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "remote.SSH.enableRemoteCommand": {
      "type": "boolean",
      "markdownDescription": "**Experimental:** Enable using RemoteCommands from ssh config entries. This is only enabled if `remote.ssh.useLocalServer` is enabled as well.",
      "scope": 1,
      "default": false,
      "source": {
        "id": "ms-vscode-remote.remote-ssh",
        "displayName": "Remote - SSH"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "remote.SSH.allowLocalServerDownload": {
      "type": "boolean",
      "description": "If downloading the VS Code server fails on the host, this allows the extension to fall back to downloading on the client and transferring it to the host with scp.",
      "markdownDeprecationMessage": "Deprecated, please use `#remote.SSH.localServerDownload#`",
      "scope": 1,
      "default": true,
      "source": {
        "id": "ms-vscode-remote.remote-ssh",
        "displayName": "Remote - SSH"
      },
      "defaultDefaultValue": true,
      "restricted": false,
      "deprecationMessage": "Deprecated, please use `#remote.SSH.localServerDownload#`"
    },
    "remote.SSH.localServerDownload": {
      "type": "string",
      "description": "Whether the extension can download the VS Code Server on the client and transfer it to the host with scp, instead of downloading it on the host.",
      "enum": [
        "auto",
        "always",
        "off"
      ],
      "enumDescriptions": [
        "The server will first be downloaded on the host, and if that fails, will fall back to downloading locally",
        "The server will only be downloaded locally and transferred to the host",
        "The server will only be downloaded on the host"
      ],
      "scope": 1,
      "default": "auto",
      "source": {
        "id": "ms-vscode-remote.remote-ssh",
        "displayName": "Remote - SSH"
      },
      "defaultDefaultValue": "auto",
      "restricted": false
    },
    "remote.SSH.windowsRemotes": {
      "type": "array",
      "markdownDescription": "**Deprecated**: Enables experimental support for connecting to Windows remotes. Add the names of windows remotes to this list.",
      "deprecationMessage": "Deprecated: Please use `remote.SSH.remotePlatorm` instead",
      "default": [],
      "items": {
        "type": "string"
      },
      "scope": 1,
      "source": {
        "id": "ms-vscode-remote.remote-ssh",
        "displayName": "Remote - SSH"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "remote.SSH.useLocalServer": {
      "type": "boolean",
      "markdownDescription": "Enables a mode for connecting using a single connection shared between windows and across window reloads. This makes it faster to open new windows and reduces the number of times a password needs to be entered.",
      "scope": 1,
      "default": true,
      "source": {
        "id": "ms-vscode-remote.remote-ssh",
        "displayName": "Remote - SSH"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "remote.SSH.connectTimeout": {
      "type": "number",
      "description": "Specifies the timeout in seconds used for the SSH command that connects to the remote.",
      "default": 15,
      "scope": 1,
      "minimum": 1,
      "source": {
        "id": "ms-vscode-remote.remote-ssh",
        "displayName": "Remote - SSH"
      },
      "defaultDefaultValue": 15,
      "restricted": false
    },
    "remote.SSH.logLevel": {
      "type": "string",
      "description": "The log level for the extension.",
      "default": "debug",
      "scope": 1,
      "enum": [
        "debug",
        "trace"
      ],
      "source": {
        "id": "ms-vscode-remote.remote-ssh",
        "displayName": "Remote - SSH"
      },
      "defaultDefaultValue": "debug",
      "restricted": false
    },
    "remote.SSH.maxReconnectionAttempts": {
      "type": [
        "number",
        "null"
      ],
      "markdownDescription": "The maximum number of times to attempt reconnection. Use 0 to disallow reconnection, and `null` to use the maximum of 8.",
      "default": null,
      "scope": 1,
      "maximum": 8,
      "minimum": 0,
      "source": {
        "id": "ms-vscode-remote.remote-ssh",
        "displayName": "Remote - SSH"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "remote.SSH.suppressWindowsSshWarning": {
      "type": "boolean",
      "description": "Due to a bug with password handling in some versions of the SSH client bundled with Windows, the extension prefers a non-Windows SSH client, such as the one bundled with Git, and will show a warning when another one can't be found. This setting disables that warning.",
      "default": false,
      "scope": 1,
      "source": {
        "id": "ms-vscode-remote.remote-ssh",
        "displayName": "Remote - SSH"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "remote.SSH.remotePlatform": {
      "type": "object",
      "markdownDescription": "A map of the remote hostname to the platform for that remote. Valid values: `linux`, `macOS`, `windows`. Note - this setting will soon be required when useLocalServer is disabled, so it is currently being autopopulated for successful connections, but is not currently used.",
      "scope": 1,
      "additionalProperties": {
        "type": "string",
        "enum": [
          "macOS",
          "windows",
          "linux"
        ]
      },
      "source": {
        "id": "ms-vscode-remote.remote-ssh",
        "displayName": "Remote - SSH"
      },
      "default": {},
      "restricted": false
    },
    "remote.SSH.remoteServerListenOnSocket": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "When true, the remote VS Code server will listen on a socket path instead of opening a port. Only valid for Linux and macOS remotes. After toggling this setting, run the command \"Kill VS Code Server on Host...\" for it to take effect. Requires OpenSSH 6.7+. Disables the \"local server\" connection multiplexing mode. Requires `AllowStreamLocalForwarding` to be enabled for the SSH server.",
      "scope": 3,
      "source": {
        "id": "ms-vscode-remote.remote-ssh",
        "displayName": "Remote - SSH"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "remote.SSH.foldersSortOrder": {
      "type": "string",
      "description": "Specifies the order in which to display folders under SSH Targets in the Remote Explorer.",
      "default": "most recently used",
      "scope": 1,
      "enum": [
        "most recently used",
        "alphabetical"
      ],
      "source": {
        "id": "ms-vscode-remote.remote-ssh",
        "displayName": "Remote - SSH"
      },
      "defaultDefaultValue": "most recently used",
      "restricted": false
    },
    "remote.SSH.serverPickPortsFromRange": {
      "type": "object",
      "markdownDescription": "A map of the remote hostname to a range of ports you'd prefer the server to connect to on launch on the remote machine. If no free port is found in range, an error will be thrown. Valid ranges of the form `number-number` such as `4000-5000`; it's expected the first number will be lower than the next.",
      "scope": 1,
      "additionalProperties": {
        "type": "string",
        "pattern": "^\\d+-\\d+$"
      },
      "source": {
        "id": "ms-vscode-remote.remote-ssh",
        "displayName": "Remote - SSH"
      },
      "default": {},
      "restricted": false
    },
    "remote.WSL.fileWatcher.polling": {
      "type": "boolean",
      "description": "If set, polling is used for file watching inside WSL1. Polling can be CPU intensive but fixes the WSL1 issue that folders can not be renamed when watched. This option requires restart to take effect.",
      "default": false,
      "scope": 3,
      "source": {
        "id": "ms-vscode-remote.remote-wsl",
        "displayName": "Remote - WSL"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "remote.WSL.fileWatcher.pollingInterval": {
      "type": "number",
      "description": "The file watcher polling interval in ms used inside WSL1 distros if `remote.WSL.fileWatcher.polling` is set.\nThis option requires restart to take effect.",
      "default": 5000,
      "scope": 3,
      "source": {
        "id": "ms-vscode-remote.remote-wsl",
        "displayName": "Remote - WSL"
      },
      "defaultDefaultValue": 5000,
      "restricted": false
    },
    "remote.WSL.debug": {
      "type": "boolean",
      "description": "If set, the output in the WSL log shows debug information.",
      "default": false,
      "scope": 3,
      "source": {
        "id": "ms-vscode-remote.remote-wsl",
        "displayName": "Remote - WSL"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "remote.WSL.useShellEnvironment": {
      "type": "boolean",
      "description": "If set, the WSL windows gets the environment from the shell it was opened from.",
      "default": true,
      "scope": 3,
      "source": {
        "id": "ms-vscode-remote.remote-wsl",
        "displayName": "Remote - WSL"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "remote.WSL.server.connectThroughLocalhost": {
      "type": "boolean",
      "description": "If set, the connection to a VS Code server running in WSL2 will use localhost (::1). If not set, the connection will directly use the WSL2 VM's IP addresss if accessible or localhost if not.",
      "default": false,
      "deprecationMessage": "Use 'remote.WSL2.connectionMethod' instead.",
      "markdownDeprecationMessage": "Use `remote.WSL2.connectionMethod` instead.",
      "scope": 3,
      "source": {
        "id": "ms-vscode-remote.remote-wsl",
        "displayName": "Remote - WSL"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "remote.WSL1.connectionMethod": {
      "type": "string",
      "enum": [
        "localhost",
        "wslExeProxy"
      ],
      "enumDescriptions": [
        "Connects to the server in WSL though 127.0.0.1 which is beeing shared between Windows and WSL1.",
        "Connects to the server in WSL through a local proxy server that uses 'wsl.exe' to forward the connection to WSL."
      ],
      "description": "Specifies how Remote - WSL will connect to the VS Code server running in WSL1 distros. This option requires restart to take effect.",
      "default": "localhost",
      "scope": 3,
      "source": {
        "id": "ms-vscode-remote.remote-wsl",
        "displayName": "Remote - WSL"
      },
      "defaultDefaultValue": "localhost",
      "restricted": false
    },
    "remote.WSL2.connectionMethod": {
      "type": "string",
      "enum": [
        "localhost",
        "wsl2VMAddress",
        "wslExeProxy"
      ],
      "enumDescriptions": [
        "Connects to the server in WSL though localhost (::1) which is forwarded to the WSL2 VM by Windows.",
        "Connects to the server in WSL though the IP address of the WSL2 VM.",
        "Connects to the server in WSL through a local proxy server that uses 'wsl.exe' to forward the connection to WSL."
      ],
      "description": "Specifies how Remote - WSL will connect to the VS Code server running in WSL2 distros. This option requires restart to take effect.",
      "default": "wslExeProxy",
      "scope": 3,
      "source": {
        "id": "ms-vscode-remote.remote-wsl",
        "displayName": "Remote - WSL"
      },
      "defaultDefaultValue": "wslExeProxy",
      "restricted": false
    },
    "hexeditor.inspectorType": {
      "type": "string",
      "enum": [
        "aside",
        "hover",
        "sidebar"
      ],
      "default": "aside",
      "description": "Where the data inspector should be shown in the hex editor.",
      "scope": 3,
      "source": {
        "id": "ms-vscode.hexeditor",
        "displayName": "Hex Editor"
      },
      "defaultDefaultValue": "aside",
      "restricted": false
    },
    "hexeditor.maxFileSize": {
      "type": "number",
      "minimum": 0,
      "default": 10,
      "description": "The max file size (in MB) that the editor will try to open before warning you.",
      "scope": 3,
      "source": {
        "id": "ms-vscode.hexeditor",
        "displayName": "Hex Editor"
      },
      "defaultDefaultValue": 10,
      "restricted": false
    },
    "hexeditor.dataInspector.autoReveal": {
      "type": "boolean",
      "default": true,
      "description": "Whether to auto reveal the data inspector when the hex editor is opened.",
      "scope": 3,
      "source": {
        "id": "ms-vscode.hexeditor",
        "displayName": "Hex Editor"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "hexeditor.defaultEndianness": {
      "type": "string",
      "default": "little",
      "enum": [
        "little",
        "big"
      ],
      "description": "The endianness selected when loading the editor.",
      "scope": 3,
      "source": {
        "id": "ms-vscode.hexeditor",
        "displayName": "Hex Editor"
      },
      "defaultDefaultValue": "little",
      "restricted": false
    },
    "hexeditor.columnWidth": {
      "type": "integer",
      "default": 16,
      "minimum": 1,
      "maximum": 512,
      "description": "The number of bytes per row to show in the editor.",
      "scope": 3,
      "source": {
        "id": "ms-vscode.hexeditor",
        "displayName": "Hex Editor"
      },
      "defaultDefaultValue": 16,
      "restricted": false
    },
    "hexeditor.showDecodedText": {
      "type": "boolean",
      "default": true,
      "description": "Whether decoded text should be shown in the editor.",
      "scope": 3,
      "source": {
        "id": "ms-vscode.hexeditor",
        "displayName": "Hex Editor"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "livePreview.portNumber": {
      "type": "number",
      "default": 3000,
      "minimum": 0,
      "maximum": 65535,
      "description": "Which local port the live preview's server should try initially. If this port number doesn't work, it will increment the port number until it finds a free port.",
      "scope": 3,
      "source": {
        "id": "ms-vscode.live-server",
        "displayName": "Live Preview"
      },
      "defaultDefaultValue": 3000,
      "restricted": false
    },
    "livePreview.serverKeepAliveAfterEmbeddedPreviewClose": {
      "type": "number",
      "default": 3,
      "minimum": 0,
      "maximum": 20,
      "description": "How many minutes after closing the embedded preview you want the server to shut off. Set to 0 to have server stay on indefinetely.",
      "scope": 3,
      "source": {
        "id": "ms-vscode.live-server",
        "displayName": "Live Preview"
      },
      "defaultDefaultValue": 3,
      "restricted": false
    },
    "livePreview.showStatusBarItem": {
      "type": "boolean",
      "default": true,
      "description": "Whether to show the current hosting port when server is open on the status bar.",
      "scope": 3,
      "source": {
        "id": "ms-vscode.live-server",
        "displayName": "Live Preview"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "livePreview.showServerStatusNotifications": {
      "type": "boolean",
      "default": false,
      "description": "Whether or not to show information messages on server on/off status change.",
      "scope": 3,
      "source": {
        "id": "ms-vscode.live-server",
        "displayName": "Live Preview"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "livePreview.autoRefreshPreview": {
      "enum": [
        "On All Changes in Editor",
        "On Changes to Saved Files",
        "Never"
      ],
      "default": "On All Changes in Editor",
      "description": "How often to automatically refresh the preview.",
      "scope": 3,
      "source": {
        "id": "ms-vscode.live-server",
        "displayName": "Live Preview"
      },
      "defaultDefaultValue": "On All Changes in Editor",
      "restricted": false
    },
    "livePreview.openPreviewTarget": {
      "enum": [
        "Embedded Preview",
        "External Browser"
      ],
      "default": "Embedded Preview",
      "description": "The preferred target for previews.",
      "scope": 3,
      "source": {
        "id": "ms-vscode.live-server",
        "displayName": "Live Preview"
      },
      "defaultDefaultValue": "Embedded Preview",
      "restricted": false
    },
    "livePreview.tasks.browserPreviewLaunchServerLogging": {
      "type": "boolean",
      "default": true,
      "description": "Whether the auto-generated task terminal has logging.",
      "scope": 3,
      "source": {
        "id": "ms-vscode.live-server",
        "displayName": "Live Preview"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "livePreview.notifyOnOpenLooseFile": {
      "type": "boolean",
      "default": true,
      "description": "Whether to notify the user when opening a preview for a file that is not part of the currently opened workspace (or the workspace where the server is hosted).",
      "scope": 3,
      "source": {
        "id": "ms-vscode.live-server",
        "displayName": "Live Preview"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "livePreview.tasks.runTaskWithExternalPreview": {
      "type": "boolean",
      "default": true,
      "description": "Whether or not to pair external preview instances with the auto-generated server task. When disabled, the server will also not automatically close (until the window is closed).",
      "scope": 3,
      "source": {
        "id": "ms-vscode.live-server",
        "displayName": "Live Preview"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "livePreview.defaultPreviewPath": {
      "type": "string",
      "default": "",
      "description": "The file to automatically show upon starting the server. Leave blank to open at the index.",
      "scope": 3,
      "source": {
        "id": "ms-vscode.live-server",
        "displayName": "Live Preview"
      },
      "defaultDefaultValue": "",
      "restricted": false
    },
    "livePreview.debugOnExternalPreview": {
      "type": "boolean",
      "default": false,
      "description": "Whether or not to attach the JavaScript debugger on external preview launches.",
      "scope": 3,
      "source": {
        "id": "ms-vscode.live-server",
        "displayName": "Live Preview"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "livePreview.hostIP": {
      "type": "string",
      "default": "127.0.0.1",
      "description": "The local IP host address to host your files on.",
      "scope": 3,
      "source": {
        "id": "ms-vscode.live-server",
        "displayName": "Live Preview"
      },
      "defaultDefaultValue": "127.0.0.1",
      "restricted": false
    },
    "liveshare.anonymousGuestApproval": {
      "default": "prompt",
      "enum": [
        "prompt",
        "accept",
        "reject"
      ],
      "description": "Controls how to handle join requests from anonymous guests.",
      "scope": 3,
      "source": {
        "id": "ms-vsliveshare.vsliveshare",
        "displayName": "Live Share"
      },
      "defaultDefaultValue": "prompt",
      "restricted": true
    },
    "liveshare.launcherClient": {
      "type": "string",
      "default": "web",
      "enum": [
        "web",
        "visualStudioCode",
        "visualStudio"
      ],
      "description": "Specifies the client to launch when clicking on a Live Share URL.",
      "scope": 3,
      "source": {
        "id": "ms-vsliveshare.vsliveshare",
        "displayName": "Live Share"
      },
      "defaultDefaultValue": "web",
      "restricted": false
    },
    "liveshare.diagnosticLoggingLevel": {
      "default": "Warning",
      "enum": [
        "Trace",
        "Debug",
        "Info",
        "Warning",
        "Error",
        "Critical",
        "Off"
      ],
      "description": "Specifies the level of logging output from Visual Studio Live Share Extension",
      "scope": 3,
      "source": {
        "id": "ms-vsliveshare.vsliveshare",
        "displayName": "Live Share"
      },
      "defaultDefaultValue": "Warning",
      "restricted": false
    },
    "liveshare.diagnosticLogging": {
      "type": "boolean",
      "default": false,
      "description": "Enables the Visual Studio Live Share output channel.",
      "scope": 3,
      "source": {
        "id": "ms-vsliveshare.vsliveshare",
        "displayName": "Live Share"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "liveshare.diagnosticMode": {
      "type": "boolean",
      "default": false,
      "description": "Enables diagnostic notifications and logs.",
      "scope": 3,
      "source": {
        "id": "ms-vsliveshare.vsliveshare",
        "displayName": "Live Share"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "liveshare.connectionMode": {
      "type": "string",
      "default": "auto",
      "enum": [
        "auto",
        "direct",
        "relay",
        "signalR"
      ],
      "description": "Type of connection used for collaboration; the default (auto) mode prefers a direct connection, but may fallback to a cloud relay if the direct connection failed.",
      "scope": 3,
      "source": {
        "id": "ms-vsliveshare.vsliveshare",
        "displayName": "Live Share"
      },
      "defaultDefaultValue": "auto",
      "restricted": false
    },
    "liveshare.nameTagVisibility": {
      "type": "string",
      "default": "Activity",
      "enum": [
        "Always",
        "Activity",
        "Never"
      ],
      "description": "Controls when to display a participant's name tag instead of just their cursor.",
      "scope": 3,
      "source": {
        "id": "ms-vsliveshare.vsliveshare",
        "displayName": "Live Share"
      },
      "defaultDefaultValue": "Activity",
      "restricted": false
    },
    "liveshare.guestApprovalRequired": {
      "type": "boolean",
      "default": false,
      "description": "Controls whether the host needs to explicitly approve guest requests to join collaboration sessions.",
      "scope": 3,
      "source": {
        "id": "ms-vsliveshare.vsliveshare",
        "displayName": "Live Share"
      },
      "defaultDefaultValue": false,
      "restricted": true
    },
    "liveshare.shareExternalFiles": {
      "type": "boolean",
      "default": true,
      "description": "Automatically share external files opened by the host during a collaboration session.",
      "scope": 3,
      "source": {
        "id": "ms-vsliveshare.vsliveshare",
        "displayName": "Live Share"
      },
      "defaultDefaultValue": true,
      "restricted": true
    },
    "liveshare.joinDebugSessionOption": {
      "type": "string",
      "default": "Automatic",
      "enum": [
        "Automatic",
        "Manual",
        "Prompt"
      ],
      "description": "Controls how the participant will join incoming shared debug sessions.",
      "scope": 3,
      "source": {
        "id": "ms-vsliveshare.vsliveshare",
        "displayName": "Live Share"
      },
      "defaultDefaultValue": "Automatic",
      "restricted": true
    },
    "liveshare.showInStatusBar": {
      "type": "string",
      "default": "always",
      "enum": [
        "always",
        "whileCollaborating",
        "never"
      ],
      "description": "Show or hide the Live Share status bar items.",
      "scope": 3,
      "source": {
        "id": "ms-vsliveshare.vsliveshare",
        "displayName": "Live Share"
      },
      "defaultDefaultValue": "always",
      "restricted": false
    },
    "liveshare.sharedTerminalWidth": {
      "type": "number",
      "default": 120,
      "description": "Width of shared terminal window, characters.",
      "scope": 3,
      "source": {
        "id": "ms-vsliveshare.vsliveshare",
        "displayName": "Live Share"
      },
      "defaultDefaultValue": 120,
      "restricted": false
    },
    "liveshare.sharedTerminalHeight": {
      "type": "number",
      "default": 50,
      "description": "Height of shared terminal window, characters.",
      "scope": 3,
      "source": {
        "id": "ms-vsliveshare.vsliveshare",
        "displayName": "Live Share"
      },
      "defaultDefaultValue": 50,
      "restricted": false
    },
    "liveshare.featureSet": {
      "type": "string",
      "default": "stable",
      "enum": [
        "stable",
        "insiders"
      ],
      "markdownDescription": "Controls set of active features. By selecting `insiders`, you agree to the [Pre-Release Software License Terms](https://aka.ms/vsls-license-preview) and [Privacy Statement](https://aka.ms/vsls-privacy).",
      "scope": 3,
      "source": {
        "id": "ms-vsliveshare.vsliveshare",
        "displayName": "Live Share"
      },
      "defaultDefaultValue": "stable",
      "restricted": false
    },
    "liveshare.keepAliveInterval": {
      "type": "number",
      "default": 20,
      "description": "Sets the number of seconds to wait before sending keep-alive messages in an idle session, used to detect abnormal network disconnection. Set to -1 to disable sending keep-alive messages.",
      "scope": 3,
      "source": {
        "id": "ms-vsliveshare.vsliveshare",
        "displayName": "Live Share"
      },
      "defaultDefaultValue": 20,
      "restricted": false
    },
    "liveshare.allowGuestTaskControl": {
      "type": "boolean",
      "default": false,
      "description": "Allow guests to run and terminate workspace tasks.",
      "scope": 3,
      "source": {
        "id": "ms-vsliveshare.vsliveshare",
        "displayName": "Live Share"
      },
      "defaultDefaultValue": false,
      "restricted": true
    },
    "liveshare.allowGuestDebugControl": {
      "type": "boolean",
      "default": false,
      "description": "Allow guests to start and stop debugging sessions.",
      "scope": 3,
      "source": {
        "id": "ms-vsliveshare.vsliveshare",
        "displayName": "Live Share"
      },
      "defaultDefaultValue": false,
      "restricted": true
    },
    "liveshare.languages.allowGuestCommandControl": {
      "type": "boolean",
      "default": false,
      "description": "Allow guests to run arbitrary commands via Code Actions (“Quick Fixes”) and CodeLens",
      "scope": 3,
      "source": {
        "id": "ms-vsliveshare.vsliveshare",
        "displayName": "Live Share"
      },
      "defaultDefaultValue": false,
      "restricted": true
    },
    "liveshare.notebooks.allowGuestExecuteCells": {
      "type": "boolean",
      "default": false,
      "description": "Allow guests to run notebook cells",
      "scope": 3,
      "source": {
        "id": "ms-vsliveshare.vsliveshare",
        "displayName": "Live Share"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "liveshare.focusBehavior": {
      "type": "string",
      "default": "accept",
      "description": "Specifies how to respond to focus requests from other participants.",
      "enum": [
        "accept",
        "prompt"
      ],
      "scope": 3,
      "source": {
        "id": "ms-vsliveshare.vsliveshare",
        "displayName": "Live Share"
      },
      "defaultDefaultValue": "accept",
      "restricted": false
    },
    "liveshare.alwaysFollowHost": {
      "type": "boolean",
      "default": false,
      "description": "Ensures that the session's host is always followed.",
      "scope": 3,
      "source": {
        "id": "ms-vsliveshare.vsliveshare",
        "displayName": "Live Share"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "liveshare.showReadOnlyUsersInEditor": {
      "type": "string",
      "default": "whileFollowing",
      "description": "Controls visibility of the cursor and highlights for read-only users.",
      "enum": [
        "whileFollowing",
        "always"
      ],
      "scope": 3,
      "source": {
        "id": "ms-vsliveshare.vsliveshare",
        "displayName": "Live Share"
      },
      "defaultDefaultValue": "whileFollowing",
      "restricted": true
    },
    "liveshare.increasedGuestLimit": {
      "type": "boolean",
      "default": true,
      "description": "Increases the guest limit from 5 to 30.",
      "scope": 3,
      "source": {
        "id": "ms-vsliveshare.vsliveshare",
        "displayName": "Live Share"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "liveshare.autoShareTerminals": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether terminals are automatically shared with guests (read-only).",
      "scope": 3,
      "source": {
        "id": "ms-vsliveshare.vsliveshare",
        "displayName": "Live Share"
      },
      "defaultDefaultValue": true,
      "restricted": true
    },
    "liveshare.codeLens": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether to show the CodeLens for starting a collaboration session.",
      "scope": 3,
      "source": {
        "id": "ms-vsliveshare.vsliveshare",
        "displayName": "Live Share"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "liveshare.showVerboseNotifications": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether to show verbose notifications, such as when a guest joins and leaves a session.",
      "scope": 3,
      "source": {
        "id": "ms-vsliveshare.vsliveshare",
        "displayName": "Live Share"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "liveshare.populateGitCoAuthors": {
      "type": "string",
      "default": "always",
      "description": "Specifies when to automatically populate your Git commit message with guest attribution (using the Git-co-author trailer).",
      "enum": [
        "always",
        "never"
      ],
      "scope": 3,
      "source": {
        "id": "ms-vsliveshare.vsliveshare",
        "displayName": "Live Share"
      },
      "defaultDefaultValue": "always",
      "restricted": false
    },
    "liveshare.autoShareServers": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether web servers are automatically shared, when started from the integrated terminal or well-known extensions.",
      "scope": 3,
      "source": {
        "id": "ms-vsliveshare.vsliveshare",
        "displayName": "Live Share"
      },
      "defaultDefaultValue": true,
      "restricted": true
    },
    "liveshare.openSharedServers": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether to automatically open shared servers in your default browser.",
      "scope": 3,
      "source": {
        "id": "ms-vsliveshare.vsliveshare",
        "displayName": "Live Share"
      },
      "defaultDefaultValue": true,
      "restricted": true
    },
    "liveshare.presence": {
      "type": "boolean",
      "default": false,
      "description": "Controls whether to publish your presence to other users, and allow in-tool invites for collaboration sessions",
      "scope": 3,
      "source": {
        "id": "ms-vsliveshare.vsliveshare",
        "displayName": "Live Share"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "liveshare.publishWorkspaceInfo": {
      "type": "boolean",
      "default": false,
      "description": "Controls whether to publish your current workspace folder to other users",
      "scope": 3,
      "source": {
        "id": "ms-vsliveshare.vsliveshare",
        "displayName": "Live Share"
      },
      "defaultDefaultValue": false,
      "restricted": true
    },
    "liveshare.comments": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether to allow comments in collaboration sessions",
      "scope": 3,
      "source": {
        "id": "ms-vsliveshare.vsliveshare",
        "displayName": "Live Share"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "liveshare.allowInvites": {
      "type": "string",
      "default": "contacts",
      "enum": [
        "all",
        "contacts",
        "recentContacts",
        "none"
      ],
      "description": "Specifies who to allow session invitations from.",
      "scope": 3,
      "source": {
        "id": "ms-vsliveshare.vsliveshare",
        "displayName": "Live Share"
      },
      "defaultDefaultValue": "contacts",
      "restricted": false
    },
    "liveshare.accessibility.accessibilityFeaturesEnabled": {
      "type": "boolean",
      "default": false,
      "description": "Enables various accessibility features, such as audio cues about what is happening in the session.",
      "scope": 3,
      "source": {
        "id": "ms-vsliveshare.vsliveshare",
        "displayName": "Live Share"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "liveshare.accessibility.outputDevice": {
      "type": "string",
      "default": "Default",
      "description": "Output device to play audio in accessibility mode.",
      "scope": 3,
      "source": {
        "id": "ms-vsliveshare.vsliveshare",
        "displayName": "Live Share"
      },
      "defaultDefaultValue": "Default",
      "restricted": false
    },
    "liveshare.accessibility.voiceVolume": {
      "type": "number",
      "minimum": 0,
      "maxiumum": 100,
      "default": 100,
      "description": "Controls the volume of voice audio in accessibility mode (between 0 and 100).",
      "scope": 3,
      "source": {
        "id": "ms-vsliveshare.vsliveshare",
        "displayName": "Live Share"
      },
      "defaultDefaultValue": 100,
      "restricted": false
    },
    "liveshare.accessibility.soundVolume": {
      "type": "number",
      "minimum": 0,
      "maxiumum": 100,
      "default": 100,
      "description": "Controls the volume of sound audio in accessibility mode (between 0 and 100).",
      "scope": 3,
      "source": {
        "id": "ms-vsliveshare.vsliveshare",
        "displayName": "Live Share"
      },
      "defaultDefaultValue": 100,
      "restricted": false
    },
    "liveshare.accessibility.speechRate": {
      "type": "number",
      "minimum": 1,
      "maxiumum": 10,
      "default": 2,
      "description": "Controls the rate of speech in accessibility mode.",
      "scope": 3,
      "source": {
        "id": "ms-vsliveshare.vsliveshare",
        "displayName": "Live Share"
      },
      "defaultDefaultValue": 2,
      "restricted": false
    },
    "liveshare.accessibility.voice": {
      "type": "string",
      "default": "en-US-Jenny",
      "enum": [
        "en-AU-Natasha",
        "en-AU-William",
        "en-CA-Clara",
        "en-CA-Liam",
        "en-HK-Yan",
        "en-HK-Sam",
        "en-IN-Neerja",
        "en-IN-Prabhat",
        "en-IE-Emily",
        "en-IE-Connor",
        "en-NZ-Molly",
        "en-NZ-Mitchell",
        "en-PH-Rosa",
        "en-PH-James",
        "en-SG-Luna",
        "en-SG-Wayne",
        "en-ZA-Leah",
        "en-ZA-Luke",
        "en-GB-Libby",
        "en-GB-Sonia",
        "en-GB-Mia",
        "en-GB-Ryan",
        "en-US-Aria",
        "en-US-Jenny",
        "en-US-Guy",
        "en-US-Sara",
        "en-US-Amber",
        "en-US-Ashley",
        "en-US-Cora",
        "en-US-Elizabeth",
        "en-US-Michelle",
        "en-US-Monica",
        "en-US-Ana",
        "en-US-Brandon",
        "en-US-Christopher",
        "en-US-Jacob",
        "en-US-Eric",
        "zh-HK-HiuGaai",
        "zh-HK-WanLung",
        "zh-CN-Xiaohan",
        "zh-CN-Yunxi",
        "zh-TW-HsiaoChen",
        "zh-TW-YunJhe",
        "fr-FR-Denise",
        "fr-FR-Henri",
        "de-DE-Katja",
        "de-DE-Conrad",
        "it-IT-Elsa",
        "it-IT-Diego",
        "es-ES-Elvira",
        "es-ES-Alvaro",
        "ja-JP-Nanami",
        "ja-JP-Keita",
        "ko-KR-SunHi",
        "ko-KR-InJoon",
        "ru-RU-Dariya",
        "ru-RU-Dmitry",
        "bg-BG-Kalina",
        "bg-BG-Borislav",
        "hu-HU-Noemi",
        "hu-HU-Tamas",
        "pt-BR-Francisca",
        "pt-BR-Antonio",
        "tr-TR-Emel",
        "tr-TR-Ahmet",
        "pl-PL-Agnieszka",
        "pl-PL-Marek",
        "cs-CZ-Vlasta",
        "cs-CZ-Antonin"
      ],
      "description": "The voice used for speech in accessibility mode.",
      "scope": 3,
      "source": {
        "id": "ms-vsliveshare.vsliveshare",
        "displayName": "Live Share"
      },
      "defaultDefaultValue": "en-US-Jenny",
      "restricted": false
    },
    "liveshare.accessibility.voiceEnabled": {
      "type": "boolean",
      "default": true,
      "description": "Enables spoken announcements about activity.",
      "scope": 3,
      "source": {
        "id": "ms-vsliveshare.vsliveshare",
        "displayName": "Live Share"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "liveshare.accessibility.soundsEnabled": {
      "type": "boolean",
      "default": true,
      "description": "Enables sound effects about activity.",
      "scope": 3,
      "source": {
        "id": "ms-vsliveshare.vsliveshare",
        "displayName": "Live Share"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "material-icon-theme.showWelcomeMessage": {
      "type": "boolean",
      "default": true,
      "description": "Show the welcome message after first installation.",
      "scope": 3,
      "source": {
        "id": "PKief.material-icon-theme",
        "displayName": "Material Icon Theme"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "material-icon-theme.showUpdateMessage": {
      "type": "boolean",
      "default": false,
      "description": "Show the update message after each update.",
      "scope": 3,
      "source": {
        "id": "PKief.material-icon-theme",
        "displayName": "Material Icon Theme"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "material-icon-theme.showReloadMessage": {
      "type": "boolean",
      "default": true,
      "description": "Show restart notification.",
      "scope": 3,
      "source": {
        "id": "PKief.material-icon-theme",
        "displayName": "Material Icon Theme"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "material-icon-theme.activeIconPack": {
      "type": "string",
      "default": "angular",
      "description": "Select an icon pack that enables specific icons.",
      "enumDescriptions": [
        "Icons for Angular.",
        "Icons for Angular and ngrx.",
        "Icons for React.",
        "Icons for React and Redux.",
        "Icons for Vue.",
        "Icons for Vue and Vuex.",
        "Icons for NestJS.",
        "No icon pack enabled."
      ],
      "enum": [
        "angular",
        "angular_ngrx",
        "react",
        "react_redux",
        "vue",
        "vue_vuex",
        "nest",
        "none"
      ],
      "scope": 3,
      "source": {
        "id": "PKief.material-icon-theme",
        "displayName": "Material Icon Theme"
      },
      "defaultDefaultValue": "angular",
      "restricted": false
    },
    "material-icon-theme.files.associations": {
      "type": "object",
      "default": {},
      "description": "Set custom file icon associations.",
      "scope": 3,
      "source": {
        "id": "PKief.material-icon-theme",
        "displayName": "Material Icon Theme"
      },
      "defaultDefaultValue": {},
      "restricted": false
    },
    "material-icon-theme.folders.associations": {
      "type": "object",
      "default": {},
      "description": "Set custom folder icon associations.",
      "scope": 3,
      "source": {
        "id": "PKief.material-icon-theme",
        "displayName": "Material Icon Theme"
      },
      "defaultDefaultValue": {},
      "restricted": false
    },
    "material-icon-theme.languages.associations": {
      "type": "object",
      "default": {},
      "description": "Set custom language icon associations.",
      "scope": 3,
      "source": {
        "id": "PKief.material-icon-theme",
        "displayName": "Material Icon Theme"
      },
      "defaultDefaultValue": {},
      "restricted": false
    },
    "material-icon-theme.folders.theme": {
      "type": "string",
      "default": "specific",
      "description": "Set the type for the folder icons.",
      "enumDescriptions": [
        "Select specific folder icons.",
        "Select classic folder icons.",
        "No folder icons."
      ],
      "enum": [
        "specific",
        "classic",
        "none"
      ],
      "scope": 3,
      "source": {
        "id": "PKief.material-icon-theme",
        "displayName": "Material Icon Theme"
      },
      "defaultDefaultValue": "specific",
      "restricted": false
    },
    "material-icon-theme.folders.color": {
      "type": "string",
      "default": "#90a4ae",
      "pattern": "^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$",
      "description": "Change the color of the folder icons.",
      "scope": 3,
      "source": {
        "id": "PKief.material-icon-theme",
        "displayName": "Material Icon Theme"
      },
      "defaultDefaultValue": "#90a4ae",
      "restricted": false
    },
    "material-icon-theme.opacity": {
      "type": "number",
      "default": 1,
      "minimum": 0,
      "maximum": 1,
      "description": "Change the opacity of the icons.",
      "scope": 3,
      "source": {
        "id": "PKief.material-icon-theme",
        "displayName": "Material Icon Theme"
      },
      "defaultDefaultValue": 1,
      "restricted": false
    },
    "material-icon-theme.hidesExplorerArrows": {
      "type": "boolean",
      "default": false,
      "description": "Hide explorer arrows before folder.",
      "scope": 3,
      "source": {
        "id": "PKief.material-icon-theme",
        "displayName": "Material Icon Theme"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "material-icon-theme.saturation": {
      "type": "number",
      "default": 1,
      "minimum": 0,
      "maximum": 1,
      "description": "Change the saturation of the icons.",
      "scope": 3,
      "source": {
        "id": "PKief.material-icon-theme",
        "displayName": "Material Icon Theme"
      },
      "defaultDefaultValue": 1,
      "restricted": false
    },
    "prisma.fileWatcher": {
      "scope": 3,
      "type": "boolean",
      "default": true,
      "description": "Enable/disable the File Watcher functionality for Prisma Client.",
      "source": {
        "id": "Prisma.prisma",
        "displayName": "Prisma"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "prisma.trace.server": {
      "scope": 3,
      "type": "string",
      "enum": [
        "off",
        "messages",
        "verbose"
      ],
      "default": "off",
      "description": "Setting for logging between the VS Code extension and the language server.",
      "source": {
        "id": "Prisma.prisma",
        "displayName": "Prisma"
      },
      "defaultDefaultValue": "off",
      "restricted": false
    },
    "quicktype.justTypes": {
      "type": "boolean",
      "default": true,
      "description": "Produce just types, or (de-)serialization code as well?",
      "scope": 3,
      "source": {
        "id": "quicktype.quicktype",
        "displayName": "Paste JSON as Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "quicktype.inferMaps": {
      "type": "boolean",
      "default": true,
      "description": "Infer maps when object keys look like map keys.",
      "scope": 3,
      "source": {
        "id": "quicktype.quicktype",
        "displayName": "Paste JSON as Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "quicktype.inferEnums": {
      "type": "boolean",
      "default": true,
      "description": "Infer enums when there aren't many different string values.",
      "scope": 3,
      "source": {
        "id": "quicktype.quicktype",
        "displayName": "Paste JSON as Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "quicktype.inferDateTimes": {
      "type": "boolean",
      "default": true,
      "description": "Use date-time types for strings that look like date-times.",
      "scope": 3,
      "source": {
        "id": "quicktype.quicktype",
        "displayName": "Paste JSON as Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "quicktype.inferUuids": {
      "type": "boolean",
      "default": true,
      "description": "Use UUID types for strings that look like UUIDs.",
      "scope": 3,
      "source": {
        "id": "quicktype.quicktype",
        "displayName": "Paste JSON as Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "quicktype.inferIntegerStrings": {
      "type": "boolean",
      "default": true,
      "description": "Convert stringified integers into integers, and back.",
      "scope": 3,
      "source": {
        "id": "quicktype.quicktype",
        "displayName": "Paste JSON as Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "quicktype.inferBooleanStrings": {
      "type": "boolean",
      "default": true,
      "description": "Convert stringified booleans into booleans, and back.",
      "scope": 3,
      "source": {
        "id": "quicktype.quicktype",
        "displayName": "Paste JSON as Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "ruby.locate": {
      "type": "object",
      "description": "Defines where the Ruby extension will look to find Modules, Classes and methods.",
      "default": {
        "exclude": "{**/@(test|spec|tmp|.*),**/@(test|spec|tmp|.*)/**,**/*_spec.rb}",
        "include": "**/*.rb"
      },
      "properties": {
        "include": {
          "type": "string",
          "description": "glob pattern to select files to parse. Matches are performed against the path relative to the workspace root",
          "default": "**/*.rb"
        },
        "exclude": {
          "type": "string",
          "description": "glob pattern to select files to ignore, this is also run against paths for exclusion from walking. Matches are performed against the path relative to the workspace root",
          "default": "{**/@(test|spec|tmp|.*),**/@(test|spec|tmp|.*)/**,**/*_spec.rb}"
        }
      },
      "scope": 3,
      "source": {
        "id": "rebornix.ruby",
        "displayName": "Ruby"
      },
      "defaultDefaultValue": {
        "exclude": "{**/@(test|spec|tmp|.*),**/@(test|spec|tmp|.*)/**,**/*_spec.rb}",
        "include": "**/*.rb"
      },
      "restricted": false
    },
    "ruby.interpreter.commandPath": {
      "type": "string",
      "default": "ruby",
      "description": "Path to the Ruby interpreter.  Set this to an absolute path to select from multiple installed Ruby versions.",
      "isExecutable": true,
      "scope": 6,
      "source": {
        "id": "rebornix.ruby",
        "displayName": "Ruby"
      },
      "defaultDefaultValue": "ruby",
      "restricted": false
    },
    "ruby.useLanguageServer": {
      "type": "boolean",
      "default": false,
      "description": "Use built-in language server",
      "scope": 3,
      "source": {
        "id": "rebornix.ruby",
        "displayName": "Ruby"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "ruby.languageServer": {
      "scope": 2,
      "type": "object",
      "description": "Language server configuration",
      "properties": {
        "logLevel": {
          "type": "string",
          "default": "info",
          "description": "Set the language server's log level",
          "enum": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "silent"
          ]
        }
      },
      "source": {
        "id": "rebornix.ruby",
        "displayName": "Ruby"
      },
      "default": {},
      "restricted": false
    },
    "ruby.codeCompletion": {
      "type": [
        "boolean",
        "string"
      ],
      "enum": [
        false,
        "rcodetools"
      ],
      "default": false,
      "description": "Method to use for code completion. Use `false` to disable or if another extension provides this feature.",
      "scope": 3,
      "source": {
        "id": "rebornix.ruby",
        "displayName": "Ruby"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "ruby.intellisense": {
      "type": [
        "boolean",
        "string"
      ],
      "enum": [
        false,
        "rubyLocate"
      ],
      "default": false,
      "description": "Method to use for intellisense (go to definition, etc.). Use `false` to disable or if another extension provides this feature.",
      "scope": 3,
      "source": {
        "id": "rebornix.ruby",
        "displayName": "Ruby"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "ruby.useBundler": {
      "type": "boolean",
      "default": false,
      "description": "Whether ruby tools should be started using Bundler",
      "scope": 6,
      "source": {
        "id": "rebornix.ruby",
        "displayName": "Ruby"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "ruby.pathToBundler": {
      "type": "string",
      "default": "bundle",
      "description": "Path to the bundler executable (used if useBundler is true)",
      "scope": 6,
      "source": {
        "id": "rebornix.ruby",
        "displayName": "Ruby"
      },
      "defaultDefaultValue": "bundle",
      "restricted": false
    },
    "ruby.rctComplete.commandPath": {
      "type": "string",
      "default": "rct-complete",
      "description": "Path to the rct-complete command.  Set this to an absolute path to select from multiple installed Ruby versions.",
      "isExecutable": true,
      "scope": 6,
      "source": {
        "id": "rebornix.ruby",
        "displayName": "Ruby"
      },
      "defaultDefaultValue": "rct-complete",
      "restricted": false
    },
    "ruby.lintDebounceTime": {
      "type": "integer",
      "default": 500,
      "description": "Time (ms) to wait after keypress before running enabled linters. Ensures linters are only run when typing has finished and not for every keypress. Not supported in language server",
      "scope": 3,
      "source": {
        "id": "rebornix.ruby",
        "displayName": "Ruby"
      },
      "defaultDefaultValue": 500,
      "restricted": false
    },
    "ruby.lint": {
      "scope": 4,
      "type": "object",
      "description": "Set individual ruby linters to use",
      "properties": {
        "ruby": {
          "type": [
            "boolean",
            "object"
          ],
          "default": false,
          "description": "Use ruby -wc to lint"
        },
        "debride": {
          "type": [
            "boolean",
            "object"
          ],
          "default": false,
          "properties": {
            "rails": {
              "type": "boolean",
              "default": "true",
              "description": "Add some rails call conversions"
            }
          },
          "description": "Use debride to lint"
        },
        "fasterer": {
          "type": "boolean",
          "default": false,
          "description": "Use fasterer to lint"
        },
        "reek": {
          "type": [
            "boolean",
            "object"
          ],
          "default": false,
          "description": "Use reek to lint",
          "properties": {
            "command": {
              "type": "string",
              "description": "reek command. Setting this will cause reek to be executed exactly this way and other settings will be ignored!"
            },
            "useBundler": {
              "type": "boolean",
              "default": false,
              "description": "Prefix the `reek` command with `bundle exec`"
            }
          }
        },
        "rubocop": {
          "type": [
            "boolean",
            "object"
          ],
          "default": false,
          "description": "Use RuboCop to lint",
          "properties": {
            "command": {
              "type": "string",
              "description": "RuboCop command. Setting this will cause RuboCop to be executed this way and other settings will be ignored!"
            },
            "useBundler": {
              "type": "boolean",
              "default": false,
              "description": "Prefix the `rubocop` command with `bundle exec`"
            },
            "lint": {
              "type": "boolean",
              "default": false,
              "description": "Enable Lint cops: Lint cops check for possible errors and very bad practices in your code. RuboCop implements in a portable way all built-in MRI lint checks (ruby -wc) and adds a lot of extra lint checks of its own."
            },
            "only": {
              "type": "array",
              "description": "Run only the specified cop(s) and/or cops in the specified departments",
              "items": {
                "type": "string"
              }
            },
            "except": {
              "type": "array",
              "description": "Run all cops enabled by configuration except the specified cop(s) and/or departments",
              "items": {
                "type": "string"
              }
            },
            "require": {
              "type": "array",
              "description": "Require Ruby files",
              "items": {
                "type": "string"
              }
            },
            "rails": {
              "type": "boolean",
              "default": false,
              "description": "Rails cops are specific to the Ruby on Rails framework. These cops require the rubocop-rails gem for RuboCop >= 0.72.0"
            }
          }
        },
        "standard": {
          "type": [
            "boolean",
            "object"
          ],
          "default": false,
          "description": "Use standard to lint",
          "properties": {
            "command": {
              "type": "string",
              "description": "Standard command. Setting this will cause standard to be executed this way and other settings will be ignored!"
            },
            "useBundler": {
              "type": "boolean",
              "default": false,
              "description": "Prefix the `standard` command with `bundle exec`"
            },
            "only": {
              "type": "array",
              "description": "Run only the specified cop(s) and/or cops in the specified departments",
              "items": {
                "type": "string"
              }
            },
            "except": {
              "type": "array",
              "description": "Run all cops enabled by configuration except the specified cop(s) and/or departments",
              "items": {
                "type": "string"
              }
            },
            "require": {
              "type": "array",
              "description": "Require Ruby files",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "ruby-lint": {
          "type": [
            "boolean",
            "object"
          ],
          "default": false,
          "description": "Use ruby-lint to lint",
          "properties": {
            "levels": {
              "type": "array",
              "description": "Level of offenses to show",
              "items": {
                "type": "string",
                "enum": [
                  "error",
                  "warning",
                  "info"
                ]
              }
            },
            "classes": {
              "type": "array",
              "description": "Classes of offenses to show",
              "items": {
                "type": "string",
                "enum": [
                  "argument_amount",
                  "loop_keywords",
                  "pedantics",
                  "shadowing_variables",
                  "undefined_methods",
                  "undefined_variables",
                  "unused_variables",
                  "useless_equality_checks"
                ]
              }
            }
          }
        }
      },
      "source": {
        "id": "rebornix.ruby",
        "displayName": "Ruby"
      },
      "default": {},
      "restricted": false
    },
    "ruby.format": {
      "type": [
        "boolean",
        "string",
        "object"
      ],
      "enum": [
        false,
        "rubocop",
        "standard",
        "rufo",
        "rubyfmt",
        "prettier"
      ],
      "default": false,
      "description": "Which system to use for formatting. Use `false` to disable or if another extension provides this feature.",
      "scope": 4,
      "source": {
        "id": "rebornix.ruby",
        "displayName": "Ruby"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "fileutils.typeahead.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Controls if directory selector should be shown.",
      "scope": 3,
      "source": {
        "id": "sleistner.vscode-fileutils",
        "displayName": "File Utils"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.enable-ts-plugin": {
      "type": "boolean",
      "default": false,
      "title": "Enable TypeScript Svelte plugin",
      "description": "Enables a TypeScript plugin which provides intellisense for Svelte files inside TS/JS files.",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "svelte.ask-to-enable-ts-plugin": {
      "type": "boolean",
      "default": true,
      "title": "Ask to enable TypeScript Svelte plugin",
      "description": "Ask on startup to enable the TypeScript plugin.",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.language-server.runtime": {
      "scope": 1,
      "type": "string",
      "title": "Language Server Runtime",
      "description": "- You normally don't need this - Path to the node executable to use to spawn the language server. This is useful when you depend on native modules such as node-sass as without this they will run in the context of vscode, meaning node version mismatch is likely. Minimum required node version is 12.17. This setting can only be changed in user settings for security reasons.",
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "default": "",
      "restricted": false
    },
    "svelte.language-server.ls-path": {
      "scope": 1,
      "type": "string",
      "title": "Language Server Path",
      "description": "- You normally don't set this - Path to the language server executable. If you installed the \"svelte-language-server\" npm package, it's within there at \"bin/server.js\". Path can be either relative to your workspace root or absolute. Set this only if you want to use a custom version of the language server. This will then also use the workspace version of TypeScript. This setting can only be changed in user settings for security reasons.",
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "default": "",
      "restricted": false
    },
    "svelte.language-server.port": {
      "type": "number",
      "title": "Language Server Port",
      "description": "- You normally don't set this - At which port to spawn the language server. Can be used for attaching to the process for debugging / profiling. If you experience crashes due to \"port already in use\", try setting the port. -1 = default port is used.",
      "default": -1,
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": -1,
      "restricted": false
    },
    "svelte.trace.server": {
      "type": "string",
      "enum": [
        "off",
        "messages",
        "verbose"
      ],
      "default": "off",
      "description": "Traces the communication between VS Code and the Svelte Language Server.",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": "off",
      "restricted": false
    },
    "svelte.plugin.typescript.enable": {
      "type": "boolean",
      "default": true,
      "title": "TypeScript",
      "description": "Enable the TypeScript plugin",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.typescript.diagnostics.enable": {
      "type": "boolean",
      "default": true,
      "title": "TypeScript: Diagnostics",
      "description": "Enable diagnostic messages for TypeScript",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.typescript.hover.enable": {
      "type": "boolean",
      "default": true,
      "title": "TypeScript: Hover Info",
      "description": "Enable hover info for TypeScript",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.typescript.documentSymbols.enable": {
      "type": "boolean",
      "default": true,
      "title": "TypeScript: Symbols in Outline",
      "description": "Enable document symbols for TypeScript",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.typescript.completions.enable": {
      "type": "boolean",
      "default": true,
      "title": "TypeScript: Completions",
      "description": "Enable completions for TypeScript",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.typescript.findReferences.enable": {
      "type": "boolean",
      "default": true,
      "title": "TypeScript: Find References",
      "description": "Enable find-references for TypeScript",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.typescript.definitions.enable": {
      "type": "boolean",
      "default": true,
      "title": "TypeScript: Go to Definition",
      "description": "Enable go to definition for TypeScript",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.typescript.codeActions.enable": {
      "type": "boolean",
      "default": true,
      "title": "TypeScript: Code Actions",
      "description": "Enable code actions for TypeScript",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.typescript.selectionRange.enable": {
      "type": "boolean",
      "default": true,
      "title": "TypeScript: Selection Range",
      "description": "Enable selection range for TypeScript",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.typescript.signatureHelp.enable": {
      "type": "boolean",
      "default": true,
      "title": "TypeScript: Signature Help",
      "description": "Enable signature help (parameter hints) for TypeScript",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.typescript.rename.enable": {
      "type": "boolean",
      "default": true,
      "title": "TypeScript: Rename",
      "description": "Enable rename functionality for JS/TS variables inside Svelte files",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.typescript.semanticTokens.enable": {
      "type": "boolean",
      "default": true,
      "title": "TypeScript: Semantic Tokens",
      "description": "Enable semantic tokens (semantic highlight) for TypeScript.",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.typescript.implementation.enable": {
      "type": "boolean",
      "default": true,
      "title": "Typescript: Go to Implementation",
      "description": "Enable go to implementation for Typescript",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.typescript.typeDefinition.enable": {
      "type": "boolean",
      "default": true,
      "title": "Typescript: Go to Type Definition",
      "description": "Enable go to Type Definition for Typescript",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.css.enable": {
      "type": "boolean",
      "default": true,
      "title": "CSS",
      "description": "Enable the CSS plugin",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.css.globals": {
      "type": "string",
      "default": "",
      "title": "CSS: Global Files",
      "description": "Which css files should be checked for global variables (`--global-var: value;`). These variables are added to the css completions. String of comma-separated file paths or globs relative to workspace root.",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": "",
      "restricted": false
    },
    "svelte.plugin.css.diagnostics.enable": {
      "type": "boolean",
      "default": true,
      "title": "CSS: Diagnostics",
      "description": "Enable diagnostic messages for CSS",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.css.hover.enable": {
      "type": "boolean",
      "default": true,
      "title": "CSS: Hover Info",
      "description": "Enable hover info for CSS",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.css.completions.enable": {
      "type": "boolean",
      "default": true,
      "title": "CSS: Auto Complete",
      "description": "Enable auto completions for CSS",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.css.completions.emmet": {
      "type": "boolean",
      "default": true,
      "title": "CSS: Include Emmet Completions",
      "description": "Enable emmet auto completions for CSS",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.css.documentColors.enable": {
      "type": "boolean",
      "default": true,
      "title": "CSS: Document Colors",
      "description": "Enable document colors for CSS",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.css.colorPresentations.enable": {
      "type": "boolean",
      "default": true,
      "title": "CSS: Color Picker",
      "description": "Enable color picker for CSS",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.css.documentSymbols.enable": {
      "type": "boolean",
      "default": true,
      "title": "CSS: Symbols in Outline",
      "description": "Enable document symbols for CSS",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.css.selectionRange.enable": {
      "type": "boolean",
      "default": true,
      "title": "CSS: SelectionRange",
      "description": "Enable selection range for CSS",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.html.enable": {
      "type": "boolean",
      "default": true,
      "title": "HTML",
      "description": "Enable the HTML plugin",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.html.hover.enable": {
      "type": "boolean",
      "default": true,
      "title": "HTML: Hover Info",
      "description": "Enable hover info for HTML",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.html.completions.enable": {
      "type": "boolean",
      "default": true,
      "title": "HTML: Auto Complete",
      "description": "Enable auto completions for HTML",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.html.completions.emmet": {
      "type": "boolean",
      "default": true,
      "title": "HTML: Include Emmet Completions",
      "description": "Enable emmet auto completions for HTML",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.html.tagComplete.enable": {
      "type": "boolean",
      "default": true,
      "title": "HTML: Tag Auto Closing",
      "description": "Enable HTML tag auto closing",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.html.documentSymbols.enable": {
      "type": "boolean",
      "default": true,
      "title": "HTML: Symbols in Outline",
      "description": "Enable document symbols for HTML",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.html.linkedEditing.enable": {
      "type": "boolean",
      "default": true,
      "title": "HTML: Linked Editing",
      "description": "Enable Linked Editing for HTML",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.html.renameTags.enable": {
      "type": "boolean",
      "default": true,
      "title": "HTML: Rename tags",
      "description": "Enable rename for the opening/closing tag pairs in HTML",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.svelte.enable": {
      "type": "boolean",
      "default": true,
      "title": "Svelte",
      "description": "Enable the Svelte plugin",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.svelte.useNewTransformation": {
      "type": "boolean",
      "default": false,
      "title": "Use a new transformation for intellisense",
      "description": "Svelte files need to be transformed to something that TypeScript understands for intellisense. Version 2.0 of this transformation can be enabled with this setting. It will be the default, soon.",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "svelte.plugin.svelte.diagnostics.enable": {
      "type": "boolean",
      "default": true,
      "title": "Svelte: Diagnostics",
      "description": "Enable diagnostic messages for Svelte",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.svelte.compilerWarnings": {
      "type": "object",
      "additionalProperties": {
        "type": "string",
        "enum": [
          "ignore",
          "error"
        ]
      },
      "default": {},
      "title": "Svelte: Compiler Warnings Settings",
      "description": "Svelte compiler warning codes to ignore or to treat as errors. Example: { 'css-unused-selector': 'ignore', 'unused-export-let': 'error'}",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": {},
      "restricted": false
    },
    "svelte.plugin.svelte.format.enable": {
      "type": "boolean",
      "default": true,
      "title": "Svelte: Format",
      "description": "Enable formatting for Svelte (includes css & js). You can set some formatting options through this extension. They will be ignored if there's any kind of configuration file, for example a `.prettierrc` file.",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.svelte.format.config.svelteSortOrder": {
      "type": "string",
      "default": "options-scripts-markup-styles",
      "title": "Svelte Format: Sort Order",
      "description": "Format: join the keys `options`, `scripts`, `markup`, `styles` with a - in the order you want. This option is ignored if there's any kind of configuration file, for example a `.prettierrc` file.",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": "options-scripts-markup-styles",
      "restricted": false
    },
    "svelte.plugin.svelte.format.config.svelteStrictMode": {
      "type": "boolean",
      "default": false,
      "title": "Svelte Format: Strict Mode",
      "description": "More strict HTML syntax. This option is ignored if there's any kind of configuration file, for example a `.prettierrc` file.",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "svelte.plugin.svelte.format.config.svelteAllowShorthand": {
      "type": "boolean",
      "default": true,
      "title": "Svelte Format: Allow Shorthand",
      "description": "Option to enable/disable component attribute shorthand if attribute name and expression are the same. This option is ignored if there's any kind of configuration file, for example a `.prettierrc` file.",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.svelte.format.config.svelteBracketNewLine": {
      "type": "boolean",
      "default": true,
      "title": "Svelte Format: Bracket New Line",
      "description": "Put the `>` of a multiline element on a new line. This option is ignored if there's any kind of configuration file, for example a `.prettierrc` file.",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.svelte.format.config.svelteIndentScriptAndStyle": {
      "type": "boolean",
      "default": true,
      "title": "Svelte Format: Indent Script And Style",
      "description": "Whether or not to indent code inside `<script>` and `<style>` tags. This option is ignored if there's any kind of configuration file, for example a `.prettierrc` file.",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.svelte.format.config.printWidth": {
      "type": "number",
      "default": 80,
      "title": "Svelte Format: Print Width",
      "description": "Maximum line width after which code is tried to be broken up. This is a Prettier core option. If you have the Prettier extension installed, this option is ignored and the corresponding option of that extension is used instead. This option is also ignored if there's any kind of configuration file, for example a `.prettierrc` file.",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": 80,
      "restricted": false
    },
    "svelte.plugin.svelte.format.config.singleQuote": {
      "type": "boolean",
      "default": false,
      "title": "Svelte Format: Quotes",
      "description": "Use single quotes instead of double quotes, where possible. This is a Prettier core option. If you have the Prettier extension installed, this option is ignored and the corresponding option of that extension is used instead. This option is also ignored if there's any kind of configuration file, for example a `.prettierrc` file.",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "svelte.plugin.svelte.completions.enable": {
      "type": "boolean",
      "default": true,
      "title": "Svelte: Completions",
      "description": "Enable auto completions for Svelte",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.svelte.hover.enable": {
      "type": "boolean",
      "default": true,
      "title": "Svelte: Hover",
      "description": "Enable hover information for Svelte",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.svelte.codeActions.enable": {
      "type": "boolean",
      "default": true,
      "title": "Svelte: Code Actions",
      "description": "Enable Code Actions for Svelte",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.svelte.selectionRange.enable": {
      "type": "boolean",
      "default": true,
      "title": "Svelte: Selection Range",
      "description": "Enable selection range for Svelte",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.svelte.rename.enable": {
      "type": "boolean",
      "default": true,
      "title": "Svelte: Rename",
      "description": "Enable rename/move Svelte files functionality",
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "svelte.plugin.svelte.defaultScriptLanguage": {
      "type": "string",
      "default": "none",
      "title": "Svelte: Default Script Language",
      "description": "The default language to use when generating new script tags",
      "enum": [
        "none",
        "ts"
      ],
      "scope": 3,
      "source": {
        "id": "svelte.svelte-vscode",
        "displayName": "Svelte for VS Code"
      },
      "defaultDefaultValue": "none",
      "restricted": false
    },
    "VSCodeCounter.useGitignore": {
      "description": "Whether to use '.gitignore' files for excluding files.",
      "type": "boolean",
      "default": true,
      "scope": 3,
      "source": {
        "id": "uctakeoff.vscode-counter",
        "displayName": "VS Code Counter"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "VSCodeCounter.useFilesExclude": {
      "description": "Whether to use setting 'files.exclude' for excluding files.",
      "type": "boolean",
      "default": true,
      "scope": 3,
      "source": {
        "id": "uctakeoff.vscode-counter",
        "displayName": "VS Code Counter"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "VSCodeCounter.maxOpenFiles": {
      "description": "Maximum number of files that VSCodeCounter can read simultaneously.",
      "type": "number",
      "default": 500,
      "scope": 3,
      "source": {
        "id": "uctakeoff.vscode-counter",
        "displayName": "VS Code Counter"
      },
      "defaultDefaultValue": 500,
      "restricted": false
    },
    "VSCodeCounter.ignoreUnsupportedFile": {
      "description": "Ignore unsupported files.",
      "type": "boolean",
      "default": true,
      "scope": 3,
      "source": {
        "id": "uctakeoff.vscode-counter",
        "displayName": "VS Code Counter"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "VSCodeCounter.printNumberWithCommas": {
      "description": "Whether to print a number with commas as thousands separators.(except for CSV)",
      "type": "boolean",
      "default": true,
      "scope": 3,
      "source": {
        "id": "uctakeoff.vscode-counter",
        "displayName": "VS Code Counter"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "VSCodeCounter.endOfLine": {
      "description": "A new line character to be used in the output file.",
      "type": "string",
      "enum": [
        "\n",
        "\r\n"
      ],
      "default": "\n",
      "scope": 3,
      "source": {
        "id": "uctakeoff.vscode-counter",
        "displayName": "VS Code Counter"
      },
      "defaultDefaultValue": "\n",
      "restricted": false
    },
    "VSCodeCounter.include": {
      "description": "Configure glob patterns for including files and folders.",
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": [
        "**/*"
      ],
      "scope": 3,
      "source": {
        "id": "uctakeoff.vscode-counter",
        "displayName": "VS Code Counter"
      },
      "defaultDefaultValue": [
        "**/*"
      ],
      "restricted": false
    },
    "VSCodeCounter.exclude": {
      "description": "Configure glob patterns for excluding files and folders.",
      "type": "array",
      "items": {
        "type": "string"
      },
      "default": [
        "**/.gitignore",
        "**/.vscode/**",
        "**/node_modules/**"
      ],
      "scope": 3,
      "source": {
        "id": "uctakeoff.vscode-counter",
        "displayName": "VS Code Counter"
      },
      "defaultDefaultValue": [
        "**/.gitignore",
        "**/.vscode/**",
        "**/node_modules/**"
      ],
      "restricted": false
    },
    "VSCodeCounter.history": {
      "description": "Controls the number of recent result to keep in history. If it is greater than 1, save the results in separate directories.",
      "type": "integer",
      "minimum": 0,
      "default": 5,
      "scope": 3,
      "source": {
        "id": "uctakeoff.vscode-counter",
        "displayName": "VS Code Counter"
      },
      "defaultDefaultValue": 5,
      "restricted": false
    },
    "VSCodeCounter.outputDirectory": {
      "description": "Directory path for outputting results.",
      "type": "string",
      "default": ".VSCodeCounter",
      "scope": 3,
      "source": {
        "id": "uctakeoff.vscode-counter",
        "displayName": "VS Code Counter"
      },
      "defaultDefaultValue": ".VSCodeCounter",
      "restricted": false
    },
    "VSCodeCounter.outputAsText": {
      "description": "Whether to output the result as a text file.",
      "type": "boolean",
      "default": true,
      "scope": 3,
      "source": {
        "id": "uctakeoff.vscode-counter",
        "displayName": "VS Code Counter"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "VSCodeCounter.outputAsCSV": {
      "description": "Whether to output the result as a CSV file.",
      "type": "boolean",
      "default": true,
      "scope": 3,
      "source": {
        "id": "uctakeoff.vscode-counter",
        "displayName": "VS Code Counter"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "VSCodeCounter.outputAsMarkdown": {
      "description": "Whether to output the result as a Markdown file.",
      "type": "boolean",
      "default": true,
      "scope": 3,
      "source": {
        "id": "uctakeoff.vscode-counter",
        "displayName": "VS Code Counter"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "VSCodeCounter.outputPreviewType": {
      "description": "Type of output file to preview after counting.",
      "type": "string",
      "enum": [
        "none",
        "text",
        "csv",
        "markdown",
        "diff-text",
        "diff-csv",
        "diff-markdown"
      ],
      "default": "markdown",
      "scope": 3,
      "source": {
        "id": "uctakeoff.vscode-counter",
        "displayName": "VS Code Counter"
      },
      "defaultDefaultValue": "markdown",
      "restricted": false
    },
    "VSCodeCounter.saveLocation": {
      "description": "Specify where to store the collected language configurations.",
      "type": "string",
      "enum": [
        "global settings",
        "workspace settings",
        "output directory"
      ],
      "default": "global settings",
      "scope": 3,
      "source": {
        "id": "uctakeoff.vscode-counter",
        "displayName": "VS Code Counter"
      },
      "defaultDefaultValue": "global settings",
      "restricted": false
    },
    "VSCodeCounter.languages": {
      "description": "Saved Language Configurations.",
      "type": "object",
      "default": {},
      "patternProperties": {
        ".*": {
          "type": "object",
          "title": "language configuration",
          "properties": {
            "aliases": {
              "type": "array",
              "description": "Name aliases for the language.",
              "items": {
                "type": "string"
              }
            },
            "filenames": {
              "type": "array",
              "description": "Filenames associated to the language.",
              "items": {
                "type": "string"
              }
            },
            "extensions": {
              "type": "array",
              "description": "File extensions associated to the language.",
              "items": {
                "type": "string"
              }
            },
            "lineComments": {
              "type": "array",
              "description": "The character sequence that starts a line comment.",
              "items": {
                "type": "string"
              }
            },
            "blockComments": {
              "type": "array",
              "description": "The character sequence indicating the beginning and end of the block comment.",
              "items": {
                "type": "array",
                "minItems": 2,
                "maxItems": 2,
                "items": {
                  "type": "string"
                }
              }
            },
            "blockStrings": {
              "type": "array",
              "description": "The character sequence indicating the beginning and end of the block document(here document).",
              "items": {
                "type": "array",
                "minItems": 2,
                "maxItems": 2,
                "items": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "scope": 3,
      "source": {
        "id": "uctakeoff.vscode-counter",
        "displayName": "VS Code Counter"
      },
      "defaultDefaultValue": {},
      "restricted": false
    },
    "errorLens.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Controls all decorations and features (except commands).",
      "scope": 3,
      "source": {
        "id": "usernamehw.errorlens",
        "displayName": "Error Lens"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "errorLens.fontFamily": {
      "type": "string",
      "default": "",
      "description": "Font family of inline message.",
      "scope": 3,
      "source": {
        "id": "usernamehw.errorlens",
        "displayName": "Error Lens"
      },
      "defaultDefaultValue": "",
      "restricted": false
    },
    "errorLens.fontWeight": {
      "type": "string",
      "enum": [
        "100",
        "200",
        "300",
        "400",
        "normal",
        "500",
        "600",
        "700",
        "bold",
        "800",
        "900"
      ],
      "default": "normal",
      "markdownDescription": "Font weight of inline message. `\"normal\"` is alias for 400, `\"bold\"` is alias for 700).",
      "scope": 3,
      "source": {
        "id": "usernamehw.errorlens",
        "displayName": "Error Lens"
      },
      "defaultDefaultValue": "normal",
      "restricted": false
    },
    "errorLens.fontStyleItalic": {
      "type": "boolean",
      "default": false,
      "description": "When enabled - shows inline message in italic font style.",
      "scope": 3,
      "source": {
        "id": "usernamehw.errorlens",
        "displayName": "Error Lens"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "errorLens.fontSize": {
      "type": "string",
      "default": "",
      "description": "Font size of inline message (CSS units).",
      "scope": 3,
      "source": {
        "id": "usernamehw.errorlens",
        "displayName": "Error Lens"
      },
      "defaultDefaultValue": "",
      "restricted": false
    },
    "errorLens.margin": {
      "type": "string",
      "default": "4ch",
      "description": "Distance between the last word on the line and the start of inline message (CSS units).",
      "scope": 3,
      "source": {
        "id": "usernamehw.errorlens",
        "displayName": "Error Lens"
      },
      "defaultDefaultValue": "4ch",
      "restricted": false
    },
    "errorLens.padding": {
      "type": "string",
      "default": "",
      "markdownDescription": "Padding of the message. Visible difference when `message` colors are set. [issues/23](https://github.com/usernamehw/vscode-error-lens/issues/23). Example: `2px 1ch`.",
      "examples": [
        "2px 1ch"
      ],
      "scope": 3,
      "source": {
        "id": "usernamehw.errorlens",
        "displayName": "Error Lens"
      },
      "defaultDefaultValue": "",
      "restricted": false
    },
    "errorLens.borderRadius": {
      "type": "string",
      "default": "3px",
      "markdownDescription": "Border radius of the message. Visible difference when `message` colors are set. [issues/23](https://github.com/usernamehw/vscode-error-lens/issues/23). Example: `5px`.",
      "examples": [
        "5px"
      ],
      "scope": 3,
      "source": {
        "id": "usernamehw.errorlens",
        "displayName": "Error Lens"
      },
      "defaultDefaultValue": "3px",
      "restricted": false
    },
    "errorLens.enabledDiagnosticLevels": {
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "error",
          "warning",
          "info",
          "hint"
        ]
      },
      "uniqueItems": true,
      "description": "Customize which diagnostic levels to highlight.",
      "default": [
        "error",
        "warning",
        "info"
      ],
      "scope": 3,
      "source": {
        "id": "usernamehw.errorlens",
        "displayName": "Error Lens"
      },
      "defaultDefaultValue": [
        "error",
        "warning",
        "info"
      ],
      "restricted": false
    },
    "errorLens.messageTemplate": {
      "type": "string",
      "default": "$message",
      "markdownDescription": "Template used for all inline messages. Whitespace between items is important.\n\nList of variables:\n\n- `$message` - diagnostic message text\n\n- `$count` - Number of diagnostics on the line\n\n- `$severity` - Severity prefix taken from `#errorLens.severityText#`\n\n- `$source` - Source of diagnostic e.g. \"eslint\"\n\n- `$code` - Code of the diagnostic",
      "scope": 3,
      "source": {
        "id": "usernamehw.errorlens",
        "displayName": "Error Lens"
      },
      "defaultDefaultValue": "$message",
      "restricted": false
    },
    "errorLens.messageMaxChars": {
      "type": "integer",
      "default": 500,
      "minimum": 10,
      "markdownDescription": "Cut off inline message if it's longer than this value.",
      "scope": 3,
      "source": {
        "id": "usernamehw.errorlens",
        "displayName": "Error Lens"
      },
      "defaultDefaultValue": 500,
      "restricted": false
    },
    "errorLens.severityText": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "markdownDescription": "Replaces `$severity` variable in `#errorLens.messageTemplate#`.",
      "default": [
        "ERROR",
        "WARNING",
        "INFO",
        "HINT"
      ],
      "maxItems": 4,
      "scope": 3,
      "source": {
        "id": "usernamehw.errorlens",
        "displayName": "Error Lens"
      },
      "defaultDefaultValue": [
        "ERROR",
        "WARNING",
        "INFO",
        "HINT"
      ],
      "restricted": false
    },
    "errorLens.annotationPrefix": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "markdownDescription": "Specify diagnostic message prefixes (when `#errorLens.addAnnotationTextPrefixes#` is enabled). For example, emoji: ❗ ⚠ ℹ.",
      "markdownDeprecationMessage": "Deprecated in favor of `#errorLens.severityText#` & `#errorLens.messageTemplate#`. https://github.com/usernamehw/vscode-error-lens/issues/92",
      "default": [
        "ERROR: ",
        "WARNING: ",
        "INFO: ",
        "HINT: "
      ],
      "maxItems": 4,
      "scope": 3,
      "source": {
        "id": "usernamehw.errorlens",
        "displayName": "Error Lens"
      },
      "defaultDefaultValue": [
        "ERROR: ",
        "WARNING: ",
        "INFO: ",
        "HINT: "
      ],
      "restricted": false,
      "deprecationMessage": "Deprecated in favor of `#errorLens.severityText#` & `#errorLens.messageTemplate#`. https://github.com/usernamehw/vscode-error-lens/issues/92"
    },
    "errorLens.addAnnotationTextPrefixes": {
      "type": "boolean",
      "markdownDescription": "When enabled - prepends diagnostic severity ('ERROR:', 'WARNING:' etc) to the message. (Prefixes can be configured with `annotationPrefix` setting).",
      "markdownDeprecationMessage": "Deprecated in favor of `#errorLens.messageTemplate#`. https://github.com/usernamehw/vscode-error-lens/issues/92",
      "default": false,
      "scope": 3,
      "source": {
        "id": "usernamehw.errorlens",
        "displayName": "Error Lens"
      },
      "defaultDefaultValue": false,
      "restricted": false,
      "deprecationMessage": "Deprecated in favor of `#errorLens.messageTemplate#`. https://github.com/usernamehw/vscode-error-lens/issues/92"
    },
    "errorLens.addNumberOfDiagnostics": {
      "type": "boolean",
      "markdownDescription": "When enabled - prepends number of diagnostics on the line. Like: `[1/2]`.",
      "markdownDeprecationMessage": "Deprecated in favor of `#errorLens.messageTemplate#`. https://github.com/usernamehw/vscode-error-lens/issues/92",
      "default": false,
      "scope": 3,
      "source": {
        "id": "usernamehw.errorlens",
        "displayName": "Error Lens"
      },
      "defaultDefaultValue": false,
      "restricted": false,
      "deprecationMessage": "Deprecated in favor of `#errorLens.messageTemplate#`. https://github.com/usernamehw/vscode-error-lens/issues/92"
    },
    "errorLens.messageEnabled": {
      "type": "boolean",
      "default": true,
      "description": "Controls whether inline message is shown or not (Including background highlight).",
      "scope": 3,
      "source": {
        "id": "usernamehw.errorlens",
        "displayName": "Error Lens"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "errorLens.statusBarIconsEnabled": {
      "type": "boolean",
      "markdownDescription": "When enabled - shows highlighted error/warning icons in status bar.",
      "default": false,
      "scope": 3,
      "source": {
        "id": "usernamehw.errorlens",
        "displayName": "Error Lens"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "errorLens.statusBarIconsUseBackground": {
      "type": "boolean",
      "markdownDescription": "When enabled - highlights status bar icons with background, when disabled - with foreground.",
      "default": true,
      "scope": 3,
      "source": {
        "id": "usernamehw.errorlens",
        "displayName": "Error Lens"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "errorLens.statusBarIconsAtZero": {
      "type": "string",
      "markdownDescription": "What to do when there are 0 errors/warnings - hide the item or strip its background color.",
      "enum": [
        "hide",
        "removeBackground"
      ],
      "default": "hide",
      "scope": 3,
      "source": {
        "id": "usernamehw.errorlens",
        "displayName": "Error Lens"
      },
      "defaultDefaultValue": "hide",
      "restricted": false
    },
    "errorLens.statusBarMessageEnabled": {
      "type": "boolean",
      "markdownDescription": "When enabled - shows message in status bar.",
      "default": false,
      "scope": 3,
      "source": {
        "id": "usernamehw.errorlens",
        "displayName": "Error Lens"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "errorLens.statusBarColorsEnabled": {
      "type": "boolean",
      "markdownDescription": "When enabled - use message decoration foreground as color of Status Bar text.",
      "default": false,
      "scope": 3,
      "source": {
        "id": "usernamehw.errorlens",
        "displayName": "Error Lens"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "errorLens.statusBarMessageType": {
      "type": "string",
      "markdownDescription": "Pick what to show in Status Bar: closest message or only message for the active line.",
      "enum": [
        "closestProblem",
        "closestSeverity",
        "activeLine"
      ],
      "enumDescriptions": [
        "Show closest to the cursor diagnostic.",
        "Show closest to the cursor diagnostic (sorted by severity e.g. error will be shown before warning even if it's farther from the cursor).",
        "Show only diagnostic that is on the same line as the cursor."
      ],
      "default": "activeLine",
      "scope": 3,
      "source": {
        "id": "usernamehw.errorlens",
        "displayName": "Error Lens"
      },
      "defaultDefaultValue": "activeLine",
      "restricted": false
    },
    "errorLens.statusBarCommand": {
      "type": "string",
      "markdownDescription": "Pick command that activates on click for Status Bar.",
      "enum": [
        "goToProblem",
        "goToLine",
        "copyMessage"
      ],
      "default": "goToProblem",
      "scope": 3,
      "source": {
        "id": "usernamehw.errorlens",
        "displayName": "Error Lens"
      },
      "defaultDefaultValue": "goToProblem",
      "restricted": false
    },
    "errorLens.statusBarMessageTemplate": {
      "type": "string",
      "default": "",
      "markdownDescription": "Template for status bar message. See `#errorLens.messageTemplate#`.",
      "scope": 3,
      "source": {
        "id": "usernamehw.errorlens",
        "displayName": "Error Lens"
      },
      "defaultDefaultValue": "",
      "restricted": false
    },
    "errorLens.exclude": {
      "type": "array",
      "default": [],
      "items": {
        "type": "string"
      },
      "description": "Specify messages that should not be highlighted (RegExp).",
      "scope": 3,
      "source": {
        "id": "usernamehw.errorlens",
        "displayName": "Error Lens"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "errorLens.excludeBySource": {
      "type": "array",
      "default": [],
      "items": {
        "type": "string"
      },
      "markdownDescription": "Specify sources that should not be highlighted (string). Example: `[\"eslint\"]`",
      "scope": 3,
      "source": {
        "id": "usernamehw.errorlens",
        "displayName": "Error Lens"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "errorLens.excludePatterns": {
      "type": "array",
      "default": [],
      "items": {
        "type": "string"
      },
      "markdownDescription": "Exclude files by using glob pattern. Example `[\"**/*.{ts,js}\"]`",
      "scope": 3,
      "source": {
        "id": "usernamehw.errorlens",
        "displayName": "Error Lens"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "errorLens.light": {
      "type": "object",
      "description": "Specify color of decorations for when the light color theme is active.",
      "properties": {
        "errorGutterIconPath": {
          "type": "string",
          "description": "Absolute path to error gutter icon for light themes.",
          "default": ""
        },
        "warningGutterIconPath": {
          "type": "string",
          "description": "Absolute path to warning gutter icon for light themes.",
          "default": ""
        },
        "infoGutterIconPath": {
          "type": "string",
          "description": "Absolute path to info gutter icon for light themes.",
          "default": ""
        },
        "errorGutterIconColor": {
          "type": "string",
          "default": "",
          "markdownDescription": "Error color of `circle` gutter icon set for light themes.",
          "format": "color"
        },
        "warningGutterIconColor": {
          "type": "string",
          "default": "",
          "markdownDescription": "Warning color of `circle` gutter icon set for light themes.",
          "format": "color"
        },
        "infoGutterIconColor": {
          "type": "string",
          "default": "",
          "markdownDescription": "Info color of `circle` gutter icon set for light themes.",
          "format": "color"
        }
      },
      "scope": 3,
      "source": {
        "id": "usernamehw.errorlens",
        "displayName": "Error Lens"
      },
      "default": {},
      "restricted": false
    },
    "errorLens.delay": {
      "type": "integer",
      "markdownDescription": "Delay (ms) before showing problem decorations (**0** to disable). Minimum delay of **500** is enforced by the extension. New errors will be added with this delay; old errors that were fixed should disappear faster.",
      "default": 0,
      "scope": 3,
      "source": {
        "id": "usernamehw.errorlens",
        "displayName": "Error Lens"
      },
      "defaultDefaultValue": 0,
      "restricted": false
    },
    "errorLens.onSave": {
      "type": "boolean",
      "description": "When enabled - updates decorations only on document save (manual).",
      "default": false,
      "scope": 3,
      "source": {
        "id": "usernamehw.errorlens",
        "displayName": "Error Lens"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "errorLens.onSaveTimeout": {
      "type": "number",
      "description": "Time period (ms) that used for showing decorations after the document save.",
      "default": 1000,
      "scope": 3,
      "source": {
        "id": "usernamehw.errorlens",
        "displayName": "Error Lens"
      },
      "defaultDefaultValue": 1000,
      "restricted": false
    },
    "errorLens.followCursor": {
      "type": "string",
      "enum": [
        "allLines",
        "activeLine",
        "closestProblem"
      ],
      "enumDescriptions": [
        "Highlight all problems in file",
        "Highlight only the problem at the cursor",
        "Highlight only closest to the cursor problem"
      ],
      "description": "Highlight only portion of the problems.",
      "default": "allLines",
      "scope": 3,
      "source": {
        "id": "usernamehw.errorlens",
        "displayName": "Error Lens"
      },
      "defaultDefaultValue": "allLines",
      "restricted": false
    },
    "errorLens.followCursorMore": {
      "type": "number",
      "markdownDescription": "Augments `followCursor`.\nAdds number of lines to top and bottom when `followCursor` is `activeLine`.\n Adds number of closest problems when `followCursor` is `closestProblem`",
      "default": 0,
      "scope": 3,
      "source": {
        "id": "usernamehw.errorlens",
        "displayName": "Error Lens"
      },
      "defaultDefaultValue": 0,
      "restricted": false
    },
    "errorLens.gutterIconsEnabled": {
      "type": "boolean",
      "description": "When enabled - shows gutter icons (In place of the debug breakpoint icon).",
      "default": false,
      "scope": 3,
      "source": {
        "id": "usernamehw.errorlens",
        "displayName": "Error Lens"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "errorLens.gutterIconsFollowCursorOverride": {
      "type": "boolean",
      "markdownDescription": "When enabled and `#errorLens.followCursor#` setting is not `allLines`, then gutter icons would be rendered for all problems. But line decorations (background, message) only for active line.",
      "default": true,
      "scope": 3,
      "source": {
        "id": "usernamehw.errorlens",
        "displayName": "Error Lens"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "errorLens.gutterIconSize": {
      "type": "string",
      "markdownDescription": "Change gutter icon size. Examples: `auto`, `contain`, `cover`, `50%`, `150%`",
      "default": "100%",
      "scope": 3,
      "source": {
        "id": "usernamehw.errorlens",
        "displayName": "Error Lens"
      },
      "defaultDefaultValue": "100%",
      "restricted": false
    },
    "errorLens.gutterIconSet": {
      "type": "string",
      "description": "Change gutter icon style.",
      "enum": [
        "default",
        "defaultOutline",
        "borderless",
        "circle"
      ],
      "enumDescriptions": [
        "Similar to vscode icons in Problems Panel (old).",
        "Similar to vscode icons in Problems Panel (new).",
        "Similar to vscode icons in Problems Panel, only without a border.",
        "Simple filled circle."
      ],
      "default": "default",
      "scope": 3,
      "source": {
        "id": "usernamehw.errorlens",
        "displayName": "Error Lens"
      },
      "defaultDefaultValue": "default",
      "restricted": false
    },
    "errorLens.errorGutterIconPath": {
      "type": "string",
      "description": "Absolute path to error gutter icon.",
      "default": "",
      "scope": 3,
      "source": {
        "id": "usernamehw.errorlens",
        "displayName": "Error Lens"
      },
      "defaultDefaultValue": "",
      "restricted": false
    },
    "errorLens.warningGutterIconPath": {
      "type": "string",
      "description": "Absolute path to warning gutter icon.",
      "default": "",
      "scope": 3,
      "source": {
        "id": "usernamehw.errorlens",
        "displayName": "Error Lens"
      },
      "defaultDefaultValue": "",
      "restricted": false
    },
    "errorLens.infoGutterIconPath": {
      "type": "string",
      "description": "Absolute path to info gutter icon.",
      "default": "",
      "scope": 3,
      "source": {
        "id": "usernamehw.errorlens",
        "displayName": "Error Lens"
      },
      "defaultDefaultValue": "",
      "restricted": false
    },
    "errorLens.errorGutterIconColor": {
      "type": "string",
      "default": "#e45454",
      "markdownDescription": "Error color of `circle` gutter icon set.",
      "format": "color",
      "scope": 3,
      "source": {
        "id": "usernamehw.errorlens",
        "displayName": "Error Lens"
      },
      "defaultDefaultValue": "#e45454",
      "restricted": false
    },
    "errorLens.warningGutterIconColor": {
      "type": "string",
      "default": "#ff942f",
      "markdownDescription": "Warning color of `circle` gutter icon set.",
      "format": "color",
      "scope": 3,
      "source": {
        "id": "usernamehw.errorlens",
        "displayName": "Error Lens"
      },
      "defaultDefaultValue": "#ff942f",
      "restricted": false
    },
    "errorLens.infoGutterIconColor": {
      "type": "string",
      "default": "#00b7e4",
      "markdownDescription": "Info color of `circle` gutter icon set.",
      "format": "color",
      "scope": 3,
      "source": {
        "id": "usernamehw.errorlens",
        "displayName": "Error Lens"
      },
      "defaultDefaultValue": "#00b7e4",
      "restricted": false
    },
    "errorLens.removeLinebreaks": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "When enabled - replaces line breaks in inline diagnostic message with whitespaces.",
      "scope": 3,
      "source": {
        "id": "usernamehw.errorlens",
        "displayName": "Error Lens"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "errorLens.scrollbarHackEnabled": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "When enabled - prevents showing horizontal scrollbar in editor (caused by inline decorations).",
      "scope": 3,
      "source": {
        "id": "usernamehw.errorlens",
        "displayName": "Error Lens"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "gradle.autoDetect": {
      "type": "string",
      "enum": [
        "off",
        "on"
      ],
      "default": "on",
      "scope": 4,
      "description": "Controls whether Gradle tasks should be automatically detected",
      "source": {
        "id": "vscjava.vscode-gradle",
        "displayName": "Gradle for Java"
      },
      "defaultDefaultValue": "on",
      "restricted": false
    },
    "gradle.nestedProjects": {
      "anyOf": [
        {
          "type": "boolean",
          "description": "Discover all nested projects",
          "default": false
        },
        {
          "type": "array",
          "description": "Discover specific nested projects (by directory name)",
          "default": []
        }
      ],
      "scope": 3,
      "default": false,
      "description": "Discover Gradle projects in nested sub-directories",
      "source": {
        "id": "vscjava.vscode-gradle",
        "displayName": "Gradle for Java"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "gradle.reuseTerminals": {
      "enum": [
        "task",
        "off",
        "all"
      ],
      "enumDescriptions": [
        "Use a dedicated terminal for a specific task. The terminal is not shared with other tasks.",
        "Create a new terminal when a task is executed.",
        "Share the terminal with other tasks."
      ],
      "default": "task",
      "scope": 3,
      "markdownDescription": "Reuse task terminals behaviour, will be overridden to `off` if `gradle.allowParallelRun` is true.",
      "source": {
        "id": "vscjava.vscode-gradle",
        "displayName": "Gradle for Java"
      },
      "defaultDefaultValue": "task",
      "restricted": false
    },
    "gradle.debug": {
      "type": "boolean",
      "default": false,
      "scope": 3,
      "description": "Show extra debug information in the output panel",
      "source": {
        "id": "vscjava.vscode-gradle",
        "displayName": "Gradle for Java"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "gradle.disableConfirmations": {
      "type": "boolean",
      "default": false,
      "scope": 3,
      "description": "Disable the warning confirm messages when performing batch actions",
      "source": {
        "id": "vscjava.vscode-gradle",
        "displayName": "Gradle for Java"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "gradle.focusTaskInExplorer": {
      "type": "boolean",
      "default": true,
      "scope": 3,
      "description": "Focus the task in the explorer when running a task",
      "source": {
        "id": "vscjava.vscode-gradle",
        "displayName": "Gradle for Java"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gradle.javaDebug.cleanOutput": {
      "type": "boolean",
      "default": true,
      "scope": 3,
      "description": "Clean the task output cache before debugging",
      "source": {
        "id": "vscjava.vscode-gradle",
        "displayName": "Gradle for Java"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gradle.javaDebug": {
      "type": "object",
      "description": "Java debug options",
      "deprecationMessage": "This setting will be removed in the future since the extension can automatically get debug tasks, for clean options, please see `gradle.javaDebug.cleanOutput`.",
      "scope": 4,
      "properties": {
        "tasks": {
          "type": "array",
          "default": [
            "run",
            "runBoot",
            "test",
            "intTest",
            "integration"
          ],
          "description": "List of JavaExec tasks to debug"
        },
        "clean": {
          "type": "boolean",
          "default": true,
          "description": "Clean the task output cache before debugging"
        }
      },
      "required": [
        "tasks"
      ],
      "default": {
        "tasks": [
          "run",
          "runBoot",
          "test",
          "intTest",
          "integration"
        ]
      },
      "source": {
        "id": "vscjava.vscode-gradle",
        "displayName": "Gradle for Java"
      },
      "defaultDefaultValue": {
        "tasks": [
          "run",
          "runBoot",
          "test",
          "intTest",
          "integration"
        ]
      },
      "restricted": false
    },
    "gradle.showStoppedDaemons": {
      "type": "boolean",
      "default": false,
      "scope": 1,
      "description": "Show stopped daemons in the Gradle Daemons view",
      "source": {
        "id": "vscjava.vscode-gradle",
        "displayName": "Gradle for Java"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "gradle.allowParallelRun": {
      "type": "boolean",
      "default": false,
      "scope": 3,
      "markdownDescription": "Allow to run tasks in parallel, each running will create a new terminal. This configuration will override `gradle.reuseTerminals` and always create new task terminals when running or debugging a task.",
      "source": {
        "id": "vscjava.vscode-gradle",
        "displayName": "Gradle for Java"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "vsicons.dontShowNewVersionMessage": {
      "type": "boolean",
      "default": false,
      "description": "If set to 'true', the new version message won't be shown anymore.",
      "scope": 3,
      "source": {
        "id": "vscode-icons-team.vscode-icons",
        "displayName": "vscode-icons"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "vsicons.dontShowConfigManuallyChangedMessage": {
      "type": "boolean",
      "default": false,
      "description": "If set to 'true', when manually changing the configurations, the 'restart' message won't be shown.",
      "scope": 3,
      "source": {
        "id": "vscode-icons-team.vscode-icons",
        "displayName": "vscode-icons"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "vsicons.projectDetection.autoReload": {
      "type": "boolean",
      "default": false,
      "description": "If set to 'true', the extension will restart automatically on project detection.",
      "scope": 3,
      "source": {
        "id": "vscode-icons-team.vscode-icons",
        "displayName": "vscode-icons"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "vsicons.projectDetection.disableDetect": {
      "type": "boolean",
      "default": false,
      "description": "If set to 'true', the extension will disable the project detection.",
      "scope": 3,
      "source": {
        "id": "vscode-icons-team.vscode-icons",
        "displayName": "vscode-icons"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "vsicons.presets.angular": {
      "type": "boolean",
      "default": false,
      "description": "If set to 'true', the extension will match some of the common Angular patterns.",
      "scope": 3,
      "source": {
        "id": "vscode-icons-team.vscode-icons",
        "displayName": "vscode-icons"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "vsicons.presets.nestjs": {
      "type": "boolean",
      "default": false,
      "description": "If set to 'true', the extension will match some of the common NestJS patterns.",
      "scope": 3,
      "source": {
        "id": "vscode-icons-team.vscode-icons",
        "displayName": "vscode-icons"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "vsicons.presets.jsOfficial": {
      "type": "boolean",
      "default": false,
      "description": "If set to 'true', the extension will use the official JS icon.",
      "scope": 3,
      "source": {
        "id": "vscode-icons-team.vscode-icons",
        "displayName": "vscode-icons"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "vsicons.presets.tsOfficial": {
      "type": "boolean",
      "default": false,
      "description": "If set to 'true', the extension will use the official TS icon.",
      "scope": 3,
      "source": {
        "id": "vscode-icons-team.vscode-icons",
        "displayName": "vscode-icons"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "vsicons.presets.jsonOfficial": {
      "type": "boolean",
      "default": false,
      "description": "If set to 'true', the extension will use the official JSON icon.",
      "scope": 3,
      "source": {
        "id": "vscode-icons-team.vscode-icons",
        "displayName": "vscode-icons"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "vsicons.presets.hideFolders": {
      "type": "boolean",
      "default": false,
      "description": "If set to 'true', all folders will be hidden.",
      "scope": 3,
      "source": {
        "id": "vscode-icons-team.vscode-icons",
        "displayName": "vscode-icons"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "vsicons.presets.foldersAllDefaultIcon": {
      "type": "boolean",
      "default": false,
      "description": "If set to 'true', all folders will have the default folder icon.",
      "scope": 3,
      "source": {
        "id": "vscode-icons-team.vscode-icons",
        "displayName": "vscode-icons"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "vsicons.presets.hideExplorerArrows": {
      "type": "boolean",
      "default": false,
      "description": "If set to 'true', the extension will hide the folder arrows in the 'Explorer'.",
      "scope": 3,
      "source": {
        "id": "vscode-icons-team.vscode-icons",
        "displayName": "vscode-icons"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "vsicons.customIconFolderPath": {
      "type": "string",
      "default": "",
      "description": "The physical path to the parent folder where the custom icons folder resides on your local machine.",
      "scope": 3,
      "source": {
        "id": "vscode-icons-team.vscode-icons",
        "displayName": "vscode-icons"
      },
      "defaultDefaultValue": "",
      "restricted": false
    },
    "vsicons.associations.files": {
      "type": "array",
      "default": [],
      "description": "These custom associations will override the file icon associations defined by default.",
      "scope": 3,
      "source": {
        "id": "vscode-icons-team.vscode-icons",
        "displayName": "vscode-icons"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "vsicons.associations.folders": {
      "type": "array",
      "default": [],
      "description": "These custom associations will override the folder icon associations defined by default.",
      "scope": 3,
      "source": {
        "id": "vscode-icons-team.vscode-icons",
        "displayName": "vscode-icons"
      },
      "defaultDefaultValue": [],
      "restricted": false
    },
    "vsicons.associations.fileDefault.file": {
      "type": "object",
      "default": null,
      "description": "This setting will let you change the default file icon for dark themes.",
      "scope": 3,
      "source": {
        "id": "vscode-icons-team.vscode-icons",
        "displayName": "vscode-icons"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "vsicons.associations.fileDefault.file_light": {
      "type": "object",
      "default": null,
      "description": "This setting will let you change the default file icon for light themes.",
      "scope": 3,
      "source": {
        "id": "vscode-icons-team.vscode-icons",
        "displayName": "vscode-icons"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "vsicons.associations.folderDefault.folder": {
      "type": "object",
      "default": null,
      "description": "This setting will let you change the default folder icon for dark themes.",
      "scope": 3,
      "source": {
        "id": "vscode-icons-team.vscode-icons",
        "displayName": "vscode-icons"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "vsicons.associations.folderDefault.root_folder": {
      "type": "object",
      "default": null,
      "description": "This setting will let you change the default root folder icon for dark themes.",
      "scope": 3,
      "source": {
        "id": "vscode-icons-team.vscode-icons",
        "displayName": "vscode-icons"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "vsicons.associations.folderDefault.folder_light": {
      "type": "object",
      "default": null,
      "description": "This setting will let you change the default folder icon for light themes.",
      "scope": 3,
      "source": {
        "id": "vscode-icons-team.vscode-icons",
        "displayName": "vscode-icons"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "vsicons.associations.folderDefault.root_folder_light": {
      "type": "object",
      "default": null,
      "description": "This setting will let you change the default root folder icon for light themes.",
      "scope": 3,
      "source": {
        "id": "vscode-icons-team.vscode-icons",
        "displayName": "vscode-icons"
      },
      "defaultDefaultValue": null,
      "restricted": false
    },
    "gistpad.treeIcons": {
      "default": "true",
      "type": "boolean",
      "description": "Specifies whether to show the gist type icons in the gists tree.",
      "scope": 3,
      "source": {
        "id": "vsls-contrib.gistfs",
        "displayName": "GistPad"
      },
      "defaultDefaultValue": "true",
      "restricted": false
    },
    "gistpad.comments.showThread": {
      "default": "whenNotEmpty",
      "type": "string",
      "enum": [
        "always",
        "never",
        "whenNotEmpty"
      ],
      "description": "Specifies when to display the comment thread when you open a Gist file.",
      "scope": 3,
      "source": {
        "id": "vsls-contrib.gistfs",
        "displayName": "GistPad"
      },
      "defaultDefaultValue": "whenNotEmpty",
      "restricted": false
    },
    "gistpad.images.directoryName": {
      "default": "images",
      "type": "string",
      "description": "Specifies the name of the directory that pasted images are uploaded to.",
      "scope": 3,
      "source": {
        "id": "vsls-contrib.gistfs",
        "displayName": "GistPad"
      },
      "defaultDefaultValue": "images",
      "restricted": false
    },
    "gistpad.images.markdownPasteFormat": {
      "default": "markdown",
      "enum": [
        "html",
        "markdown"
      ],
      "description": "Specifies the markup format to use when pasting an image into a markdown gist file.",
      "scope": 3,
      "source": {
        "id": "vsls-contrib.gistfs",
        "displayName": "GistPad"
      },
      "defaultDefaultValue": "markdown",
      "restricted": false
    },
    "gistpad.images.pasteType": {
      "default": "file",
      "enum": [
        "base64",
        "file"
      ],
      "description": "Specifies the upload method to use when pasting an image into a gist file.",
      "scope": 3,
      "source": {
        "id": "vsls-contrib.gistfs",
        "displayName": "GistPad"
      },
      "defaultDefaultValue": "file",
      "restricted": false
    },
    "gistpad.scratchNotes.directoryFormat": {
      "default": "",
      "type": "string",
      "description": "Specifies the moment.js format string to use when generating new scratch notes.",
      "scope": 3,
      "source": {
        "id": "vsls-contrib.gistfs",
        "displayName": "GistPad"
      },
      "defaultDefaultValue": "",
      "restricted": false
    },
    "gistpad.scratchNotes.fileFormat": {
      "default": "LL",
      "type": "string",
      "description": "Specifies the moment.js format string to use when generating new scratch notes.",
      "scope": 3,
      "source": {
        "id": "vsls-contrib.gistfs",
        "displayName": "GistPad"
      },
      "defaultDefaultValue": "LL",
      "restricted": false
    },
    "gistpad.scratchNotes.fileExtension": {
      "default": ".md",
      "type": "string",
      "description": "Specifies the file extension to use when generating new scratch notes.",
      "scope": 3,
      "source": {
        "id": "vsls-contrib.gistfs",
        "displayName": "GistPad"
      },
      "defaultDefaultValue": ".md",
      "restricted": false
    },
    "gistpad.scratchNotes.show": {
      "default": true,
      "type": "boolean",
      "description": "Specifies whether or not to display the scratch notes node in the gists tree view.",
      "scope": 3,
      "source": {
        "id": "vsls-contrib.gistfs",
        "displayName": "GistPad"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "gistpad.showcaseUrl": {
      "default": "https://aka.ms/gistpad-showcase",
      "type": "string",
      "description": "Specifies the URL of the showcase to display gists from.",
      "scope": 3,
      "source": {
        "id": "vsls-contrib.gistfs",
        "displayName": "GistPad"
      },
      "defaultDefaultValue": "https://aka.ms/gistpad-showcase",
      "restricted": false
    },
    "gistpad.wikis.daily.directoryName": {
      "default": "Daily",
      "type": "string",
      "description": "Specifies the name of the directory that daily pages are organized within.",
      "scope": 3,
      "source": {
        "id": "vsls-contrib.gistfs",
        "displayName": "GistPad"
      },
      "defaultDefaultValue": "Daily",
      "restricted": false
    },
    "gistpad.wikis.daily.titleFormat": {
      "default": "LL",
      "type": "string",
      "description": "Specifies the date format (using Moment.js syntax) that is used to for the title of daily pages.",
      "scope": 3,
      "source": {
        "id": "vsls-contrib.gistfs",
        "displayName": "GistPad"
      },
      "defaultDefaultValue": "LL",
      "restricted": false
    },
    "markdown.extension.completion.respectVscodeSearchExclude": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Whether to exclude files from auto-completion using VS Code's `#search.exclude#` setting. (`node_modules`, `bower_components` and `*.code-search` are **always excluded**, not affected by this option.)",
      "scope": 4,
      "source": {
        "id": "yzhang.markdown-all-in-one",
        "displayName": "Markdown All in One"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "markdown.extension.completion.root": {
      "type": "string",
      "default": "",
      "description": "The root folder for path auto-completion.",
      "scope": 4,
      "source": {
        "id": "yzhang.markdown-all-in-one",
        "displayName": "Markdown All in One"
      },
      "defaultDefaultValue": "",
      "restricted": false
    },
    "markdown.extension.italic.indicator": {
      "type": "string",
      "default": "*",
      "markdownDescription": "Use `*` or `_` to wrap italic text.",
      "enum": [
        "*",
        "_"
      ],
      "scope": 3,
      "source": {
        "id": "yzhang.markdown-all-in-one",
        "displayName": "Markdown All in One"
      },
      "defaultDefaultValue": "*",
      "restricted": false
    },
    "markdown.extension.katex.macros": {
      "type": "object",
      "default": {},
      "description": "User-defined KaTeX macros.",
      "scope": 3,
      "source": {
        "id": "yzhang.markdown-all-in-one",
        "displayName": "Markdown All in One"
      },
      "defaultDefaultValue": {},
      "restricted": false
    },
    "markdown.extension.list.indentationSize": {
      "type": "string",
      "enum": [
        "adaptive",
        "inherit"
      ],
      "markdownEnumDescriptions": [
        "Adaptive indentation size according to the context, trying to **left align the sublist with its parent's content**. For example:\n\n```markdown\n- Parent\n  - Sublist\n\n1. Parent\n   1. Sublist\n\n10. Parent with longer marker\n    1. Sublist\n```",
        "Use the configured tab size of the current document (see the status bar). For example (with `tabSize: 4`):\n\n```markdown\n- Parent\n    - Sublist\n\n1. Parent\n    1. Sublist\n\n10. Parent with longer marker\n    1. Sublist\n```"
      ],
      "default": "adaptive",
      "markdownDescription": "List indentation scheme. (Also affects TOC generation.)\n\nWhether to use different indentation sizes on different list contexts or stick to VS Code's tab size.",
      "scope": 4,
      "source": {
        "id": "yzhang.markdown-all-in-one",
        "displayName": "Markdown All in One"
      },
      "defaultDefaultValue": "adaptive",
      "restricted": false
    },
    "markdown.extension.math.enabled": {
      "type": "boolean",
      "default": true,
      "description": "Enable basic math support (Powered by KaTeX).",
      "scope": 3,
      "source": {
        "id": "yzhang.markdown-all-in-one",
        "displayName": "Markdown All in One"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "markdown.extension.orderedList.autoRenumber": {
      "type": "boolean",
      "default": true,
      "description": "Auto fix ordered list markers.",
      "scope": 3,
      "source": {
        "id": "yzhang.markdown-all-in-one",
        "displayName": "Markdown All in One"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "markdown.extension.orderedList.marker": {
      "type": "string",
      "default": "ordered",
      "description": "Ordered list marker.",
      "enum": [
        "one",
        "ordered"
      ],
      "markdownEnumDescriptions": [
        "Always use `1.` as ordered list marker.",
        "Use increasing numbers as ordered list marker."
      ],
      "scope": 3,
      "source": {
        "id": "yzhang.markdown-all-in-one",
        "displayName": "Markdown All in One"
      },
      "defaultDefaultValue": "ordered",
      "restricted": false
    },
    "markdown.extension.preview.autoShowPreviewToSide": {
      "type": "boolean",
      "default": false,
      "description": "Auto show preview to side.",
      "scope": 3,
      "source": {
        "id": "yzhang.markdown-all-in-one",
        "displayName": "Markdown All in One"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "markdown.extension.print.absoluteImgPath": {
      "type": "boolean",
      "default": true,
      "description": "Convert image path to absolute path.",
      "scope": 4,
      "source": {
        "id": "yzhang.markdown-all-in-one",
        "displayName": "Markdown All in One"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "markdown.extension.print.imgToBase64": {
      "type": "boolean",
      "default": false,
      "description": "Convert images to base64 when printing to HTML.",
      "scope": 4,
      "source": {
        "id": "yzhang.markdown-all-in-one",
        "displayName": "Markdown All in One"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "markdown.extension.print.includeVscodeStylesheets": {
      "type": "boolean",
      "default": true,
      "description": "Include VS Code's basic Markdown styles so that the exported HTML looks similar as inside VS Code.",
      "scope": 3,
      "source": {
        "id": "yzhang.markdown-all-in-one",
        "displayName": "Markdown All in One"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "markdown.extension.print.onFileSave": {
      "type": "boolean",
      "default": false,
      "description": "Print current document to HTML when file is saved.",
      "scope": 4,
      "source": {
        "id": "yzhang.markdown-all-in-one",
        "displayName": "Markdown All in One"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "markdown.extension.print.theme": {
      "type": "string",
      "default": "light",
      "enum": [
        "light",
        "dark"
      ],
      "description": "Theme of the exported HTML. Only affects code blocks.",
      "scope": 4,
      "source": {
        "id": "yzhang.markdown-all-in-one",
        "displayName": "Markdown All in One"
      },
      "defaultDefaultValue": "light",
      "restricted": false
    },
    "markdown.extension.print.validateUrls": {
      "type": "boolean",
      "default": true,
      "description": "Enable/disable URL validation when printing.",
      "scope": 3,
      "source": {
        "id": "yzhang.markdown-all-in-one",
        "displayName": "Markdown All in One"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "markdown.extension.syntax.decorations": {
      "type": "boolean",
      "default": true,
      "description": "Add syntax decorations in editors. (e.g. ~~strikethrough~~, `code span`)",
      "scope": 3,
      "source": {
        "id": "yzhang.markdown-all-in-one",
        "displayName": "Markdown All in One"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "markdown.extension.syntax.decorationFileSizeLimit": {
      "type": "number",
      "default": 50000,
      "description": "If a file is larger than this size (in byte/B), we won't attempt to render syntax decorations.",
      "scope": 3,
      "source": {
        "id": "yzhang.markdown-all-in-one",
        "displayName": "Markdown All in One"
      },
      "defaultDefaultValue": 50000,
      "restricted": false
    },
    "markdown.extension.syntax.plainTheme": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "(**Experimental**) Report issue at <https://github.com/yzhang-gh/vscode-markdown/issues/185>.\n\nOnly take effect when `#markdown.extension.syntax.decorations#` is enabled.",
      "scope": 3,
      "source": {
        "id": "yzhang.markdown-all-in-one",
        "displayName": "Markdown All in One"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "markdown.extension.tableFormatter.enabled": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Enable [GitHub Flavored Markdown](https://github.github.com/gfm/) table formatter.",
      "scope": 3,
      "source": {
        "id": "yzhang.markdown-all-in-one",
        "displayName": "Markdown All in One"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "markdown.extension.tableFormatter.normalizeIndentation": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Normalize table indentation to closest multiple of configured editor tab size.",
      "scope": 3,
      "source": {
        "id": "yzhang.markdown-all-in-one",
        "displayName": "Markdown All in One"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "markdown.extension.toc.downcaseLink": {
      "type": "boolean",
      "default": true,
      "markdownDescription": "Whether to **force** to downcase TOC links.",
      "scope": 3,
      "source": {
        "id": "yzhang.markdown-all-in-one",
        "displayName": "Markdown All in One"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "markdown.extension.toc.levels": {
      "type": "string",
      "default": "1..6",
      "markdownDescription": "Range of levels for table of contents. Use `x..y` for level `x` to `y`.",
      "pattern": "^[1-6]\\.\\.[1-6]$",
      "scope": 3,
      "source": {
        "id": "yzhang.markdown-all-in-one",
        "displayName": "Markdown All in One"
      },
      "defaultDefaultValue": "1..6",
      "restricted": false
    },
    "markdown.extension.toc.omittedFromToc": {
      "type": "object",
      "default": {},
      "description": "Lists of headings to omit by project file.\nExample:\n{ \"README.md\": [\"# Introduction\"] }",
      "scope": 3,
      "source": {
        "id": "yzhang.markdown-all-in-one",
        "displayName": "Markdown All in One"
      },
      "defaultDefaultValue": {},
      "restricted": false
    },
    "markdown.extension.toc.orderedList": {
      "type": "boolean",
      "default": false,
      "description": "Use ordered list, that is:\n1. ...\n2. ...",
      "scope": 3,
      "source": {
        "id": "yzhang.markdown-all-in-one",
        "displayName": "Markdown All in One"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "markdown.extension.toc.plaintext": {
      "type": "boolean",
      "default": false,
      "description": "Just plain text TOC, no links.",
      "scope": 3,
      "source": {
        "id": "yzhang.markdown-all-in-one",
        "displayName": "Markdown All in One"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "markdown.extension.toc.slugifyMode": {
      "type": "string",
      "default": "github",
      "markdownDescription": "The method to generate heading ID. This affects **links to headings** in **TOC**, **code completion**, and **printing**.",
      "enum": [
        "github",
        "azureDevops",
        "gitea",
        "gitlab",
        "vscode"
      ],
      "enumDescriptions": [
        "GitHub",
        "Azure DevOps",
        "Gitea",
        "GitLab",
        "Visual Studio Code"
      ],
      "scope": 3,
      "source": {
        "id": "yzhang.markdown-all-in-one",
        "displayName": "Markdown All in One"
      },
      "defaultDefaultValue": "github",
      "restricted": false
    },
    "markdown.extension.toc.unorderedList.marker": {
      "type": "string",
      "default": "-",
      "markdownDescription": "Use `-`, `*`, or `+` in the table of contents (for **unordered** list).",
      "enum": [
        "-",
        "*",
        "+"
      ],
      "scope": 3,
      "source": {
        "id": "yzhang.markdown-all-in-one",
        "displayName": "Markdown All in One"
      },
      "defaultDefaultValue": "-",
      "restricted": false
    },
    "markdown.extension.toc.updateOnSave": {
      "type": "boolean",
      "default": true,
      "description": "Auto update TOC on save.",
      "scope": 3,
      "source": {
        "id": "yzhang.markdown-all-in-one",
        "displayName": "Markdown All in One"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "oneDarkPro.editorTheme": {
      "type": "string",
      "default": "One Dark Pro",
      "markdownDescription": "Switch to different editor theme",
      "enum": [
        "One Dark Pro",
        "One Dark Pro Flat",
        "Nord",
        "Solarized",
        "Solarized Flat",
        "Shadow",
        "Panda",
        "Ayu",
        "VS Code",
        "Just Black",
        "One Dark Pro Darker",
        "Ocean",
        "Tokyo",
        "Retro",
        "Gnome"
      ],
      "scope": 3,
      "source": {
        "id": "zhuangtongfa.material-theme",
        "displayName": "One Dark Pro"
      },
      "defaultDefaultValue": "One Dark Pro",
      "restricted": false
    },
    "oneDarkPro.italic": {
      "type": "boolean",
      "default": true,
      "description": "Toggle italics on some scopes",
      "scope": 3,
      "source": {
        "id": "zhuangtongfa.material-theme",
        "displayName": "One Dark Pro"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "oneDarkPro.vivid": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Toggle vivid colors",
      "scope": 3,
      "source": {
        "id": "zhuangtongfa.material-theme",
        "displayName": "One Dark Pro"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "oneDarkPro.bold": {
      "type": "boolean",
      "default": false,
      "markdownDescription": "Toggle bold on some scopes",
      "scope": 3,
      "source": {
        "id": "zhuangtongfa.material-theme",
        "displayName": "One Dark Pro"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "oneDarkPro.markdownStyle": {
      "type": "boolean",
      "default": true,
      "description": "Toggle Markdown style",
      "scope": 3,
      "source": {
        "id": "zhuangtongfa.material-theme",
        "displayName": "One Dark Pro"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "oneDarkPro.color": {
      "type": "object",
      "scope": 4,
      "default": {
        "chalky": "",
        "coral": "",
        "dark": "",
        "error": "",
        "fountainBlue": "",
        "green": "",
        "invalid": "",
        "lightDark": "",
        "lightWhite": "",
        "malibu": "",
        "purple": "",
        "whiskey": "",
        "deepRed": ""
      },
      "properties": {
        "chalky": {
          "type": "string",
          "default": ""
        },
        "coral": {
          "type": "string",
          "default": ""
        },
        "dark": {
          "type": "string",
          "default": ""
        },
        "error": {
          "type": "string",
          "default": ""
        },
        "fountainBlue": {
          "type": "string",
          "default": ""
        },
        "green": {
          "type": "string",
          "default": ""
        },
        "invalid": {
          "type": "string",
          "default": ""
        },
        "lightDark": {
          "type": "string",
          "default": ""
        },
        "lightWhite": {
          "type": "string",
          "default": ""
        },
        "malibu": {
          "type": "string",
          "default": ""
        },
        "purple": {
          "type": "string",
          "default": ""
        },
        "whiskey": {
          "type": "string",
          "default": ""
        },
        "deepRed": {
          "type": "string",
          "default": ""
        }
      },
      "additionalProperties": false,
      "markdownDescription": "Code highlight color, read more [docs](https://binaryify.github.io/OneDark-Pro/#/?id=highlight-color-custom)",
      "source": {
        "id": "zhuangtongfa.material-theme",
        "displayName": "One Dark Pro"
      },
      "defaultDefaultValue": {
        "chalky": "",
        "coral": "",
        "dark": "",
        "error": "",
        "fountainBlue": "",
        "green": "",
        "invalid": "",
        "lightDark": "",
        "lightWhite": "",
        "malibu": "",
        "purple": "",
        "whiskey": "",
        "deepRed": ""
      },
      "restricted": false
    },
    "vscode-theme-studio.development-mode": {
      "type": "boolean",
      "description": "Enable development mode",
      "default": false,
      "scope": 3,
      "source": {
        "id": "lucasnorgaard.vscode-theme-studio",
        "displayName": "Theme Studio"
      },
      "defaultDefaultValue": false,
      "restricted": false
    },
    "vscode-theme-studio.update-browser-colors": {
      "type": "string",
      "description": "Update browser colors name file",
      "default": "./browser-color-names.ts",
      "scope": 3,
      "source": {
        "id": "lucasnorgaard.vscode-theme-studio",
        "displayName": "Theme Studio"
      },
      "defaultDefaultValue": "./browser-color-names.ts",
      "restricted": false
    },
    "vscode-theme-studio.browser-colors-panel": {
      "type": "boolean",
      "description": "Opens the browser colors panel after update.",
      "default": true,
      "scope": 3,
      "source": {
        "id": "lucasnorgaard.vscode-theme-studio",
        "displayName": "Theme Studio"
      },
      "defaultDefaultValue": true,
      "restricted": false
    },
    "vscode-theme-studio.available-schemas": {
      "type": "array",
      "description": "Update browser colors name file",
      "scope": 3,
      "source": {
        "id": "lucasnorgaard.vscode-theme-studio",
        "displayName": "Theme Studio"
      },
      "default": [],
      "restricted": false
    },
    "vscode-theme-studio.schema-path": {
      "type": "string",
      "description": "Update browser colors name file",
      "default": "schemas/vscode-schemas",
      "scope": 3,
      "source": {
        "id": "lucasnorgaard.vscode-theme-studio",
        "displayName": "Theme Studio"
      },
      "defaultDefaultValue": "schemas/vscode-schemas",
      "restricted": false
    },
    "[bat]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[clojure]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[coffeescript]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[c]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[cpp]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[cuda-cpp]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[csharp]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[dart]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[diff]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[ignore]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[fsharp]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[groovy]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[hlsl]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[ini]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[properties]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[java]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[javascriptreact]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[jsx-tags]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[julia]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[juliamarkdown]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[tex]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[latex]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[bibtex]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[cpp_embedded_latex]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[markdown_latex_combined]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[lua]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[markdown-math]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[objective-c]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[objective-cpp]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[perl]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[perl6]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[php]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[powershell]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[jade]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[r]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[razor]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[ruby]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[rust]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[shaderlab]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[sql]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[swift]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[typescript]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[typescriptreact]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[vb]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[xml]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[xsl]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[xquery]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[graphql]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[dotenv]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[jvmoptions]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[hosts]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[azcli]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[bats]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[go.mod]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[go.work]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[go.sum]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[gotmpl]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[svg]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[ra_syntax_tree]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[jinja]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[pip-requirements]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[toml]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[raw]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[ssh_config]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[prisma]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[erb]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[gemfile]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[svelte]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "[gradle]": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage",
      "default": {}
    },
    "workbench.editor.autoLockGroups": {
      "type": "object",
      "description": "If an editor matching one of the listed types is opened as the first in an editor group and more than one group is open, the group is automatically locked. Locked groups will only be used for opening editors when explicitly chosen by user gesture (e.g. drag and drop), but not by default. Consequently the active editor in a locked group is less likely to be replaced accidentally with a different editor.",
      "properties": {
        "default": {
          "type": "boolean",
          "default": false,
          "description": "Text Editor"
        },
        "hexEditor.hexedit": {
          "type": "boolean",
          "default": false,
          "description": "Hex Editor"
        },
        "workbench.input.interactive": {
          "type": "boolean",
          "default": false,
          "description": "Interactive Editor"
        },
        "interactive": {
          "type": "boolean",
          "default": false,
          "description": "Interactive"
        },
        "workbench.editorinputs.searchEditorInput": {
          "type": "boolean",
          "default": false,
          "description": "Search Editor"
        },
        "imagePreview.previewEditor": {
          "type": "boolean",
          "default": false,
          "description": "Image Preview"
        },
        "vscode.markdown.preview.editor": {
          "type": "boolean",
          "default": false,
          "description": "Markdown Preview"
        },
        "jsProfileVisualizer.cpuprofile.table": {
          "type": "boolean",
          "default": false,
          "description": "CPU Profile Table Visualizer"
        },
        "gitlens.rebase": {
          "type": "boolean",
          "default": false,
          "description": "GitLens Interactive Rebase Editor"
        },
        "terminalEditor": {
          "type": "boolean",
          "default": true,
          "description": "Terminal"
        },
        "jupyter-notebook": {
          "type": "boolean",
          "default": false,
          "description": "Jupyter Notebook"
        },
        "mainThreadWebview-markdown.preview": {
          "type": "boolean",
          "default": false,
          "description": "Markdown Preview"
        }
      },
      "default": {
        "default": false,
        "hexEditor.hexedit": false,
        "workbench.input.interactive": false,
        "interactive": false,
        "workbench.editorinputs.searchEditorInput": false,
        "imagePreview.previewEditor": false,
        "vscode.markdown.preview.editor": false,
        "jsProfileVisualizer.cpuprofile.table": false,
        "gitlens.rebase": false,
        "terminalEditor": true,
        "jupyter-notebook": false,
        "mainThreadWebview-markdown.preview": false
      },
      "additionalProperties": false,
      "defaultDefaultValue": {
        "default": false,
        "hexEditor.hexedit": false,
        "workbench.input.interactive": false,
        "interactive": false,
        "workbench.editorinputs.searchEditorInput": false,
        "imagePreview.previewEditor": false,
        "vscode.markdown.preview.editor": false,
        "jsProfileVisualizer.cpuprofile.table": false,
        "gitlens.rebase": false,
        "terminalEditor": true,
        "jupyter-notebook": false,
        "mainThreadWebview-markdown.preview": false
      },
      "scope": 3,
      "restricted": false
    },
    "workbench.welcomePage.preferReducedMotion": {
      "scope": 1,
      "type": "boolean",
      "default": false,
      "description": "When enabled, reduce motion in welcome page.",
      "defaultDefaultValue": false,
      "restricted": false
    },
    "terminal.integrated.defaultProfile.linux": {
      "restricted": true,
      "markdownDescription": "The default profile used on Linux. This setting will currently be ignored if either `terminal.integrated.shell.linux` or `terminal.integrated.shellArgs.linux` are set.",
      "type": [
        "string",
        "null"
      ],
      "default": null,
      "defaultDefaultValue": null,
      "scope": 3
    },
    "terminal.integrated.defaultProfile.osx": {
      "restricted": true,
      "markdownDescription": "The default profile used on macOS. This setting will currently be ignored if either `terminal.integrated.shell.osx` or `terminal.integrated.shellArgs.osx` are set.",
      "type": [
        "string",
        "null"
      ],
      "default": null,
      "defaultDefaultValue": null,
      "scope": 3
    },
    "terminal.integrated.defaultProfile.windows": {
      "restricted": true,
      "markdownDescription": "The default profile used on Windows. This setting will currently be ignored if either `terminal.integrated.shell.windows` or `terminal.integrated.shellArgs.windows` are set.",
      "type": [
        "string",
        "null"
      ],
      "default": null,
      "enum": [
        "PowerShell",
        "Windows PowerShell",
        "Git Bash",
        "Command Prompt",
        "Ubuntu-20.04 (WSL)",
        "JavaScript Debug Terminal"
      ],
      "markdownEnumDescriptions": [
        "$(terminal-powershell) PowerShell\n- path: C:\\Program Files (x86)\\PowerShell\\7\\pwsh.exe",
        "$(terminal-powershell) Windows PowerShell\n- path: C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\powershell.exe",
        "$(terminal) Git Bash\n- path: C:\\Program Files\\Git\\bin\\bash.exe\n- args: ['--login']",
        "$(terminal-cmd) Command Prompt\n- path: C:\\WINDOWS\\System32\\cmd.exe\n- args: []",
        "$(terminal-ubuntu) Ubuntu-20.04 (WSL)\n- path: C:\\WINDOWS\\System32\\wsl.exe\n- args: ['-d','Ubuntu-20.04']",
        "$($(debug)) JavaScript Debug Terminal\n- extensionIdenfifier: ms-vscode.js-debug"
      ],
      "defaultDefaultValue": null,
      "scope": 3
    }
  },
  "patternProperties": {
    "^(\\[([^\\]]+)\\])+$": {
      "type": "object",
      "description": "Configure editor settings to be overridden for a language.",
      "errorMessage": "This setting does not support per-language configuration.",
      "$ref": "vscode://schemas/settings/resourceLanguage"
    }
  },
  "additionalProperties": true,
  "allowTrailingCommas": true,
  "allowComments": true
}